// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/perfetto/metrics/chrome/scroll_jank.proto

package perfetto.protos;

public final class ScrollJankOuterClass {
  private ScrollJankOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ScrollJankOrBuilder extends
      // @@protoc_insertion_point(interface_extends:perfetto.protos.ScrollJank)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The percentage of time we consider janky of the total time spent scrolling
     * during the trace. I.E. approximately equal to |scroll_jank_ms|/|scroll_ms|.
     * </pre>
     *
     * <code>optional double scroll_jank_percentage = 1 [(.perfetto.protos.unit) = "n%_smallerIsBetter"];</code>
     * @return Whether the scrollJankPercentage field is set.
     */
    boolean hasScrollJankPercentage();
    /**
     * <pre>
     * The percentage of time we consider janky of the total time spent scrolling
     * during the trace. I.E. approximately equal to |scroll_jank_ms|/|scroll_ms|.
     * </pre>
     *
     * <code>optional double scroll_jank_percentage = 1 [(.perfetto.protos.unit) = "n%_smallerIsBetter"];</code>
     * @return The scrollJankPercentage.
     */
    double getScrollJankPercentage();

    /**
     * <code>optional double scroll_ms = 2 [(.perfetto.protos.unit) = "ms_biggerIsBetter"];</code>
     * @return Whether the scrollMs field is set.
     */
    boolean hasScrollMs();
    /**
     * <code>optional double scroll_ms = 2 [(.perfetto.protos.unit) = "ms_biggerIsBetter"];</code>
     * @return The scrollMs.
     */
    double getScrollMs();

    /**
     * <code>optional double scroll_processing_ms = 3 [(.perfetto.protos.unit) = "ms_biggerIsBetter"];</code>
     * @return Whether the scrollProcessingMs field is set.
     */
    boolean hasScrollProcessingMs();
    /**
     * <code>optional double scroll_processing_ms = 3 [(.perfetto.protos.unit) = "ms_biggerIsBetter"];</code>
     * @return The scrollProcessingMs.
     */
    double getScrollProcessingMs();

    /**
     * <code>optional double scroll_jank_processing_ms = 4 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
     * @return Whether the scrollJankProcessingMs field is set.
     */
    boolean hasScrollJankProcessingMs();
    /**
     * <code>optional double scroll_jank_processing_ms = 4 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
     * @return The scrollJankProcessingMs.
     */
    double getScrollJankProcessingMs();

    /**
     * <code>optional int64 num_scroll_update_count = 5 [(.perfetto.protos.unit) = "count_biggerIsBetter"];</code>
     * @return Whether the numScrollUpdateCount field is set.
     */
    boolean hasNumScrollUpdateCount();
    /**
     * <code>optional int64 num_scroll_update_count = 5 [(.perfetto.protos.unit) = "count_biggerIsBetter"];</code>
     * @return The numScrollUpdateCount.
     */
    long getNumScrollUpdateCount();

    /**
     * <code>optional int64 num_scroll_update_jank_count = 6 [(.perfetto.protos.unit) = "count_smallerIsBetter"];</code>
     * @return Whether the numScrollUpdateJankCount field is set.
     */
    boolean hasNumScrollUpdateJankCount();
    /**
     * <code>optional int64 num_scroll_update_jank_count = 6 [(.perfetto.protos.unit) = "count_smallerIsBetter"];</code>
     * @return The numScrollUpdateJankCount.
     */
    long getNumScrollUpdateJankCount();

    /**
     * <code>optional double scroll_jank_budget_ms = 7 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
     * @return Whether the scrollJankBudgetMs field is set.
     */
    boolean hasScrollJankBudgetMs();
    /**
     * <code>optional double scroll_jank_budget_ms = 7 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
     * @return The scrollJankBudgetMs.
     */
    double getScrollJankBudgetMs();
  }
  /**
   * Protobuf type {@code perfetto.protos.ScrollJank}
   */
  public static final class ScrollJank extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:perfetto.protos.ScrollJank)
      ScrollJankOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ScrollJank.newBuilder() to construct.
    private ScrollJank(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ScrollJank() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ScrollJank();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return perfetto.protos.ScrollJankOuterClass.internal_static_perfetto_protos_ScrollJank_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return perfetto.protos.ScrollJankOuterClass.internal_static_perfetto_protos_ScrollJank_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              perfetto.protos.ScrollJankOuterClass.ScrollJank.class, perfetto.protos.ScrollJankOuterClass.ScrollJank.Builder.class);
    }

    private int bitField0_;
    public static final int SCROLL_JANK_PERCENTAGE_FIELD_NUMBER = 1;
    private double scrollJankPercentage_ = 0D;
    /**
     * <pre>
     * The percentage of time we consider janky of the total time spent scrolling
     * during the trace. I.E. approximately equal to |scroll_jank_ms|/|scroll_ms|.
     * </pre>
     *
     * <code>optional double scroll_jank_percentage = 1 [(.perfetto.protos.unit) = "n%_smallerIsBetter"];</code>
     * @return Whether the scrollJankPercentage field is set.
     */
    @java.lang.Override
    public boolean hasScrollJankPercentage() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The percentage of time we consider janky of the total time spent scrolling
     * during the trace. I.E. approximately equal to |scroll_jank_ms|/|scroll_ms|.
     * </pre>
     *
     * <code>optional double scroll_jank_percentage = 1 [(.perfetto.protos.unit) = "n%_smallerIsBetter"];</code>
     * @return The scrollJankPercentage.
     */
    @java.lang.Override
    public double getScrollJankPercentage() {
      return scrollJankPercentage_;
    }

    public static final int SCROLL_MS_FIELD_NUMBER = 2;
    private double scrollMs_ = 0D;
    /**
     * <code>optional double scroll_ms = 2 [(.perfetto.protos.unit) = "ms_biggerIsBetter"];</code>
     * @return Whether the scrollMs field is set.
     */
    @java.lang.Override
    public boolean hasScrollMs() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional double scroll_ms = 2 [(.perfetto.protos.unit) = "ms_biggerIsBetter"];</code>
     * @return The scrollMs.
     */
    @java.lang.Override
    public double getScrollMs() {
      return scrollMs_;
    }

    public static final int SCROLL_PROCESSING_MS_FIELD_NUMBER = 3;
    private double scrollProcessingMs_ = 0D;
    /**
     * <code>optional double scroll_processing_ms = 3 [(.perfetto.protos.unit) = "ms_biggerIsBetter"];</code>
     * @return Whether the scrollProcessingMs field is set.
     */
    @java.lang.Override
    public boolean hasScrollProcessingMs() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional double scroll_processing_ms = 3 [(.perfetto.protos.unit) = "ms_biggerIsBetter"];</code>
     * @return The scrollProcessingMs.
     */
    @java.lang.Override
    public double getScrollProcessingMs() {
      return scrollProcessingMs_;
    }

    public static final int SCROLL_JANK_PROCESSING_MS_FIELD_NUMBER = 4;
    private double scrollJankProcessingMs_ = 0D;
    /**
     * <code>optional double scroll_jank_processing_ms = 4 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
     * @return Whether the scrollJankProcessingMs field is set.
     */
    @java.lang.Override
    public boolean hasScrollJankProcessingMs() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional double scroll_jank_processing_ms = 4 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
     * @return The scrollJankProcessingMs.
     */
    @java.lang.Override
    public double getScrollJankProcessingMs() {
      return scrollJankProcessingMs_;
    }

    public static final int NUM_SCROLL_UPDATE_COUNT_FIELD_NUMBER = 5;
    private long numScrollUpdateCount_ = 0L;
    /**
     * <code>optional int64 num_scroll_update_count = 5 [(.perfetto.protos.unit) = "count_biggerIsBetter"];</code>
     * @return Whether the numScrollUpdateCount field is set.
     */
    @java.lang.Override
    public boolean hasNumScrollUpdateCount() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional int64 num_scroll_update_count = 5 [(.perfetto.protos.unit) = "count_biggerIsBetter"];</code>
     * @return The numScrollUpdateCount.
     */
    @java.lang.Override
    public long getNumScrollUpdateCount() {
      return numScrollUpdateCount_;
    }

    public static final int NUM_SCROLL_UPDATE_JANK_COUNT_FIELD_NUMBER = 6;
    private long numScrollUpdateJankCount_ = 0L;
    /**
     * <code>optional int64 num_scroll_update_jank_count = 6 [(.perfetto.protos.unit) = "count_smallerIsBetter"];</code>
     * @return Whether the numScrollUpdateJankCount field is set.
     */
    @java.lang.Override
    public boolean hasNumScrollUpdateJankCount() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>optional int64 num_scroll_update_jank_count = 6 [(.perfetto.protos.unit) = "count_smallerIsBetter"];</code>
     * @return The numScrollUpdateJankCount.
     */
    @java.lang.Override
    public long getNumScrollUpdateJankCount() {
      return numScrollUpdateJankCount_;
    }

    public static final int SCROLL_JANK_BUDGET_MS_FIELD_NUMBER = 7;
    private double scrollJankBudgetMs_ = 0D;
    /**
     * <code>optional double scroll_jank_budget_ms = 7 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
     * @return Whether the scrollJankBudgetMs field is set.
     */
    @java.lang.Override
    public boolean hasScrollJankBudgetMs() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <code>optional double scroll_jank_budget_ms = 7 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
     * @return The scrollJankBudgetMs.
     */
    @java.lang.Override
    public double getScrollJankBudgetMs() {
      return scrollJankBudgetMs_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeDouble(1, scrollJankPercentage_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeDouble(2, scrollMs_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeDouble(3, scrollProcessingMs_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeDouble(4, scrollJankProcessingMs_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeInt64(5, numScrollUpdateCount_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeInt64(6, numScrollUpdateJankCount_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeDouble(7, scrollJankBudgetMs_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, scrollJankPercentage_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, scrollMs_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, scrollProcessingMs_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, scrollJankProcessingMs_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, numScrollUpdateCount_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, numScrollUpdateJankCount_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, scrollJankBudgetMs_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof perfetto.protos.ScrollJankOuterClass.ScrollJank)) {
        return super.equals(obj);
      }
      perfetto.protos.ScrollJankOuterClass.ScrollJank other = (perfetto.protos.ScrollJankOuterClass.ScrollJank) obj;

      if (hasScrollJankPercentage() != other.hasScrollJankPercentage()) return false;
      if (hasScrollJankPercentage()) {
        if (java.lang.Double.doubleToLongBits(getScrollJankPercentage())
            != java.lang.Double.doubleToLongBits(
                other.getScrollJankPercentage())) return false;
      }
      if (hasScrollMs() != other.hasScrollMs()) return false;
      if (hasScrollMs()) {
        if (java.lang.Double.doubleToLongBits(getScrollMs())
            != java.lang.Double.doubleToLongBits(
                other.getScrollMs())) return false;
      }
      if (hasScrollProcessingMs() != other.hasScrollProcessingMs()) return false;
      if (hasScrollProcessingMs()) {
        if (java.lang.Double.doubleToLongBits(getScrollProcessingMs())
            != java.lang.Double.doubleToLongBits(
                other.getScrollProcessingMs())) return false;
      }
      if (hasScrollJankProcessingMs() != other.hasScrollJankProcessingMs()) return false;
      if (hasScrollJankProcessingMs()) {
        if (java.lang.Double.doubleToLongBits(getScrollJankProcessingMs())
            != java.lang.Double.doubleToLongBits(
                other.getScrollJankProcessingMs())) return false;
      }
      if (hasNumScrollUpdateCount() != other.hasNumScrollUpdateCount()) return false;
      if (hasNumScrollUpdateCount()) {
        if (getNumScrollUpdateCount()
            != other.getNumScrollUpdateCount()) return false;
      }
      if (hasNumScrollUpdateJankCount() != other.hasNumScrollUpdateJankCount()) return false;
      if (hasNumScrollUpdateJankCount()) {
        if (getNumScrollUpdateJankCount()
            != other.getNumScrollUpdateJankCount()) return false;
      }
      if (hasScrollJankBudgetMs() != other.hasScrollJankBudgetMs()) return false;
      if (hasScrollJankBudgetMs()) {
        if (java.lang.Double.doubleToLongBits(getScrollJankBudgetMs())
            != java.lang.Double.doubleToLongBits(
                other.getScrollJankBudgetMs())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasScrollJankPercentage()) {
        hash = (37 * hash) + SCROLL_JANK_PERCENTAGE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getScrollJankPercentage()));
      }
      if (hasScrollMs()) {
        hash = (37 * hash) + SCROLL_MS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getScrollMs()));
      }
      if (hasScrollProcessingMs()) {
        hash = (37 * hash) + SCROLL_PROCESSING_MS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getScrollProcessingMs()));
      }
      if (hasScrollJankProcessingMs()) {
        hash = (37 * hash) + SCROLL_JANK_PROCESSING_MS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getScrollJankProcessingMs()));
      }
      if (hasNumScrollUpdateCount()) {
        hash = (37 * hash) + NUM_SCROLL_UPDATE_COUNT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getNumScrollUpdateCount());
      }
      if (hasNumScrollUpdateJankCount()) {
        hash = (37 * hash) + NUM_SCROLL_UPDATE_JANK_COUNT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getNumScrollUpdateJankCount());
      }
      if (hasScrollJankBudgetMs()) {
        hash = (37 * hash) + SCROLL_JANK_BUDGET_MS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getScrollJankBudgetMs()));
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static perfetto.protos.ScrollJankOuterClass.ScrollJank parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.ScrollJankOuterClass.ScrollJank parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.ScrollJankOuterClass.ScrollJank parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.ScrollJankOuterClass.ScrollJank parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.ScrollJankOuterClass.ScrollJank parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.ScrollJankOuterClass.ScrollJank parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.ScrollJankOuterClass.ScrollJank parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.ScrollJankOuterClass.ScrollJank parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.ScrollJankOuterClass.ScrollJank parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static perfetto.protos.ScrollJankOuterClass.ScrollJank parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.ScrollJankOuterClass.ScrollJank parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.ScrollJankOuterClass.ScrollJank parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(perfetto.protos.ScrollJankOuterClass.ScrollJank prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code perfetto.protos.ScrollJank}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:perfetto.protos.ScrollJank)
        perfetto.protos.ScrollJankOuterClass.ScrollJankOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.ScrollJankOuterClass.internal_static_perfetto_protos_ScrollJank_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.ScrollJankOuterClass.internal_static_perfetto_protos_ScrollJank_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.ScrollJankOuterClass.ScrollJank.class, perfetto.protos.ScrollJankOuterClass.ScrollJank.Builder.class);
      }

      // Construct using perfetto.protos.ScrollJankOuterClass.ScrollJank.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        scrollJankPercentage_ = 0D;
        scrollMs_ = 0D;
        scrollProcessingMs_ = 0D;
        scrollJankProcessingMs_ = 0D;
        numScrollUpdateCount_ = 0L;
        numScrollUpdateJankCount_ = 0L;
        scrollJankBudgetMs_ = 0D;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return perfetto.protos.ScrollJankOuterClass.internal_static_perfetto_protos_ScrollJank_descriptor;
      }

      @java.lang.Override
      public perfetto.protos.ScrollJankOuterClass.ScrollJank getDefaultInstanceForType() {
        return perfetto.protos.ScrollJankOuterClass.ScrollJank.getDefaultInstance();
      }

      @java.lang.Override
      public perfetto.protos.ScrollJankOuterClass.ScrollJank build() {
        perfetto.protos.ScrollJankOuterClass.ScrollJank result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public perfetto.protos.ScrollJankOuterClass.ScrollJank buildPartial() {
        perfetto.protos.ScrollJankOuterClass.ScrollJank result = new perfetto.protos.ScrollJankOuterClass.ScrollJank(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(perfetto.protos.ScrollJankOuterClass.ScrollJank result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.scrollJankPercentage_ = scrollJankPercentage_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.scrollMs_ = scrollMs_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.scrollProcessingMs_ = scrollProcessingMs_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.scrollJankProcessingMs_ = scrollJankProcessingMs_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.numScrollUpdateCount_ = numScrollUpdateCount_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.numScrollUpdateJankCount_ = numScrollUpdateJankCount_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.scrollJankBudgetMs_ = scrollJankBudgetMs_;
          to_bitField0_ |= 0x00000040;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof perfetto.protos.ScrollJankOuterClass.ScrollJank) {
          return mergeFrom((perfetto.protos.ScrollJankOuterClass.ScrollJank)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(perfetto.protos.ScrollJankOuterClass.ScrollJank other) {
        if (other == perfetto.protos.ScrollJankOuterClass.ScrollJank.getDefaultInstance()) return this;
        if (other.hasScrollJankPercentage()) {
          setScrollJankPercentage(other.getScrollJankPercentage());
        }
        if (other.hasScrollMs()) {
          setScrollMs(other.getScrollMs());
        }
        if (other.hasScrollProcessingMs()) {
          setScrollProcessingMs(other.getScrollProcessingMs());
        }
        if (other.hasScrollJankProcessingMs()) {
          setScrollJankProcessingMs(other.getScrollJankProcessingMs());
        }
        if (other.hasNumScrollUpdateCount()) {
          setNumScrollUpdateCount(other.getNumScrollUpdateCount());
        }
        if (other.hasNumScrollUpdateJankCount()) {
          setNumScrollUpdateJankCount(other.getNumScrollUpdateJankCount());
        }
        if (other.hasScrollJankBudgetMs()) {
          setScrollJankBudgetMs(other.getScrollJankBudgetMs());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 9: {
                scrollJankPercentage_ = input.readDouble();
                bitField0_ |= 0x00000001;
                break;
              } // case 9
              case 17: {
                scrollMs_ = input.readDouble();
                bitField0_ |= 0x00000002;
                break;
              } // case 17
              case 25: {
                scrollProcessingMs_ = input.readDouble();
                bitField0_ |= 0x00000004;
                break;
              } // case 25
              case 33: {
                scrollJankProcessingMs_ = input.readDouble();
                bitField0_ |= 0x00000008;
                break;
              } // case 33
              case 40: {
                numScrollUpdateCount_ = input.readInt64();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                numScrollUpdateJankCount_ = input.readInt64();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 57: {
                scrollJankBudgetMs_ = input.readDouble();
                bitField0_ |= 0x00000040;
                break;
              } // case 57
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private double scrollJankPercentage_ ;
      /**
       * <pre>
       * The percentage of time we consider janky of the total time spent scrolling
       * during the trace. I.E. approximately equal to |scroll_jank_ms|/|scroll_ms|.
       * </pre>
       *
       * <code>optional double scroll_jank_percentage = 1 [(.perfetto.protos.unit) = "n%_smallerIsBetter"];</code>
       * @return Whether the scrollJankPercentage field is set.
       */
      @java.lang.Override
      public boolean hasScrollJankPercentage() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * The percentage of time we consider janky of the total time spent scrolling
       * during the trace. I.E. approximately equal to |scroll_jank_ms|/|scroll_ms|.
       * </pre>
       *
       * <code>optional double scroll_jank_percentage = 1 [(.perfetto.protos.unit) = "n%_smallerIsBetter"];</code>
       * @return The scrollJankPercentage.
       */
      @java.lang.Override
      public double getScrollJankPercentage() {
        return scrollJankPercentage_;
      }
      /**
       * <pre>
       * The percentage of time we consider janky of the total time spent scrolling
       * during the trace. I.E. approximately equal to |scroll_jank_ms|/|scroll_ms|.
       * </pre>
       *
       * <code>optional double scroll_jank_percentage = 1 [(.perfetto.protos.unit) = "n%_smallerIsBetter"];</code>
       * @param value The scrollJankPercentage to set.
       * @return This builder for chaining.
       */
      public Builder setScrollJankPercentage(double value) {
        
        scrollJankPercentage_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The percentage of time we consider janky of the total time spent scrolling
       * during the trace. I.E. approximately equal to |scroll_jank_ms|/|scroll_ms|.
       * </pre>
       *
       * <code>optional double scroll_jank_percentage = 1 [(.perfetto.protos.unit) = "n%_smallerIsBetter"];</code>
       * @return This builder for chaining.
       */
      public Builder clearScrollJankPercentage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        scrollJankPercentage_ = 0D;
        onChanged();
        return this;
      }

      private double scrollMs_ ;
      /**
       * <code>optional double scroll_ms = 2 [(.perfetto.protos.unit) = "ms_biggerIsBetter"];</code>
       * @return Whether the scrollMs field is set.
       */
      @java.lang.Override
      public boolean hasScrollMs() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional double scroll_ms = 2 [(.perfetto.protos.unit) = "ms_biggerIsBetter"];</code>
       * @return The scrollMs.
       */
      @java.lang.Override
      public double getScrollMs() {
        return scrollMs_;
      }
      /**
       * <code>optional double scroll_ms = 2 [(.perfetto.protos.unit) = "ms_biggerIsBetter"];</code>
       * @param value The scrollMs to set.
       * @return This builder for chaining.
       */
      public Builder setScrollMs(double value) {
        
        scrollMs_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional double scroll_ms = 2 [(.perfetto.protos.unit) = "ms_biggerIsBetter"];</code>
       * @return This builder for chaining.
       */
      public Builder clearScrollMs() {
        bitField0_ = (bitField0_ & ~0x00000002);
        scrollMs_ = 0D;
        onChanged();
        return this;
      }

      private double scrollProcessingMs_ ;
      /**
       * <code>optional double scroll_processing_ms = 3 [(.perfetto.protos.unit) = "ms_biggerIsBetter"];</code>
       * @return Whether the scrollProcessingMs field is set.
       */
      @java.lang.Override
      public boolean hasScrollProcessingMs() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional double scroll_processing_ms = 3 [(.perfetto.protos.unit) = "ms_biggerIsBetter"];</code>
       * @return The scrollProcessingMs.
       */
      @java.lang.Override
      public double getScrollProcessingMs() {
        return scrollProcessingMs_;
      }
      /**
       * <code>optional double scroll_processing_ms = 3 [(.perfetto.protos.unit) = "ms_biggerIsBetter"];</code>
       * @param value The scrollProcessingMs to set.
       * @return This builder for chaining.
       */
      public Builder setScrollProcessingMs(double value) {
        
        scrollProcessingMs_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional double scroll_processing_ms = 3 [(.perfetto.protos.unit) = "ms_biggerIsBetter"];</code>
       * @return This builder for chaining.
       */
      public Builder clearScrollProcessingMs() {
        bitField0_ = (bitField0_ & ~0x00000004);
        scrollProcessingMs_ = 0D;
        onChanged();
        return this;
      }

      private double scrollJankProcessingMs_ ;
      /**
       * <code>optional double scroll_jank_processing_ms = 4 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
       * @return Whether the scrollJankProcessingMs field is set.
       */
      @java.lang.Override
      public boolean hasScrollJankProcessingMs() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional double scroll_jank_processing_ms = 4 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
       * @return The scrollJankProcessingMs.
       */
      @java.lang.Override
      public double getScrollJankProcessingMs() {
        return scrollJankProcessingMs_;
      }
      /**
       * <code>optional double scroll_jank_processing_ms = 4 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
       * @param value The scrollJankProcessingMs to set.
       * @return This builder for chaining.
       */
      public Builder setScrollJankProcessingMs(double value) {
        
        scrollJankProcessingMs_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional double scroll_jank_processing_ms = 4 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
       * @return This builder for chaining.
       */
      public Builder clearScrollJankProcessingMs() {
        bitField0_ = (bitField0_ & ~0x00000008);
        scrollJankProcessingMs_ = 0D;
        onChanged();
        return this;
      }

      private long numScrollUpdateCount_ ;
      /**
       * <code>optional int64 num_scroll_update_count = 5 [(.perfetto.protos.unit) = "count_biggerIsBetter"];</code>
       * @return Whether the numScrollUpdateCount field is set.
       */
      @java.lang.Override
      public boolean hasNumScrollUpdateCount() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional int64 num_scroll_update_count = 5 [(.perfetto.protos.unit) = "count_biggerIsBetter"];</code>
       * @return The numScrollUpdateCount.
       */
      @java.lang.Override
      public long getNumScrollUpdateCount() {
        return numScrollUpdateCount_;
      }
      /**
       * <code>optional int64 num_scroll_update_count = 5 [(.perfetto.protos.unit) = "count_biggerIsBetter"];</code>
       * @param value The numScrollUpdateCount to set.
       * @return This builder for chaining.
       */
      public Builder setNumScrollUpdateCount(long value) {
        
        numScrollUpdateCount_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 num_scroll_update_count = 5 [(.perfetto.protos.unit) = "count_biggerIsBetter"];</code>
       * @return This builder for chaining.
       */
      public Builder clearNumScrollUpdateCount() {
        bitField0_ = (bitField0_ & ~0x00000010);
        numScrollUpdateCount_ = 0L;
        onChanged();
        return this;
      }

      private long numScrollUpdateJankCount_ ;
      /**
       * <code>optional int64 num_scroll_update_jank_count = 6 [(.perfetto.protos.unit) = "count_smallerIsBetter"];</code>
       * @return Whether the numScrollUpdateJankCount field is set.
       */
      @java.lang.Override
      public boolean hasNumScrollUpdateJankCount() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional int64 num_scroll_update_jank_count = 6 [(.perfetto.protos.unit) = "count_smallerIsBetter"];</code>
       * @return The numScrollUpdateJankCount.
       */
      @java.lang.Override
      public long getNumScrollUpdateJankCount() {
        return numScrollUpdateJankCount_;
      }
      /**
       * <code>optional int64 num_scroll_update_jank_count = 6 [(.perfetto.protos.unit) = "count_smallerIsBetter"];</code>
       * @param value The numScrollUpdateJankCount to set.
       * @return This builder for chaining.
       */
      public Builder setNumScrollUpdateJankCount(long value) {
        
        numScrollUpdateJankCount_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 num_scroll_update_jank_count = 6 [(.perfetto.protos.unit) = "count_smallerIsBetter"];</code>
       * @return This builder for chaining.
       */
      public Builder clearNumScrollUpdateJankCount() {
        bitField0_ = (bitField0_ & ~0x00000020);
        numScrollUpdateJankCount_ = 0L;
        onChanged();
        return this;
      }

      private double scrollJankBudgetMs_ ;
      /**
       * <code>optional double scroll_jank_budget_ms = 7 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
       * @return Whether the scrollJankBudgetMs field is set.
       */
      @java.lang.Override
      public boolean hasScrollJankBudgetMs() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional double scroll_jank_budget_ms = 7 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
       * @return The scrollJankBudgetMs.
       */
      @java.lang.Override
      public double getScrollJankBudgetMs() {
        return scrollJankBudgetMs_;
      }
      /**
       * <code>optional double scroll_jank_budget_ms = 7 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
       * @param value The scrollJankBudgetMs to set.
       * @return This builder for chaining.
       */
      public Builder setScrollJankBudgetMs(double value) {
        
        scrollJankBudgetMs_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>optional double scroll_jank_budget_ms = 7 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
       * @return This builder for chaining.
       */
      public Builder clearScrollJankBudgetMs() {
        bitField0_ = (bitField0_ & ~0x00000040);
        scrollJankBudgetMs_ = 0D;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:perfetto.protos.ScrollJank)
    }

    // @@protoc_insertion_point(class_scope:perfetto.protos.ScrollJank)
    private static final perfetto.protos.ScrollJankOuterClass.ScrollJank DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new perfetto.protos.ScrollJankOuterClass.ScrollJank();
    }

    public static perfetto.protos.ScrollJankOuterClass.ScrollJank getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ScrollJank>
        PARSER = new com.google.protobuf.AbstractParser<ScrollJank>() {
      @java.lang.Override
      public ScrollJank parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ScrollJank> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ScrollJank> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public perfetto.protos.ScrollJankOuterClass.ScrollJank getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_ScrollJank_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_perfetto_protos_ScrollJank_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n0protos/perfetto/metrics/chrome/scroll_" +
      "jank.proto\022\017perfetto.protos\032,protos/perf" +
      "etto/metrics/custom_options.proto\"\221\003\n\nSc" +
      "rollJank\0226\n\026scroll_jank_percentage\030\001 \001(\001" +
      "B\026\212\265\030\022n%_smallerIsBetter\022(\n\tscroll_ms\030\002 " +
      "\001(\001B\025\212\265\030\021ms_biggerIsBetter\0223\n\024scroll_pro" +
      "cessing_ms\030\003 \001(\001B\025\212\265\030\021ms_biggerIsBetter\022" +
      "9\n\031scroll_jank_processing_ms\030\004 \001(\001B\026\212\265\030\022" +
      "ms_smallerIsBetter\0229\n\027num_scroll_update_" +
      "count\030\005 \001(\003B\030\212\265\030\024count_biggerIsBetter\022?\n" +
      "\034num_scroll_update_jank_count\030\006 \001(\003B\031\212\265\030" +
      "\025count_smallerIsBetter\0225\n\025scroll_jank_bu" +
      "dget_ms\030\007 \001(\001B\026\212\265\030\022ms_smallerIsBetter"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          perfetto.protos.CustomOptions.getDescriptor(),
        });
    internal_static_perfetto_protos_ScrollJank_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_perfetto_protos_ScrollJank_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_perfetto_protos_ScrollJank_descriptor,
        new java.lang.String[] { "ScrollJankPercentage", "ScrollMs", "ScrollProcessingMs", "ScrollJankProcessingMs", "NumScrollUpdateCount", "NumScrollUpdateJankCount", "ScrollJankBudgetMs", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(perfetto.protos.CustomOptions.unit);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    perfetto.protos.CustomOptions.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
