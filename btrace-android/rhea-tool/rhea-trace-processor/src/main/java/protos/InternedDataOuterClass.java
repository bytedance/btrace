// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/perfetto/trace/interned_data/interned_data.proto

package perfetto.protos;

public final class InternedDataOuterClass {
  private InternedDataOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface InternedDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:perfetto.protos.InternedData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Each field's message type needs to specify an |iid| field, which is the ID
     * of the entry in the field's interning index. Each field constructs its own
     * index, thus interning IDs are scoped to the tracing session and field
     * (usually as a counter for efficient var-int encoding). It is illegal to
     * override entries in an index (using the same iid for two different values)
     * within the same tracing session, even after a reset of the emitted
     * interning state.
     * </pre>
     *
     * <code>repeated .perfetto.protos.EventCategory event_categories = 1;</code>
     */
    java.util.List<perfetto.protos.TrackEventOuterClass.EventCategory> 
        getEventCategoriesList();
    /**
     * <pre>
     * Each field's message type needs to specify an |iid| field, which is the ID
     * of the entry in the field's interning index. Each field constructs its own
     * index, thus interning IDs are scoped to the tracing session and field
     * (usually as a counter for efficient var-int encoding). It is illegal to
     * override entries in an index (using the same iid for two different values)
     * within the same tracing session, even after a reset of the emitted
     * interning state.
     * </pre>
     *
     * <code>repeated .perfetto.protos.EventCategory event_categories = 1;</code>
     */
    perfetto.protos.TrackEventOuterClass.EventCategory getEventCategories(int index);
    /**
     * <pre>
     * Each field's message type needs to specify an |iid| field, which is the ID
     * of the entry in the field's interning index. Each field constructs its own
     * index, thus interning IDs are scoped to the tracing session and field
     * (usually as a counter for efficient var-int encoding). It is illegal to
     * override entries in an index (using the same iid for two different values)
     * within the same tracing session, even after a reset of the emitted
     * interning state.
     * </pre>
     *
     * <code>repeated .perfetto.protos.EventCategory event_categories = 1;</code>
     */
    int getEventCategoriesCount();
    /**
     * <pre>
     * Each field's message type needs to specify an |iid| field, which is the ID
     * of the entry in the field's interning index. Each field constructs its own
     * index, thus interning IDs are scoped to the tracing session and field
     * (usually as a counter for efficient var-int encoding). It is illegal to
     * override entries in an index (using the same iid for two different values)
     * within the same tracing session, even after a reset of the emitted
     * interning state.
     * </pre>
     *
     * <code>repeated .perfetto.protos.EventCategory event_categories = 1;</code>
     */
    java.util.List<? extends perfetto.protos.TrackEventOuterClass.EventCategoryOrBuilder> 
        getEventCategoriesOrBuilderList();
    /**
     * <pre>
     * Each field's message type needs to specify an |iid| field, which is the ID
     * of the entry in the field's interning index. Each field constructs its own
     * index, thus interning IDs are scoped to the tracing session and field
     * (usually as a counter for efficient var-int encoding). It is illegal to
     * override entries in an index (using the same iid for two different values)
     * within the same tracing session, even after a reset of the emitted
     * interning state.
     * </pre>
     *
     * <code>repeated .perfetto.protos.EventCategory event_categories = 1;</code>
     */
    perfetto.protos.TrackEventOuterClass.EventCategoryOrBuilder getEventCategoriesOrBuilder(
        int index);

    /**
     * <code>repeated .perfetto.protos.EventName event_names = 2;</code>
     */
    java.util.List<perfetto.protos.TrackEventOuterClass.EventName> 
        getEventNamesList();
    /**
     * <code>repeated .perfetto.protos.EventName event_names = 2;</code>
     */
    perfetto.protos.TrackEventOuterClass.EventName getEventNames(int index);
    /**
     * <code>repeated .perfetto.protos.EventName event_names = 2;</code>
     */
    int getEventNamesCount();
    /**
     * <code>repeated .perfetto.protos.EventName event_names = 2;</code>
     */
    java.util.List<? extends perfetto.protos.TrackEventOuterClass.EventNameOrBuilder> 
        getEventNamesOrBuilderList();
    /**
     * <code>repeated .perfetto.protos.EventName event_names = 2;</code>
     */
    perfetto.protos.TrackEventOuterClass.EventNameOrBuilder getEventNamesOrBuilder(
        int index);

    /**
     * <code>repeated .perfetto.protos.DebugAnnotationName debug_annotation_names = 3;</code>
     */
    java.util.List<perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationName> 
        getDebugAnnotationNamesList();
    /**
     * <code>repeated .perfetto.protos.DebugAnnotationName debug_annotation_names = 3;</code>
     */
    perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationName getDebugAnnotationNames(int index);
    /**
     * <code>repeated .perfetto.protos.DebugAnnotationName debug_annotation_names = 3;</code>
     */
    int getDebugAnnotationNamesCount();
    /**
     * <code>repeated .perfetto.protos.DebugAnnotationName debug_annotation_names = 3;</code>
     */
    java.util.List<? extends perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationNameOrBuilder> 
        getDebugAnnotationNamesOrBuilderList();
    /**
     * <code>repeated .perfetto.protos.DebugAnnotationName debug_annotation_names = 3;</code>
     */
    perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationNameOrBuilder getDebugAnnotationNamesOrBuilder(
        int index);

    /**
     * <code>repeated .perfetto.protos.DebugAnnotationValueTypeName debug_annotation_value_type_names = 27;</code>
     */
    java.util.List<perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationValueTypeName> 
        getDebugAnnotationValueTypeNamesList();
    /**
     * <code>repeated .perfetto.protos.DebugAnnotationValueTypeName debug_annotation_value_type_names = 27;</code>
     */
    perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationValueTypeName getDebugAnnotationValueTypeNames(int index);
    /**
     * <code>repeated .perfetto.protos.DebugAnnotationValueTypeName debug_annotation_value_type_names = 27;</code>
     */
    int getDebugAnnotationValueTypeNamesCount();
    /**
     * <code>repeated .perfetto.protos.DebugAnnotationValueTypeName debug_annotation_value_type_names = 27;</code>
     */
    java.util.List<? extends perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationValueTypeNameOrBuilder> 
        getDebugAnnotationValueTypeNamesOrBuilderList();
    /**
     * <code>repeated .perfetto.protos.DebugAnnotationValueTypeName debug_annotation_value_type_names = 27;</code>
     */
    perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationValueTypeNameOrBuilder getDebugAnnotationValueTypeNamesOrBuilder(
        int index);

    /**
     * <code>repeated .perfetto.protos.SourceLocation source_locations = 4;</code>
     */
    java.util.List<perfetto.protos.SourceLocationOuterClass.SourceLocation> 
        getSourceLocationsList();
    /**
     * <code>repeated .perfetto.protos.SourceLocation source_locations = 4;</code>
     */
    perfetto.protos.SourceLocationOuterClass.SourceLocation getSourceLocations(int index);
    /**
     * <code>repeated .perfetto.protos.SourceLocation source_locations = 4;</code>
     */
    int getSourceLocationsCount();
    /**
     * <code>repeated .perfetto.protos.SourceLocation source_locations = 4;</code>
     */
    java.util.List<? extends perfetto.protos.SourceLocationOuterClass.SourceLocationOrBuilder> 
        getSourceLocationsOrBuilderList();
    /**
     * <code>repeated .perfetto.protos.SourceLocation source_locations = 4;</code>
     */
    perfetto.protos.SourceLocationOuterClass.SourceLocationOrBuilder getSourceLocationsOrBuilder(
        int index);

    /**
     * <code>repeated .perfetto.protos.UnsymbolizedSourceLocation unsymbolized_source_locations = 28;</code>
     */
    java.util.List<perfetto.protos.SourceLocationOuterClass.UnsymbolizedSourceLocation> 
        getUnsymbolizedSourceLocationsList();
    /**
     * <code>repeated .perfetto.protos.UnsymbolizedSourceLocation unsymbolized_source_locations = 28;</code>
     */
    perfetto.protos.SourceLocationOuterClass.UnsymbolizedSourceLocation getUnsymbolizedSourceLocations(int index);
    /**
     * <code>repeated .perfetto.protos.UnsymbolizedSourceLocation unsymbolized_source_locations = 28;</code>
     */
    int getUnsymbolizedSourceLocationsCount();
    /**
     * <code>repeated .perfetto.protos.UnsymbolizedSourceLocation unsymbolized_source_locations = 28;</code>
     */
    java.util.List<? extends perfetto.protos.SourceLocationOuterClass.UnsymbolizedSourceLocationOrBuilder> 
        getUnsymbolizedSourceLocationsOrBuilderList();
    /**
     * <code>repeated .perfetto.protos.UnsymbolizedSourceLocation unsymbolized_source_locations = 28;</code>
     */
    perfetto.protos.SourceLocationOuterClass.UnsymbolizedSourceLocationOrBuilder getUnsymbolizedSourceLocationsOrBuilder(
        int index);

    /**
     * <code>repeated .perfetto.protos.LogMessageBody log_message_body = 20;</code>
     */
    java.util.List<perfetto.protos.LogMessageOuterClass.LogMessageBody> 
        getLogMessageBodyList();
    /**
     * <code>repeated .perfetto.protos.LogMessageBody log_message_body = 20;</code>
     */
    perfetto.protos.LogMessageOuterClass.LogMessageBody getLogMessageBody(int index);
    /**
     * <code>repeated .perfetto.protos.LogMessageBody log_message_body = 20;</code>
     */
    int getLogMessageBodyCount();
    /**
     * <code>repeated .perfetto.protos.LogMessageBody log_message_body = 20;</code>
     */
    java.util.List<? extends perfetto.protos.LogMessageOuterClass.LogMessageBodyOrBuilder> 
        getLogMessageBodyOrBuilderList();
    /**
     * <code>repeated .perfetto.protos.LogMessageBody log_message_body = 20;</code>
     */
    perfetto.protos.LogMessageOuterClass.LogMessageBodyOrBuilder getLogMessageBodyOrBuilder(
        int index);

    /**
     * <code>repeated .perfetto.protos.HistogramName histogram_names = 25;</code>
     */
    java.util.List<perfetto.protos.ChromeHistogramSampleOuterClass.HistogramName> 
        getHistogramNamesList();
    /**
     * <code>repeated .perfetto.protos.HistogramName histogram_names = 25;</code>
     */
    perfetto.protos.ChromeHistogramSampleOuterClass.HistogramName getHistogramNames(int index);
    /**
     * <code>repeated .perfetto.protos.HistogramName histogram_names = 25;</code>
     */
    int getHistogramNamesCount();
    /**
     * <code>repeated .perfetto.protos.HistogramName histogram_names = 25;</code>
     */
    java.util.List<? extends perfetto.protos.ChromeHistogramSampleOuterClass.HistogramNameOrBuilder> 
        getHistogramNamesOrBuilderList();
    /**
     * <code>repeated .perfetto.protos.HistogramName histogram_names = 25;</code>
     */
    perfetto.protos.ChromeHistogramSampleOuterClass.HistogramNameOrBuilder getHistogramNamesOrBuilder(
        int index);

    /**
     * <pre>
     * Build IDs of exectuable files.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString build_ids = 16;</code>
     */
    java.util.List<perfetto.protos.ProfileCommon.InternedString> 
        getBuildIdsList();
    /**
     * <pre>
     * Build IDs of exectuable files.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString build_ids = 16;</code>
     */
    perfetto.protos.ProfileCommon.InternedString getBuildIds(int index);
    /**
     * <pre>
     * Build IDs of exectuable files.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString build_ids = 16;</code>
     */
    int getBuildIdsCount();
    /**
     * <pre>
     * Build IDs of exectuable files.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString build_ids = 16;</code>
     */
    java.util.List<? extends perfetto.protos.ProfileCommon.InternedStringOrBuilder> 
        getBuildIdsOrBuilderList();
    /**
     * <pre>
     * Build IDs of exectuable files.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString build_ids = 16;</code>
     */
    perfetto.protos.ProfileCommon.InternedStringOrBuilder getBuildIdsOrBuilder(
        int index);

    /**
     * <pre>
     * Paths to executable files.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString mapping_paths = 17;</code>
     */
    java.util.List<perfetto.protos.ProfileCommon.InternedString> 
        getMappingPathsList();
    /**
     * <pre>
     * Paths to executable files.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString mapping_paths = 17;</code>
     */
    perfetto.protos.ProfileCommon.InternedString getMappingPaths(int index);
    /**
     * <pre>
     * Paths to executable files.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString mapping_paths = 17;</code>
     */
    int getMappingPathsCount();
    /**
     * <pre>
     * Paths to executable files.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString mapping_paths = 17;</code>
     */
    java.util.List<? extends perfetto.protos.ProfileCommon.InternedStringOrBuilder> 
        getMappingPathsOrBuilderList();
    /**
     * <pre>
     * Paths to executable files.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString mapping_paths = 17;</code>
     */
    perfetto.protos.ProfileCommon.InternedStringOrBuilder getMappingPathsOrBuilder(
        int index);

    /**
     * <pre>
     * Paths to source files.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString source_paths = 18;</code>
     */
    java.util.List<perfetto.protos.ProfileCommon.InternedString> 
        getSourcePathsList();
    /**
     * <pre>
     * Paths to source files.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString source_paths = 18;</code>
     */
    perfetto.protos.ProfileCommon.InternedString getSourcePaths(int index);
    /**
     * <pre>
     * Paths to source files.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString source_paths = 18;</code>
     */
    int getSourcePathsCount();
    /**
     * <pre>
     * Paths to source files.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString source_paths = 18;</code>
     */
    java.util.List<? extends perfetto.protos.ProfileCommon.InternedStringOrBuilder> 
        getSourcePathsOrBuilderList();
    /**
     * <pre>
     * Paths to source files.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString source_paths = 18;</code>
     */
    perfetto.protos.ProfileCommon.InternedStringOrBuilder getSourcePathsOrBuilder(
        int index);

    /**
     * <pre>
     * Names of functions used in frames below.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString function_names = 5;</code>
     */
    java.util.List<perfetto.protos.ProfileCommon.InternedString> 
        getFunctionNamesList();
    /**
     * <pre>
     * Names of functions used in frames below.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString function_names = 5;</code>
     */
    perfetto.protos.ProfileCommon.InternedString getFunctionNames(int index);
    /**
     * <pre>
     * Names of functions used in frames below.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString function_names = 5;</code>
     */
    int getFunctionNamesCount();
    /**
     * <pre>
     * Names of functions used in frames below.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString function_names = 5;</code>
     */
    java.util.List<? extends perfetto.protos.ProfileCommon.InternedStringOrBuilder> 
        getFunctionNamesOrBuilderList();
    /**
     * <pre>
     * Names of functions used in frames below.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString function_names = 5;</code>
     */
    perfetto.protos.ProfileCommon.InternedStringOrBuilder getFunctionNamesOrBuilder(
        int index);

    /**
     * <pre>
     * Symbols that were added to this trace after the fact.
     * </pre>
     *
     * <code>repeated .perfetto.protos.ProfiledFrameSymbols profiled_frame_symbols = 21;</code>
     */
    java.util.List<perfetto.protos.ProfileCommon.ProfiledFrameSymbols> 
        getProfiledFrameSymbolsList();
    /**
     * <pre>
     * Symbols that were added to this trace after the fact.
     * </pre>
     *
     * <code>repeated .perfetto.protos.ProfiledFrameSymbols profiled_frame_symbols = 21;</code>
     */
    perfetto.protos.ProfileCommon.ProfiledFrameSymbols getProfiledFrameSymbols(int index);
    /**
     * <pre>
     * Symbols that were added to this trace after the fact.
     * </pre>
     *
     * <code>repeated .perfetto.protos.ProfiledFrameSymbols profiled_frame_symbols = 21;</code>
     */
    int getProfiledFrameSymbolsCount();
    /**
     * <pre>
     * Symbols that were added to this trace after the fact.
     * </pre>
     *
     * <code>repeated .perfetto.protos.ProfiledFrameSymbols profiled_frame_symbols = 21;</code>
     */
    java.util.List<? extends perfetto.protos.ProfileCommon.ProfiledFrameSymbolsOrBuilder> 
        getProfiledFrameSymbolsOrBuilderList();
    /**
     * <pre>
     * Symbols that were added to this trace after the fact.
     * </pre>
     *
     * <code>repeated .perfetto.protos.ProfiledFrameSymbols profiled_frame_symbols = 21;</code>
     */
    perfetto.protos.ProfileCommon.ProfiledFrameSymbolsOrBuilder getProfiledFrameSymbolsOrBuilder(
        int index);

    /**
     * <pre>
     * Executable files mapped into processes.
     * </pre>
     *
     * <code>repeated .perfetto.protos.Mapping mappings = 19;</code>
     */
    java.util.List<perfetto.protos.ProfileCommon.Mapping> 
        getMappingsList();
    /**
     * <pre>
     * Executable files mapped into processes.
     * </pre>
     *
     * <code>repeated .perfetto.protos.Mapping mappings = 19;</code>
     */
    perfetto.protos.ProfileCommon.Mapping getMappings(int index);
    /**
     * <pre>
     * Executable files mapped into processes.
     * </pre>
     *
     * <code>repeated .perfetto.protos.Mapping mappings = 19;</code>
     */
    int getMappingsCount();
    /**
     * <pre>
     * Executable files mapped into processes.
     * </pre>
     *
     * <code>repeated .perfetto.protos.Mapping mappings = 19;</code>
     */
    java.util.List<? extends perfetto.protos.ProfileCommon.MappingOrBuilder> 
        getMappingsOrBuilderList();
    /**
     * <pre>
     * Executable files mapped into processes.
     * </pre>
     *
     * <code>repeated .perfetto.protos.Mapping mappings = 19;</code>
     */
    perfetto.protos.ProfileCommon.MappingOrBuilder getMappingsOrBuilder(
        int index);

    /**
     * <pre>
     * Frames of callstacks of a program.
     * </pre>
     *
     * <code>repeated .perfetto.protos.Frame frames = 6;</code>
     */
    java.util.List<perfetto.protos.ProfileCommon.Frame> 
        getFramesList();
    /**
     * <pre>
     * Frames of callstacks of a program.
     * </pre>
     *
     * <code>repeated .perfetto.protos.Frame frames = 6;</code>
     */
    perfetto.protos.ProfileCommon.Frame getFrames(int index);
    /**
     * <pre>
     * Frames of callstacks of a program.
     * </pre>
     *
     * <code>repeated .perfetto.protos.Frame frames = 6;</code>
     */
    int getFramesCount();
    /**
     * <pre>
     * Frames of callstacks of a program.
     * </pre>
     *
     * <code>repeated .perfetto.protos.Frame frames = 6;</code>
     */
    java.util.List<? extends perfetto.protos.ProfileCommon.FrameOrBuilder> 
        getFramesOrBuilderList();
    /**
     * <pre>
     * Frames of callstacks of a program.
     * </pre>
     *
     * <code>repeated .perfetto.protos.Frame frames = 6;</code>
     */
    perfetto.protos.ProfileCommon.FrameOrBuilder getFramesOrBuilder(
        int index);

    /**
     * <pre>
     * A callstack of a program.
     * </pre>
     *
     * <code>repeated .perfetto.protos.Callstack callstacks = 7;</code>
     */
    java.util.List<perfetto.protos.ProfileCommon.Callstack> 
        getCallstacksList();
    /**
     * <pre>
     * A callstack of a program.
     * </pre>
     *
     * <code>repeated .perfetto.protos.Callstack callstacks = 7;</code>
     */
    perfetto.protos.ProfileCommon.Callstack getCallstacks(int index);
    /**
     * <pre>
     * A callstack of a program.
     * </pre>
     *
     * <code>repeated .perfetto.protos.Callstack callstacks = 7;</code>
     */
    int getCallstacksCount();
    /**
     * <pre>
     * A callstack of a program.
     * </pre>
     *
     * <code>repeated .perfetto.protos.Callstack callstacks = 7;</code>
     */
    java.util.List<? extends perfetto.protos.ProfileCommon.CallstackOrBuilder> 
        getCallstacksOrBuilderList();
    /**
     * <pre>
     * A callstack of a program.
     * </pre>
     *
     * <code>repeated .perfetto.protos.Callstack callstacks = 7;</code>
     */
    perfetto.protos.ProfileCommon.CallstackOrBuilder getCallstacksOrBuilder(
        int index);

    /**
     * <pre>
     * Additional Vulkan information sent in a VulkanMemoryEvent message
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString vulkan_memory_keys = 22;</code>
     */
    java.util.List<perfetto.protos.ProfileCommon.InternedString> 
        getVulkanMemoryKeysList();
    /**
     * <pre>
     * Additional Vulkan information sent in a VulkanMemoryEvent message
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString vulkan_memory_keys = 22;</code>
     */
    perfetto.protos.ProfileCommon.InternedString getVulkanMemoryKeys(int index);
    /**
     * <pre>
     * Additional Vulkan information sent in a VulkanMemoryEvent message
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString vulkan_memory_keys = 22;</code>
     */
    int getVulkanMemoryKeysCount();
    /**
     * <pre>
     * Additional Vulkan information sent in a VulkanMemoryEvent message
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString vulkan_memory_keys = 22;</code>
     */
    java.util.List<? extends perfetto.protos.ProfileCommon.InternedStringOrBuilder> 
        getVulkanMemoryKeysOrBuilderList();
    /**
     * <pre>
     * Additional Vulkan information sent in a VulkanMemoryEvent message
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString vulkan_memory_keys = 22;</code>
     */
    perfetto.protos.ProfileCommon.InternedStringOrBuilder getVulkanMemoryKeysOrBuilder(
        int index);

    /**
     * <pre>
     * Graphics context of a render stage event.  This represent the GL
     * context for an OpenGl app or the VkDevice for a Vulkan app.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedGraphicsContext graphics_contexts = 23;</code>
     */
    java.util.List<perfetto.protos.GpuRenderStageEventOuterClass.InternedGraphicsContext> 
        getGraphicsContextsList();
    /**
     * <pre>
     * Graphics context of a render stage event.  This represent the GL
     * context for an OpenGl app or the VkDevice for a Vulkan app.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedGraphicsContext graphics_contexts = 23;</code>
     */
    perfetto.protos.GpuRenderStageEventOuterClass.InternedGraphicsContext getGraphicsContexts(int index);
    /**
     * <pre>
     * Graphics context of a render stage event.  This represent the GL
     * context for an OpenGl app or the VkDevice for a Vulkan app.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedGraphicsContext graphics_contexts = 23;</code>
     */
    int getGraphicsContextsCount();
    /**
     * <pre>
     * Graphics context of a render stage event.  This represent the GL
     * context for an OpenGl app or the VkDevice for a Vulkan app.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedGraphicsContext graphics_contexts = 23;</code>
     */
    java.util.List<? extends perfetto.protos.GpuRenderStageEventOuterClass.InternedGraphicsContextOrBuilder> 
        getGraphicsContextsOrBuilderList();
    /**
     * <pre>
     * Graphics context of a render stage event.  This represent the GL
     * context for an OpenGl app or the VkDevice for a Vulkan app.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedGraphicsContext graphics_contexts = 23;</code>
     */
    perfetto.protos.GpuRenderStageEventOuterClass.InternedGraphicsContextOrBuilder getGraphicsContextsOrBuilder(
        int index);

    /**
     * <pre>
     * Description of a GPU hardware queue or render stage.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedGpuRenderStageSpecification gpu_specifications = 24;</code>
     */
    java.util.List<perfetto.protos.GpuRenderStageEventOuterClass.InternedGpuRenderStageSpecification> 
        getGpuSpecificationsList();
    /**
     * <pre>
     * Description of a GPU hardware queue or render stage.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedGpuRenderStageSpecification gpu_specifications = 24;</code>
     */
    perfetto.protos.GpuRenderStageEventOuterClass.InternedGpuRenderStageSpecification getGpuSpecifications(int index);
    /**
     * <pre>
     * Description of a GPU hardware queue or render stage.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedGpuRenderStageSpecification gpu_specifications = 24;</code>
     */
    int getGpuSpecificationsCount();
    /**
     * <pre>
     * Description of a GPU hardware queue or render stage.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedGpuRenderStageSpecification gpu_specifications = 24;</code>
     */
    java.util.List<? extends perfetto.protos.GpuRenderStageEventOuterClass.InternedGpuRenderStageSpecificationOrBuilder> 
        getGpuSpecificationsOrBuilderList();
    /**
     * <pre>
     * Description of a GPU hardware queue or render stage.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedGpuRenderStageSpecification gpu_specifications = 24;</code>
     */
    perfetto.protos.GpuRenderStageEventOuterClass.InternedGpuRenderStageSpecificationOrBuilder getGpuSpecificationsOrBuilder(
        int index);

    /**
     * <pre>
     * This is set when FtraceConfig.symbolize_ksyms = true.
     * The id of each symbol the number that will be reported in ftrace events
     * like sched_block_reason.caller and is obtained from a monotonic counter.
     * The same symbol can have different indexes in different bundles.
     * This is is NOT the real address. This is to avoid disclosing KASLR through
     * traces.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString kernel_symbols = 26;</code>
     */
    java.util.List<perfetto.protos.ProfileCommon.InternedString> 
        getKernelSymbolsList();
    /**
     * <pre>
     * This is set when FtraceConfig.symbolize_ksyms = true.
     * The id of each symbol the number that will be reported in ftrace events
     * like sched_block_reason.caller and is obtained from a monotonic counter.
     * The same symbol can have different indexes in different bundles.
     * This is is NOT the real address. This is to avoid disclosing KASLR through
     * traces.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString kernel_symbols = 26;</code>
     */
    perfetto.protos.ProfileCommon.InternedString getKernelSymbols(int index);
    /**
     * <pre>
     * This is set when FtraceConfig.symbolize_ksyms = true.
     * The id of each symbol the number that will be reported in ftrace events
     * like sched_block_reason.caller and is obtained from a monotonic counter.
     * The same symbol can have different indexes in different bundles.
     * This is is NOT the real address. This is to avoid disclosing KASLR through
     * traces.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString kernel_symbols = 26;</code>
     */
    int getKernelSymbolsCount();
    /**
     * <pre>
     * This is set when FtraceConfig.symbolize_ksyms = true.
     * The id of each symbol the number that will be reported in ftrace events
     * like sched_block_reason.caller and is obtained from a monotonic counter.
     * The same symbol can have different indexes in different bundles.
     * This is is NOT the real address. This is to avoid disclosing KASLR through
     * traces.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString kernel_symbols = 26;</code>
     */
    java.util.List<? extends perfetto.protos.ProfileCommon.InternedStringOrBuilder> 
        getKernelSymbolsOrBuilderList();
    /**
     * <pre>
     * This is set when FtraceConfig.symbolize_ksyms = true.
     * The id of each symbol the number that will be reported in ftrace events
     * like sched_block_reason.caller and is obtained from a monotonic counter.
     * The same symbol can have different indexes in different bundles.
     * This is is NOT the real address. This is to avoid disclosing KASLR through
     * traces.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString kernel_symbols = 26;</code>
     */
    perfetto.protos.ProfileCommon.InternedStringOrBuilder getKernelSymbolsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Message that contains new entries for the interning indices of a packet
   * sequence.
   * The writer will usually emit new entries in the same TracePacket that first
   * refers to them (since the last reset of interning state). They may also be
   * emitted proactively in advance of referring to them in later packets.
   * Next reserved id: 8 (up to 15).
   * Next id: 29.
   * </pre>
   *
   * Protobuf type {@code perfetto.protos.InternedData}
   */
  public static final class InternedData extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:perfetto.protos.InternedData)
      InternedDataOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use InternedData.newBuilder() to construct.
    private InternedData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private InternedData() {
      eventCategories_ = java.util.Collections.emptyList();
      eventNames_ = java.util.Collections.emptyList();
      debugAnnotationNames_ = java.util.Collections.emptyList();
      debugAnnotationValueTypeNames_ = java.util.Collections.emptyList();
      sourceLocations_ = java.util.Collections.emptyList();
      unsymbolizedSourceLocations_ = java.util.Collections.emptyList();
      logMessageBody_ = java.util.Collections.emptyList();
      histogramNames_ = java.util.Collections.emptyList();
      buildIds_ = java.util.Collections.emptyList();
      mappingPaths_ = java.util.Collections.emptyList();
      sourcePaths_ = java.util.Collections.emptyList();
      functionNames_ = java.util.Collections.emptyList();
      profiledFrameSymbols_ = java.util.Collections.emptyList();
      mappings_ = java.util.Collections.emptyList();
      frames_ = java.util.Collections.emptyList();
      callstacks_ = java.util.Collections.emptyList();
      vulkanMemoryKeys_ = java.util.Collections.emptyList();
      graphicsContexts_ = java.util.Collections.emptyList();
      gpuSpecifications_ = java.util.Collections.emptyList();
      kernelSymbols_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new InternedData();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return perfetto.protos.InternedDataOuterClass.internal_static_perfetto_protos_InternedData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return perfetto.protos.InternedDataOuterClass.internal_static_perfetto_protos_InternedData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              perfetto.protos.InternedDataOuterClass.InternedData.class, perfetto.protos.InternedDataOuterClass.InternedData.Builder.class);
    }

    public static final int EVENT_CATEGORIES_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<perfetto.protos.TrackEventOuterClass.EventCategory> eventCategories_;
    /**
     * <pre>
     * Each field's message type needs to specify an |iid| field, which is the ID
     * of the entry in the field's interning index. Each field constructs its own
     * index, thus interning IDs are scoped to the tracing session and field
     * (usually as a counter for efficient var-int encoding). It is illegal to
     * override entries in an index (using the same iid for two different values)
     * within the same tracing session, even after a reset of the emitted
     * interning state.
     * </pre>
     *
     * <code>repeated .perfetto.protos.EventCategory event_categories = 1;</code>
     */
    @java.lang.Override
    public java.util.List<perfetto.protos.TrackEventOuterClass.EventCategory> getEventCategoriesList() {
      return eventCategories_;
    }
    /**
     * <pre>
     * Each field's message type needs to specify an |iid| field, which is the ID
     * of the entry in the field's interning index. Each field constructs its own
     * index, thus interning IDs are scoped to the tracing session and field
     * (usually as a counter for efficient var-int encoding). It is illegal to
     * override entries in an index (using the same iid for two different values)
     * within the same tracing session, even after a reset of the emitted
     * interning state.
     * </pre>
     *
     * <code>repeated .perfetto.protos.EventCategory event_categories = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends perfetto.protos.TrackEventOuterClass.EventCategoryOrBuilder> 
        getEventCategoriesOrBuilderList() {
      return eventCategories_;
    }
    /**
     * <pre>
     * Each field's message type needs to specify an |iid| field, which is the ID
     * of the entry in the field's interning index. Each field constructs its own
     * index, thus interning IDs are scoped to the tracing session and field
     * (usually as a counter for efficient var-int encoding). It is illegal to
     * override entries in an index (using the same iid for two different values)
     * within the same tracing session, even after a reset of the emitted
     * interning state.
     * </pre>
     *
     * <code>repeated .perfetto.protos.EventCategory event_categories = 1;</code>
     */
    @java.lang.Override
    public int getEventCategoriesCount() {
      return eventCategories_.size();
    }
    /**
     * <pre>
     * Each field's message type needs to specify an |iid| field, which is the ID
     * of the entry in the field's interning index. Each field constructs its own
     * index, thus interning IDs are scoped to the tracing session and field
     * (usually as a counter for efficient var-int encoding). It is illegal to
     * override entries in an index (using the same iid for two different values)
     * within the same tracing session, even after a reset of the emitted
     * interning state.
     * </pre>
     *
     * <code>repeated .perfetto.protos.EventCategory event_categories = 1;</code>
     */
    @java.lang.Override
    public perfetto.protos.TrackEventOuterClass.EventCategory getEventCategories(int index) {
      return eventCategories_.get(index);
    }
    /**
     * <pre>
     * Each field's message type needs to specify an |iid| field, which is the ID
     * of the entry in the field's interning index. Each field constructs its own
     * index, thus interning IDs are scoped to the tracing session and field
     * (usually as a counter for efficient var-int encoding). It is illegal to
     * override entries in an index (using the same iid for two different values)
     * within the same tracing session, even after a reset of the emitted
     * interning state.
     * </pre>
     *
     * <code>repeated .perfetto.protos.EventCategory event_categories = 1;</code>
     */
    @java.lang.Override
    public perfetto.protos.TrackEventOuterClass.EventCategoryOrBuilder getEventCategoriesOrBuilder(
        int index) {
      return eventCategories_.get(index);
    }

    public static final int EVENT_NAMES_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private java.util.List<perfetto.protos.TrackEventOuterClass.EventName> eventNames_;
    /**
     * <code>repeated .perfetto.protos.EventName event_names = 2;</code>
     */
    @java.lang.Override
    public java.util.List<perfetto.protos.TrackEventOuterClass.EventName> getEventNamesList() {
      return eventNames_;
    }
    /**
     * <code>repeated .perfetto.protos.EventName event_names = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends perfetto.protos.TrackEventOuterClass.EventNameOrBuilder> 
        getEventNamesOrBuilderList() {
      return eventNames_;
    }
    /**
     * <code>repeated .perfetto.protos.EventName event_names = 2;</code>
     */
    @java.lang.Override
    public int getEventNamesCount() {
      return eventNames_.size();
    }
    /**
     * <code>repeated .perfetto.protos.EventName event_names = 2;</code>
     */
    @java.lang.Override
    public perfetto.protos.TrackEventOuterClass.EventName getEventNames(int index) {
      return eventNames_.get(index);
    }
    /**
     * <code>repeated .perfetto.protos.EventName event_names = 2;</code>
     */
    @java.lang.Override
    public perfetto.protos.TrackEventOuterClass.EventNameOrBuilder getEventNamesOrBuilder(
        int index) {
      return eventNames_.get(index);
    }

    public static final int DEBUG_ANNOTATION_NAMES_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private java.util.List<perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationName> debugAnnotationNames_;
    /**
     * <code>repeated .perfetto.protos.DebugAnnotationName debug_annotation_names = 3;</code>
     */
    @java.lang.Override
    public java.util.List<perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationName> getDebugAnnotationNamesList() {
      return debugAnnotationNames_;
    }
    /**
     * <code>repeated .perfetto.protos.DebugAnnotationName debug_annotation_names = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationNameOrBuilder> 
        getDebugAnnotationNamesOrBuilderList() {
      return debugAnnotationNames_;
    }
    /**
     * <code>repeated .perfetto.protos.DebugAnnotationName debug_annotation_names = 3;</code>
     */
    @java.lang.Override
    public int getDebugAnnotationNamesCount() {
      return debugAnnotationNames_.size();
    }
    /**
     * <code>repeated .perfetto.protos.DebugAnnotationName debug_annotation_names = 3;</code>
     */
    @java.lang.Override
    public perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationName getDebugAnnotationNames(int index) {
      return debugAnnotationNames_.get(index);
    }
    /**
     * <code>repeated .perfetto.protos.DebugAnnotationName debug_annotation_names = 3;</code>
     */
    @java.lang.Override
    public perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationNameOrBuilder getDebugAnnotationNamesOrBuilder(
        int index) {
      return debugAnnotationNames_.get(index);
    }

    public static final int DEBUG_ANNOTATION_VALUE_TYPE_NAMES_FIELD_NUMBER = 27;
    @SuppressWarnings("serial")
    private java.util.List<perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationValueTypeName> debugAnnotationValueTypeNames_;
    /**
     * <code>repeated .perfetto.protos.DebugAnnotationValueTypeName debug_annotation_value_type_names = 27;</code>
     */
    @java.lang.Override
    public java.util.List<perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationValueTypeName> getDebugAnnotationValueTypeNamesList() {
      return debugAnnotationValueTypeNames_;
    }
    /**
     * <code>repeated .perfetto.protos.DebugAnnotationValueTypeName debug_annotation_value_type_names = 27;</code>
     */
    @java.lang.Override
    public java.util.List<? extends perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationValueTypeNameOrBuilder> 
        getDebugAnnotationValueTypeNamesOrBuilderList() {
      return debugAnnotationValueTypeNames_;
    }
    /**
     * <code>repeated .perfetto.protos.DebugAnnotationValueTypeName debug_annotation_value_type_names = 27;</code>
     */
    @java.lang.Override
    public int getDebugAnnotationValueTypeNamesCount() {
      return debugAnnotationValueTypeNames_.size();
    }
    /**
     * <code>repeated .perfetto.protos.DebugAnnotationValueTypeName debug_annotation_value_type_names = 27;</code>
     */
    @java.lang.Override
    public perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationValueTypeName getDebugAnnotationValueTypeNames(int index) {
      return debugAnnotationValueTypeNames_.get(index);
    }
    /**
     * <code>repeated .perfetto.protos.DebugAnnotationValueTypeName debug_annotation_value_type_names = 27;</code>
     */
    @java.lang.Override
    public perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationValueTypeNameOrBuilder getDebugAnnotationValueTypeNamesOrBuilder(
        int index) {
      return debugAnnotationValueTypeNames_.get(index);
    }

    public static final int SOURCE_LOCATIONS_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private java.util.List<perfetto.protos.SourceLocationOuterClass.SourceLocation> sourceLocations_;
    /**
     * <code>repeated .perfetto.protos.SourceLocation source_locations = 4;</code>
     */
    @java.lang.Override
    public java.util.List<perfetto.protos.SourceLocationOuterClass.SourceLocation> getSourceLocationsList() {
      return sourceLocations_;
    }
    /**
     * <code>repeated .perfetto.protos.SourceLocation source_locations = 4;</code>
     */
    @java.lang.Override
    public java.util.List<? extends perfetto.protos.SourceLocationOuterClass.SourceLocationOrBuilder> 
        getSourceLocationsOrBuilderList() {
      return sourceLocations_;
    }
    /**
     * <code>repeated .perfetto.protos.SourceLocation source_locations = 4;</code>
     */
    @java.lang.Override
    public int getSourceLocationsCount() {
      return sourceLocations_.size();
    }
    /**
     * <code>repeated .perfetto.protos.SourceLocation source_locations = 4;</code>
     */
    @java.lang.Override
    public perfetto.protos.SourceLocationOuterClass.SourceLocation getSourceLocations(int index) {
      return sourceLocations_.get(index);
    }
    /**
     * <code>repeated .perfetto.protos.SourceLocation source_locations = 4;</code>
     */
    @java.lang.Override
    public perfetto.protos.SourceLocationOuterClass.SourceLocationOrBuilder getSourceLocationsOrBuilder(
        int index) {
      return sourceLocations_.get(index);
    }

    public static final int UNSYMBOLIZED_SOURCE_LOCATIONS_FIELD_NUMBER = 28;
    @SuppressWarnings("serial")
    private java.util.List<perfetto.protos.SourceLocationOuterClass.UnsymbolizedSourceLocation> unsymbolizedSourceLocations_;
    /**
     * <code>repeated .perfetto.protos.UnsymbolizedSourceLocation unsymbolized_source_locations = 28;</code>
     */
    @java.lang.Override
    public java.util.List<perfetto.protos.SourceLocationOuterClass.UnsymbolizedSourceLocation> getUnsymbolizedSourceLocationsList() {
      return unsymbolizedSourceLocations_;
    }
    /**
     * <code>repeated .perfetto.protos.UnsymbolizedSourceLocation unsymbolized_source_locations = 28;</code>
     */
    @java.lang.Override
    public java.util.List<? extends perfetto.protos.SourceLocationOuterClass.UnsymbolizedSourceLocationOrBuilder> 
        getUnsymbolizedSourceLocationsOrBuilderList() {
      return unsymbolizedSourceLocations_;
    }
    /**
     * <code>repeated .perfetto.protos.UnsymbolizedSourceLocation unsymbolized_source_locations = 28;</code>
     */
    @java.lang.Override
    public int getUnsymbolizedSourceLocationsCount() {
      return unsymbolizedSourceLocations_.size();
    }
    /**
     * <code>repeated .perfetto.protos.UnsymbolizedSourceLocation unsymbolized_source_locations = 28;</code>
     */
    @java.lang.Override
    public perfetto.protos.SourceLocationOuterClass.UnsymbolizedSourceLocation getUnsymbolizedSourceLocations(int index) {
      return unsymbolizedSourceLocations_.get(index);
    }
    /**
     * <code>repeated .perfetto.protos.UnsymbolizedSourceLocation unsymbolized_source_locations = 28;</code>
     */
    @java.lang.Override
    public perfetto.protos.SourceLocationOuterClass.UnsymbolizedSourceLocationOrBuilder getUnsymbolizedSourceLocationsOrBuilder(
        int index) {
      return unsymbolizedSourceLocations_.get(index);
    }

    public static final int LOG_MESSAGE_BODY_FIELD_NUMBER = 20;
    @SuppressWarnings("serial")
    private java.util.List<perfetto.protos.LogMessageOuterClass.LogMessageBody> logMessageBody_;
    /**
     * <code>repeated .perfetto.protos.LogMessageBody log_message_body = 20;</code>
     */
    @java.lang.Override
    public java.util.List<perfetto.protos.LogMessageOuterClass.LogMessageBody> getLogMessageBodyList() {
      return logMessageBody_;
    }
    /**
     * <code>repeated .perfetto.protos.LogMessageBody log_message_body = 20;</code>
     */
    @java.lang.Override
    public java.util.List<? extends perfetto.protos.LogMessageOuterClass.LogMessageBodyOrBuilder> 
        getLogMessageBodyOrBuilderList() {
      return logMessageBody_;
    }
    /**
     * <code>repeated .perfetto.protos.LogMessageBody log_message_body = 20;</code>
     */
    @java.lang.Override
    public int getLogMessageBodyCount() {
      return logMessageBody_.size();
    }
    /**
     * <code>repeated .perfetto.protos.LogMessageBody log_message_body = 20;</code>
     */
    @java.lang.Override
    public perfetto.protos.LogMessageOuterClass.LogMessageBody getLogMessageBody(int index) {
      return logMessageBody_.get(index);
    }
    /**
     * <code>repeated .perfetto.protos.LogMessageBody log_message_body = 20;</code>
     */
    @java.lang.Override
    public perfetto.protos.LogMessageOuterClass.LogMessageBodyOrBuilder getLogMessageBodyOrBuilder(
        int index) {
      return logMessageBody_.get(index);
    }

    public static final int HISTOGRAM_NAMES_FIELD_NUMBER = 25;
    @SuppressWarnings("serial")
    private java.util.List<perfetto.protos.ChromeHistogramSampleOuterClass.HistogramName> histogramNames_;
    /**
     * <code>repeated .perfetto.protos.HistogramName histogram_names = 25;</code>
     */
    @java.lang.Override
    public java.util.List<perfetto.protos.ChromeHistogramSampleOuterClass.HistogramName> getHistogramNamesList() {
      return histogramNames_;
    }
    /**
     * <code>repeated .perfetto.protos.HistogramName histogram_names = 25;</code>
     */
    @java.lang.Override
    public java.util.List<? extends perfetto.protos.ChromeHistogramSampleOuterClass.HistogramNameOrBuilder> 
        getHistogramNamesOrBuilderList() {
      return histogramNames_;
    }
    /**
     * <code>repeated .perfetto.protos.HistogramName histogram_names = 25;</code>
     */
    @java.lang.Override
    public int getHistogramNamesCount() {
      return histogramNames_.size();
    }
    /**
     * <code>repeated .perfetto.protos.HistogramName histogram_names = 25;</code>
     */
    @java.lang.Override
    public perfetto.protos.ChromeHistogramSampleOuterClass.HistogramName getHistogramNames(int index) {
      return histogramNames_.get(index);
    }
    /**
     * <code>repeated .perfetto.protos.HistogramName histogram_names = 25;</code>
     */
    @java.lang.Override
    public perfetto.protos.ChromeHistogramSampleOuterClass.HistogramNameOrBuilder getHistogramNamesOrBuilder(
        int index) {
      return histogramNames_.get(index);
    }

    public static final int BUILD_IDS_FIELD_NUMBER = 16;
    @SuppressWarnings("serial")
    private java.util.List<perfetto.protos.ProfileCommon.InternedString> buildIds_;
    /**
     * <pre>
     * Build IDs of exectuable files.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString build_ids = 16;</code>
     */
    @java.lang.Override
    public java.util.List<perfetto.protos.ProfileCommon.InternedString> getBuildIdsList() {
      return buildIds_;
    }
    /**
     * <pre>
     * Build IDs of exectuable files.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString build_ids = 16;</code>
     */
    @java.lang.Override
    public java.util.List<? extends perfetto.protos.ProfileCommon.InternedStringOrBuilder> 
        getBuildIdsOrBuilderList() {
      return buildIds_;
    }
    /**
     * <pre>
     * Build IDs of exectuable files.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString build_ids = 16;</code>
     */
    @java.lang.Override
    public int getBuildIdsCount() {
      return buildIds_.size();
    }
    /**
     * <pre>
     * Build IDs of exectuable files.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString build_ids = 16;</code>
     */
    @java.lang.Override
    public perfetto.protos.ProfileCommon.InternedString getBuildIds(int index) {
      return buildIds_.get(index);
    }
    /**
     * <pre>
     * Build IDs of exectuable files.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString build_ids = 16;</code>
     */
    @java.lang.Override
    public perfetto.protos.ProfileCommon.InternedStringOrBuilder getBuildIdsOrBuilder(
        int index) {
      return buildIds_.get(index);
    }

    public static final int MAPPING_PATHS_FIELD_NUMBER = 17;
    @SuppressWarnings("serial")
    private java.util.List<perfetto.protos.ProfileCommon.InternedString> mappingPaths_;
    /**
     * <pre>
     * Paths to executable files.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString mapping_paths = 17;</code>
     */
    @java.lang.Override
    public java.util.List<perfetto.protos.ProfileCommon.InternedString> getMappingPathsList() {
      return mappingPaths_;
    }
    /**
     * <pre>
     * Paths to executable files.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString mapping_paths = 17;</code>
     */
    @java.lang.Override
    public java.util.List<? extends perfetto.protos.ProfileCommon.InternedStringOrBuilder> 
        getMappingPathsOrBuilderList() {
      return mappingPaths_;
    }
    /**
     * <pre>
     * Paths to executable files.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString mapping_paths = 17;</code>
     */
    @java.lang.Override
    public int getMappingPathsCount() {
      return mappingPaths_.size();
    }
    /**
     * <pre>
     * Paths to executable files.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString mapping_paths = 17;</code>
     */
    @java.lang.Override
    public perfetto.protos.ProfileCommon.InternedString getMappingPaths(int index) {
      return mappingPaths_.get(index);
    }
    /**
     * <pre>
     * Paths to executable files.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString mapping_paths = 17;</code>
     */
    @java.lang.Override
    public perfetto.protos.ProfileCommon.InternedStringOrBuilder getMappingPathsOrBuilder(
        int index) {
      return mappingPaths_.get(index);
    }

    public static final int SOURCE_PATHS_FIELD_NUMBER = 18;
    @SuppressWarnings("serial")
    private java.util.List<perfetto.protos.ProfileCommon.InternedString> sourcePaths_;
    /**
     * <pre>
     * Paths to source files.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString source_paths = 18;</code>
     */
    @java.lang.Override
    public java.util.List<perfetto.protos.ProfileCommon.InternedString> getSourcePathsList() {
      return sourcePaths_;
    }
    /**
     * <pre>
     * Paths to source files.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString source_paths = 18;</code>
     */
    @java.lang.Override
    public java.util.List<? extends perfetto.protos.ProfileCommon.InternedStringOrBuilder> 
        getSourcePathsOrBuilderList() {
      return sourcePaths_;
    }
    /**
     * <pre>
     * Paths to source files.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString source_paths = 18;</code>
     */
    @java.lang.Override
    public int getSourcePathsCount() {
      return sourcePaths_.size();
    }
    /**
     * <pre>
     * Paths to source files.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString source_paths = 18;</code>
     */
    @java.lang.Override
    public perfetto.protos.ProfileCommon.InternedString getSourcePaths(int index) {
      return sourcePaths_.get(index);
    }
    /**
     * <pre>
     * Paths to source files.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString source_paths = 18;</code>
     */
    @java.lang.Override
    public perfetto.protos.ProfileCommon.InternedStringOrBuilder getSourcePathsOrBuilder(
        int index) {
      return sourcePaths_.get(index);
    }

    public static final int FUNCTION_NAMES_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private java.util.List<perfetto.protos.ProfileCommon.InternedString> functionNames_;
    /**
     * <pre>
     * Names of functions used in frames below.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString function_names = 5;</code>
     */
    @java.lang.Override
    public java.util.List<perfetto.protos.ProfileCommon.InternedString> getFunctionNamesList() {
      return functionNames_;
    }
    /**
     * <pre>
     * Names of functions used in frames below.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString function_names = 5;</code>
     */
    @java.lang.Override
    public java.util.List<? extends perfetto.protos.ProfileCommon.InternedStringOrBuilder> 
        getFunctionNamesOrBuilderList() {
      return functionNames_;
    }
    /**
     * <pre>
     * Names of functions used in frames below.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString function_names = 5;</code>
     */
    @java.lang.Override
    public int getFunctionNamesCount() {
      return functionNames_.size();
    }
    /**
     * <pre>
     * Names of functions used in frames below.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString function_names = 5;</code>
     */
    @java.lang.Override
    public perfetto.protos.ProfileCommon.InternedString getFunctionNames(int index) {
      return functionNames_.get(index);
    }
    /**
     * <pre>
     * Names of functions used in frames below.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString function_names = 5;</code>
     */
    @java.lang.Override
    public perfetto.protos.ProfileCommon.InternedStringOrBuilder getFunctionNamesOrBuilder(
        int index) {
      return functionNames_.get(index);
    }

    public static final int PROFILED_FRAME_SYMBOLS_FIELD_NUMBER = 21;
    @SuppressWarnings("serial")
    private java.util.List<perfetto.protos.ProfileCommon.ProfiledFrameSymbols> profiledFrameSymbols_;
    /**
     * <pre>
     * Symbols that were added to this trace after the fact.
     * </pre>
     *
     * <code>repeated .perfetto.protos.ProfiledFrameSymbols profiled_frame_symbols = 21;</code>
     */
    @java.lang.Override
    public java.util.List<perfetto.protos.ProfileCommon.ProfiledFrameSymbols> getProfiledFrameSymbolsList() {
      return profiledFrameSymbols_;
    }
    /**
     * <pre>
     * Symbols that were added to this trace after the fact.
     * </pre>
     *
     * <code>repeated .perfetto.protos.ProfiledFrameSymbols profiled_frame_symbols = 21;</code>
     */
    @java.lang.Override
    public java.util.List<? extends perfetto.protos.ProfileCommon.ProfiledFrameSymbolsOrBuilder> 
        getProfiledFrameSymbolsOrBuilderList() {
      return profiledFrameSymbols_;
    }
    /**
     * <pre>
     * Symbols that were added to this trace after the fact.
     * </pre>
     *
     * <code>repeated .perfetto.protos.ProfiledFrameSymbols profiled_frame_symbols = 21;</code>
     */
    @java.lang.Override
    public int getProfiledFrameSymbolsCount() {
      return profiledFrameSymbols_.size();
    }
    /**
     * <pre>
     * Symbols that were added to this trace after the fact.
     * </pre>
     *
     * <code>repeated .perfetto.protos.ProfiledFrameSymbols profiled_frame_symbols = 21;</code>
     */
    @java.lang.Override
    public perfetto.protos.ProfileCommon.ProfiledFrameSymbols getProfiledFrameSymbols(int index) {
      return profiledFrameSymbols_.get(index);
    }
    /**
     * <pre>
     * Symbols that were added to this trace after the fact.
     * </pre>
     *
     * <code>repeated .perfetto.protos.ProfiledFrameSymbols profiled_frame_symbols = 21;</code>
     */
    @java.lang.Override
    public perfetto.protos.ProfileCommon.ProfiledFrameSymbolsOrBuilder getProfiledFrameSymbolsOrBuilder(
        int index) {
      return profiledFrameSymbols_.get(index);
    }

    public static final int MAPPINGS_FIELD_NUMBER = 19;
    @SuppressWarnings("serial")
    private java.util.List<perfetto.protos.ProfileCommon.Mapping> mappings_;
    /**
     * <pre>
     * Executable files mapped into processes.
     * </pre>
     *
     * <code>repeated .perfetto.protos.Mapping mappings = 19;</code>
     */
    @java.lang.Override
    public java.util.List<perfetto.protos.ProfileCommon.Mapping> getMappingsList() {
      return mappings_;
    }
    /**
     * <pre>
     * Executable files mapped into processes.
     * </pre>
     *
     * <code>repeated .perfetto.protos.Mapping mappings = 19;</code>
     */
    @java.lang.Override
    public java.util.List<? extends perfetto.protos.ProfileCommon.MappingOrBuilder> 
        getMappingsOrBuilderList() {
      return mappings_;
    }
    /**
     * <pre>
     * Executable files mapped into processes.
     * </pre>
     *
     * <code>repeated .perfetto.protos.Mapping mappings = 19;</code>
     */
    @java.lang.Override
    public int getMappingsCount() {
      return mappings_.size();
    }
    /**
     * <pre>
     * Executable files mapped into processes.
     * </pre>
     *
     * <code>repeated .perfetto.protos.Mapping mappings = 19;</code>
     */
    @java.lang.Override
    public perfetto.protos.ProfileCommon.Mapping getMappings(int index) {
      return mappings_.get(index);
    }
    /**
     * <pre>
     * Executable files mapped into processes.
     * </pre>
     *
     * <code>repeated .perfetto.protos.Mapping mappings = 19;</code>
     */
    @java.lang.Override
    public perfetto.protos.ProfileCommon.MappingOrBuilder getMappingsOrBuilder(
        int index) {
      return mappings_.get(index);
    }

    public static final int FRAMES_FIELD_NUMBER = 6;
    @SuppressWarnings("serial")
    private java.util.List<perfetto.protos.ProfileCommon.Frame> frames_;
    /**
     * <pre>
     * Frames of callstacks of a program.
     * </pre>
     *
     * <code>repeated .perfetto.protos.Frame frames = 6;</code>
     */
    @java.lang.Override
    public java.util.List<perfetto.protos.ProfileCommon.Frame> getFramesList() {
      return frames_;
    }
    /**
     * <pre>
     * Frames of callstacks of a program.
     * </pre>
     *
     * <code>repeated .perfetto.protos.Frame frames = 6;</code>
     */
    @java.lang.Override
    public java.util.List<? extends perfetto.protos.ProfileCommon.FrameOrBuilder> 
        getFramesOrBuilderList() {
      return frames_;
    }
    /**
     * <pre>
     * Frames of callstacks of a program.
     * </pre>
     *
     * <code>repeated .perfetto.protos.Frame frames = 6;</code>
     */
    @java.lang.Override
    public int getFramesCount() {
      return frames_.size();
    }
    /**
     * <pre>
     * Frames of callstacks of a program.
     * </pre>
     *
     * <code>repeated .perfetto.protos.Frame frames = 6;</code>
     */
    @java.lang.Override
    public perfetto.protos.ProfileCommon.Frame getFrames(int index) {
      return frames_.get(index);
    }
    /**
     * <pre>
     * Frames of callstacks of a program.
     * </pre>
     *
     * <code>repeated .perfetto.protos.Frame frames = 6;</code>
     */
    @java.lang.Override
    public perfetto.protos.ProfileCommon.FrameOrBuilder getFramesOrBuilder(
        int index) {
      return frames_.get(index);
    }

    public static final int CALLSTACKS_FIELD_NUMBER = 7;
    @SuppressWarnings("serial")
    private java.util.List<perfetto.protos.ProfileCommon.Callstack> callstacks_;
    /**
     * <pre>
     * A callstack of a program.
     * </pre>
     *
     * <code>repeated .perfetto.protos.Callstack callstacks = 7;</code>
     */
    @java.lang.Override
    public java.util.List<perfetto.protos.ProfileCommon.Callstack> getCallstacksList() {
      return callstacks_;
    }
    /**
     * <pre>
     * A callstack of a program.
     * </pre>
     *
     * <code>repeated .perfetto.protos.Callstack callstacks = 7;</code>
     */
    @java.lang.Override
    public java.util.List<? extends perfetto.protos.ProfileCommon.CallstackOrBuilder> 
        getCallstacksOrBuilderList() {
      return callstacks_;
    }
    /**
     * <pre>
     * A callstack of a program.
     * </pre>
     *
     * <code>repeated .perfetto.protos.Callstack callstacks = 7;</code>
     */
    @java.lang.Override
    public int getCallstacksCount() {
      return callstacks_.size();
    }
    /**
     * <pre>
     * A callstack of a program.
     * </pre>
     *
     * <code>repeated .perfetto.protos.Callstack callstacks = 7;</code>
     */
    @java.lang.Override
    public perfetto.protos.ProfileCommon.Callstack getCallstacks(int index) {
      return callstacks_.get(index);
    }
    /**
     * <pre>
     * A callstack of a program.
     * </pre>
     *
     * <code>repeated .perfetto.protos.Callstack callstacks = 7;</code>
     */
    @java.lang.Override
    public perfetto.protos.ProfileCommon.CallstackOrBuilder getCallstacksOrBuilder(
        int index) {
      return callstacks_.get(index);
    }

    public static final int VULKAN_MEMORY_KEYS_FIELD_NUMBER = 22;
    @SuppressWarnings("serial")
    private java.util.List<perfetto.protos.ProfileCommon.InternedString> vulkanMemoryKeys_;
    /**
     * <pre>
     * Additional Vulkan information sent in a VulkanMemoryEvent message
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString vulkan_memory_keys = 22;</code>
     */
    @java.lang.Override
    public java.util.List<perfetto.protos.ProfileCommon.InternedString> getVulkanMemoryKeysList() {
      return vulkanMemoryKeys_;
    }
    /**
     * <pre>
     * Additional Vulkan information sent in a VulkanMemoryEvent message
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString vulkan_memory_keys = 22;</code>
     */
    @java.lang.Override
    public java.util.List<? extends perfetto.protos.ProfileCommon.InternedStringOrBuilder> 
        getVulkanMemoryKeysOrBuilderList() {
      return vulkanMemoryKeys_;
    }
    /**
     * <pre>
     * Additional Vulkan information sent in a VulkanMemoryEvent message
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString vulkan_memory_keys = 22;</code>
     */
    @java.lang.Override
    public int getVulkanMemoryKeysCount() {
      return vulkanMemoryKeys_.size();
    }
    /**
     * <pre>
     * Additional Vulkan information sent in a VulkanMemoryEvent message
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString vulkan_memory_keys = 22;</code>
     */
    @java.lang.Override
    public perfetto.protos.ProfileCommon.InternedString getVulkanMemoryKeys(int index) {
      return vulkanMemoryKeys_.get(index);
    }
    /**
     * <pre>
     * Additional Vulkan information sent in a VulkanMemoryEvent message
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString vulkan_memory_keys = 22;</code>
     */
    @java.lang.Override
    public perfetto.protos.ProfileCommon.InternedStringOrBuilder getVulkanMemoryKeysOrBuilder(
        int index) {
      return vulkanMemoryKeys_.get(index);
    }

    public static final int GRAPHICS_CONTEXTS_FIELD_NUMBER = 23;
    @SuppressWarnings("serial")
    private java.util.List<perfetto.protos.GpuRenderStageEventOuterClass.InternedGraphicsContext> graphicsContexts_;
    /**
     * <pre>
     * Graphics context of a render stage event.  This represent the GL
     * context for an OpenGl app or the VkDevice for a Vulkan app.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedGraphicsContext graphics_contexts = 23;</code>
     */
    @java.lang.Override
    public java.util.List<perfetto.protos.GpuRenderStageEventOuterClass.InternedGraphicsContext> getGraphicsContextsList() {
      return graphicsContexts_;
    }
    /**
     * <pre>
     * Graphics context of a render stage event.  This represent the GL
     * context for an OpenGl app or the VkDevice for a Vulkan app.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedGraphicsContext graphics_contexts = 23;</code>
     */
    @java.lang.Override
    public java.util.List<? extends perfetto.protos.GpuRenderStageEventOuterClass.InternedGraphicsContextOrBuilder> 
        getGraphicsContextsOrBuilderList() {
      return graphicsContexts_;
    }
    /**
     * <pre>
     * Graphics context of a render stage event.  This represent the GL
     * context for an OpenGl app or the VkDevice for a Vulkan app.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedGraphicsContext graphics_contexts = 23;</code>
     */
    @java.lang.Override
    public int getGraphicsContextsCount() {
      return graphicsContexts_.size();
    }
    /**
     * <pre>
     * Graphics context of a render stage event.  This represent the GL
     * context for an OpenGl app or the VkDevice for a Vulkan app.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedGraphicsContext graphics_contexts = 23;</code>
     */
    @java.lang.Override
    public perfetto.protos.GpuRenderStageEventOuterClass.InternedGraphicsContext getGraphicsContexts(int index) {
      return graphicsContexts_.get(index);
    }
    /**
     * <pre>
     * Graphics context of a render stage event.  This represent the GL
     * context for an OpenGl app or the VkDevice for a Vulkan app.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedGraphicsContext graphics_contexts = 23;</code>
     */
    @java.lang.Override
    public perfetto.protos.GpuRenderStageEventOuterClass.InternedGraphicsContextOrBuilder getGraphicsContextsOrBuilder(
        int index) {
      return graphicsContexts_.get(index);
    }

    public static final int GPU_SPECIFICATIONS_FIELD_NUMBER = 24;
    @SuppressWarnings("serial")
    private java.util.List<perfetto.protos.GpuRenderStageEventOuterClass.InternedGpuRenderStageSpecification> gpuSpecifications_;
    /**
     * <pre>
     * Description of a GPU hardware queue or render stage.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedGpuRenderStageSpecification gpu_specifications = 24;</code>
     */
    @java.lang.Override
    public java.util.List<perfetto.protos.GpuRenderStageEventOuterClass.InternedGpuRenderStageSpecification> getGpuSpecificationsList() {
      return gpuSpecifications_;
    }
    /**
     * <pre>
     * Description of a GPU hardware queue or render stage.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedGpuRenderStageSpecification gpu_specifications = 24;</code>
     */
    @java.lang.Override
    public java.util.List<? extends perfetto.protos.GpuRenderStageEventOuterClass.InternedGpuRenderStageSpecificationOrBuilder> 
        getGpuSpecificationsOrBuilderList() {
      return gpuSpecifications_;
    }
    /**
     * <pre>
     * Description of a GPU hardware queue or render stage.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedGpuRenderStageSpecification gpu_specifications = 24;</code>
     */
    @java.lang.Override
    public int getGpuSpecificationsCount() {
      return gpuSpecifications_.size();
    }
    /**
     * <pre>
     * Description of a GPU hardware queue or render stage.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedGpuRenderStageSpecification gpu_specifications = 24;</code>
     */
    @java.lang.Override
    public perfetto.protos.GpuRenderStageEventOuterClass.InternedGpuRenderStageSpecification getGpuSpecifications(int index) {
      return gpuSpecifications_.get(index);
    }
    /**
     * <pre>
     * Description of a GPU hardware queue or render stage.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedGpuRenderStageSpecification gpu_specifications = 24;</code>
     */
    @java.lang.Override
    public perfetto.protos.GpuRenderStageEventOuterClass.InternedGpuRenderStageSpecificationOrBuilder getGpuSpecificationsOrBuilder(
        int index) {
      return gpuSpecifications_.get(index);
    }

    public static final int KERNEL_SYMBOLS_FIELD_NUMBER = 26;
    @SuppressWarnings("serial")
    private java.util.List<perfetto.protos.ProfileCommon.InternedString> kernelSymbols_;
    /**
     * <pre>
     * This is set when FtraceConfig.symbolize_ksyms = true.
     * The id of each symbol the number that will be reported in ftrace events
     * like sched_block_reason.caller and is obtained from a monotonic counter.
     * The same symbol can have different indexes in different bundles.
     * This is is NOT the real address. This is to avoid disclosing KASLR through
     * traces.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString kernel_symbols = 26;</code>
     */
    @java.lang.Override
    public java.util.List<perfetto.protos.ProfileCommon.InternedString> getKernelSymbolsList() {
      return kernelSymbols_;
    }
    /**
     * <pre>
     * This is set when FtraceConfig.symbolize_ksyms = true.
     * The id of each symbol the number that will be reported in ftrace events
     * like sched_block_reason.caller and is obtained from a monotonic counter.
     * The same symbol can have different indexes in different bundles.
     * This is is NOT the real address. This is to avoid disclosing KASLR through
     * traces.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString kernel_symbols = 26;</code>
     */
    @java.lang.Override
    public java.util.List<? extends perfetto.protos.ProfileCommon.InternedStringOrBuilder> 
        getKernelSymbolsOrBuilderList() {
      return kernelSymbols_;
    }
    /**
     * <pre>
     * This is set when FtraceConfig.symbolize_ksyms = true.
     * The id of each symbol the number that will be reported in ftrace events
     * like sched_block_reason.caller and is obtained from a monotonic counter.
     * The same symbol can have different indexes in different bundles.
     * This is is NOT the real address. This is to avoid disclosing KASLR through
     * traces.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString kernel_symbols = 26;</code>
     */
    @java.lang.Override
    public int getKernelSymbolsCount() {
      return kernelSymbols_.size();
    }
    /**
     * <pre>
     * This is set when FtraceConfig.symbolize_ksyms = true.
     * The id of each symbol the number that will be reported in ftrace events
     * like sched_block_reason.caller and is obtained from a monotonic counter.
     * The same symbol can have different indexes in different bundles.
     * This is is NOT the real address. This is to avoid disclosing KASLR through
     * traces.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString kernel_symbols = 26;</code>
     */
    @java.lang.Override
    public perfetto.protos.ProfileCommon.InternedString getKernelSymbols(int index) {
      return kernelSymbols_.get(index);
    }
    /**
     * <pre>
     * This is set when FtraceConfig.symbolize_ksyms = true.
     * The id of each symbol the number that will be reported in ftrace events
     * like sched_block_reason.caller and is obtained from a monotonic counter.
     * The same symbol can have different indexes in different bundles.
     * This is is NOT the real address. This is to avoid disclosing KASLR through
     * traces.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString kernel_symbols = 26;</code>
     */
    @java.lang.Override
    public perfetto.protos.ProfileCommon.InternedStringOrBuilder getKernelSymbolsOrBuilder(
        int index) {
      return kernelSymbols_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < eventCategories_.size(); i++) {
        output.writeMessage(1, eventCategories_.get(i));
      }
      for (int i = 0; i < eventNames_.size(); i++) {
        output.writeMessage(2, eventNames_.get(i));
      }
      for (int i = 0; i < debugAnnotationNames_.size(); i++) {
        output.writeMessage(3, debugAnnotationNames_.get(i));
      }
      for (int i = 0; i < sourceLocations_.size(); i++) {
        output.writeMessage(4, sourceLocations_.get(i));
      }
      for (int i = 0; i < functionNames_.size(); i++) {
        output.writeMessage(5, functionNames_.get(i));
      }
      for (int i = 0; i < frames_.size(); i++) {
        output.writeMessage(6, frames_.get(i));
      }
      for (int i = 0; i < callstacks_.size(); i++) {
        output.writeMessage(7, callstacks_.get(i));
      }
      for (int i = 0; i < buildIds_.size(); i++) {
        output.writeMessage(16, buildIds_.get(i));
      }
      for (int i = 0; i < mappingPaths_.size(); i++) {
        output.writeMessage(17, mappingPaths_.get(i));
      }
      for (int i = 0; i < sourcePaths_.size(); i++) {
        output.writeMessage(18, sourcePaths_.get(i));
      }
      for (int i = 0; i < mappings_.size(); i++) {
        output.writeMessage(19, mappings_.get(i));
      }
      for (int i = 0; i < logMessageBody_.size(); i++) {
        output.writeMessage(20, logMessageBody_.get(i));
      }
      for (int i = 0; i < profiledFrameSymbols_.size(); i++) {
        output.writeMessage(21, profiledFrameSymbols_.get(i));
      }
      for (int i = 0; i < vulkanMemoryKeys_.size(); i++) {
        output.writeMessage(22, vulkanMemoryKeys_.get(i));
      }
      for (int i = 0; i < graphicsContexts_.size(); i++) {
        output.writeMessage(23, graphicsContexts_.get(i));
      }
      for (int i = 0; i < gpuSpecifications_.size(); i++) {
        output.writeMessage(24, gpuSpecifications_.get(i));
      }
      for (int i = 0; i < histogramNames_.size(); i++) {
        output.writeMessage(25, histogramNames_.get(i));
      }
      for (int i = 0; i < kernelSymbols_.size(); i++) {
        output.writeMessage(26, kernelSymbols_.get(i));
      }
      for (int i = 0; i < debugAnnotationValueTypeNames_.size(); i++) {
        output.writeMessage(27, debugAnnotationValueTypeNames_.get(i));
      }
      for (int i = 0; i < unsymbolizedSourceLocations_.size(); i++) {
        output.writeMessage(28, unsymbolizedSourceLocations_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < eventCategories_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, eventCategories_.get(i));
      }
      for (int i = 0; i < eventNames_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, eventNames_.get(i));
      }
      for (int i = 0; i < debugAnnotationNames_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, debugAnnotationNames_.get(i));
      }
      for (int i = 0; i < sourceLocations_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, sourceLocations_.get(i));
      }
      for (int i = 0; i < functionNames_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, functionNames_.get(i));
      }
      for (int i = 0; i < frames_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, frames_.get(i));
      }
      for (int i = 0; i < callstacks_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, callstacks_.get(i));
      }
      for (int i = 0; i < buildIds_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, buildIds_.get(i));
      }
      for (int i = 0; i < mappingPaths_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, mappingPaths_.get(i));
      }
      for (int i = 0; i < sourcePaths_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(18, sourcePaths_.get(i));
      }
      for (int i = 0; i < mappings_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(19, mappings_.get(i));
      }
      for (int i = 0; i < logMessageBody_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(20, logMessageBody_.get(i));
      }
      for (int i = 0; i < profiledFrameSymbols_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(21, profiledFrameSymbols_.get(i));
      }
      for (int i = 0; i < vulkanMemoryKeys_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(22, vulkanMemoryKeys_.get(i));
      }
      for (int i = 0; i < graphicsContexts_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(23, graphicsContexts_.get(i));
      }
      for (int i = 0; i < gpuSpecifications_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(24, gpuSpecifications_.get(i));
      }
      for (int i = 0; i < histogramNames_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(25, histogramNames_.get(i));
      }
      for (int i = 0; i < kernelSymbols_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(26, kernelSymbols_.get(i));
      }
      for (int i = 0; i < debugAnnotationValueTypeNames_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(27, debugAnnotationValueTypeNames_.get(i));
      }
      for (int i = 0; i < unsymbolizedSourceLocations_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(28, unsymbolizedSourceLocations_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof perfetto.protos.InternedDataOuterClass.InternedData)) {
        return super.equals(obj);
      }
      perfetto.protos.InternedDataOuterClass.InternedData other = (perfetto.protos.InternedDataOuterClass.InternedData) obj;

      if (!getEventCategoriesList()
          .equals(other.getEventCategoriesList())) return false;
      if (!getEventNamesList()
          .equals(other.getEventNamesList())) return false;
      if (!getDebugAnnotationNamesList()
          .equals(other.getDebugAnnotationNamesList())) return false;
      if (!getDebugAnnotationValueTypeNamesList()
          .equals(other.getDebugAnnotationValueTypeNamesList())) return false;
      if (!getSourceLocationsList()
          .equals(other.getSourceLocationsList())) return false;
      if (!getUnsymbolizedSourceLocationsList()
          .equals(other.getUnsymbolizedSourceLocationsList())) return false;
      if (!getLogMessageBodyList()
          .equals(other.getLogMessageBodyList())) return false;
      if (!getHistogramNamesList()
          .equals(other.getHistogramNamesList())) return false;
      if (!getBuildIdsList()
          .equals(other.getBuildIdsList())) return false;
      if (!getMappingPathsList()
          .equals(other.getMappingPathsList())) return false;
      if (!getSourcePathsList()
          .equals(other.getSourcePathsList())) return false;
      if (!getFunctionNamesList()
          .equals(other.getFunctionNamesList())) return false;
      if (!getProfiledFrameSymbolsList()
          .equals(other.getProfiledFrameSymbolsList())) return false;
      if (!getMappingsList()
          .equals(other.getMappingsList())) return false;
      if (!getFramesList()
          .equals(other.getFramesList())) return false;
      if (!getCallstacksList()
          .equals(other.getCallstacksList())) return false;
      if (!getVulkanMemoryKeysList()
          .equals(other.getVulkanMemoryKeysList())) return false;
      if (!getGraphicsContextsList()
          .equals(other.getGraphicsContextsList())) return false;
      if (!getGpuSpecificationsList()
          .equals(other.getGpuSpecificationsList())) return false;
      if (!getKernelSymbolsList()
          .equals(other.getKernelSymbolsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getEventCategoriesCount() > 0) {
        hash = (37 * hash) + EVENT_CATEGORIES_FIELD_NUMBER;
        hash = (53 * hash) + getEventCategoriesList().hashCode();
      }
      if (getEventNamesCount() > 0) {
        hash = (37 * hash) + EVENT_NAMES_FIELD_NUMBER;
        hash = (53 * hash) + getEventNamesList().hashCode();
      }
      if (getDebugAnnotationNamesCount() > 0) {
        hash = (37 * hash) + DEBUG_ANNOTATION_NAMES_FIELD_NUMBER;
        hash = (53 * hash) + getDebugAnnotationNamesList().hashCode();
      }
      if (getDebugAnnotationValueTypeNamesCount() > 0) {
        hash = (37 * hash) + DEBUG_ANNOTATION_VALUE_TYPE_NAMES_FIELD_NUMBER;
        hash = (53 * hash) + getDebugAnnotationValueTypeNamesList().hashCode();
      }
      if (getSourceLocationsCount() > 0) {
        hash = (37 * hash) + SOURCE_LOCATIONS_FIELD_NUMBER;
        hash = (53 * hash) + getSourceLocationsList().hashCode();
      }
      if (getUnsymbolizedSourceLocationsCount() > 0) {
        hash = (37 * hash) + UNSYMBOLIZED_SOURCE_LOCATIONS_FIELD_NUMBER;
        hash = (53 * hash) + getUnsymbolizedSourceLocationsList().hashCode();
      }
      if (getLogMessageBodyCount() > 0) {
        hash = (37 * hash) + LOG_MESSAGE_BODY_FIELD_NUMBER;
        hash = (53 * hash) + getLogMessageBodyList().hashCode();
      }
      if (getHistogramNamesCount() > 0) {
        hash = (37 * hash) + HISTOGRAM_NAMES_FIELD_NUMBER;
        hash = (53 * hash) + getHistogramNamesList().hashCode();
      }
      if (getBuildIdsCount() > 0) {
        hash = (37 * hash) + BUILD_IDS_FIELD_NUMBER;
        hash = (53 * hash) + getBuildIdsList().hashCode();
      }
      if (getMappingPathsCount() > 0) {
        hash = (37 * hash) + MAPPING_PATHS_FIELD_NUMBER;
        hash = (53 * hash) + getMappingPathsList().hashCode();
      }
      if (getSourcePathsCount() > 0) {
        hash = (37 * hash) + SOURCE_PATHS_FIELD_NUMBER;
        hash = (53 * hash) + getSourcePathsList().hashCode();
      }
      if (getFunctionNamesCount() > 0) {
        hash = (37 * hash) + FUNCTION_NAMES_FIELD_NUMBER;
        hash = (53 * hash) + getFunctionNamesList().hashCode();
      }
      if (getProfiledFrameSymbolsCount() > 0) {
        hash = (37 * hash) + PROFILED_FRAME_SYMBOLS_FIELD_NUMBER;
        hash = (53 * hash) + getProfiledFrameSymbolsList().hashCode();
      }
      if (getMappingsCount() > 0) {
        hash = (37 * hash) + MAPPINGS_FIELD_NUMBER;
        hash = (53 * hash) + getMappingsList().hashCode();
      }
      if (getFramesCount() > 0) {
        hash = (37 * hash) + FRAMES_FIELD_NUMBER;
        hash = (53 * hash) + getFramesList().hashCode();
      }
      if (getCallstacksCount() > 0) {
        hash = (37 * hash) + CALLSTACKS_FIELD_NUMBER;
        hash = (53 * hash) + getCallstacksList().hashCode();
      }
      if (getVulkanMemoryKeysCount() > 0) {
        hash = (37 * hash) + VULKAN_MEMORY_KEYS_FIELD_NUMBER;
        hash = (53 * hash) + getVulkanMemoryKeysList().hashCode();
      }
      if (getGraphicsContextsCount() > 0) {
        hash = (37 * hash) + GRAPHICS_CONTEXTS_FIELD_NUMBER;
        hash = (53 * hash) + getGraphicsContextsList().hashCode();
      }
      if (getGpuSpecificationsCount() > 0) {
        hash = (37 * hash) + GPU_SPECIFICATIONS_FIELD_NUMBER;
        hash = (53 * hash) + getGpuSpecificationsList().hashCode();
      }
      if (getKernelSymbolsCount() > 0) {
        hash = (37 * hash) + KERNEL_SYMBOLS_FIELD_NUMBER;
        hash = (53 * hash) + getKernelSymbolsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static perfetto.protos.InternedDataOuterClass.InternedData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.InternedDataOuterClass.InternedData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.InternedDataOuterClass.InternedData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.InternedDataOuterClass.InternedData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.InternedDataOuterClass.InternedData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.InternedDataOuterClass.InternedData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.InternedDataOuterClass.InternedData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.InternedDataOuterClass.InternedData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.InternedDataOuterClass.InternedData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static perfetto.protos.InternedDataOuterClass.InternedData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.InternedDataOuterClass.InternedData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.InternedDataOuterClass.InternedData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(perfetto.protos.InternedDataOuterClass.InternedData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Message that contains new entries for the interning indices of a packet
     * sequence.
     * The writer will usually emit new entries in the same TracePacket that first
     * refers to them (since the last reset of interning state). They may also be
     * emitted proactively in advance of referring to them in later packets.
     * Next reserved id: 8 (up to 15).
     * Next id: 29.
     * </pre>
     *
     * Protobuf type {@code perfetto.protos.InternedData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:perfetto.protos.InternedData)
        perfetto.protos.InternedDataOuterClass.InternedDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.InternedDataOuterClass.internal_static_perfetto_protos_InternedData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.InternedDataOuterClass.internal_static_perfetto_protos_InternedData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.InternedDataOuterClass.InternedData.class, perfetto.protos.InternedDataOuterClass.InternedData.Builder.class);
      }

      // Construct using perfetto.protos.InternedDataOuterClass.InternedData.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (eventCategoriesBuilder_ == null) {
          eventCategories_ = java.util.Collections.emptyList();
        } else {
          eventCategories_ = null;
          eventCategoriesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (eventNamesBuilder_ == null) {
          eventNames_ = java.util.Collections.emptyList();
        } else {
          eventNames_ = null;
          eventNamesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (debugAnnotationNamesBuilder_ == null) {
          debugAnnotationNames_ = java.util.Collections.emptyList();
        } else {
          debugAnnotationNames_ = null;
          debugAnnotationNamesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (debugAnnotationValueTypeNamesBuilder_ == null) {
          debugAnnotationValueTypeNames_ = java.util.Collections.emptyList();
        } else {
          debugAnnotationValueTypeNames_ = null;
          debugAnnotationValueTypeNamesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (sourceLocationsBuilder_ == null) {
          sourceLocations_ = java.util.Collections.emptyList();
        } else {
          sourceLocations_ = null;
          sourceLocationsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (unsymbolizedSourceLocationsBuilder_ == null) {
          unsymbolizedSourceLocations_ = java.util.Collections.emptyList();
        } else {
          unsymbolizedSourceLocations_ = null;
          unsymbolizedSourceLocationsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        if (logMessageBodyBuilder_ == null) {
          logMessageBody_ = java.util.Collections.emptyList();
        } else {
          logMessageBody_ = null;
          logMessageBodyBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        if (histogramNamesBuilder_ == null) {
          histogramNames_ = java.util.Collections.emptyList();
        } else {
          histogramNames_ = null;
          histogramNamesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        if (buildIdsBuilder_ == null) {
          buildIds_ = java.util.Collections.emptyList();
        } else {
          buildIds_ = null;
          buildIdsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        if (mappingPathsBuilder_ == null) {
          mappingPaths_ = java.util.Collections.emptyList();
        } else {
          mappingPaths_ = null;
          mappingPathsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        if (sourcePathsBuilder_ == null) {
          sourcePaths_ = java.util.Collections.emptyList();
        } else {
          sourcePaths_ = null;
          sourcePathsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        if (functionNamesBuilder_ == null) {
          functionNames_ = java.util.Collections.emptyList();
        } else {
          functionNames_ = null;
          functionNamesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        if (profiledFrameSymbolsBuilder_ == null) {
          profiledFrameSymbols_ = java.util.Collections.emptyList();
        } else {
          profiledFrameSymbols_ = null;
          profiledFrameSymbolsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00001000);
        if (mappingsBuilder_ == null) {
          mappings_ = java.util.Collections.emptyList();
        } else {
          mappings_ = null;
          mappingsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        if (framesBuilder_ == null) {
          frames_ = java.util.Collections.emptyList();
        } else {
          frames_ = null;
          framesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00004000);
        if (callstacksBuilder_ == null) {
          callstacks_ = java.util.Collections.emptyList();
        } else {
          callstacks_ = null;
          callstacksBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00008000);
        if (vulkanMemoryKeysBuilder_ == null) {
          vulkanMemoryKeys_ = java.util.Collections.emptyList();
        } else {
          vulkanMemoryKeys_ = null;
          vulkanMemoryKeysBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00010000);
        if (graphicsContextsBuilder_ == null) {
          graphicsContexts_ = java.util.Collections.emptyList();
        } else {
          graphicsContexts_ = null;
          graphicsContextsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00020000);
        if (gpuSpecificationsBuilder_ == null) {
          gpuSpecifications_ = java.util.Collections.emptyList();
        } else {
          gpuSpecifications_ = null;
          gpuSpecificationsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00040000);
        if (kernelSymbolsBuilder_ == null) {
          kernelSymbols_ = java.util.Collections.emptyList();
        } else {
          kernelSymbols_ = null;
          kernelSymbolsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00080000);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return perfetto.protos.InternedDataOuterClass.internal_static_perfetto_protos_InternedData_descriptor;
      }

      @java.lang.Override
      public perfetto.protos.InternedDataOuterClass.InternedData getDefaultInstanceForType() {
        return perfetto.protos.InternedDataOuterClass.InternedData.getDefaultInstance();
      }

      @java.lang.Override
      public perfetto.protos.InternedDataOuterClass.InternedData build() {
        perfetto.protos.InternedDataOuterClass.InternedData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public perfetto.protos.InternedDataOuterClass.InternedData buildPartial() {
        perfetto.protos.InternedDataOuterClass.InternedData result = new perfetto.protos.InternedDataOuterClass.InternedData(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(perfetto.protos.InternedDataOuterClass.InternedData result) {
        if (eventCategoriesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            eventCategories_ = java.util.Collections.unmodifiableList(eventCategories_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.eventCategories_ = eventCategories_;
        } else {
          result.eventCategories_ = eventCategoriesBuilder_.build();
        }
        if (eventNamesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            eventNames_ = java.util.Collections.unmodifiableList(eventNames_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.eventNames_ = eventNames_;
        } else {
          result.eventNames_ = eventNamesBuilder_.build();
        }
        if (debugAnnotationNamesBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            debugAnnotationNames_ = java.util.Collections.unmodifiableList(debugAnnotationNames_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.debugAnnotationNames_ = debugAnnotationNames_;
        } else {
          result.debugAnnotationNames_ = debugAnnotationNamesBuilder_.build();
        }
        if (debugAnnotationValueTypeNamesBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0)) {
            debugAnnotationValueTypeNames_ = java.util.Collections.unmodifiableList(debugAnnotationValueTypeNames_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.debugAnnotationValueTypeNames_ = debugAnnotationValueTypeNames_;
        } else {
          result.debugAnnotationValueTypeNames_ = debugAnnotationValueTypeNamesBuilder_.build();
        }
        if (sourceLocationsBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0)) {
            sourceLocations_ = java.util.Collections.unmodifiableList(sourceLocations_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.sourceLocations_ = sourceLocations_;
        } else {
          result.sourceLocations_ = sourceLocationsBuilder_.build();
        }
        if (unsymbolizedSourceLocationsBuilder_ == null) {
          if (((bitField0_ & 0x00000020) != 0)) {
            unsymbolizedSourceLocations_ = java.util.Collections.unmodifiableList(unsymbolizedSourceLocations_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.unsymbolizedSourceLocations_ = unsymbolizedSourceLocations_;
        } else {
          result.unsymbolizedSourceLocations_ = unsymbolizedSourceLocationsBuilder_.build();
        }
        if (logMessageBodyBuilder_ == null) {
          if (((bitField0_ & 0x00000040) != 0)) {
            logMessageBody_ = java.util.Collections.unmodifiableList(logMessageBody_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.logMessageBody_ = logMessageBody_;
        } else {
          result.logMessageBody_ = logMessageBodyBuilder_.build();
        }
        if (histogramNamesBuilder_ == null) {
          if (((bitField0_ & 0x00000080) != 0)) {
            histogramNames_ = java.util.Collections.unmodifiableList(histogramNames_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.histogramNames_ = histogramNames_;
        } else {
          result.histogramNames_ = histogramNamesBuilder_.build();
        }
        if (buildIdsBuilder_ == null) {
          if (((bitField0_ & 0x00000100) != 0)) {
            buildIds_ = java.util.Collections.unmodifiableList(buildIds_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.buildIds_ = buildIds_;
        } else {
          result.buildIds_ = buildIdsBuilder_.build();
        }
        if (mappingPathsBuilder_ == null) {
          if (((bitField0_ & 0x00000200) != 0)) {
            mappingPaths_ = java.util.Collections.unmodifiableList(mappingPaths_);
            bitField0_ = (bitField0_ & ~0x00000200);
          }
          result.mappingPaths_ = mappingPaths_;
        } else {
          result.mappingPaths_ = mappingPathsBuilder_.build();
        }
        if (sourcePathsBuilder_ == null) {
          if (((bitField0_ & 0x00000400) != 0)) {
            sourcePaths_ = java.util.Collections.unmodifiableList(sourcePaths_);
            bitField0_ = (bitField0_ & ~0x00000400);
          }
          result.sourcePaths_ = sourcePaths_;
        } else {
          result.sourcePaths_ = sourcePathsBuilder_.build();
        }
        if (functionNamesBuilder_ == null) {
          if (((bitField0_ & 0x00000800) != 0)) {
            functionNames_ = java.util.Collections.unmodifiableList(functionNames_);
            bitField0_ = (bitField0_ & ~0x00000800);
          }
          result.functionNames_ = functionNames_;
        } else {
          result.functionNames_ = functionNamesBuilder_.build();
        }
        if (profiledFrameSymbolsBuilder_ == null) {
          if (((bitField0_ & 0x00001000) != 0)) {
            profiledFrameSymbols_ = java.util.Collections.unmodifiableList(profiledFrameSymbols_);
            bitField0_ = (bitField0_ & ~0x00001000);
          }
          result.profiledFrameSymbols_ = profiledFrameSymbols_;
        } else {
          result.profiledFrameSymbols_ = profiledFrameSymbolsBuilder_.build();
        }
        if (mappingsBuilder_ == null) {
          if (((bitField0_ & 0x00002000) != 0)) {
            mappings_ = java.util.Collections.unmodifiableList(mappings_);
            bitField0_ = (bitField0_ & ~0x00002000);
          }
          result.mappings_ = mappings_;
        } else {
          result.mappings_ = mappingsBuilder_.build();
        }
        if (framesBuilder_ == null) {
          if (((bitField0_ & 0x00004000) != 0)) {
            frames_ = java.util.Collections.unmodifiableList(frames_);
            bitField0_ = (bitField0_ & ~0x00004000);
          }
          result.frames_ = frames_;
        } else {
          result.frames_ = framesBuilder_.build();
        }
        if (callstacksBuilder_ == null) {
          if (((bitField0_ & 0x00008000) != 0)) {
            callstacks_ = java.util.Collections.unmodifiableList(callstacks_);
            bitField0_ = (bitField0_ & ~0x00008000);
          }
          result.callstacks_ = callstacks_;
        } else {
          result.callstacks_ = callstacksBuilder_.build();
        }
        if (vulkanMemoryKeysBuilder_ == null) {
          if (((bitField0_ & 0x00010000) != 0)) {
            vulkanMemoryKeys_ = java.util.Collections.unmodifiableList(vulkanMemoryKeys_);
            bitField0_ = (bitField0_ & ~0x00010000);
          }
          result.vulkanMemoryKeys_ = vulkanMemoryKeys_;
        } else {
          result.vulkanMemoryKeys_ = vulkanMemoryKeysBuilder_.build();
        }
        if (graphicsContextsBuilder_ == null) {
          if (((bitField0_ & 0x00020000) != 0)) {
            graphicsContexts_ = java.util.Collections.unmodifiableList(graphicsContexts_);
            bitField0_ = (bitField0_ & ~0x00020000);
          }
          result.graphicsContexts_ = graphicsContexts_;
        } else {
          result.graphicsContexts_ = graphicsContextsBuilder_.build();
        }
        if (gpuSpecificationsBuilder_ == null) {
          if (((bitField0_ & 0x00040000) != 0)) {
            gpuSpecifications_ = java.util.Collections.unmodifiableList(gpuSpecifications_);
            bitField0_ = (bitField0_ & ~0x00040000);
          }
          result.gpuSpecifications_ = gpuSpecifications_;
        } else {
          result.gpuSpecifications_ = gpuSpecificationsBuilder_.build();
        }
        if (kernelSymbolsBuilder_ == null) {
          if (((bitField0_ & 0x00080000) != 0)) {
            kernelSymbols_ = java.util.Collections.unmodifiableList(kernelSymbols_);
            bitField0_ = (bitField0_ & ~0x00080000);
          }
          result.kernelSymbols_ = kernelSymbols_;
        } else {
          result.kernelSymbols_ = kernelSymbolsBuilder_.build();
        }
      }

      private void buildPartial0(perfetto.protos.InternedDataOuterClass.InternedData result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof perfetto.protos.InternedDataOuterClass.InternedData) {
          return mergeFrom((perfetto.protos.InternedDataOuterClass.InternedData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(perfetto.protos.InternedDataOuterClass.InternedData other) {
        if (other == perfetto.protos.InternedDataOuterClass.InternedData.getDefaultInstance()) return this;
        if (eventCategoriesBuilder_ == null) {
          if (!other.eventCategories_.isEmpty()) {
            if (eventCategories_.isEmpty()) {
              eventCategories_ = other.eventCategories_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureEventCategoriesIsMutable();
              eventCategories_.addAll(other.eventCategories_);
            }
            onChanged();
          }
        } else {
          if (!other.eventCategories_.isEmpty()) {
            if (eventCategoriesBuilder_.isEmpty()) {
              eventCategoriesBuilder_.dispose();
              eventCategoriesBuilder_ = null;
              eventCategories_ = other.eventCategories_;
              bitField0_ = (bitField0_ & ~0x00000001);
              eventCategoriesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getEventCategoriesFieldBuilder() : null;
            } else {
              eventCategoriesBuilder_.addAllMessages(other.eventCategories_);
            }
          }
        }
        if (eventNamesBuilder_ == null) {
          if (!other.eventNames_.isEmpty()) {
            if (eventNames_.isEmpty()) {
              eventNames_ = other.eventNames_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureEventNamesIsMutable();
              eventNames_.addAll(other.eventNames_);
            }
            onChanged();
          }
        } else {
          if (!other.eventNames_.isEmpty()) {
            if (eventNamesBuilder_.isEmpty()) {
              eventNamesBuilder_.dispose();
              eventNamesBuilder_ = null;
              eventNames_ = other.eventNames_;
              bitField0_ = (bitField0_ & ~0x00000002);
              eventNamesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getEventNamesFieldBuilder() : null;
            } else {
              eventNamesBuilder_.addAllMessages(other.eventNames_);
            }
          }
        }
        if (debugAnnotationNamesBuilder_ == null) {
          if (!other.debugAnnotationNames_.isEmpty()) {
            if (debugAnnotationNames_.isEmpty()) {
              debugAnnotationNames_ = other.debugAnnotationNames_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureDebugAnnotationNamesIsMutable();
              debugAnnotationNames_.addAll(other.debugAnnotationNames_);
            }
            onChanged();
          }
        } else {
          if (!other.debugAnnotationNames_.isEmpty()) {
            if (debugAnnotationNamesBuilder_.isEmpty()) {
              debugAnnotationNamesBuilder_.dispose();
              debugAnnotationNamesBuilder_ = null;
              debugAnnotationNames_ = other.debugAnnotationNames_;
              bitField0_ = (bitField0_ & ~0x00000004);
              debugAnnotationNamesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDebugAnnotationNamesFieldBuilder() : null;
            } else {
              debugAnnotationNamesBuilder_.addAllMessages(other.debugAnnotationNames_);
            }
          }
        }
        if (debugAnnotationValueTypeNamesBuilder_ == null) {
          if (!other.debugAnnotationValueTypeNames_.isEmpty()) {
            if (debugAnnotationValueTypeNames_.isEmpty()) {
              debugAnnotationValueTypeNames_ = other.debugAnnotationValueTypeNames_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureDebugAnnotationValueTypeNamesIsMutable();
              debugAnnotationValueTypeNames_.addAll(other.debugAnnotationValueTypeNames_);
            }
            onChanged();
          }
        } else {
          if (!other.debugAnnotationValueTypeNames_.isEmpty()) {
            if (debugAnnotationValueTypeNamesBuilder_.isEmpty()) {
              debugAnnotationValueTypeNamesBuilder_.dispose();
              debugAnnotationValueTypeNamesBuilder_ = null;
              debugAnnotationValueTypeNames_ = other.debugAnnotationValueTypeNames_;
              bitField0_ = (bitField0_ & ~0x00000008);
              debugAnnotationValueTypeNamesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDebugAnnotationValueTypeNamesFieldBuilder() : null;
            } else {
              debugAnnotationValueTypeNamesBuilder_.addAllMessages(other.debugAnnotationValueTypeNames_);
            }
          }
        }
        if (sourceLocationsBuilder_ == null) {
          if (!other.sourceLocations_.isEmpty()) {
            if (sourceLocations_.isEmpty()) {
              sourceLocations_ = other.sourceLocations_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureSourceLocationsIsMutable();
              sourceLocations_.addAll(other.sourceLocations_);
            }
            onChanged();
          }
        } else {
          if (!other.sourceLocations_.isEmpty()) {
            if (sourceLocationsBuilder_.isEmpty()) {
              sourceLocationsBuilder_.dispose();
              sourceLocationsBuilder_ = null;
              sourceLocations_ = other.sourceLocations_;
              bitField0_ = (bitField0_ & ~0x00000010);
              sourceLocationsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSourceLocationsFieldBuilder() : null;
            } else {
              sourceLocationsBuilder_.addAllMessages(other.sourceLocations_);
            }
          }
        }
        if (unsymbolizedSourceLocationsBuilder_ == null) {
          if (!other.unsymbolizedSourceLocations_.isEmpty()) {
            if (unsymbolizedSourceLocations_.isEmpty()) {
              unsymbolizedSourceLocations_ = other.unsymbolizedSourceLocations_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureUnsymbolizedSourceLocationsIsMutable();
              unsymbolizedSourceLocations_.addAll(other.unsymbolizedSourceLocations_);
            }
            onChanged();
          }
        } else {
          if (!other.unsymbolizedSourceLocations_.isEmpty()) {
            if (unsymbolizedSourceLocationsBuilder_.isEmpty()) {
              unsymbolizedSourceLocationsBuilder_.dispose();
              unsymbolizedSourceLocationsBuilder_ = null;
              unsymbolizedSourceLocations_ = other.unsymbolizedSourceLocations_;
              bitField0_ = (bitField0_ & ~0x00000020);
              unsymbolizedSourceLocationsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getUnsymbolizedSourceLocationsFieldBuilder() : null;
            } else {
              unsymbolizedSourceLocationsBuilder_.addAllMessages(other.unsymbolizedSourceLocations_);
            }
          }
        }
        if (logMessageBodyBuilder_ == null) {
          if (!other.logMessageBody_.isEmpty()) {
            if (logMessageBody_.isEmpty()) {
              logMessageBody_ = other.logMessageBody_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureLogMessageBodyIsMutable();
              logMessageBody_.addAll(other.logMessageBody_);
            }
            onChanged();
          }
        } else {
          if (!other.logMessageBody_.isEmpty()) {
            if (logMessageBodyBuilder_.isEmpty()) {
              logMessageBodyBuilder_.dispose();
              logMessageBodyBuilder_ = null;
              logMessageBody_ = other.logMessageBody_;
              bitField0_ = (bitField0_ & ~0x00000040);
              logMessageBodyBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getLogMessageBodyFieldBuilder() : null;
            } else {
              logMessageBodyBuilder_.addAllMessages(other.logMessageBody_);
            }
          }
        }
        if (histogramNamesBuilder_ == null) {
          if (!other.histogramNames_.isEmpty()) {
            if (histogramNames_.isEmpty()) {
              histogramNames_ = other.histogramNames_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensureHistogramNamesIsMutable();
              histogramNames_.addAll(other.histogramNames_);
            }
            onChanged();
          }
        } else {
          if (!other.histogramNames_.isEmpty()) {
            if (histogramNamesBuilder_.isEmpty()) {
              histogramNamesBuilder_.dispose();
              histogramNamesBuilder_ = null;
              histogramNames_ = other.histogramNames_;
              bitField0_ = (bitField0_ & ~0x00000080);
              histogramNamesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getHistogramNamesFieldBuilder() : null;
            } else {
              histogramNamesBuilder_.addAllMessages(other.histogramNames_);
            }
          }
        }
        if (buildIdsBuilder_ == null) {
          if (!other.buildIds_.isEmpty()) {
            if (buildIds_.isEmpty()) {
              buildIds_ = other.buildIds_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureBuildIdsIsMutable();
              buildIds_.addAll(other.buildIds_);
            }
            onChanged();
          }
        } else {
          if (!other.buildIds_.isEmpty()) {
            if (buildIdsBuilder_.isEmpty()) {
              buildIdsBuilder_.dispose();
              buildIdsBuilder_ = null;
              buildIds_ = other.buildIds_;
              bitField0_ = (bitField0_ & ~0x00000100);
              buildIdsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getBuildIdsFieldBuilder() : null;
            } else {
              buildIdsBuilder_.addAllMessages(other.buildIds_);
            }
          }
        }
        if (mappingPathsBuilder_ == null) {
          if (!other.mappingPaths_.isEmpty()) {
            if (mappingPaths_.isEmpty()) {
              mappingPaths_ = other.mappingPaths_;
              bitField0_ = (bitField0_ & ~0x00000200);
            } else {
              ensureMappingPathsIsMutable();
              mappingPaths_.addAll(other.mappingPaths_);
            }
            onChanged();
          }
        } else {
          if (!other.mappingPaths_.isEmpty()) {
            if (mappingPathsBuilder_.isEmpty()) {
              mappingPathsBuilder_.dispose();
              mappingPathsBuilder_ = null;
              mappingPaths_ = other.mappingPaths_;
              bitField0_ = (bitField0_ & ~0x00000200);
              mappingPathsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMappingPathsFieldBuilder() : null;
            } else {
              mappingPathsBuilder_.addAllMessages(other.mappingPaths_);
            }
          }
        }
        if (sourcePathsBuilder_ == null) {
          if (!other.sourcePaths_.isEmpty()) {
            if (sourcePaths_.isEmpty()) {
              sourcePaths_ = other.sourcePaths_;
              bitField0_ = (bitField0_ & ~0x00000400);
            } else {
              ensureSourcePathsIsMutable();
              sourcePaths_.addAll(other.sourcePaths_);
            }
            onChanged();
          }
        } else {
          if (!other.sourcePaths_.isEmpty()) {
            if (sourcePathsBuilder_.isEmpty()) {
              sourcePathsBuilder_.dispose();
              sourcePathsBuilder_ = null;
              sourcePaths_ = other.sourcePaths_;
              bitField0_ = (bitField0_ & ~0x00000400);
              sourcePathsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSourcePathsFieldBuilder() : null;
            } else {
              sourcePathsBuilder_.addAllMessages(other.sourcePaths_);
            }
          }
        }
        if (functionNamesBuilder_ == null) {
          if (!other.functionNames_.isEmpty()) {
            if (functionNames_.isEmpty()) {
              functionNames_ = other.functionNames_;
              bitField0_ = (bitField0_ & ~0x00000800);
            } else {
              ensureFunctionNamesIsMutable();
              functionNames_.addAll(other.functionNames_);
            }
            onChanged();
          }
        } else {
          if (!other.functionNames_.isEmpty()) {
            if (functionNamesBuilder_.isEmpty()) {
              functionNamesBuilder_.dispose();
              functionNamesBuilder_ = null;
              functionNames_ = other.functionNames_;
              bitField0_ = (bitField0_ & ~0x00000800);
              functionNamesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFunctionNamesFieldBuilder() : null;
            } else {
              functionNamesBuilder_.addAllMessages(other.functionNames_);
            }
          }
        }
        if (profiledFrameSymbolsBuilder_ == null) {
          if (!other.profiledFrameSymbols_.isEmpty()) {
            if (profiledFrameSymbols_.isEmpty()) {
              profiledFrameSymbols_ = other.profiledFrameSymbols_;
              bitField0_ = (bitField0_ & ~0x00001000);
            } else {
              ensureProfiledFrameSymbolsIsMutable();
              profiledFrameSymbols_.addAll(other.profiledFrameSymbols_);
            }
            onChanged();
          }
        } else {
          if (!other.profiledFrameSymbols_.isEmpty()) {
            if (profiledFrameSymbolsBuilder_.isEmpty()) {
              profiledFrameSymbolsBuilder_.dispose();
              profiledFrameSymbolsBuilder_ = null;
              profiledFrameSymbols_ = other.profiledFrameSymbols_;
              bitField0_ = (bitField0_ & ~0x00001000);
              profiledFrameSymbolsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getProfiledFrameSymbolsFieldBuilder() : null;
            } else {
              profiledFrameSymbolsBuilder_.addAllMessages(other.profiledFrameSymbols_);
            }
          }
        }
        if (mappingsBuilder_ == null) {
          if (!other.mappings_.isEmpty()) {
            if (mappings_.isEmpty()) {
              mappings_ = other.mappings_;
              bitField0_ = (bitField0_ & ~0x00002000);
            } else {
              ensureMappingsIsMutable();
              mappings_.addAll(other.mappings_);
            }
            onChanged();
          }
        } else {
          if (!other.mappings_.isEmpty()) {
            if (mappingsBuilder_.isEmpty()) {
              mappingsBuilder_.dispose();
              mappingsBuilder_ = null;
              mappings_ = other.mappings_;
              bitField0_ = (bitField0_ & ~0x00002000);
              mappingsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMappingsFieldBuilder() : null;
            } else {
              mappingsBuilder_.addAllMessages(other.mappings_);
            }
          }
        }
        if (framesBuilder_ == null) {
          if (!other.frames_.isEmpty()) {
            if (frames_.isEmpty()) {
              frames_ = other.frames_;
              bitField0_ = (bitField0_ & ~0x00004000);
            } else {
              ensureFramesIsMutable();
              frames_.addAll(other.frames_);
            }
            onChanged();
          }
        } else {
          if (!other.frames_.isEmpty()) {
            if (framesBuilder_.isEmpty()) {
              framesBuilder_.dispose();
              framesBuilder_ = null;
              frames_ = other.frames_;
              bitField0_ = (bitField0_ & ~0x00004000);
              framesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFramesFieldBuilder() : null;
            } else {
              framesBuilder_.addAllMessages(other.frames_);
            }
          }
        }
        if (callstacksBuilder_ == null) {
          if (!other.callstacks_.isEmpty()) {
            if (callstacks_.isEmpty()) {
              callstacks_ = other.callstacks_;
              bitField0_ = (bitField0_ & ~0x00008000);
            } else {
              ensureCallstacksIsMutable();
              callstacks_.addAll(other.callstacks_);
            }
            onChanged();
          }
        } else {
          if (!other.callstacks_.isEmpty()) {
            if (callstacksBuilder_.isEmpty()) {
              callstacksBuilder_.dispose();
              callstacksBuilder_ = null;
              callstacks_ = other.callstacks_;
              bitField0_ = (bitField0_ & ~0x00008000);
              callstacksBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getCallstacksFieldBuilder() : null;
            } else {
              callstacksBuilder_.addAllMessages(other.callstacks_);
            }
          }
        }
        if (vulkanMemoryKeysBuilder_ == null) {
          if (!other.vulkanMemoryKeys_.isEmpty()) {
            if (vulkanMemoryKeys_.isEmpty()) {
              vulkanMemoryKeys_ = other.vulkanMemoryKeys_;
              bitField0_ = (bitField0_ & ~0x00010000);
            } else {
              ensureVulkanMemoryKeysIsMutable();
              vulkanMemoryKeys_.addAll(other.vulkanMemoryKeys_);
            }
            onChanged();
          }
        } else {
          if (!other.vulkanMemoryKeys_.isEmpty()) {
            if (vulkanMemoryKeysBuilder_.isEmpty()) {
              vulkanMemoryKeysBuilder_.dispose();
              vulkanMemoryKeysBuilder_ = null;
              vulkanMemoryKeys_ = other.vulkanMemoryKeys_;
              bitField0_ = (bitField0_ & ~0x00010000);
              vulkanMemoryKeysBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getVulkanMemoryKeysFieldBuilder() : null;
            } else {
              vulkanMemoryKeysBuilder_.addAllMessages(other.vulkanMemoryKeys_);
            }
          }
        }
        if (graphicsContextsBuilder_ == null) {
          if (!other.graphicsContexts_.isEmpty()) {
            if (graphicsContexts_.isEmpty()) {
              graphicsContexts_ = other.graphicsContexts_;
              bitField0_ = (bitField0_ & ~0x00020000);
            } else {
              ensureGraphicsContextsIsMutable();
              graphicsContexts_.addAll(other.graphicsContexts_);
            }
            onChanged();
          }
        } else {
          if (!other.graphicsContexts_.isEmpty()) {
            if (graphicsContextsBuilder_.isEmpty()) {
              graphicsContextsBuilder_.dispose();
              graphicsContextsBuilder_ = null;
              graphicsContexts_ = other.graphicsContexts_;
              bitField0_ = (bitField0_ & ~0x00020000);
              graphicsContextsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getGraphicsContextsFieldBuilder() : null;
            } else {
              graphicsContextsBuilder_.addAllMessages(other.graphicsContexts_);
            }
          }
        }
        if (gpuSpecificationsBuilder_ == null) {
          if (!other.gpuSpecifications_.isEmpty()) {
            if (gpuSpecifications_.isEmpty()) {
              gpuSpecifications_ = other.gpuSpecifications_;
              bitField0_ = (bitField0_ & ~0x00040000);
            } else {
              ensureGpuSpecificationsIsMutable();
              gpuSpecifications_.addAll(other.gpuSpecifications_);
            }
            onChanged();
          }
        } else {
          if (!other.gpuSpecifications_.isEmpty()) {
            if (gpuSpecificationsBuilder_.isEmpty()) {
              gpuSpecificationsBuilder_.dispose();
              gpuSpecificationsBuilder_ = null;
              gpuSpecifications_ = other.gpuSpecifications_;
              bitField0_ = (bitField0_ & ~0x00040000);
              gpuSpecificationsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getGpuSpecificationsFieldBuilder() : null;
            } else {
              gpuSpecificationsBuilder_.addAllMessages(other.gpuSpecifications_);
            }
          }
        }
        if (kernelSymbolsBuilder_ == null) {
          if (!other.kernelSymbols_.isEmpty()) {
            if (kernelSymbols_.isEmpty()) {
              kernelSymbols_ = other.kernelSymbols_;
              bitField0_ = (bitField0_ & ~0x00080000);
            } else {
              ensureKernelSymbolsIsMutable();
              kernelSymbols_.addAll(other.kernelSymbols_);
            }
            onChanged();
          }
        } else {
          if (!other.kernelSymbols_.isEmpty()) {
            if (kernelSymbolsBuilder_.isEmpty()) {
              kernelSymbolsBuilder_.dispose();
              kernelSymbolsBuilder_ = null;
              kernelSymbols_ = other.kernelSymbols_;
              bitField0_ = (bitField0_ & ~0x00080000);
              kernelSymbolsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getKernelSymbolsFieldBuilder() : null;
            } else {
              kernelSymbolsBuilder_.addAllMessages(other.kernelSymbols_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                perfetto.protos.TrackEventOuterClass.EventCategory m =
                    input.readMessage(
                        perfetto.protos.TrackEventOuterClass.EventCategory.PARSER,
                        extensionRegistry);
                if (eventCategoriesBuilder_ == null) {
                  ensureEventCategoriesIsMutable();
                  eventCategories_.add(m);
                } else {
                  eventCategoriesBuilder_.addMessage(m);
                }
                break;
              } // case 10
              case 18: {
                perfetto.protos.TrackEventOuterClass.EventName m =
                    input.readMessage(
                        perfetto.protos.TrackEventOuterClass.EventName.PARSER,
                        extensionRegistry);
                if (eventNamesBuilder_ == null) {
                  ensureEventNamesIsMutable();
                  eventNames_.add(m);
                } else {
                  eventNamesBuilder_.addMessage(m);
                }
                break;
              } // case 18
              case 26: {
                perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationName m =
                    input.readMessage(
                        perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationName.PARSER,
                        extensionRegistry);
                if (debugAnnotationNamesBuilder_ == null) {
                  ensureDebugAnnotationNamesIsMutable();
                  debugAnnotationNames_.add(m);
                } else {
                  debugAnnotationNamesBuilder_.addMessage(m);
                }
                break;
              } // case 26
              case 34: {
                perfetto.protos.SourceLocationOuterClass.SourceLocation m =
                    input.readMessage(
                        perfetto.protos.SourceLocationOuterClass.SourceLocation.PARSER,
                        extensionRegistry);
                if (sourceLocationsBuilder_ == null) {
                  ensureSourceLocationsIsMutable();
                  sourceLocations_.add(m);
                } else {
                  sourceLocationsBuilder_.addMessage(m);
                }
                break;
              } // case 34
              case 42: {
                perfetto.protos.ProfileCommon.InternedString m =
                    input.readMessage(
                        perfetto.protos.ProfileCommon.InternedString.PARSER,
                        extensionRegistry);
                if (functionNamesBuilder_ == null) {
                  ensureFunctionNamesIsMutable();
                  functionNames_.add(m);
                } else {
                  functionNamesBuilder_.addMessage(m);
                }
                break;
              } // case 42
              case 50: {
                perfetto.protos.ProfileCommon.Frame m =
                    input.readMessage(
                        perfetto.protos.ProfileCommon.Frame.PARSER,
                        extensionRegistry);
                if (framesBuilder_ == null) {
                  ensureFramesIsMutable();
                  frames_.add(m);
                } else {
                  framesBuilder_.addMessage(m);
                }
                break;
              } // case 50
              case 58: {
                perfetto.protos.ProfileCommon.Callstack m =
                    input.readMessage(
                        perfetto.protos.ProfileCommon.Callstack.PARSER,
                        extensionRegistry);
                if (callstacksBuilder_ == null) {
                  ensureCallstacksIsMutable();
                  callstacks_.add(m);
                } else {
                  callstacksBuilder_.addMessage(m);
                }
                break;
              } // case 58
              case 130: {
                perfetto.protos.ProfileCommon.InternedString m =
                    input.readMessage(
                        perfetto.protos.ProfileCommon.InternedString.PARSER,
                        extensionRegistry);
                if (buildIdsBuilder_ == null) {
                  ensureBuildIdsIsMutable();
                  buildIds_.add(m);
                } else {
                  buildIdsBuilder_.addMessage(m);
                }
                break;
              } // case 130
              case 138: {
                perfetto.protos.ProfileCommon.InternedString m =
                    input.readMessage(
                        perfetto.protos.ProfileCommon.InternedString.PARSER,
                        extensionRegistry);
                if (mappingPathsBuilder_ == null) {
                  ensureMappingPathsIsMutable();
                  mappingPaths_.add(m);
                } else {
                  mappingPathsBuilder_.addMessage(m);
                }
                break;
              } // case 138
              case 146: {
                perfetto.protos.ProfileCommon.InternedString m =
                    input.readMessage(
                        perfetto.protos.ProfileCommon.InternedString.PARSER,
                        extensionRegistry);
                if (sourcePathsBuilder_ == null) {
                  ensureSourcePathsIsMutable();
                  sourcePaths_.add(m);
                } else {
                  sourcePathsBuilder_.addMessage(m);
                }
                break;
              } // case 146
              case 154: {
                perfetto.protos.ProfileCommon.Mapping m =
                    input.readMessage(
                        perfetto.protos.ProfileCommon.Mapping.PARSER,
                        extensionRegistry);
                if (mappingsBuilder_ == null) {
                  ensureMappingsIsMutable();
                  mappings_.add(m);
                } else {
                  mappingsBuilder_.addMessage(m);
                }
                break;
              } // case 154
              case 162: {
                perfetto.protos.LogMessageOuterClass.LogMessageBody m =
                    input.readMessage(
                        perfetto.protos.LogMessageOuterClass.LogMessageBody.PARSER,
                        extensionRegistry);
                if (logMessageBodyBuilder_ == null) {
                  ensureLogMessageBodyIsMutable();
                  logMessageBody_.add(m);
                } else {
                  logMessageBodyBuilder_.addMessage(m);
                }
                break;
              } // case 162
              case 170: {
                perfetto.protos.ProfileCommon.ProfiledFrameSymbols m =
                    input.readMessage(
                        perfetto.protos.ProfileCommon.ProfiledFrameSymbols.PARSER,
                        extensionRegistry);
                if (profiledFrameSymbolsBuilder_ == null) {
                  ensureProfiledFrameSymbolsIsMutable();
                  profiledFrameSymbols_.add(m);
                } else {
                  profiledFrameSymbolsBuilder_.addMessage(m);
                }
                break;
              } // case 170
              case 178: {
                perfetto.protos.ProfileCommon.InternedString m =
                    input.readMessage(
                        perfetto.protos.ProfileCommon.InternedString.PARSER,
                        extensionRegistry);
                if (vulkanMemoryKeysBuilder_ == null) {
                  ensureVulkanMemoryKeysIsMutable();
                  vulkanMemoryKeys_.add(m);
                } else {
                  vulkanMemoryKeysBuilder_.addMessage(m);
                }
                break;
              } // case 178
              case 186: {
                perfetto.protos.GpuRenderStageEventOuterClass.InternedGraphicsContext m =
                    input.readMessage(
                        perfetto.protos.GpuRenderStageEventOuterClass.InternedGraphicsContext.PARSER,
                        extensionRegistry);
                if (graphicsContextsBuilder_ == null) {
                  ensureGraphicsContextsIsMutable();
                  graphicsContexts_.add(m);
                } else {
                  graphicsContextsBuilder_.addMessage(m);
                }
                break;
              } // case 186
              case 194: {
                perfetto.protos.GpuRenderStageEventOuterClass.InternedGpuRenderStageSpecification m =
                    input.readMessage(
                        perfetto.protos.GpuRenderStageEventOuterClass.InternedGpuRenderStageSpecification.PARSER,
                        extensionRegistry);
                if (gpuSpecificationsBuilder_ == null) {
                  ensureGpuSpecificationsIsMutable();
                  gpuSpecifications_.add(m);
                } else {
                  gpuSpecificationsBuilder_.addMessage(m);
                }
                break;
              } // case 194
              case 202: {
                perfetto.protos.ChromeHistogramSampleOuterClass.HistogramName m =
                    input.readMessage(
                        perfetto.protos.ChromeHistogramSampleOuterClass.HistogramName.PARSER,
                        extensionRegistry);
                if (histogramNamesBuilder_ == null) {
                  ensureHistogramNamesIsMutable();
                  histogramNames_.add(m);
                } else {
                  histogramNamesBuilder_.addMessage(m);
                }
                break;
              } // case 202
              case 210: {
                perfetto.protos.ProfileCommon.InternedString m =
                    input.readMessage(
                        perfetto.protos.ProfileCommon.InternedString.PARSER,
                        extensionRegistry);
                if (kernelSymbolsBuilder_ == null) {
                  ensureKernelSymbolsIsMutable();
                  kernelSymbols_.add(m);
                } else {
                  kernelSymbolsBuilder_.addMessage(m);
                }
                break;
              } // case 210
              case 218: {
                perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationValueTypeName m =
                    input.readMessage(
                        perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationValueTypeName.PARSER,
                        extensionRegistry);
                if (debugAnnotationValueTypeNamesBuilder_ == null) {
                  ensureDebugAnnotationValueTypeNamesIsMutable();
                  debugAnnotationValueTypeNames_.add(m);
                } else {
                  debugAnnotationValueTypeNamesBuilder_.addMessage(m);
                }
                break;
              } // case 218
              case 226: {
                perfetto.protos.SourceLocationOuterClass.UnsymbolizedSourceLocation m =
                    input.readMessage(
                        perfetto.protos.SourceLocationOuterClass.UnsymbolizedSourceLocation.PARSER,
                        extensionRegistry);
                if (unsymbolizedSourceLocationsBuilder_ == null) {
                  ensureUnsymbolizedSourceLocationsIsMutable();
                  unsymbolizedSourceLocations_.add(m);
                } else {
                  unsymbolizedSourceLocationsBuilder_.addMessage(m);
                }
                break;
              } // case 226
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<perfetto.protos.TrackEventOuterClass.EventCategory> eventCategories_ =
        java.util.Collections.emptyList();
      private void ensureEventCategoriesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          eventCategories_ = new java.util.ArrayList<perfetto.protos.TrackEventOuterClass.EventCategory>(eventCategories_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.TrackEventOuterClass.EventCategory, perfetto.protos.TrackEventOuterClass.EventCategory.Builder, perfetto.protos.TrackEventOuterClass.EventCategoryOrBuilder> eventCategoriesBuilder_;

      /**
       * <pre>
       * Each field's message type needs to specify an |iid| field, which is the ID
       * of the entry in the field's interning index. Each field constructs its own
       * index, thus interning IDs are scoped to the tracing session and field
       * (usually as a counter for efficient var-int encoding). It is illegal to
       * override entries in an index (using the same iid for two different values)
       * within the same tracing session, even after a reset of the emitted
       * interning state.
       * </pre>
       *
       * <code>repeated .perfetto.protos.EventCategory event_categories = 1;</code>
       */
      public java.util.List<perfetto.protos.TrackEventOuterClass.EventCategory> getEventCategoriesList() {
        if (eventCategoriesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(eventCategories_);
        } else {
          return eventCategoriesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Each field's message type needs to specify an |iid| field, which is the ID
       * of the entry in the field's interning index. Each field constructs its own
       * index, thus interning IDs are scoped to the tracing session and field
       * (usually as a counter for efficient var-int encoding). It is illegal to
       * override entries in an index (using the same iid for two different values)
       * within the same tracing session, even after a reset of the emitted
       * interning state.
       * </pre>
       *
       * <code>repeated .perfetto.protos.EventCategory event_categories = 1;</code>
       */
      public int getEventCategoriesCount() {
        if (eventCategoriesBuilder_ == null) {
          return eventCategories_.size();
        } else {
          return eventCategoriesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Each field's message type needs to specify an |iid| field, which is the ID
       * of the entry in the field's interning index. Each field constructs its own
       * index, thus interning IDs are scoped to the tracing session and field
       * (usually as a counter for efficient var-int encoding). It is illegal to
       * override entries in an index (using the same iid for two different values)
       * within the same tracing session, even after a reset of the emitted
       * interning state.
       * </pre>
       *
       * <code>repeated .perfetto.protos.EventCategory event_categories = 1;</code>
       */
      public perfetto.protos.TrackEventOuterClass.EventCategory getEventCategories(int index) {
        if (eventCategoriesBuilder_ == null) {
          return eventCategories_.get(index);
        } else {
          return eventCategoriesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Each field's message type needs to specify an |iid| field, which is the ID
       * of the entry in the field's interning index. Each field constructs its own
       * index, thus interning IDs are scoped to the tracing session and field
       * (usually as a counter for efficient var-int encoding). It is illegal to
       * override entries in an index (using the same iid for two different values)
       * within the same tracing session, even after a reset of the emitted
       * interning state.
       * </pre>
       *
       * <code>repeated .perfetto.protos.EventCategory event_categories = 1;</code>
       */
      public Builder setEventCategories(
          int index, perfetto.protos.TrackEventOuterClass.EventCategory value) {
        if (eventCategoriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEventCategoriesIsMutable();
          eventCategories_.set(index, value);
          onChanged();
        } else {
          eventCategoriesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Each field's message type needs to specify an |iid| field, which is the ID
       * of the entry in the field's interning index. Each field constructs its own
       * index, thus interning IDs are scoped to the tracing session and field
       * (usually as a counter for efficient var-int encoding). It is illegal to
       * override entries in an index (using the same iid for two different values)
       * within the same tracing session, even after a reset of the emitted
       * interning state.
       * </pre>
       *
       * <code>repeated .perfetto.protos.EventCategory event_categories = 1;</code>
       */
      public Builder setEventCategories(
          int index, perfetto.protos.TrackEventOuterClass.EventCategory.Builder builderForValue) {
        if (eventCategoriesBuilder_ == null) {
          ensureEventCategoriesIsMutable();
          eventCategories_.set(index, builderForValue.build());
          onChanged();
        } else {
          eventCategoriesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Each field's message type needs to specify an |iid| field, which is the ID
       * of the entry in the field's interning index. Each field constructs its own
       * index, thus interning IDs are scoped to the tracing session and field
       * (usually as a counter for efficient var-int encoding). It is illegal to
       * override entries in an index (using the same iid for two different values)
       * within the same tracing session, even after a reset of the emitted
       * interning state.
       * </pre>
       *
       * <code>repeated .perfetto.protos.EventCategory event_categories = 1;</code>
       */
      public Builder addEventCategories(perfetto.protos.TrackEventOuterClass.EventCategory value) {
        if (eventCategoriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEventCategoriesIsMutable();
          eventCategories_.add(value);
          onChanged();
        } else {
          eventCategoriesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Each field's message type needs to specify an |iid| field, which is the ID
       * of the entry in the field's interning index. Each field constructs its own
       * index, thus interning IDs are scoped to the tracing session and field
       * (usually as a counter for efficient var-int encoding). It is illegal to
       * override entries in an index (using the same iid for two different values)
       * within the same tracing session, even after a reset of the emitted
       * interning state.
       * </pre>
       *
       * <code>repeated .perfetto.protos.EventCategory event_categories = 1;</code>
       */
      public Builder addEventCategories(
          int index, perfetto.protos.TrackEventOuterClass.EventCategory value) {
        if (eventCategoriesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEventCategoriesIsMutable();
          eventCategories_.add(index, value);
          onChanged();
        } else {
          eventCategoriesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Each field's message type needs to specify an |iid| field, which is the ID
       * of the entry in the field's interning index. Each field constructs its own
       * index, thus interning IDs are scoped to the tracing session and field
       * (usually as a counter for efficient var-int encoding). It is illegal to
       * override entries in an index (using the same iid for two different values)
       * within the same tracing session, even after a reset of the emitted
       * interning state.
       * </pre>
       *
       * <code>repeated .perfetto.protos.EventCategory event_categories = 1;</code>
       */
      public Builder addEventCategories(
          perfetto.protos.TrackEventOuterClass.EventCategory.Builder builderForValue) {
        if (eventCategoriesBuilder_ == null) {
          ensureEventCategoriesIsMutable();
          eventCategories_.add(builderForValue.build());
          onChanged();
        } else {
          eventCategoriesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Each field's message type needs to specify an |iid| field, which is the ID
       * of the entry in the field's interning index. Each field constructs its own
       * index, thus interning IDs are scoped to the tracing session and field
       * (usually as a counter for efficient var-int encoding). It is illegal to
       * override entries in an index (using the same iid for two different values)
       * within the same tracing session, even after a reset of the emitted
       * interning state.
       * </pre>
       *
       * <code>repeated .perfetto.protos.EventCategory event_categories = 1;</code>
       */
      public Builder addEventCategories(
          int index, perfetto.protos.TrackEventOuterClass.EventCategory.Builder builderForValue) {
        if (eventCategoriesBuilder_ == null) {
          ensureEventCategoriesIsMutable();
          eventCategories_.add(index, builderForValue.build());
          onChanged();
        } else {
          eventCategoriesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Each field's message type needs to specify an |iid| field, which is the ID
       * of the entry in the field's interning index. Each field constructs its own
       * index, thus interning IDs are scoped to the tracing session and field
       * (usually as a counter for efficient var-int encoding). It is illegal to
       * override entries in an index (using the same iid for two different values)
       * within the same tracing session, even after a reset of the emitted
       * interning state.
       * </pre>
       *
       * <code>repeated .perfetto.protos.EventCategory event_categories = 1;</code>
       */
      public Builder addAllEventCategories(
          java.lang.Iterable<? extends perfetto.protos.TrackEventOuterClass.EventCategory> values) {
        if (eventCategoriesBuilder_ == null) {
          ensureEventCategoriesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, eventCategories_);
          onChanged();
        } else {
          eventCategoriesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Each field's message type needs to specify an |iid| field, which is the ID
       * of the entry in the field's interning index. Each field constructs its own
       * index, thus interning IDs are scoped to the tracing session and field
       * (usually as a counter for efficient var-int encoding). It is illegal to
       * override entries in an index (using the same iid for two different values)
       * within the same tracing session, even after a reset of the emitted
       * interning state.
       * </pre>
       *
       * <code>repeated .perfetto.protos.EventCategory event_categories = 1;</code>
       */
      public Builder clearEventCategories() {
        if (eventCategoriesBuilder_ == null) {
          eventCategories_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          eventCategoriesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Each field's message type needs to specify an |iid| field, which is the ID
       * of the entry in the field's interning index. Each field constructs its own
       * index, thus interning IDs are scoped to the tracing session and field
       * (usually as a counter for efficient var-int encoding). It is illegal to
       * override entries in an index (using the same iid for two different values)
       * within the same tracing session, even after a reset of the emitted
       * interning state.
       * </pre>
       *
       * <code>repeated .perfetto.protos.EventCategory event_categories = 1;</code>
       */
      public Builder removeEventCategories(int index) {
        if (eventCategoriesBuilder_ == null) {
          ensureEventCategoriesIsMutable();
          eventCategories_.remove(index);
          onChanged();
        } else {
          eventCategoriesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Each field's message type needs to specify an |iid| field, which is the ID
       * of the entry in the field's interning index. Each field constructs its own
       * index, thus interning IDs are scoped to the tracing session and field
       * (usually as a counter for efficient var-int encoding). It is illegal to
       * override entries in an index (using the same iid for two different values)
       * within the same tracing session, even after a reset of the emitted
       * interning state.
       * </pre>
       *
       * <code>repeated .perfetto.protos.EventCategory event_categories = 1;</code>
       */
      public perfetto.protos.TrackEventOuterClass.EventCategory.Builder getEventCategoriesBuilder(
          int index) {
        return getEventCategoriesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Each field's message type needs to specify an |iid| field, which is the ID
       * of the entry in the field's interning index. Each field constructs its own
       * index, thus interning IDs are scoped to the tracing session and field
       * (usually as a counter for efficient var-int encoding). It is illegal to
       * override entries in an index (using the same iid for two different values)
       * within the same tracing session, even after a reset of the emitted
       * interning state.
       * </pre>
       *
       * <code>repeated .perfetto.protos.EventCategory event_categories = 1;</code>
       */
      public perfetto.protos.TrackEventOuterClass.EventCategoryOrBuilder getEventCategoriesOrBuilder(
          int index) {
        if (eventCategoriesBuilder_ == null) {
          return eventCategories_.get(index);  } else {
          return eventCategoriesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Each field's message type needs to specify an |iid| field, which is the ID
       * of the entry in the field's interning index. Each field constructs its own
       * index, thus interning IDs are scoped to the tracing session and field
       * (usually as a counter for efficient var-int encoding). It is illegal to
       * override entries in an index (using the same iid for two different values)
       * within the same tracing session, even after a reset of the emitted
       * interning state.
       * </pre>
       *
       * <code>repeated .perfetto.protos.EventCategory event_categories = 1;</code>
       */
      public java.util.List<? extends perfetto.protos.TrackEventOuterClass.EventCategoryOrBuilder> 
           getEventCategoriesOrBuilderList() {
        if (eventCategoriesBuilder_ != null) {
          return eventCategoriesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(eventCategories_);
        }
      }
      /**
       * <pre>
       * Each field's message type needs to specify an |iid| field, which is the ID
       * of the entry in the field's interning index. Each field constructs its own
       * index, thus interning IDs are scoped to the tracing session and field
       * (usually as a counter for efficient var-int encoding). It is illegal to
       * override entries in an index (using the same iid for two different values)
       * within the same tracing session, even after a reset of the emitted
       * interning state.
       * </pre>
       *
       * <code>repeated .perfetto.protos.EventCategory event_categories = 1;</code>
       */
      public perfetto.protos.TrackEventOuterClass.EventCategory.Builder addEventCategoriesBuilder() {
        return getEventCategoriesFieldBuilder().addBuilder(
            perfetto.protos.TrackEventOuterClass.EventCategory.getDefaultInstance());
      }
      /**
       * <pre>
       * Each field's message type needs to specify an |iid| field, which is the ID
       * of the entry in the field's interning index. Each field constructs its own
       * index, thus interning IDs are scoped to the tracing session and field
       * (usually as a counter for efficient var-int encoding). It is illegal to
       * override entries in an index (using the same iid for two different values)
       * within the same tracing session, even after a reset of the emitted
       * interning state.
       * </pre>
       *
       * <code>repeated .perfetto.protos.EventCategory event_categories = 1;</code>
       */
      public perfetto.protos.TrackEventOuterClass.EventCategory.Builder addEventCategoriesBuilder(
          int index) {
        return getEventCategoriesFieldBuilder().addBuilder(
            index, perfetto.protos.TrackEventOuterClass.EventCategory.getDefaultInstance());
      }
      /**
       * <pre>
       * Each field's message type needs to specify an |iid| field, which is the ID
       * of the entry in the field's interning index. Each field constructs its own
       * index, thus interning IDs are scoped to the tracing session and field
       * (usually as a counter for efficient var-int encoding). It is illegal to
       * override entries in an index (using the same iid for two different values)
       * within the same tracing session, even after a reset of the emitted
       * interning state.
       * </pre>
       *
       * <code>repeated .perfetto.protos.EventCategory event_categories = 1;</code>
       */
      public java.util.List<perfetto.protos.TrackEventOuterClass.EventCategory.Builder> 
           getEventCategoriesBuilderList() {
        return getEventCategoriesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.TrackEventOuterClass.EventCategory, perfetto.protos.TrackEventOuterClass.EventCategory.Builder, perfetto.protos.TrackEventOuterClass.EventCategoryOrBuilder> 
          getEventCategoriesFieldBuilder() {
        if (eventCategoriesBuilder_ == null) {
          eventCategoriesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              perfetto.protos.TrackEventOuterClass.EventCategory, perfetto.protos.TrackEventOuterClass.EventCategory.Builder, perfetto.protos.TrackEventOuterClass.EventCategoryOrBuilder>(
                  eventCategories_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          eventCategories_ = null;
        }
        return eventCategoriesBuilder_;
      }

      private java.util.List<perfetto.protos.TrackEventOuterClass.EventName> eventNames_ =
        java.util.Collections.emptyList();
      private void ensureEventNamesIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          eventNames_ = new java.util.ArrayList<perfetto.protos.TrackEventOuterClass.EventName>(eventNames_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.TrackEventOuterClass.EventName, perfetto.protos.TrackEventOuterClass.EventName.Builder, perfetto.protos.TrackEventOuterClass.EventNameOrBuilder> eventNamesBuilder_;

      /**
       * <code>repeated .perfetto.protos.EventName event_names = 2;</code>
       */
      public java.util.List<perfetto.protos.TrackEventOuterClass.EventName> getEventNamesList() {
        if (eventNamesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(eventNames_);
        } else {
          return eventNamesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .perfetto.protos.EventName event_names = 2;</code>
       */
      public int getEventNamesCount() {
        if (eventNamesBuilder_ == null) {
          return eventNames_.size();
        } else {
          return eventNamesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .perfetto.protos.EventName event_names = 2;</code>
       */
      public perfetto.protos.TrackEventOuterClass.EventName getEventNames(int index) {
        if (eventNamesBuilder_ == null) {
          return eventNames_.get(index);
        } else {
          return eventNamesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .perfetto.protos.EventName event_names = 2;</code>
       */
      public Builder setEventNames(
          int index, perfetto.protos.TrackEventOuterClass.EventName value) {
        if (eventNamesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEventNamesIsMutable();
          eventNames_.set(index, value);
          onChanged();
        } else {
          eventNamesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.EventName event_names = 2;</code>
       */
      public Builder setEventNames(
          int index, perfetto.protos.TrackEventOuterClass.EventName.Builder builderForValue) {
        if (eventNamesBuilder_ == null) {
          ensureEventNamesIsMutable();
          eventNames_.set(index, builderForValue.build());
          onChanged();
        } else {
          eventNamesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.EventName event_names = 2;</code>
       */
      public Builder addEventNames(perfetto.protos.TrackEventOuterClass.EventName value) {
        if (eventNamesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEventNamesIsMutable();
          eventNames_.add(value);
          onChanged();
        } else {
          eventNamesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.EventName event_names = 2;</code>
       */
      public Builder addEventNames(
          int index, perfetto.protos.TrackEventOuterClass.EventName value) {
        if (eventNamesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEventNamesIsMutable();
          eventNames_.add(index, value);
          onChanged();
        } else {
          eventNamesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.EventName event_names = 2;</code>
       */
      public Builder addEventNames(
          perfetto.protos.TrackEventOuterClass.EventName.Builder builderForValue) {
        if (eventNamesBuilder_ == null) {
          ensureEventNamesIsMutable();
          eventNames_.add(builderForValue.build());
          onChanged();
        } else {
          eventNamesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.EventName event_names = 2;</code>
       */
      public Builder addEventNames(
          int index, perfetto.protos.TrackEventOuterClass.EventName.Builder builderForValue) {
        if (eventNamesBuilder_ == null) {
          ensureEventNamesIsMutable();
          eventNames_.add(index, builderForValue.build());
          onChanged();
        } else {
          eventNamesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.EventName event_names = 2;</code>
       */
      public Builder addAllEventNames(
          java.lang.Iterable<? extends perfetto.protos.TrackEventOuterClass.EventName> values) {
        if (eventNamesBuilder_ == null) {
          ensureEventNamesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, eventNames_);
          onChanged();
        } else {
          eventNamesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.EventName event_names = 2;</code>
       */
      public Builder clearEventNames() {
        if (eventNamesBuilder_ == null) {
          eventNames_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          eventNamesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.EventName event_names = 2;</code>
       */
      public Builder removeEventNames(int index) {
        if (eventNamesBuilder_ == null) {
          ensureEventNamesIsMutable();
          eventNames_.remove(index);
          onChanged();
        } else {
          eventNamesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.EventName event_names = 2;</code>
       */
      public perfetto.protos.TrackEventOuterClass.EventName.Builder getEventNamesBuilder(
          int index) {
        return getEventNamesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .perfetto.protos.EventName event_names = 2;</code>
       */
      public perfetto.protos.TrackEventOuterClass.EventNameOrBuilder getEventNamesOrBuilder(
          int index) {
        if (eventNamesBuilder_ == null) {
          return eventNames_.get(index);  } else {
          return eventNamesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .perfetto.protos.EventName event_names = 2;</code>
       */
      public java.util.List<? extends perfetto.protos.TrackEventOuterClass.EventNameOrBuilder> 
           getEventNamesOrBuilderList() {
        if (eventNamesBuilder_ != null) {
          return eventNamesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(eventNames_);
        }
      }
      /**
       * <code>repeated .perfetto.protos.EventName event_names = 2;</code>
       */
      public perfetto.protos.TrackEventOuterClass.EventName.Builder addEventNamesBuilder() {
        return getEventNamesFieldBuilder().addBuilder(
            perfetto.protos.TrackEventOuterClass.EventName.getDefaultInstance());
      }
      /**
       * <code>repeated .perfetto.protos.EventName event_names = 2;</code>
       */
      public perfetto.protos.TrackEventOuterClass.EventName.Builder addEventNamesBuilder(
          int index) {
        return getEventNamesFieldBuilder().addBuilder(
            index, perfetto.protos.TrackEventOuterClass.EventName.getDefaultInstance());
      }
      /**
       * <code>repeated .perfetto.protos.EventName event_names = 2;</code>
       */
      public java.util.List<perfetto.protos.TrackEventOuterClass.EventName.Builder> 
           getEventNamesBuilderList() {
        return getEventNamesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.TrackEventOuterClass.EventName, perfetto.protos.TrackEventOuterClass.EventName.Builder, perfetto.protos.TrackEventOuterClass.EventNameOrBuilder> 
          getEventNamesFieldBuilder() {
        if (eventNamesBuilder_ == null) {
          eventNamesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              perfetto.protos.TrackEventOuterClass.EventName, perfetto.protos.TrackEventOuterClass.EventName.Builder, perfetto.protos.TrackEventOuterClass.EventNameOrBuilder>(
                  eventNames_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          eventNames_ = null;
        }
        return eventNamesBuilder_;
      }

      private java.util.List<perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationName> debugAnnotationNames_ =
        java.util.Collections.emptyList();
      private void ensureDebugAnnotationNamesIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          debugAnnotationNames_ = new java.util.ArrayList<perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationName>(debugAnnotationNames_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationName, perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationName.Builder, perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationNameOrBuilder> debugAnnotationNamesBuilder_;

      /**
       * <code>repeated .perfetto.protos.DebugAnnotationName debug_annotation_names = 3;</code>
       */
      public java.util.List<perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationName> getDebugAnnotationNamesList() {
        if (debugAnnotationNamesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(debugAnnotationNames_);
        } else {
          return debugAnnotationNamesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .perfetto.protos.DebugAnnotationName debug_annotation_names = 3;</code>
       */
      public int getDebugAnnotationNamesCount() {
        if (debugAnnotationNamesBuilder_ == null) {
          return debugAnnotationNames_.size();
        } else {
          return debugAnnotationNamesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .perfetto.protos.DebugAnnotationName debug_annotation_names = 3;</code>
       */
      public perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationName getDebugAnnotationNames(int index) {
        if (debugAnnotationNamesBuilder_ == null) {
          return debugAnnotationNames_.get(index);
        } else {
          return debugAnnotationNamesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .perfetto.protos.DebugAnnotationName debug_annotation_names = 3;</code>
       */
      public Builder setDebugAnnotationNames(
          int index, perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationName value) {
        if (debugAnnotationNamesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDebugAnnotationNamesIsMutable();
          debugAnnotationNames_.set(index, value);
          onChanged();
        } else {
          debugAnnotationNamesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.DebugAnnotationName debug_annotation_names = 3;</code>
       */
      public Builder setDebugAnnotationNames(
          int index, perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationName.Builder builderForValue) {
        if (debugAnnotationNamesBuilder_ == null) {
          ensureDebugAnnotationNamesIsMutable();
          debugAnnotationNames_.set(index, builderForValue.build());
          onChanged();
        } else {
          debugAnnotationNamesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.DebugAnnotationName debug_annotation_names = 3;</code>
       */
      public Builder addDebugAnnotationNames(perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationName value) {
        if (debugAnnotationNamesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDebugAnnotationNamesIsMutable();
          debugAnnotationNames_.add(value);
          onChanged();
        } else {
          debugAnnotationNamesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.DebugAnnotationName debug_annotation_names = 3;</code>
       */
      public Builder addDebugAnnotationNames(
          int index, perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationName value) {
        if (debugAnnotationNamesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDebugAnnotationNamesIsMutable();
          debugAnnotationNames_.add(index, value);
          onChanged();
        } else {
          debugAnnotationNamesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.DebugAnnotationName debug_annotation_names = 3;</code>
       */
      public Builder addDebugAnnotationNames(
          perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationName.Builder builderForValue) {
        if (debugAnnotationNamesBuilder_ == null) {
          ensureDebugAnnotationNamesIsMutable();
          debugAnnotationNames_.add(builderForValue.build());
          onChanged();
        } else {
          debugAnnotationNamesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.DebugAnnotationName debug_annotation_names = 3;</code>
       */
      public Builder addDebugAnnotationNames(
          int index, perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationName.Builder builderForValue) {
        if (debugAnnotationNamesBuilder_ == null) {
          ensureDebugAnnotationNamesIsMutable();
          debugAnnotationNames_.add(index, builderForValue.build());
          onChanged();
        } else {
          debugAnnotationNamesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.DebugAnnotationName debug_annotation_names = 3;</code>
       */
      public Builder addAllDebugAnnotationNames(
          java.lang.Iterable<? extends perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationName> values) {
        if (debugAnnotationNamesBuilder_ == null) {
          ensureDebugAnnotationNamesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, debugAnnotationNames_);
          onChanged();
        } else {
          debugAnnotationNamesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.DebugAnnotationName debug_annotation_names = 3;</code>
       */
      public Builder clearDebugAnnotationNames() {
        if (debugAnnotationNamesBuilder_ == null) {
          debugAnnotationNames_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          debugAnnotationNamesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.DebugAnnotationName debug_annotation_names = 3;</code>
       */
      public Builder removeDebugAnnotationNames(int index) {
        if (debugAnnotationNamesBuilder_ == null) {
          ensureDebugAnnotationNamesIsMutable();
          debugAnnotationNames_.remove(index);
          onChanged();
        } else {
          debugAnnotationNamesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.DebugAnnotationName debug_annotation_names = 3;</code>
       */
      public perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationName.Builder getDebugAnnotationNamesBuilder(
          int index) {
        return getDebugAnnotationNamesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .perfetto.protos.DebugAnnotationName debug_annotation_names = 3;</code>
       */
      public perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationNameOrBuilder getDebugAnnotationNamesOrBuilder(
          int index) {
        if (debugAnnotationNamesBuilder_ == null) {
          return debugAnnotationNames_.get(index);  } else {
          return debugAnnotationNamesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .perfetto.protos.DebugAnnotationName debug_annotation_names = 3;</code>
       */
      public java.util.List<? extends perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationNameOrBuilder> 
           getDebugAnnotationNamesOrBuilderList() {
        if (debugAnnotationNamesBuilder_ != null) {
          return debugAnnotationNamesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(debugAnnotationNames_);
        }
      }
      /**
       * <code>repeated .perfetto.protos.DebugAnnotationName debug_annotation_names = 3;</code>
       */
      public perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationName.Builder addDebugAnnotationNamesBuilder() {
        return getDebugAnnotationNamesFieldBuilder().addBuilder(
            perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationName.getDefaultInstance());
      }
      /**
       * <code>repeated .perfetto.protos.DebugAnnotationName debug_annotation_names = 3;</code>
       */
      public perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationName.Builder addDebugAnnotationNamesBuilder(
          int index) {
        return getDebugAnnotationNamesFieldBuilder().addBuilder(
            index, perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationName.getDefaultInstance());
      }
      /**
       * <code>repeated .perfetto.protos.DebugAnnotationName debug_annotation_names = 3;</code>
       */
      public java.util.List<perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationName.Builder> 
           getDebugAnnotationNamesBuilderList() {
        return getDebugAnnotationNamesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationName, perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationName.Builder, perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationNameOrBuilder> 
          getDebugAnnotationNamesFieldBuilder() {
        if (debugAnnotationNamesBuilder_ == null) {
          debugAnnotationNamesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationName, perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationName.Builder, perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationNameOrBuilder>(
                  debugAnnotationNames_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          debugAnnotationNames_ = null;
        }
        return debugAnnotationNamesBuilder_;
      }

      private java.util.List<perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationValueTypeName> debugAnnotationValueTypeNames_ =
        java.util.Collections.emptyList();
      private void ensureDebugAnnotationValueTypeNamesIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          debugAnnotationValueTypeNames_ = new java.util.ArrayList<perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationValueTypeName>(debugAnnotationValueTypeNames_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationValueTypeName, perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationValueTypeName.Builder, perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationValueTypeNameOrBuilder> debugAnnotationValueTypeNamesBuilder_;

      /**
       * <code>repeated .perfetto.protos.DebugAnnotationValueTypeName debug_annotation_value_type_names = 27;</code>
       */
      public java.util.List<perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationValueTypeName> getDebugAnnotationValueTypeNamesList() {
        if (debugAnnotationValueTypeNamesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(debugAnnotationValueTypeNames_);
        } else {
          return debugAnnotationValueTypeNamesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .perfetto.protos.DebugAnnotationValueTypeName debug_annotation_value_type_names = 27;</code>
       */
      public int getDebugAnnotationValueTypeNamesCount() {
        if (debugAnnotationValueTypeNamesBuilder_ == null) {
          return debugAnnotationValueTypeNames_.size();
        } else {
          return debugAnnotationValueTypeNamesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .perfetto.protos.DebugAnnotationValueTypeName debug_annotation_value_type_names = 27;</code>
       */
      public perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationValueTypeName getDebugAnnotationValueTypeNames(int index) {
        if (debugAnnotationValueTypeNamesBuilder_ == null) {
          return debugAnnotationValueTypeNames_.get(index);
        } else {
          return debugAnnotationValueTypeNamesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .perfetto.protos.DebugAnnotationValueTypeName debug_annotation_value_type_names = 27;</code>
       */
      public Builder setDebugAnnotationValueTypeNames(
          int index, perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationValueTypeName value) {
        if (debugAnnotationValueTypeNamesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDebugAnnotationValueTypeNamesIsMutable();
          debugAnnotationValueTypeNames_.set(index, value);
          onChanged();
        } else {
          debugAnnotationValueTypeNamesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.DebugAnnotationValueTypeName debug_annotation_value_type_names = 27;</code>
       */
      public Builder setDebugAnnotationValueTypeNames(
          int index, perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationValueTypeName.Builder builderForValue) {
        if (debugAnnotationValueTypeNamesBuilder_ == null) {
          ensureDebugAnnotationValueTypeNamesIsMutable();
          debugAnnotationValueTypeNames_.set(index, builderForValue.build());
          onChanged();
        } else {
          debugAnnotationValueTypeNamesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.DebugAnnotationValueTypeName debug_annotation_value_type_names = 27;</code>
       */
      public Builder addDebugAnnotationValueTypeNames(perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationValueTypeName value) {
        if (debugAnnotationValueTypeNamesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDebugAnnotationValueTypeNamesIsMutable();
          debugAnnotationValueTypeNames_.add(value);
          onChanged();
        } else {
          debugAnnotationValueTypeNamesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.DebugAnnotationValueTypeName debug_annotation_value_type_names = 27;</code>
       */
      public Builder addDebugAnnotationValueTypeNames(
          int index, perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationValueTypeName value) {
        if (debugAnnotationValueTypeNamesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDebugAnnotationValueTypeNamesIsMutable();
          debugAnnotationValueTypeNames_.add(index, value);
          onChanged();
        } else {
          debugAnnotationValueTypeNamesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.DebugAnnotationValueTypeName debug_annotation_value_type_names = 27;</code>
       */
      public Builder addDebugAnnotationValueTypeNames(
          perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationValueTypeName.Builder builderForValue) {
        if (debugAnnotationValueTypeNamesBuilder_ == null) {
          ensureDebugAnnotationValueTypeNamesIsMutable();
          debugAnnotationValueTypeNames_.add(builderForValue.build());
          onChanged();
        } else {
          debugAnnotationValueTypeNamesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.DebugAnnotationValueTypeName debug_annotation_value_type_names = 27;</code>
       */
      public Builder addDebugAnnotationValueTypeNames(
          int index, perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationValueTypeName.Builder builderForValue) {
        if (debugAnnotationValueTypeNamesBuilder_ == null) {
          ensureDebugAnnotationValueTypeNamesIsMutable();
          debugAnnotationValueTypeNames_.add(index, builderForValue.build());
          onChanged();
        } else {
          debugAnnotationValueTypeNamesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.DebugAnnotationValueTypeName debug_annotation_value_type_names = 27;</code>
       */
      public Builder addAllDebugAnnotationValueTypeNames(
          java.lang.Iterable<? extends perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationValueTypeName> values) {
        if (debugAnnotationValueTypeNamesBuilder_ == null) {
          ensureDebugAnnotationValueTypeNamesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, debugAnnotationValueTypeNames_);
          onChanged();
        } else {
          debugAnnotationValueTypeNamesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.DebugAnnotationValueTypeName debug_annotation_value_type_names = 27;</code>
       */
      public Builder clearDebugAnnotationValueTypeNames() {
        if (debugAnnotationValueTypeNamesBuilder_ == null) {
          debugAnnotationValueTypeNames_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          debugAnnotationValueTypeNamesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.DebugAnnotationValueTypeName debug_annotation_value_type_names = 27;</code>
       */
      public Builder removeDebugAnnotationValueTypeNames(int index) {
        if (debugAnnotationValueTypeNamesBuilder_ == null) {
          ensureDebugAnnotationValueTypeNamesIsMutable();
          debugAnnotationValueTypeNames_.remove(index);
          onChanged();
        } else {
          debugAnnotationValueTypeNamesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.DebugAnnotationValueTypeName debug_annotation_value_type_names = 27;</code>
       */
      public perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationValueTypeName.Builder getDebugAnnotationValueTypeNamesBuilder(
          int index) {
        return getDebugAnnotationValueTypeNamesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .perfetto.protos.DebugAnnotationValueTypeName debug_annotation_value_type_names = 27;</code>
       */
      public perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationValueTypeNameOrBuilder getDebugAnnotationValueTypeNamesOrBuilder(
          int index) {
        if (debugAnnotationValueTypeNamesBuilder_ == null) {
          return debugAnnotationValueTypeNames_.get(index);  } else {
          return debugAnnotationValueTypeNamesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .perfetto.protos.DebugAnnotationValueTypeName debug_annotation_value_type_names = 27;</code>
       */
      public java.util.List<? extends perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationValueTypeNameOrBuilder> 
           getDebugAnnotationValueTypeNamesOrBuilderList() {
        if (debugAnnotationValueTypeNamesBuilder_ != null) {
          return debugAnnotationValueTypeNamesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(debugAnnotationValueTypeNames_);
        }
      }
      /**
       * <code>repeated .perfetto.protos.DebugAnnotationValueTypeName debug_annotation_value_type_names = 27;</code>
       */
      public perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationValueTypeName.Builder addDebugAnnotationValueTypeNamesBuilder() {
        return getDebugAnnotationValueTypeNamesFieldBuilder().addBuilder(
            perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationValueTypeName.getDefaultInstance());
      }
      /**
       * <code>repeated .perfetto.protos.DebugAnnotationValueTypeName debug_annotation_value_type_names = 27;</code>
       */
      public perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationValueTypeName.Builder addDebugAnnotationValueTypeNamesBuilder(
          int index) {
        return getDebugAnnotationValueTypeNamesFieldBuilder().addBuilder(
            index, perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationValueTypeName.getDefaultInstance());
      }
      /**
       * <code>repeated .perfetto.protos.DebugAnnotationValueTypeName debug_annotation_value_type_names = 27;</code>
       */
      public java.util.List<perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationValueTypeName.Builder> 
           getDebugAnnotationValueTypeNamesBuilderList() {
        return getDebugAnnotationValueTypeNamesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationValueTypeName, perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationValueTypeName.Builder, perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationValueTypeNameOrBuilder> 
          getDebugAnnotationValueTypeNamesFieldBuilder() {
        if (debugAnnotationValueTypeNamesBuilder_ == null) {
          debugAnnotationValueTypeNamesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationValueTypeName, perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationValueTypeName.Builder, perfetto.protos.DebugAnnotationOuterClass.DebugAnnotationValueTypeNameOrBuilder>(
                  debugAnnotationValueTypeNames_,
                  ((bitField0_ & 0x00000008) != 0),
                  getParentForChildren(),
                  isClean());
          debugAnnotationValueTypeNames_ = null;
        }
        return debugAnnotationValueTypeNamesBuilder_;
      }

      private java.util.List<perfetto.protos.SourceLocationOuterClass.SourceLocation> sourceLocations_ =
        java.util.Collections.emptyList();
      private void ensureSourceLocationsIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          sourceLocations_ = new java.util.ArrayList<perfetto.protos.SourceLocationOuterClass.SourceLocation>(sourceLocations_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.SourceLocationOuterClass.SourceLocation, perfetto.protos.SourceLocationOuterClass.SourceLocation.Builder, perfetto.protos.SourceLocationOuterClass.SourceLocationOrBuilder> sourceLocationsBuilder_;

      /**
       * <code>repeated .perfetto.protos.SourceLocation source_locations = 4;</code>
       */
      public java.util.List<perfetto.protos.SourceLocationOuterClass.SourceLocation> getSourceLocationsList() {
        if (sourceLocationsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(sourceLocations_);
        } else {
          return sourceLocationsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .perfetto.protos.SourceLocation source_locations = 4;</code>
       */
      public int getSourceLocationsCount() {
        if (sourceLocationsBuilder_ == null) {
          return sourceLocations_.size();
        } else {
          return sourceLocationsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .perfetto.protos.SourceLocation source_locations = 4;</code>
       */
      public perfetto.protos.SourceLocationOuterClass.SourceLocation getSourceLocations(int index) {
        if (sourceLocationsBuilder_ == null) {
          return sourceLocations_.get(index);
        } else {
          return sourceLocationsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .perfetto.protos.SourceLocation source_locations = 4;</code>
       */
      public Builder setSourceLocations(
          int index, perfetto.protos.SourceLocationOuterClass.SourceLocation value) {
        if (sourceLocationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSourceLocationsIsMutable();
          sourceLocations_.set(index, value);
          onChanged();
        } else {
          sourceLocationsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.SourceLocation source_locations = 4;</code>
       */
      public Builder setSourceLocations(
          int index, perfetto.protos.SourceLocationOuterClass.SourceLocation.Builder builderForValue) {
        if (sourceLocationsBuilder_ == null) {
          ensureSourceLocationsIsMutable();
          sourceLocations_.set(index, builderForValue.build());
          onChanged();
        } else {
          sourceLocationsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.SourceLocation source_locations = 4;</code>
       */
      public Builder addSourceLocations(perfetto.protos.SourceLocationOuterClass.SourceLocation value) {
        if (sourceLocationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSourceLocationsIsMutable();
          sourceLocations_.add(value);
          onChanged();
        } else {
          sourceLocationsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.SourceLocation source_locations = 4;</code>
       */
      public Builder addSourceLocations(
          int index, perfetto.protos.SourceLocationOuterClass.SourceLocation value) {
        if (sourceLocationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSourceLocationsIsMutable();
          sourceLocations_.add(index, value);
          onChanged();
        } else {
          sourceLocationsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.SourceLocation source_locations = 4;</code>
       */
      public Builder addSourceLocations(
          perfetto.protos.SourceLocationOuterClass.SourceLocation.Builder builderForValue) {
        if (sourceLocationsBuilder_ == null) {
          ensureSourceLocationsIsMutable();
          sourceLocations_.add(builderForValue.build());
          onChanged();
        } else {
          sourceLocationsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.SourceLocation source_locations = 4;</code>
       */
      public Builder addSourceLocations(
          int index, perfetto.protos.SourceLocationOuterClass.SourceLocation.Builder builderForValue) {
        if (sourceLocationsBuilder_ == null) {
          ensureSourceLocationsIsMutable();
          sourceLocations_.add(index, builderForValue.build());
          onChanged();
        } else {
          sourceLocationsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.SourceLocation source_locations = 4;</code>
       */
      public Builder addAllSourceLocations(
          java.lang.Iterable<? extends perfetto.protos.SourceLocationOuterClass.SourceLocation> values) {
        if (sourceLocationsBuilder_ == null) {
          ensureSourceLocationsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, sourceLocations_);
          onChanged();
        } else {
          sourceLocationsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.SourceLocation source_locations = 4;</code>
       */
      public Builder clearSourceLocations() {
        if (sourceLocationsBuilder_ == null) {
          sourceLocations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          sourceLocationsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.SourceLocation source_locations = 4;</code>
       */
      public Builder removeSourceLocations(int index) {
        if (sourceLocationsBuilder_ == null) {
          ensureSourceLocationsIsMutable();
          sourceLocations_.remove(index);
          onChanged();
        } else {
          sourceLocationsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.SourceLocation source_locations = 4;</code>
       */
      public perfetto.protos.SourceLocationOuterClass.SourceLocation.Builder getSourceLocationsBuilder(
          int index) {
        return getSourceLocationsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .perfetto.protos.SourceLocation source_locations = 4;</code>
       */
      public perfetto.protos.SourceLocationOuterClass.SourceLocationOrBuilder getSourceLocationsOrBuilder(
          int index) {
        if (sourceLocationsBuilder_ == null) {
          return sourceLocations_.get(index);  } else {
          return sourceLocationsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .perfetto.protos.SourceLocation source_locations = 4;</code>
       */
      public java.util.List<? extends perfetto.protos.SourceLocationOuterClass.SourceLocationOrBuilder> 
           getSourceLocationsOrBuilderList() {
        if (sourceLocationsBuilder_ != null) {
          return sourceLocationsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(sourceLocations_);
        }
      }
      /**
       * <code>repeated .perfetto.protos.SourceLocation source_locations = 4;</code>
       */
      public perfetto.protos.SourceLocationOuterClass.SourceLocation.Builder addSourceLocationsBuilder() {
        return getSourceLocationsFieldBuilder().addBuilder(
            perfetto.protos.SourceLocationOuterClass.SourceLocation.getDefaultInstance());
      }
      /**
       * <code>repeated .perfetto.protos.SourceLocation source_locations = 4;</code>
       */
      public perfetto.protos.SourceLocationOuterClass.SourceLocation.Builder addSourceLocationsBuilder(
          int index) {
        return getSourceLocationsFieldBuilder().addBuilder(
            index, perfetto.protos.SourceLocationOuterClass.SourceLocation.getDefaultInstance());
      }
      /**
       * <code>repeated .perfetto.protos.SourceLocation source_locations = 4;</code>
       */
      public java.util.List<perfetto.protos.SourceLocationOuterClass.SourceLocation.Builder> 
           getSourceLocationsBuilderList() {
        return getSourceLocationsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.SourceLocationOuterClass.SourceLocation, perfetto.protos.SourceLocationOuterClass.SourceLocation.Builder, perfetto.protos.SourceLocationOuterClass.SourceLocationOrBuilder> 
          getSourceLocationsFieldBuilder() {
        if (sourceLocationsBuilder_ == null) {
          sourceLocationsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              perfetto.protos.SourceLocationOuterClass.SourceLocation, perfetto.protos.SourceLocationOuterClass.SourceLocation.Builder, perfetto.protos.SourceLocationOuterClass.SourceLocationOrBuilder>(
                  sourceLocations_,
                  ((bitField0_ & 0x00000010) != 0),
                  getParentForChildren(),
                  isClean());
          sourceLocations_ = null;
        }
        return sourceLocationsBuilder_;
      }

      private java.util.List<perfetto.protos.SourceLocationOuterClass.UnsymbolizedSourceLocation> unsymbolizedSourceLocations_ =
        java.util.Collections.emptyList();
      private void ensureUnsymbolizedSourceLocationsIsMutable() {
        if (!((bitField0_ & 0x00000020) != 0)) {
          unsymbolizedSourceLocations_ = new java.util.ArrayList<perfetto.protos.SourceLocationOuterClass.UnsymbolizedSourceLocation>(unsymbolizedSourceLocations_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.SourceLocationOuterClass.UnsymbolizedSourceLocation, perfetto.protos.SourceLocationOuterClass.UnsymbolizedSourceLocation.Builder, perfetto.protos.SourceLocationOuterClass.UnsymbolizedSourceLocationOrBuilder> unsymbolizedSourceLocationsBuilder_;

      /**
       * <code>repeated .perfetto.protos.UnsymbolizedSourceLocation unsymbolized_source_locations = 28;</code>
       */
      public java.util.List<perfetto.protos.SourceLocationOuterClass.UnsymbolizedSourceLocation> getUnsymbolizedSourceLocationsList() {
        if (unsymbolizedSourceLocationsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(unsymbolizedSourceLocations_);
        } else {
          return unsymbolizedSourceLocationsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .perfetto.protos.UnsymbolizedSourceLocation unsymbolized_source_locations = 28;</code>
       */
      public int getUnsymbolizedSourceLocationsCount() {
        if (unsymbolizedSourceLocationsBuilder_ == null) {
          return unsymbolizedSourceLocations_.size();
        } else {
          return unsymbolizedSourceLocationsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .perfetto.protos.UnsymbolizedSourceLocation unsymbolized_source_locations = 28;</code>
       */
      public perfetto.protos.SourceLocationOuterClass.UnsymbolizedSourceLocation getUnsymbolizedSourceLocations(int index) {
        if (unsymbolizedSourceLocationsBuilder_ == null) {
          return unsymbolizedSourceLocations_.get(index);
        } else {
          return unsymbolizedSourceLocationsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .perfetto.protos.UnsymbolizedSourceLocation unsymbolized_source_locations = 28;</code>
       */
      public Builder setUnsymbolizedSourceLocations(
          int index, perfetto.protos.SourceLocationOuterClass.UnsymbolizedSourceLocation value) {
        if (unsymbolizedSourceLocationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUnsymbolizedSourceLocationsIsMutable();
          unsymbolizedSourceLocations_.set(index, value);
          onChanged();
        } else {
          unsymbolizedSourceLocationsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.UnsymbolizedSourceLocation unsymbolized_source_locations = 28;</code>
       */
      public Builder setUnsymbolizedSourceLocations(
          int index, perfetto.protos.SourceLocationOuterClass.UnsymbolizedSourceLocation.Builder builderForValue) {
        if (unsymbolizedSourceLocationsBuilder_ == null) {
          ensureUnsymbolizedSourceLocationsIsMutable();
          unsymbolizedSourceLocations_.set(index, builderForValue.build());
          onChanged();
        } else {
          unsymbolizedSourceLocationsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.UnsymbolizedSourceLocation unsymbolized_source_locations = 28;</code>
       */
      public Builder addUnsymbolizedSourceLocations(perfetto.protos.SourceLocationOuterClass.UnsymbolizedSourceLocation value) {
        if (unsymbolizedSourceLocationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUnsymbolizedSourceLocationsIsMutable();
          unsymbolizedSourceLocations_.add(value);
          onChanged();
        } else {
          unsymbolizedSourceLocationsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.UnsymbolizedSourceLocation unsymbolized_source_locations = 28;</code>
       */
      public Builder addUnsymbolizedSourceLocations(
          int index, perfetto.protos.SourceLocationOuterClass.UnsymbolizedSourceLocation value) {
        if (unsymbolizedSourceLocationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureUnsymbolizedSourceLocationsIsMutable();
          unsymbolizedSourceLocations_.add(index, value);
          onChanged();
        } else {
          unsymbolizedSourceLocationsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.UnsymbolizedSourceLocation unsymbolized_source_locations = 28;</code>
       */
      public Builder addUnsymbolizedSourceLocations(
          perfetto.protos.SourceLocationOuterClass.UnsymbolizedSourceLocation.Builder builderForValue) {
        if (unsymbolizedSourceLocationsBuilder_ == null) {
          ensureUnsymbolizedSourceLocationsIsMutable();
          unsymbolizedSourceLocations_.add(builderForValue.build());
          onChanged();
        } else {
          unsymbolizedSourceLocationsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.UnsymbolizedSourceLocation unsymbolized_source_locations = 28;</code>
       */
      public Builder addUnsymbolizedSourceLocations(
          int index, perfetto.protos.SourceLocationOuterClass.UnsymbolizedSourceLocation.Builder builderForValue) {
        if (unsymbolizedSourceLocationsBuilder_ == null) {
          ensureUnsymbolizedSourceLocationsIsMutable();
          unsymbolizedSourceLocations_.add(index, builderForValue.build());
          onChanged();
        } else {
          unsymbolizedSourceLocationsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.UnsymbolizedSourceLocation unsymbolized_source_locations = 28;</code>
       */
      public Builder addAllUnsymbolizedSourceLocations(
          java.lang.Iterable<? extends perfetto.protos.SourceLocationOuterClass.UnsymbolizedSourceLocation> values) {
        if (unsymbolizedSourceLocationsBuilder_ == null) {
          ensureUnsymbolizedSourceLocationsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, unsymbolizedSourceLocations_);
          onChanged();
        } else {
          unsymbolizedSourceLocationsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.UnsymbolizedSourceLocation unsymbolized_source_locations = 28;</code>
       */
      public Builder clearUnsymbolizedSourceLocations() {
        if (unsymbolizedSourceLocationsBuilder_ == null) {
          unsymbolizedSourceLocations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          unsymbolizedSourceLocationsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.UnsymbolizedSourceLocation unsymbolized_source_locations = 28;</code>
       */
      public Builder removeUnsymbolizedSourceLocations(int index) {
        if (unsymbolizedSourceLocationsBuilder_ == null) {
          ensureUnsymbolizedSourceLocationsIsMutable();
          unsymbolizedSourceLocations_.remove(index);
          onChanged();
        } else {
          unsymbolizedSourceLocationsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.UnsymbolizedSourceLocation unsymbolized_source_locations = 28;</code>
       */
      public perfetto.protos.SourceLocationOuterClass.UnsymbolizedSourceLocation.Builder getUnsymbolizedSourceLocationsBuilder(
          int index) {
        return getUnsymbolizedSourceLocationsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .perfetto.protos.UnsymbolizedSourceLocation unsymbolized_source_locations = 28;</code>
       */
      public perfetto.protos.SourceLocationOuterClass.UnsymbolizedSourceLocationOrBuilder getUnsymbolizedSourceLocationsOrBuilder(
          int index) {
        if (unsymbolizedSourceLocationsBuilder_ == null) {
          return unsymbolizedSourceLocations_.get(index);  } else {
          return unsymbolizedSourceLocationsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .perfetto.protos.UnsymbolizedSourceLocation unsymbolized_source_locations = 28;</code>
       */
      public java.util.List<? extends perfetto.protos.SourceLocationOuterClass.UnsymbolizedSourceLocationOrBuilder> 
           getUnsymbolizedSourceLocationsOrBuilderList() {
        if (unsymbolizedSourceLocationsBuilder_ != null) {
          return unsymbolizedSourceLocationsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(unsymbolizedSourceLocations_);
        }
      }
      /**
       * <code>repeated .perfetto.protos.UnsymbolizedSourceLocation unsymbolized_source_locations = 28;</code>
       */
      public perfetto.protos.SourceLocationOuterClass.UnsymbolizedSourceLocation.Builder addUnsymbolizedSourceLocationsBuilder() {
        return getUnsymbolizedSourceLocationsFieldBuilder().addBuilder(
            perfetto.protos.SourceLocationOuterClass.UnsymbolizedSourceLocation.getDefaultInstance());
      }
      /**
       * <code>repeated .perfetto.protos.UnsymbolizedSourceLocation unsymbolized_source_locations = 28;</code>
       */
      public perfetto.protos.SourceLocationOuterClass.UnsymbolizedSourceLocation.Builder addUnsymbolizedSourceLocationsBuilder(
          int index) {
        return getUnsymbolizedSourceLocationsFieldBuilder().addBuilder(
            index, perfetto.protos.SourceLocationOuterClass.UnsymbolizedSourceLocation.getDefaultInstance());
      }
      /**
       * <code>repeated .perfetto.protos.UnsymbolizedSourceLocation unsymbolized_source_locations = 28;</code>
       */
      public java.util.List<perfetto.protos.SourceLocationOuterClass.UnsymbolizedSourceLocation.Builder> 
           getUnsymbolizedSourceLocationsBuilderList() {
        return getUnsymbolizedSourceLocationsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.SourceLocationOuterClass.UnsymbolizedSourceLocation, perfetto.protos.SourceLocationOuterClass.UnsymbolizedSourceLocation.Builder, perfetto.protos.SourceLocationOuterClass.UnsymbolizedSourceLocationOrBuilder> 
          getUnsymbolizedSourceLocationsFieldBuilder() {
        if (unsymbolizedSourceLocationsBuilder_ == null) {
          unsymbolizedSourceLocationsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              perfetto.protos.SourceLocationOuterClass.UnsymbolizedSourceLocation, perfetto.protos.SourceLocationOuterClass.UnsymbolizedSourceLocation.Builder, perfetto.protos.SourceLocationOuterClass.UnsymbolizedSourceLocationOrBuilder>(
                  unsymbolizedSourceLocations_,
                  ((bitField0_ & 0x00000020) != 0),
                  getParentForChildren(),
                  isClean());
          unsymbolizedSourceLocations_ = null;
        }
        return unsymbolizedSourceLocationsBuilder_;
      }

      private java.util.List<perfetto.protos.LogMessageOuterClass.LogMessageBody> logMessageBody_ =
        java.util.Collections.emptyList();
      private void ensureLogMessageBodyIsMutable() {
        if (!((bitField0_ & 0x00000040) != 0)) {
          logMessageBody_ = new java.util.ArrayList<perfetto.protos.LogMessageOuterClass.LogMessageBody>(logMessageBody_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.LogMessageOuterClass.LogMessageBody, perfetto.protos.LogMessageOuterClass.LogMessageBody.Builder, perfetto.protos.LogMessageOuterClass.LogMessageBodyOrBuilder> logMessageBodyBuilder_;

      /**
       * <code>repeated .perfetto.protos.LogMessageBody log_message_body = 20;</code>
       */
      public java.util.List<perfetto.protos.LogMessageOuterClass.LogMessageBody> getLogMessageBodyList() {
        if (logMessageBodyBuilder_ == null) {
          return java.util.Collections.unmodifiableList(logMessageBody_);
        } else {
          return logMessageBodyBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .perfetto.protos.LogMessageBody log_message_body = 20;</code>
       */
      public int getLogMessageBodyCount() {
        if (logMessageBodyBuilder_ == null) {
          return logMessageBody_.size();
        } else {
          return logMessageBodyBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .perfetto.protos.LogMessageBody log_message_body = 20;</code>
       */
      public perfetto.protos.LogMessageOuterClass.LogMessageBody getLogMessageBody(int index) {
        if (logMessageBodyBuilder_ == null) {
          return logMessageBody_.get(index);
        } else {
          return logMessageBodyBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .perfetto.protos.LogMessageBody log_message_body = 20;</code>
       */
      public Builder setLogMessageBody(
          int index, perfetto.protos.LogMessageOuterClass.LogMessageBody value) {
        if (logMessageBodyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLogMessageBodyIsMutable();
          logMessageBody_.set(index, value);
          onChanged();
        } else {
          logMessageBodyBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.LogMessageBody log_message_body = 20;</code>
       */
      public Builder setLogMessageBody(
          int index, perfetto.protos.LogMessageOuterClass.LogMessageBody.Builder builderForValue) {
        if (logMessageBodyBuilder_ == null) {
          ensureLogMessageBodyIsMutable();
          logMessageBody_.set(index, builderForValue.build());
          onChanged();
        } else {
          logMessageBodyBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.LogMessageBody log_message_body = 20;</code>
       */
      public Builder addLogMessageBody(perfetto.protos.LogMessageOuterClass.LogMessageBody value) {
        if (logMessageBodyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLogMessageBodyIsMutable();
          logMessageBody_.add(value);
          onChanged();
        } else {
          logMessageBodyBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.LogMessageBody log_message_body = 20;</code>
       */
      public Builder addLogMessageBody(
          int index, perfetto.protos.LogMessageOuterClass.LogMessageBody value) {
        if (logMessageBodyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLogMessageBodyIsMutable();
          logMessageBody_.add(index, value);
          onChanged();
        } else {
          logMessageBodyBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.LogMessageBody log_message_body = 20;</code>
       */
      public Builder addLogMessageBody(
          perfetto.protos.LogMessageOuterClass.LogMessageBody.Builder builderForValue) {
        if (logMessageBodyBuilder_ == null) {
          ensureLogMessageBodyIsMutable();
          logMessageBody_.add(builderForValue.build());
          onChanged();
        } else {
          logMessageBodyBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.LogMessageBody log_message_body = 20;</code>
       */
      public Builder addLogMessageBody(
          int index, perfetto.protos.LogMessageOuterClass.LogMessageBody.Builder builderForValue) {
        if (logMessageBodyBuilder_ == null) {
          ensureLogMessageBodyIsMutable();
          logMessageBody_.add(index, builderForValue.build());
          onChanged();
        } else {
          logMessageBodyBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.LogMessageBody log_message_body = 20;</code>
       */
      public Builder addAllLogMessageBody(
          java.lang.Iterable<? extends perfetto.protos.LogMessageOuterClass.LogMessageBody> values) {
        if (logMessageBodyBuilder_ == null) {
          ensureLogMessageBodyIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, logMessageBody_);
          onChanged();
        } else {
          logMessageBodyBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.LogMessageBody log_message_body = 20;</code>
       */
      public Builder clearLogMessageBody() {
        if (logMessageBodyBuilder_ == null) {
          logMessageBody_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          logMessageBodyBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.LogMessageBody log_message_body = 20;</code>
       */
      public Builder removeLogMessageBody(int index) {
        if (logMessageBodyBuilder_ == null) {
          ensureLogMessageBodyIsMutable();
          logMessageBody_.remove(index);
          onChanged();
        } else {
          logMessageBodyBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.LogMessageBody log_message_body = 20;</code>
       */
      public perfetto.protos.LogMessageOuterClass.LogMessageBody.Builder getLogMessageBodyBuilder(
          int index) {
        return getLogMessageBodyFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .perfetto.protos.LogMessageBody log_message_body = 20;</code>
       */
      public perfetto.protos.LogMessageOuterClass.LogMessageBodyOrBuilder getLogMessageBodyOrBuilder(
          int index) {
        if (logMessageBodyBuilder_ == null) {
          return logMessageBody_.get(index);  } else {
          return logMessageBodyBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .perfetto.protos.LogMessageBody log_message_body = 20;</code>
       */
      public java.util.List<? extends perfetto.protos.LogMessageOuterClass.LogMessageBodyOrBuilder> 
           getLogMessageBodyOrBuilderList() {
        if (logMessageBodyBuilder_ != null) {
          return logMessageBodyBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(logMessageBody_);
        }
      }
      /**
       * <code>repeated .perfetto.protos.LogMessageBody log_message_body = 20;</code>
       */
      public perfetto.protos.LogMessageOuterClass.LogMessageBody.Builder addLogMessageBodyBuilder() {
        return getLogMessageBodyFieldBuilder().addBuilder(
            perfetto.protos.LogMessageOuterClass.LogMessageBody.getDefaultInstance());
      }
      /**
       * <code>repeated .perfetto.protos.LogMessageBody log_message_body = 20;</code>
       */
      public perfetto.protos.LogMessageOuterClass.LogMessageBody.Builder addLogMessageBodyBuilder(
          int index) {
        return getLogMessageBodyFieldBuilder().addBuilder(
            index, perfetto.protos.LogMessageOuterClass.LogMessageBody.getDefaultInstance());
      }
      /**
       * <code>repeated .perfetto.protos.LogMessageBody log_message_body = 20;</code>
       */
      public java.util.List<perfetto.protos.LogMessageOuterClass.LogMessageBody.Builder> 
           getLogMessageBodyBuilderList() {
        return getLogMessageBodyFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.LogMessageOuterClass.LogMessageBody, perfetto.protos.LogMessageOuterClass.LogMessageBody.Builder, perfetto.protos.LogMessageOuterClass.LogMessageBodyOrBuilder> 
          getLogMessageBodyFieldBuilder() {
        if (logMessageBodyBuilder_ == null) {
          logMessageBodyBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              perfetto.protos.LogMessageOuterClass.LogMessageBody, perfetto.protos.LogMessageOuterClass.LogMessageBody.Builder, perfetto.protos.LogMessageOuterClass.LogMessageBodyOrBuilder>(
                  logMessageBody_,
                  ((bitField0_ & 0x00000040) != 0),
                  getParentForChildren(),
                  isClean());
          logMessageBody_ = null;
        }
        return logMessageBodyBuilder_;
      }

      private java.util.List<perfetto.protos.ChromeHistogramSampleOuterClass.HistogramName> histogramNames_ =
        java.util.Collections.emptyList();
      private void ensureHistogramNamesIsMutable() {
        if (!((bitField0_ & 0x00000080) != 0)) {
          histogramNames_ = new java.util.ArrayList<perfetto.protos.ChromeHistogramSampleOuterClass.HistogramName>(histogramNames_);
          bitField0_ |= 0x00000080;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.ChromeHistogramSampleOuterClass.HistogramName, perfetto.protos.ChromeHistogramSampleOuterClass.HistogramName.Builder, perfetto.protos.ChromeHistogramSampleOuterClass.HistogramNameOrBuilder> histogramNamesBuilder_;

      /**
       * <code>repeated .perfetto.protos.HistogramName histogram_names = 25;</code>
       */
      public java.util.List<perfetto.protos.ChromeHistogramSampleOuterClass.HistogramName> getHistogramNamesList() {
        if (histogramNamesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(histogramNames_);
        } else {
          return histogramNamesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .perfetto.protos.HistogramName histogram_names = 25;</code>
       */
      public int getHistogramNamesCount() {
        if (histogramNamesBuilder_ == null) {
          return histogramNames_.size();
        } else {
          return histogramNamesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .perfetto.protos.HistogramName histogram_names = 25;</code>
       */
      public perfetto.protos.ChromeHistogramSampleOuterClass.HistogramName getHistogramNames(int index) {
        if (histogramNamesBuilder_ == null) {
          return histogramNames_.get(index);
        } else {
          return histogramNamesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .perfetto.protos.HistogramName histogram_names = 25;</code>
       */
      public Builder setHistogramNames(
          int index, perfetto.protos.ChromeHistogramSampleOuterClass.HistogramName value) {
        if (histogramNamesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHistogramNamesIsMutable();
          histogramNames_.set(index, value);
          onChanged();
        } else {
          histogramNamesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.HistogramName histogram_names = 25;</code>
       */
      public Builder setHistogramNames(
          int index, perfetto.protos.ChromeHistogramSampleOuterClass.HistogramName.Builder builderForValue) {
        if (histogramNamesBuilder_ == null) {
          ensureHistogramNamesIsMutable();
          histogramNames_.set(index, builderForValue.build());
          onChanged();
        } else {
          histogramNamesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.HistogramName histogram_names = 25;</code>
       */
      public Builder addHistogramNames(perfetto.protos.ChromeHistogramSampleOuterClass.HistogramName value) {
        if (histogramNamesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHistogramNamesIsMutable();
          histogramNames_.add(value);
          onChanged();
        } else {
          histogramNamesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.HistogramName histogram_names = 25;</code>
       */
      public Builder addHistogramNames(
          int index, perfetto.protos.ChromeHistogramSampleOuterClass.HistogramName value) {
        if (histogramNamesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHistogramNamesIsMutable();
          histogramNames_.add(index, value);
          onChanged();
        } else {
          histogramNamesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.HistogramName histogram_names = 25;</code>
       */
      public Builder addHistogramNames(
          perfetto.protos.ChromeHistogramSampleOuterClass.HistogramName.Builder builderForValue) {
        if (histogramNamesBuilder_ == null) {
          ensureHistogramNamesIsMutable();
          histogramNames_.add(builderForValue.build());
          onChanged();
        } else {
          histogramNamesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.HistogramName histogram_names = 25;</code>
       */
      public Builder addHistogramNames(
          int index, perfetto.protos.ChromeHistogramSampleOuterClass.HistogramName.Builder builderForValue) {
        if (histogramNamesBuilder_ == null) {
          ensureHistogramNamesIsMutable();
          histogramNames_.add(index, builderForValue.build());
          onChanged();
        } else {
          histogramNamesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.HistogramName histogram_names = 25;</code>
       */
      public Builder addAllHistogramNames(
          java.lang.Iterable<? extends perfetto.protos.ChromeHistogramSampleOuterClass.HistogramName> values) {
        if (histogramNamesBuilder_ == null) {
          ensureHistogramNamesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, histogramNames_);
          onChanged();
        } else {
          histogramNamesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.HistogramName histogram_names = 25;</code>
       */
      public Builder clearHistogramNames() {
        if (histogramNamesBuilder_ == null) {
          histogramNames_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
        } else {
          histogramNamesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.HistogramName histogram_names = 25;</code>
       */
      public Builder removeHistogramNames(int index) {
        if (histogramNamesBuilder_ == null) {
          ensureHistogramNamesIsMutable();
          histogramNames_.remove(index);
          onChanged();
        } else {
          histogramNamesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.HistogramName histogram_names = 25;</code>
       */
      public perfetto.protos.ChromeHistogramSampleOuterClass.HistogramName.Builder getHistogramNamesBuilder(
          int index) {
        return getHistogramNamesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .perfetto.protos.HistogramName histogram_names = 25;</code>
       */
      public perfetto.protos.ChromeHistogramSampleOuterClass.HistogramNameOrBuilder getHistogramNamesOrBuilder(
          int index) {
        if (histogramNamesBuilder_ == null) {
          return histogramNames_.get(index);  } else {
          return histogramNamesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .perfetto.protos.HistogramName histogram_names = 25;</code>
       */
      public java.util.List<? extends perfetto.protos.ChromeHistogramSampleOuterClass.HistogramNameOrBuilder> 
           getHistogramNamesOrBuilderList() {
        if (histogramNamesBuilder_ != null) {
          return histogramNamesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(histogramNames_);
        }
      }
      /**
       * <code>repeated .perfetto.protos.HistogramName histogram_names = 25;</code>
       */
      public perfetto.protos.ChromeHistogramSampleOuterClass.HistogramName.Builder addHistogramNamesBuilder() {
        return getHistogramNamesFieldBuilder().addBuilder(
            perfetto.protos.ChromeHistogramSampleOuterClass.HistogramName.getDefaultInstance());
      }
      /**
       * <code>repeated .perfetto.protos.HistogramName histogram_names = 25;</code>
       */
      public perfetto.protos.ChromeHistogramSampleOuterClass.HistogramName.Builder addHistogramNamesBuilder(
          int index) {
        return getHistogramNamesFieldBuilder().addBuilder(
            index, perfetto.protos.ChromeHistogramSampleOuterClass.HistogramName.getDefaultInstance());
      }
      /**
       * <code>repeated .perfetto.protos.HistogramName histogram_names = 25;</code>
       */
      public java.util.List<perfetto.protos.ChromeHistogramSampleOuterClass.HistogramName.Builder> 
           getHistogramNamesBuilderList() {
        return getHistogramNamesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.ChromeHistogramSampleOuterClass.HistogramName, perfetto.protos.ChromeHistogramSampleOuterClass.HistogramName.Builder, perfetto.protos.ChromeHistogramSampleOuterClass.HistogramNameOrBuilder> 
          getHistogramNamesFieldBuilder() {
        if (histogramNamesBuilder_ == null) {
          histogramNamesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              perfetto.protos.ChromeHistogramSampleOuterClass.HistogramName, perfetto.protos.ChromeHistogramSampleOuterClass.HistogramName.Builder, perfetto.protos.ChromeHistogramSampleOuterClass.HistogramNameOrBuilder>(
                  histogramNames_,
                  ((bitField0_ & 0x00000080) != 0),
                  getParentForChildren(),
                  isClean());
          histogramNames_ = null;
        }
        return histogramNamesBuilder_;
      }

      private java.util.List<perfetto.protos.ProfileCommon.InternedString> buildIds_ =
        java.util.Collections.emptyList();
      private void ensureBuildIdsIsMutable() {
        if (!((bitField0_ & 0x00000100) != 0)) {
          buildIds_ = new java.util.ArrayList<perfetto.protos.ProfileCommon.InternedString>(buildIds_);
          bitField0_ |= 0x00000100;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.ProfileCommon.InternedString, perfetto.protos.ProfileCommon.InternedString.Builder, perfetto.protos.ProfileCommon.InternedStringOrBuilder> buildIdsBuilder_;

      /**
       * <pre>
       * Build IDs of exectuable files.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString build_ids = 16;</code>
       */
      public java.util.List<perfetto.protos.ProfileCommon.InternedString> getBuildIdsList() {
        if (buildIdsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(buildIds_);
        } else {
          return buildIdsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Build IDs of exectuable files.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString build_ids = 16;</code>
       */
      public int getBuildIdsCount() {
        if (buildIdsBuilder_ == null) {
          return buildIds_.size();
        } else {
          return buildIdsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Build IDs of exectuable files.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString build_ids = 16;</code>
       */
      public perfetto.protos.ProfileCommon.InternedString getBuildIds(int index) {
        if (buildIdsBuilder_ == null) {
          return buildIds_.get(index);
        } else {
          return buildIdsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Build IDs of exectuable files.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString build_ids = 16;</code>
       */
      public Builder setBuildIds(
          int index, perfetto.protos.ProfileCommon.InternedString value) {
        if (buildIdsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBuildIdsIsMutable();
          buildIds_.set(index, value);
          onChanged();
        } else {
          buildIdsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Build IDs of exectuable files.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString build_ids = 16;</code>
       */
      public Builder setBuildIds(
          int index, perfetto.protos.ProfileCommon.InternedString.Builder builderForValue) {
        if (buildIdsBuilder_ == null) {
          ensureBuildIdsIsMutable();
          buildIds_.set(index, builderForValue.build());
          onChanged();
        } else {
          buildIdsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Build IDs of exectuable files.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString build_ids = 16;</code>
       */
      public Builder addBuildIds(perfetto.protos.ProfileCommon.InternedString value) {
        if (buildIdsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBuildIdsIsMutable();
          buildIds_.add(value);
          onChanged();
        } else {
          buildIdsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Build IDs of exectuable files.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString build_ids = 16;</code>
       */
      public Builder addBuildIds(
          int index, perfetto.protos.ProfileCommon.InternedString value) {
        if (buildIdsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBuildIdsIsMutable();
          buildIds_.add(index, value);
          onChanged();
        } else {
          buildIdsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Build IDs of exectuable files.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString build_ids = 16;</code>
       */
      public Builder addBuildIds(
          perfetto.protos.ProfileCommon.InternedString.Builder builderForValue) {
        if (buildIdsBuilder_ == null) {
          ensureBuildIdsIsMutable();
          buildIds_.add(builderForValue.build());
          onChanged();
        } else {
          buildIdsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Build IDs of exectuable files.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString build_ids = 16;</code>
       */
      public Builder addBuildIds(
          int index, perfetto.protos.ProfileCommon.InternedString.Builder builderForValue) {
        if (buildIdsBuilder_ == null) {
          ensureBuildIdsIsMutable();
          buildIds_.add(index, builderForValue.build());
          onChanged();
        } else {
          buildIdsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Build IDs of exectuable files.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString build_ids = 16;</code>
       */
      public Builder addAllBuildIds(
          java.lang.Iterable<? extends perfetto.protos.ProfileCommon.InternedString> values) {
        if (buildIdsBuilder_ == null) {
          ensureBuildIdsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, buildIds_);
          onChanged();
        } else {
          buildIdsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Build IDs of exectuable files.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString build_ids = 16;</code>
       */
      public Builder clearBuildIds() {
        if (buildIdsBuilder_ == null) {
          buildIds_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          buildIdsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Build IDs of exectuable files.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString build_ids = 16;</code>
       */
      public Builder removeBuildIds(int index) {
        if (buildIdsBuilder_ == null) {
          ensureBuildIdsIsMutable();
          buildIds_.remove(index);
          onChanged();
        } else {
          buildIdsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Build IDs of exectuable files.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString build_ids = 16;</code>
       */
      public perfetto.protos.ProfileCommon.InternedString.Builder getBuildIdsBuilder(
          int index) {
        return getBuildIdsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Build IDs of exectuable files.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString build_ids = 16;</code>
       */
      public perfetto.protos.ProfileCommon.InternedStringOrBuilder getBuildIdsOrBuilder(
          int index) {
        if (buildIdsBuilder_ == null) {
          return buildIds_.get(index);  } else {
          return buildIdsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Build IDs of exectuable files.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString build_ids = 16;</code>
       */
      public java.util.List<? extends perfetto.protos.ProfileCommon.InternedStringOrBuilder> 
           getBuildIdsOrBuilderList() {
        if (buildIdsBuilder_ != null) {
          return buildIdsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(buildIds_);
        }
      }
      /**
       * <pre>
       * Build IDs of exectuable files.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString build_ids = 16;</code>
       */
      public perfetto.protos.ProfileCommon.InternedString.Builder addBuildIdsBuilder() {
        return getBuildIdsFieldBuilder().addBuilder(
            perfetto.protos.ProfileCommon.InternedString.getDefaultInstance());
      }
      /**
       * <pre>
       * Build IDs of exectuable files.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString build_ids = 16;</code>
       */
      public perfetto.protos.ProfileCommon.InternedString.Builder addBuildIdsBuilder(
          int index) {
        return getBuildIdsFieldBuilder().addBuilder(
            index, perfetto.protos.ProfileCommon.InternedString.getDefaultInstance());
      }
      /**
       * <pre>
       * Build IDs of exectuable files.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString build_ids = 16;</code>
       */
      public java.util.List<perfetto.protos.ProfileCommon.InternedString.Builder> 
           getBuildIdsBuilderList() {
        return getBuildIdsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.ProfileCommon.InternedString, perfetto.protos.ProfileCommon.InternedString.Builder, perfetto.protos.ProfileCommon.InternedStringOrBuilder> 
          getBuildIdsFieldBuilder() {
        if (buildIdsBuilder_ == null) {
          buildIdsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              perfetto.protos.ProfileCommon.InternedString, perfetto.protos.ProfileCommon.InternedString.Builder, perfetto.protos.ProfileCommon.InternedStringOrBuilder>(
                  buildIds_,
                  ((bitField0_ & 0x00000100) != 0),
                  getParentForChildren(),
                  isClean());
          buildIds_ = null;
        }
        return buildIdsBuilder_;
      }

      private java.util.List<perfetto.protos.ProfileCommon.InternedString> mappingPaths_ =
        java.util.Collections.emptyList();
      private void ensureMappingPathsIsMutable() {
        if (!((bitField0_ & 0x00000200) != 0)) {
          mappingPaths_ = new java.util.ArrayList<perfetto.protos.ProfileCommon.InternedString>(mappingPaths_);
          bitField0_ |= 0x00000200;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.ProfileCommon.InternedString, perfetto.protos.ProfileCommon.InternedString.Builder, perfetto.protos.ProfileCommon.InternedStringOrBuilder> mappingPathsBuilder_;

      /**
       * <pre>
       * Paths to executable files.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString mapping_paths = 17;</code>
       */
      public java.util.List<perfetto.protos.ProfileCommon.InternedString> getMappingPathsList() {
        if (mappingPathsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(mappingPaths_);
        } else {
          return mappingPathsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Paths to executable files.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString mapping_paths = 17;</code>
       */
      public int getMappingPathsCount() {
        if (mappingPathsBuilder_ == null) {
          return mappingPaths_.size();
        } else {
          return mappingPathsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Paths to executable files.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString mapping_paths = 17;</code>
       */
      public perfetto.protos.ProfileCommon.InternedString getMappingPaths(int index) {
        if (mappingPathsBuilder_ == null) {
          return mappingPaths_.get(index);
        } else {
          return mappingPathsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Paths to executable files.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString mapping_paths = 17;</code>
       */
      public Builder setMappingPaths(
          int index, perfetto.protos.ProfileCommon.InternedString value) {
        if (mappingPathsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMappingPathsIsMutable();
          mappingPaths_.set(index, value);
          onChanged();
        } else {
          mappingPathsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Paths to executable files.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString mapping_paths = 17;</code>
       */
      public Builder setMappingPaths(
          int index, perfetto.protos.ProfileCommon.InternedString.Builder builderForValue) {
        if (mappingPathsBuilder_ == null) {
          ensureMappingPathsIsMutable();
          mappingPaths_.set(index, builderForValue.build());
          onChanged();
        } else {
          mappingPathsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Paths to executable files.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString mapping_paths = 17;</code>
       */
      public Builder addMappingPaths(perfetto.protos.ProfileCommon.InternedString value) {
        if (mappingPathsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMappingPathsIsMutable();
          mappingPaths_.add(value);
          onChanged();
        } else {
          mappingPathsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Paths to executable files.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString mapping_paths = 17;</code>
       */
      public Builder addMappingPaths(
          int index, perfetto.protos.ProfileCommon.InternedString value) {
        if (mappingPathsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMappingPathsIsMutable();
          mappingPaths_.add(index, value);
          onChanged();
        } else {
          mappingPathsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Paths to executable files.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString mapping_paths = 17;</code>
       */
      public Builder addMappingPaths(
          perfetto.protos.ProfileCommon.InternedString.Builder builderForValue) {
        if (mappingPathsBuilder_ == null) {
          ensureMappingPathsIsMutable();
          mappingPaths_.add(builderForValue.build());
          onChanged();
        } else {
          mappingPathsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Paths to executable files.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString mapping_paths = 17;</code>
       */
      public Builder addMappingPaths(
          int index, perfetto.protos.ProfileCommon.InternedString.Builder builderForValue) {
        if (mappingPathsBuilder_ == null) {
          ensureMappingPathsIsMutable();
          mappingPaths_.add(index, builderForValue.build());
          onChanged();
        } else {
          mappingPathsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Paths to executable files.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString mapping_paths = 17;</code>
       */
      public Builder addAllMappingPaths(
          java.lang.Iterable<? extends perfetto.protos.ProfileCommon.InternedString> values) {
        if (mappingPathsBuilder_ == null) {
          ensureMappingPathsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, mappingPaths_);
          onChanged();
        } else {
          mappingPathsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Paths to executable files.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString mapping_paths = 17;</code>
       */
      public Builder clearMappingPaths() {
        if (mappingPathsBuilder_ == null) {
          mappingPaths_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
          onChanged();
        } else {
          mappingPathsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Paths to executable files.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString mapping_paths = 17;</code>
       */
      public Builder removeMappingPaths(int index) {
        if (mappingPathsBuilder_ == null) {
          ensureMappingPathsIsMutable();
          mappingPaths_.remove(index);
          onChanged();
        } else {
          mappingPathsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Paths to executable files.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString mapping_paths = 17;</code>
       */
      public perfetto.protos.ProfileCommon.InternedString.Builder getMappingPathsBuilder(
          int index) {
        return getMappingPathsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Paths to executable files.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString mapping_paths = 17;</code>
       */
      public perfetto.protos.ProfileCommon.InternedStringOrBuilder getMappingPathsOrBuilder(
          int index) {
        if (mappingPathsBuilder_ == null) {
          return mappingPaths_.get(index);  } else {
          return mappingPathsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Paths to executable files.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString mapping_paths = 17;</code>
       */
      public java.util.List<? extends perfetto.protos.ProfileCommon.InternedStringOrBuilder> 
           getMappingPathsOrBuilderList() {
        if (mappingPathsBuilder_ != null) {
          return mappingPathsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(mappingPaths_);
        }
      }
      /**
       * <pre>
       * Paths to executable files.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString mapping_paths = 17;</code>
       */
      public perfetto.protos.ProfileCommon.InternedString.Builder addMappingPathsBuilder() {
        return getMappingPathsFieldBuilder().addBuilder(
            perfetto.protos.ProfileCommon.InternedString.getDefaultInstance());
      }
      /**
       * <pre>
       * Paths to executable files.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString mapping_paths = 17;</code>
       */
      public perfetto.protos.ProfileCommon.InternedString.Builder addMappingPathsBuilder(
          int index) {
        return getMappingPathsFieldBuilder().addBuilder(
            index, perfetto.protos.ProfileCommon.InternedString.getDefaultInstance());
      }
      /**
       * <pre>
       * Paths to executable files.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString mapping_paths = 17;</code>
       */
      public java.util.List<perfetto.protos.ProfileCommon.InternedString.Builder> 
           getMappingPathsBuilderList() {
        return getMappingPathsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.ProfileCommon.InternedString, perfetto.protos.ProfileCommon.InternedString.Builder, perfetto.protos.ProfileCommon.InternedStringOrBuilder> 
          getMappingPathsFieldBuilder() {
        if (mappingPathsBuilder_ == null) {
          mappingPathsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              perfetto.protos.ProfileCommon.InternedString, perfetto.protos.ProfileCommon.InternedString.Builder, perfetto.protos.ProfileCommon.InternedStringOrBuilder>(
                  mappingPaths_,
                  ((bitField0_ & 0x00000200) != 0),
                  getParentForChildren(),
                  isClean());
          mappingPaths_ = null;
        }
        return mappingPathsBuilder_;
      }

      private java.util.List<perfetto.protos.ProfileCommon.InternedString> sourcePaths_ =
        java.util.Collections.emptyList();
      private void ensureSourcePathsIsMutable() {
        if (!((bitField0_ & 0x00000400) != 0)) {
          sourcePaths_ = new java.util.ArrayList<perfetto.protos.ProfileCommon.InternedString>(sourcePaths_);
          bitField0_ |= 0x00000400;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.ProfileCommon.InternedString, perfetto.protos.ProfileCommon.InternedString.Builder, perfetto.protos.ProfileCommon.InternedStringOrBuilder> sourcePathsBuilder_;

      /**
       * <pre>
       * Paths to source files.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString source_paths = 18;</code>
       */
      public java.util.List<perfetto.protos.ProfileCommon.InternedString> getSourcePathsList() {
        if (sourcePathsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(sourcePaths_);
        } else {
          return sourcePathsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Paths to source files.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString source_paths = 18;</code>
       */
      public int getSourcePathsCount() {
        if (sourcePathsBuilder_ == null) {
          return sourcePaths_.size();
        } else {
          return sourcePathsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Paths to source files.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString source_paths = 18;</code>
       */
      public perfetto.protos.ProfileCommon.InternedString getSourcePaths(int index) {
        if (sourcePathsBuilder_ == null) {
          return sourcePaths_.get(index);
        } else {
          return sourcePathsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Paths to source files.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString source_paths = 18;</code>
       */
      public Builder setSourcePaths(
          int index, perfetto.protos.ProfileCommon.InternedString value) {
        if (sourcePathsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSourcePathsIsMutable();
          sourcePaths_.set(index, value);
          onChanged();
        } else {
          sourcePathsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Paths to source files.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString source_paths = 18;</code>
       */
      public Builder setSourcePaths(
          int index, perfetto.protos.ProfileCommon.InternedString.Builder builderForValue) {
        if (sourcePathsBuilder_ == null) {
          ensureSourcePathsIsMutable();
          sourcePaths_.set(index, builderForValue.build());
          onChanged();
        } else {
          sourcePathsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Paths to source files.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString source_paths = 18;</code>
       */
      public Builder addSourcePaths(perfetto.protos.ProfileCommon.InternedString value) {
        if (sourcePathsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSourcePathsIsMutable();
          sourcePaths_.add(value);
          onChanged();
        } else {
          sourcePathsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Paths to source files.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString source_paths = 18;</code>
       */
      public Builder addSourcePaths(
          int index, perfetto.protos.ProfileCommon.InternedString value) {
        if (sourcePathsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSourcePathsIsMutable();
          sourcePaths_.add(index, value);
          onChanged();
        } else {
          sourcePathsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Paths to source files.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString source_paths = 18;</code>
       */
      public Builder addSourcePaths(
          perfetto.protos.ProfileCommon.InternedString.Builder builderForValue) {
        if (sourcePathsBuilder_ == null) {
          ensureSourcePathsIsMutable();
          sourcePaths_.add(builderForValue.build());
          onChanged();
        } else {
          sourcePathsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Paths to source files.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString source_paths = 18;</code>
       */
      public Builder addSourcePaths(
          int index, perfetto.protos.ProfileCommon.InternedString.Builder builderForValue) {
        if (sourcePathsBuilder_ == null) {
          ensureSourcePathsIsMutable();
          sourcePaths_.add(index, builderForValue.build());
          onChanged();
        } else {
          sourcePathsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Paths to source files.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString source_paths = 18;</code>
       */
      public Builder addAllSourcePaths(
          java.lang.Iterable<? extends perfetto.protos.ProfileCommon.InternedString> values) {
        if (sourcePathsBuilder_ == null) {
          ensureSourcePathsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, sourcePaths_);
          onChanged();
        } else {
          sourcePathsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Paths to source files.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString source_paths = 18;</code>
       */
      public Builder clearSourcePaths() {
        if (sourcePathsBuilder_ == null) {
          sourcePaths_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
          onChanged();
        } else {
          sourcePathsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Paths to source files.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString source_paths = 18;</code>
       */
      public Builder removeSourcePaths(int index) {
        if (sourcePathsBuilder_ == null) {
          ensureSourcePathsIsMutable();
          sourcePaths_.remove(index);
          onChanged();
        } else {
          sourcePathsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Paths to source files.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString source_paths = 18;</code>
       */
      public perfetto.protos.ProfileCommon.InternedString.Builder getSourcePathsBuilder(
          int index) {
        return getSourcePathsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Paths to source files.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString source_paths = 18;</code>
       */
      public perfetto.protos.ProfileCommon.InternedStringOrBuilder getSourcePathsOrBuilder(
          int index) {
        if (sourcePathsBuilder_ == null) {
          return sourcePaths_.get(index);  } else {
          return sourcePathsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Paths to source files.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString source_paths = 18;</code>
       */
      public java.util.List<? extends perfetto.protos.ProfileCommon.InternedStringOrBuilder> 
           getSourcePathsOrBuilderList() {
        if (sourcePathsBuilder_ != null) {
          return sourcePathsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(sourcePaths_);
        }
      }
      /**
       * <pre>
       * Paths to source files.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString source_paths = 18;</code>
       */
      public perfetto.protos.ProfileCommon.InternedString.Builder addSourcePathsBuilder() {
        return getSourcePathsFieldBuilder().addBuilder(
            perfetto.protos.ProfileCommon.InternedString.getDefaultInstance());
      }
      /**
       * <pre>
       * Paths to source files.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString source_paths = 18;</code>
       */
      public perfetto.protos.ProfileCommon.InternedString.Builder addSourcePathsBuilder(
          int index) {
        return getSourcePathsFieldBuilder().addBuilder(
            index, perfetto.protos.ProfileCommon.InternedString.getDefaultInstance());
      }
      /**
       * <pre>
       * Paths to source files.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString source_paths = 18;</code>
       */
      public java.util.List<perfetto.protos.ProfileCommon.InternedString.Builder> 
           getSourcePathsBuilderList() {
        return getSourcePathsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.ProfileCommon.InternedString, perfetto.protos.ProfileCommon.InternedString.Builder, perfetto.protos.ProfileCommon.InternedStringOrBuilder> 
          getSourcePathsFieldBuilder() {
        if (sourcePathsBuilder_ == null) {
          sourcePathsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              perfetto.protos.ProfileCommon.InternedString, perfetto.protos.ProfileCommon.InternedString.Builder, perfetto.protos.ProfileCommon.InternedStringOrBuilder>(
                  sourcePaths_,
                  ((bitField0_ & 0x00000400) != 0),
                  getParentForChildren(),
                  isClean());
          sourcePaths_ = null;
        }
        return sourcePathsBuilder_;
      }

      private java.util.List<perfetto.protos.ProfileCommon.InternedString> functionNames_ =
        java.util.Collections.emptyList();
      private void ensureFunctionNamesIsMutable() {
        if (!((bitField0_ & 0x00000800) != 0)) {
          functionNames_ = new java.util.ArrayList<perfetto.protos.ProfileCommon.InternedString>(functionNames_);
          bitField0_ |= 0x00000800;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.ProfileCommon.InternedString, perfetto.protos.ProfileCommon.InternedString.Builder, perfetto.protos.ProfileCommon.InternedStringOrBuilder> functionNamesBuilder_;

      /**
       * <pre>
       * Names of functions used in frames below.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString function_names = 5;</code>
       */
      public java.util.List<perfetto.protos.ProfileCommon.InternedString> getFunctionNamesList() {
        if (functionNamesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(functionNames_);
        } else {
          return functionNamesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Names of functions used in frames below.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString function_names = 5;</code>
       */
      public int getFunctionNamesCount() {
        if (functionNamesBuilder_ == null) {
          return functionNames_.size();
        } else {
          return functionNamesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Names of functions used in frames below.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString function_names = 5;</code>
       */
      public perfetto.protos.ProfileCommon.InternedString getFunctionNames(int index) {
        if (functionNamesBuilder_ == null) {
          return functionNames_.get(index);
        } else {
          return functionNamesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Names of functions used in frames below.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString function_names = 5;</code>
       */
      public Builder setFunctionNames(
          int index, perfetto.protos.ProfileCommon.InternedString value) {
        if (functionNamesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFunctionNamesIsMutable();
          functionNames_.set(index, value);
          onChanged();
        } else {
          functionNamesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Names of functions used in frames below.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString function_names = 5;</code>
       */
      public Builder setFunctionNames(
          int index, perfetto.protos.ProfileCommon.InternedString.Builder builderForValue) {
        if (functionNamesBuilder_ == null) {
          ensureFunctionNamesIsMutable();
          functionNames_.set(index, builderForValue.build());
          onChanged();
        } else {
          functionNamesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Names of functions used in frames below.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString function_names = 5;</code>
       */
      public Builder addFunctionNames(perfetto.protos.ProfileCommon.InternedString value) {
        if (functionNamesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFunctionNamesIsMutable();
          functionNames_.add(value);
          onChanged();
        } else {
          functionNamesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Names of functions used in frames below.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString function_names = 5;</code>
       */
      public Builder addFunctionNames(
          int index, perfetto.protos.ProfileCommon.InternedString value) {
        if (functionNamesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFunctionNamesIsMutable();
          functionNames_.add(index, value);
          onChanged();
        } else {
          functionNamesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Names of functions used in frames below.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString function_names = 5;</code>
       */
      public Builder addFunctionNames(
          perfetto.protos.ProfileCommon.InternedString.Builder builderForValue) {
        if (functionNamesBuilder_ == null) {
          ensureFunctionNamesIsMutable();
          functionNames_.add(builderForValue.build());
          onChanged();
        } else {
          functionNamesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Names of functions used in frames below.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString function_names = 5;</code>
       */
      public Builder addFunctionNames(
          int index, perfetto.protos.ProfileCommon.InternedString.Builder builderForValue) {
        if (functionNamesBuilder_ == null) {
          ensureFunctionNamesIsMutable();
          functionNames_.add(index, builderForValue.build());
          onChanged();
        } else {
          functionNamesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Names of functions used in frames below.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString function_names = 5;</code>
       */
      public Builder addAllFunctionNames(
          java.lang.Iterable<? extends perfetto.protos.ProfileCommon.InternedString> values) {
        if (functionNamesBuilder_ == null) {
          ensureFunctionNamesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, functionNames_);
          onChanged();
        } else {
          functionNamesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Names of functions used in frames below.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString function_names = 5;</code>
       */
      public Builder clearFunctionNames() {
        if (functionNamesBuilder_ == null) {
          functionNames_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
          onChanged();
        } else {
          functionNamesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Names of functions used in frames below.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString function_names = 5;</code>
       */
      public Builder removeFunctionNames(int index) {
        if (functionNamesBuilder_ == null) {
          ensureFunctionNamesIsMutable();
          functionNames_.remove(index);
          onChanged();
        } else {
          functionNamesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Names of functions used in frames below.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString function_names = 5;</code>
       */
      public perfetto.protos.ProfileCommon.InternedString.Builder getFunctionNamesBuilder(
          int index) {
        return getFunctionNamesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Names of functions used in frames below.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString function_names = 5;</code>
       */
      public perfetto.protos.ProfileCommon.InternedStringOrBuilder getFunctionNamesOrBuilder(
          int index) {
        if (functionNamesBuilder_ == null) {
          return functionNames_.get(index);  } else {
          return functionNamesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Names of functions used in frames below.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString function_names = 5;</code>
       */
      public java.util.List<? extends perfetto.protos.ProfileCommon.InternedStringOrBuilder> 
           getFunctionNamesOrBuilderList() {
        if (functionNamesBuilder_ != null) {
          return functionNamesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(functionNames_);
        }
      }
      /**
       * <pre>
       * Names of functions used in frames below.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString function_names = 5;</code>
       */
      public perfetto.protos.ProfileCommon.InternedString.Builder addFunctionNamesBuilder() {
        return getFunctionNamesFieldBuilder().addBuilder(
            perfetto.protos.ProfileCommon.InternedString.getDefaultInstance());
      }
      /**
       * <pre>
       * Names of functions used in frames below.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString function_names = 5;</code>
       */
      public perfetto.protos.ProfileCommon.InternedString.Builder addFunctionNamesBuilder(
          int index) {
        return getFunctionNamesFieldBuilder().addBuilder(
            index, perfetto.protos.ProfileCommon.InternedString.getDefaultInstance());
      }
      /**
       * <pre>
       * Names of functions used in frames below.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString function_names = 5;</code>
       */
      public java.util.List<perfetto.protos.ProfileCommon.InternedString.Builder> 
           getFunctionNamesBuilderList() {
        return getFunctionNamesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.ProfileCommon.InternedString, perfetto.protos.ProfileCommon.InternedString.Builder, perfetto.protos.ProfileCommon.InternedStringOrBuilder> 
          getFunctionNamesFieldBuilder() {
        if (functionNamesBuilder_ == null) {
          functionNamesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              perfetto.protos.ProfileCommon.InternedString, perfetto.protos.ProfileCommon.InternedString.Builder, perfetto.protos.ProfileCommon.InternedStringOrBuilder>(
                  functionNames_,
                  ((bitField0_ & 0x00000800) != 0),
                  getParentForChildren(),
                  isClean());
          functionNames_ = null;
        }
        return functionNamesBuilder_;
      }

      private java.util.List<perfetto.protos.ProfileCommon.ProfiledFrameSymbols> profiledFrameSymbols_ =
        java.util.Collections.emptyList();
      private void ensureProfiledFrameSymbolsIsMutable() {
        if (!((bitField0_ & 0x00001000) != 0)) {
          profiledFrameSymbols_ = new java.util.ArrayList<perfetto.protos.ProfileCommon.ProfiledFrameSymbols>(profiledFrameSymbols_);
          bitField0_ |= 0x00001000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.ProfileCommon.ProfiledFrameSymbols, perfetto.protos.ProfileCommon.ProfiledFrameSymbols.Builder, perfetto.protos.ProfileCommon.ProfiledFrameSymbolsOrBuilder> profiledFrameSymbolsBuilder_;

      /**
       * <pre>
       * Symbols that were added to this trace after the fact.
       * </pre>
       *
       * <code>repeated .perfetto.protos.ProfiledFrameSymbols profiled_frame_symbols = 21;</code>
       */
      public java.util.List<perfetto.protos.ProfileCommon.ProfiledFrameSymbols> getProfiledFrameSymbolsList() {
        if (profiledFrameSymbolsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(profiledFrameSymbols_);
        } else {
          return profiledFrameSymbolsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Symbols that were added to this trace after the fact.
       * </pre>
       *
       * <code>repeated .perfetto.protos.ProfiledFrameSymbols profiled_frame_symbols = 21;</code>
       */
      public int getProfiledFrameSymbolsCount() {
        if (profiledFrameSymbolsBuilder_ == null) {
          return profiledFrameSymbols_.size();
        } else {
          return profiledFrameSymbolsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Symbols that were added to this trace after the fact.
       * </pre>
       *
       * <code>repeated .perfetto.protos.ProfiledFrameSymbols profiled_frame_symbols = 21;</code>
       */
      public perfetto.protos.ProfileCommon.ProfiledFrameSymbols getProfiledFrameSymbols(int index) {
        if (profiledFrameSymbolsBuilder_ == null) {
          return profiledFrameSymbols_.get(index);
        } else {
          return profiledFrameSymbolsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Symbols that were added to this trace after the fact.
       * </pre>
       *
       * <code>repeated .perfetto.protos.ProfiledFrameSymbols profiled_frame_symbols = 21;</code>
       */
      public Builder setProfiledFrameSymbols(
          int index, perfetto.protos.ProfileCommon.ProfiledFrameSymbols value) {
        if (profiledFrameSymbolsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureProfiledFrameSymbolsIsMutable();
          profiledFrameSymbols_.set(index, value);
          onChanged();
        } else {
          profiledFrameSymbolsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Symbols that were added to this trace after the fact.
       * </pre>
       *
       * <code>repeated .perfetto.protos.ProfiledFrameSymbols profiled_frame_symbols = 21;</code>
       */
      public Builder setProfiledFrameSymbols(
          int index, perfetto.protos.ProfileCommon.ProfiledFrameSymbols.Builder builderForValue) {
        if (profiledFrameSymbolsBuilder_ == null) {
          ensureProfiledFrameSymbolsIsMutable();
          profiledFrameSymbols_.set(index, builderForValue.build());
          onChanged();
        } else {
          profiledFrameSymbolsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Symbols that were added to this trace after the fact.
       * </pre>
       *
       * <code>repeated .perfetto.protos.ProfiledFrameSymbols profiled_frame_symbols = 21;</code>
       */
      public Builder addProfiledFrameSymbols(perfetto.protos.ProfileCommon.ProfiledFrameSymbols value) {
        if (profiledFrameSymbolsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureProfiledFrameSymbolsIsMutable();
          profiledFrameSymbols_.add(value);
          onChanged();
        } else {
          profiledFrameSymbolsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Symbols that were added to this trace after the fact.
       * </pre>
       *
       * <code>repeated .perfetto.protos.ProfiledFrameSymbols profiled_frame_symbols = 21;</code>
       */
      public Builder addProfiledFrameSymbols(
          int index, perfetto.protos.ProfileCommon.ProfiledFrameSymbols value) {
        if (profiledFrameSymbolsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureProfiledFrameSymbolsIsMutable();
          profiledFrameSymbols_.add(index, value);
          onChanged();
        } else {
          profiledFrameSymbolsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Symbols that were added to this trace after the fact.
       * </pre>
       *
       * <code>repeated .perfetto.protos.ProfiledFrameSymbols profiled_frame_symbols = 21;</code>
       */
      public Builder addProfiledFrameSymbols(
          perfetto.protos.ProfileCommon.ProfiledFrameSymbols.Builder builderForValue) {
        if (profiledFrameSymbolsBuilder_ == null) {
          ensureProfiledFrameSymbolsIsMutable();
          profiledFrameSymbols_.add(builderForValue.build());
          onChanged();
        } else {
          profiledFrameSymbolsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Symbols that were added to this trace after the fact.
       * </pre>
       *
       * <code>repeated .perfetto.protos.ProfiledFrameSymbols profiled_frame_symbols = 21;</code>
       */
      public Builder addProfiledFrameSymbols(
          int index, perfetto.protos.ProfileCommon.ProfiledFrameSymbols.Builder builderForValue) {
        if (profiledFrameSymbolsBuilder_ == null) {
          ensureProfiledFrameSymbolsIsMutable();
          profiledFrameSymbols_.add(index, builderForValue.build());
          onChanged();
        } else {
          profiledFrameSymbolsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Symbols that were added to this trace after the fact.
       * </pre>
       *
       * <code>repeated .perfetto.protos.ProfiledFrameSymbols profiled_frame_symbols = 21;</code>
       */
      public Builder addAllProfiledFrameSymbols(
          java.lang.Iterable<? extends perfetto.protos.ProfileCommon.ProfiledFrameSymbols> values) {
        if (profiledFrameSymbolsBuilder_ == null) {
          ensureProfiledFrameSymbolsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, profiledFrameSymbols_);
          onChanged();
        } else {
          profiledFrameSymbolsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Symbols that were added to this trace after the fact.
       * </pre>
       *
       * <code>repeated .perfetto.protos.ProfiledFrameSymbols profiled_frame_symbols = 21;</code>
       */
      public Builder clearProfiledFrameSymbols() {
        if (profiledFrameSymbolsBuilder_ == null) {
          profiledFrameSymbols_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00001000);
          onChanged();
        } else {
          profiledFrameSymbolsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Symbols that were added to this trace after the fact.
       * </pre>
       *
       * <code>repeated .perfetto.protos.ProfiledFrameSymbols profiled_frame_symbols = 21;</code>
       */
      public Builder removeProfiledFrameSymbols(int index) {
        if (profiledFrameSymbolsBuilder_ == null) {
          ensureProfiledFrameSymbolsIsMutable();
          profiledFrameSymbols_.remove(index);
          onChanged();
        } else {
          profiledFrameSymbolsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Symbols that were added to this trace after the fact.
       * </pre>
       *
       * <code>repeated .perfetto.protos.ProfiledFrameSymbols profiled_frame_symbols = 21;</code>
       */
      public perfetto.protos.ProfileCommon.ProfiledFrameSymbols.Builder getProfiledFrameSymbolsBuilder(
          int index) {
        return getProfiledFrameSymbolsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Symbols that were added to this trace after the fact.
       * </pre>
       *
       * <code>repeated .perfetto.protos.ProfiledFrameSymbols profiled_frame_symbols = 21;</code>
       */
      public perfetto.protos.ProfileCommon.ProfiledFrameSymbolsOrBuilder getProfiledFrameSymbolsOrBuilder(
          int index) {
        if (profiledFrameSymbolsBuilder_ == null) {
          return profiledFrameSymbols_.get(index);  } else {
          return profiledFrameSymbolsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Symbols that were added to this trace after the fact.
       * </pre>
       *
       * <code>repeated .perfetto.protos.ProfiledFrameSymbols profiled_frame_symbols = 21;</code>
       */
      public java.util.List<? extends perfetto.protos.ProfileCommon.ProfiledFrameSymbolsOrBuilder> 
           getProfiledFrameSymbolsOrBuilderList() {
        if (profiledFrameSymbolsBuilder_ != null) {
          return profiledFrameSymbolsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(profiledFrameSymbols_);
        }
      }
      /**
       * <pre>
       * Symbols that were added to this trace after the fact.
       * </pre>
       *
       * <code>repeated .perfetto.protos.ProfiledFrameSymbols profiled_frame_symbols = 21;</code>
       */
      public perfetto.protos.ProfileCommon.ProfiledFrameSymbols.Builder addProfiledFrameSymbolsBuilder() {
        return getProfiledFrameSymbolsFieldBuilder().addBuilder(
            perfetto.protos.ProfileCommon.ProfiledFrameSymbols.getDefaultInstance());
      }
      /**
       * <pre>
       * Symbols that were added to this trace after the fact.
       * </pre>
       *
       * <code>repeated .perfetto.protos.ProfiledFrameSymbols profiled_frame_symbols = 21;</code>
       */
      public perfetto.protos.ProfileCommon.ProfiledFrameSymbols.Builder addProfiledFrameSymbolsBuilder(
          int index) {
        return getProfiledFrameSymbolsFieldBuilder().addBuilder(
            index, perfetto.protos.ProfileCommon.ProfiledFrameSymbols.getDefaultInstance());
      }
      /**
       * <pre>
       * Symbols that were added to this trace after the fact.
       * </pre>
       *
       * <code>repeated .perfetto.protos.ProfiledFrameSymbols profiled_frame_symbols = 21;</code>
       */
      public java.util.List<perfetto.protos.ProfileCommon.ProfiledFrameSymbols.Builder> 
           getProfiledFrameSymbolsBuilderList() {
        return getProfiledFrameSymbolsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.ProfileCommon.ProfiledFrameSymbols, perfetto.protos.ProfileCommon.ProfiledFrameSymbols.Builder, perfetto.protos.ProfileCommon.ProfiledFrameSymbolsOrBuilder> 
          getProfiledFrameSymbolsFieldBuilder() {
        if (profiledFrameSymbolsBuilder_ == null) {
          profiledFrameSymbolsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              perfetto.protos.ProfileCommon.ProfiledFrameSymbols, perfetto.protos.ProfileCommon.ProfiledFrameSymbols.Builder, perfetto.protos.ProfileCommon.ProfiledFrameSymbolsOrBuilder>(
                  profiledFrameSymbols_,
                  ((bitField0_ & 0x00001000) != 0),
                  getParentForChildren(),
                  isClean());
          profiledFrameSymbols_ = null;
        }
        return profiledFrameSymbolsBuilder_;
      }

      private java.util.List<perfetto.protos.ProfileCommon.Mapping> mappings_ =
        java.util.Collections.emptyList();
      private void ensureMappingsIsMutable() {
        if (!((bitField0_ & 0x00002000) != 0)) {
          mappings_ = new java.util.ArrayList<perfetto.protos.ProfileCommon.Mapping>(mappings_);
          bitField0_ |= 0x00002000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.ProfileCommon.Mapping, perfetto.protos.ProfileCommon.Mapping.Builder, perfetto.protos.ProfileCommon.MappingOrBuilder> mappingsBuilder_;

      /**
       * <pre>
       * Executable files mapped into processes.
       * </pre>
       *
       * <code>repeated .perfetto.protos.Mapping mappings = 19;</code>
       */
      public java.util.List<perfetto.protos.ProfileCommon.Mapping> getMappingsList() {
        if (mappingsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(mappings_);
        } else {
          return mappingsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Executable files mapped into processes.
       * </pre>
       *
       * <code>repeated .perfetto.protos.Mapping mappings = 19;</code>
       */
      public int getMappingsCount() {
        if (mappingsBuilder_ == null) {
          return mappings_.size();
        } else {
          return mappingsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Executable files mapped into processes.
       * </pre>
       *
       * <code>repeated .perfetto.protos.Mapping mappings = 19;</code>
       */
      public perfetto.protos.ProfileCommon.Mapping getMappings(int index) {
        if (mappingsBuilder_ == null) {
          return mappings_.get(index);
        } else {
          return mappingsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Executable files mapped into processes.
       * </pre>
       *
       * <code>repeated .perfetto.protos.Mapping mappings = 19;</code>
       */
      public Builder setMappings(
          int index, perfetto.protos.ProfileCommon.Mapping value) {
        if (mappingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMappingsIsMutable();
          mappings_.set(index, value);
          onChanged();
        } else {
          mappingsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Executable files mapped into processes.
       * </pre>
       *
       * <code>repeated .perfetto.protos.Mapping mappings = 19;</code>
       */
      public Builder setMappings(
          int index, perfetto.protos.ProfileCommon.Mapping.Builder builderForValue) {
        if (mappingsBuilder_ == null) {
          ensureMappingsIsMutable();
          mappings_.set(index, builderForValue.build());
          onChanged();
        } else {
          mappingsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Executable files mapped into processes.
       * </pre>
       *
       * <code>repeated .perfetto.protos.Mapping mappings = 19;</code>
       */
      public Builder addMappings(perfetto.protos.ProfileCommon.Mapping value) {
        if (mappingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMappingsIsMutable();
          mappings_.add(value);
          onChanged();
        } else {
          mappingsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Executable files mapped into processes.
       * </pre>
       *
       * <code>repeated .perfetto.protos.Mapping mappings = 19;</code>
       */
      public Builder addMappings(
          int index, perfetto.protos.ProfileCommon.Mapping value) {
        if (mappingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMappingsIsMutable();
          mappings_.add(index, value);
          onChanged();
        } else {
          mappingsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Executable files mapped into processes.
       * </pre>
       *
       * <code>repeated .perfetto.protos.Mapping mappings = 19;</code>
       */
      public Builder addMappings(
          perfetto.protos.ProfileCommon.Mapping.Builder builderForValue) {
        if (mappingsBuilder_ == null) {
          ensureMappingsIsMutable();
          mappings_.add(builderForValue.build());
          onChanged();
        } else {
          mappingsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Executable files mapped into processes.
       * </pre>
       *
       * <code>repeated .perfetto.protos.Mapping mappings = 19;</code>
       */
      public Builder addMappings(
          int index, perfetto.protos.ProfileCommon.Mapping.Builder builderForValue) {
        if (mappingsBuilder_ == null) {
          ensureMappingsIsMutable();
          mappings_.add(index, builderForValue.build());
          onChanged();
        } else {
          mappingsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Executable files mapped into processes.
       * </pre>
       *
       * <code>repeated .perfetto.protos.Mapping mappings = 19;</code>
       */
      public Builder addAllMappings(
          java.lang.Iterable<? extends perfetto.protos.ProfileCommon.Mapping> values) {
        if (mappingsBuilder_ == null) {
          ensureMappingsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, mappings_);
          onChanged();
        } else {
          mappingsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Executable files mapped into processes.
       * </pre>
       *
       * <code>repeated .perfetto.protos.Mapping mappings = 19;</code>
       */
      public Builder clearMappings() {
        if (mappingsBuilder_ == null) {
          mappings_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00002000);
          onChanged();
        } else {
          mappingsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Executable files mapped into processes.
       * </pre>
       *
       * <code>repeated .perfetto.protos.Mapping mappings = 19;</code>
       */
      public Builder removeMappings(int index) {
        if (mappingsBuilder_ == null) {
          ensureMappingsIsMutable();
          mappings_.remove(index);
          onChanged();
        } else {
          mappingsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Executable files mapped into processes.
       * </pre>
       *
       * <code>repeated .perfetto.protos.Mapping mappings = 19;</code>
       */
      public perfetto.protos.ProfileCommon.Mapping.Builder getMappingsBuilder(
          int index) {
        return getMappingsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Executable files mapped into processes.
       * </pre>
       *
       * <code>repeated .perfetto.protos.Mapping mappings = 19;</code>
       */
      public perfetto.protos.ProfileCommon.MappingOrBuilder getMappingsOrBuilder(
          int index) {
        if (mappingsBuilder_ == null) {
          return mappings_.get(index);  } else {
          return mappingsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Executable files mapped into processes.
       * </pre>
       *
       * <code>repeated .perfetto.protos.Mapping mappings = 19;</code>
       */
      public java.util.List<? extends perfetto.protos.ProfileCommon.MappingOrBuilder> 
           getMappingsOrBuilderList() {
        if (mappingsBuilder_ != null) {
          return mappingsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(mappings_);
        }
      }
      /**
       * <pre>
       * Executable files mapped into processes.
       * </pre>
       *
       * <code>repeated .perfetto.protos.Mapping mappings = 19;</code>
       */
      public perfetto.protos.ProfileCommon.Mapping.Builder addMappingsBuilder() {
        return getMappingsFieldBuilder().addBuilder(
            perfetto.protos.ProfileCommon.Mapping.getDefaultInstance());
      }
      /**
       * <pre>
       * Executable files mapped into processes.
       * </pre>
       *
       * <code>repeated .perfetto.protos.Mapping mappings = 19;</code>
       */
      public perfetto.protos.ProfileCommon.Mapping.Builder addMappingsBuilder(
          int index) {
        return getMappingsFieldBuilder().addBuilder(
            index, perfetto.protos.ProfileCommon.Mapping.getDefaultInstance());
      }
      /**
       * <pre>
       * Executable files mapped into processes.
       * </pre>
       *
       * <code>repeated .perfetto.protos.Mapping mappings = 19;</code>
       */
      public java.util.List<perfetto.protos.ProfileCommon.Mapping.Builder> 
           getMappingsBuilderList() {
        return getMappingsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.ProfileCommon.Mapping, perfetto.protos.ProfileCommon.Mapping.Builder, perfetto.protos.ProfileCommon.MappingOrBuilder> 
          getMappingsFieldBuilder() {
        if (mappingsBuilder_ == null) {
          mappingsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              perfetto.protos.ProfileCommon.Mapping, perfetto.protos.ProfileCommon.Mapping.Builder, perfetto.protos.ProfileCommon.MappingOrBuilder>(
                  mappings_,
                  ((bitField0_ & 0x00002000) != 0),
                  getParentForChildren(),
                  isClean());
          mappings_ = null;
        }
        return mappingsBuilder_;
      }

      private java.util.List<perfetto.protos.ProfileCommon.Frame> frames_ =
        java.util.Collections.emptyList();
      private void ensureFramesIsMutable() {
        if (!((bitField0_ & 0x00004000) != 0)) {
          frames_ = new java.util.ArrayList<perfetto.protos.ProfileCommon.Frame>(frames_);
          bitField0_ |= 0x00004000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.ProfileCommon.Frame, perfetto.protos.ProfileCommon.Frame.Builder, perfetto.protos.ProfileCommon.FrameOrBuilder> framesBuilder_;

      /**
       * <pre>
       * Frames of callstacks of a program.
       * </pre>
       *
       * <code>repeated .perfetto.protos.Frame frames = 6;</code>
       */
      public java.util.List<perfetto.protos.ProfileCommon.Frame> getFramesList() {
        if (framesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(frames_);
        } else {
          return framesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Frames of callstacks of a program.
       * </pre>
       *
       * <code>repeated .perfetto.protos.Frame frames = 6;</code>
       */
      public int getFramesCount() {
        if (framesBuilder_ == null) {
          return frames_.size();
        } else {
          return framesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Frames of callstacks of a program.
       * </pre>
       *
       * <code>repeated .perfetto.protos.Frame frames = 6;</code>
       */
      public perfetto.protos.ProfileCommon.Frame getFrames(int index) {
        if (framesBuilder_ == null) {
          return frames_.get(index);
        } else {
          return framesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Frames of callstacks of a program.
       * </pre>
       *
       * <code>repeated .perfetto.protos.Frame frames = 6;</code>
       */
      public Builder setFrames(
          int index, perfetto.protos.ProfileCommon.Frame value) {
        if (framesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFramesIsMutable();
          frames_.set(index, value);
          onChanged();
        } else {
          framesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Frames of callstacks of a program.
       * </pre>
       *
       * <code>repeated .perfetto.protos.Frame frames = 6;</code>
       */
      public Builder setFrames(
          int index, perfetto.protos.ProfileCommon.Frame.Builder builderForValue) {
        if (framesBuilder_ == null) {
          ensureFramesIsMutable();
          frames_.set(index, builderForValue.build());
          onChanged();
        } else {
          framesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Frames of callstacks of a program.
       * </pre>
       *
       * <code>repeated .perfetto.protos.Frame frames = 6;</code>
       */
      public Builder addFrames(perfetto.protos.ProfileCommon.Frame value) {
        if (framesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFramesIsMutable();
          frames_.add(value);
          onChanged();
        } else {
          framesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Frames of callstacks of a program.
       * </pre>
       *
       * <code>repeated .perfetto.protos.Frame frames = 6;</code>
       */
      public Builder addFrames(
          int index, perfetto.protos.ProfileCommon.Frame value) {
        if (framesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFramesIsMutable();
          frames_.add(index, value);
          onChanged();
        } else {
          framesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Frames of callstacks of a program.
       * </pre>
       *
       * <code>repeated .perfetto.protos.Frame frames = 6;</code>
       */
      public Builder addFrames(
          perfetto.protos.ProfileCommon.Frame.Builder builderForValue) {
        if (framesBuilder_ == null) {
          ensureFramesIsMutable();
          frames_.add(builderForValue.build());
          onChanged();
        } else {
          framesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Frames of callstacks of a program.
       * </pre>
       *
       * <code>repeated .perfetto.protos.Frame frames = 6;</code>
       */
      public Builder addFrames(
          int index, perfetto.protos.ProfileCommon.Frame.Builder builderForValue) {
        if (framesBuilder_ == null) {
          ensureFramesIsMutable();
          frames_.add(index, builderForValue.build());
          onChanged();
        } else {
          framesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Frames of callstacks of a program.
       * </pre>
       *
       * <code>repeated .perfetto.protos.Frame frames = 6;</code>
       */
      public Builder addAllFrames(
          java.lang.Iterable<? extends perfetto.protos.ProfileCommon.Frame> values) {
        if (framesBuilder_ == null) {
          ensureFramesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, frames_);
          onChanged();
        } else {
          framesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Frames of callstacks of a program.
       * </pre>
       *
       * <code>repeated .perfetto.protos.Frame frames = 6;</code>
       */
      public Builder clearFrames() {
        if (framesBuilder_ == null) {
          frames_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00004000);
          onChanged();
        } else {
          framesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Frames of callstacks of a program.
       * </pre>
       *
       * <code>repeated .perfetto.protos.Frame frames = 6;</code>
       */
      public Builder removeFrames(int index) {
        if (framesBuilder_ == null) {
          ensureFramesIsMutable();
          frames_.remove(index);
          onChanged();
        } else {
          framesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Frames of callstacks of a program.
       * </pre>
       *
       * <code>repeated .perfetto.protos.Frame frames = 6;</code>
       */
      public perfetto.protos.ProfileCommon.Frame.Builder getFramesBuilder(
          int index) {
        return getFramesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Frames of callstacks of a program.
       * </pre>
       *
       * <code>repeated .perfetto.protos.Frame frames = 6;</code>
       */
      public perfetto.protos.ProfileCommon.FrameOrBuilder getFramesOrBuilder(
          int index) {
        if (framesBuilder_ == null) {
          return frames_.get(index);  } else {
          return framesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Frames of callstacks of a program.
       * </pre>
       *
       * <code>repeated .perfetto.protos.Frame frames = 6;</code>
       */
      public java.util.List<? extends perfetto.protos.ProfileCommon.FrameOrBuilder> 
           getFramesOrBuilderList() {
        if (framesBuilder_ != null) {
          return framesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(frames_);
        }
      }
      /**
       * <pre>
       * Frames of callstacks of a program.
       * </pre>
       *
       * <code>repeated .perfetto.protos.Frame frames = 6;</code>
       */
      public perfetto.protos.ProfileCommon.Frame.Builder addFramesBuilder() {
        return getFramesFieldBuilder().addBuilder(
            perfetto.protos.ProfileCommon.Frame.getDefaultInstance());
      }
      /**
       * <pre>
       * Frames of callstacks of a program.
       * </pre>
       *
       * <code>repeated .perfetto.protos.Frame frames = 6;</code>
       */
      public perfetto.protos.ProfileCommon.Frame.Builder addFramesBuilder(
          int index) {
        return getFramesFieldBuilder().addBuilder(
            index, perfetto.protos.ProfileCommon.Frame.getDefaultInstance());
      }
      /**
       * <pre>
       * Frames of callstacks of a program.
       * </pre>
       *
       * <code>repeated .perfetto.protos.Frame frames = 6;</code>
       */
      public java.util.List<perfetto.protos.ProfileCommon.Frame.Builder> 
           getFramesBuilderList() {
        return getFramesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.ProfileCommon.Frame, perfetto.protos.ProfileCommon.Frame.Builder, perfetto.protos.ProfileCommon.FrameOrBuilder> 
          getFramesFieldBuilder() {
        if (framesBuilder_ == null) {
          framesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              perfetto.protos.ProfileCommon.Frame, perfetto.protos.ProfileCommon.Frame.Builder, perfetto.protos.ProfileCommon.FrameOrBuilder>(
                  frames_,
                  ((bitField0_ & 0x00004000) != 0),
                  getParentForChildren(),
                  isClean());
          frames_ = null;
        }
        return framesBuilder_;
      }

      private java.util.List<perfetto.protos.ProfileCommon.Callstack> callstacks_ =
        java.util.Collections.emptyList();
      private void ensureCallstacksIsMutable() {
        if (!((bitField0_ & 0x00008000) != 0)) {
          callstacks_ = new java.util.ArrayList<perfetto.protos.ProfileCommon.Callstack>(callstacks_);
          bitField0_ |= 0x00008000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.ProfileCommon.Callstack, perfetto.protos.ProfileCommon.Callstack.Builder, perfetto.protos.ProfileCommon.CallstackOrBuilder> callstacksBuilder_;

      /**
       * <pre>
       * A callstack of a program.
       * </pre>
       *
       * <code>repeated .perfetto.protos.Callstack callstacks = 7;</code>
       */
      public java.util.List<perfetto.protos.ProfileCommon.Callstack> getCallstacksList() {
        if (callstacksBuilder_ == null) {
          return java.util.Collections.unmodifiableList(callstacks_);
        } else {
          return callstacksBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * A callstack of a program.
       * </pre>
       *
       * <code>repeated .perfetto.protos.Callstack callstacks = 7;</code>
       */
      public int getCallstacksCount() {
        if (callstacksBuilder_ == null) {
          return callstacks_.size();
        } else {
          return callstacksBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * A callstack of a program.
       * </pre>
       *
       * <code>repeated .perfetto.protos.Callstack callstacks = 7;</code>
       */
      public perfetto.protos.ProfileCommon.Callstack getCallstacks(int index) {
        if (callstacksBuilder_ == null) {
          return callstacks_.get(index);
        } else {
          return callstacksBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * A callstack of a program.
       * </pre>
       *
       * <code>repeated .perfetto.protos.Callstack callstacks = 7;</code>
       */
      public Builder setCallstacks(
          int index, perfetto.protos.ProfileCommon.Callstack value) {
        if (callstacksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCallstacksIsMutable();
          callstacks_.set(index, value);
          onChanged();
        } else {
          callstacksBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A callstack of a program.
       * </pre>
       *
       * <code>repeated .perfetto.protos.Callstack callstacks = 7;</code>
       */
      public Builder setCallstacks(
          int index, perfetto.protos.ProfileCommon.Callstack.Builder builderForValue) {
        if (callstacksBuilder_ == null) {
          ensureCallstacksIsMutable();
          callstacks_.set(index, builderForValue.build());
          onChanged();
        } else {
          callstacksBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A callstack of a program.
       * </pre>
       *
       * <code>repeated .perfetto.protos.Callstack callstacks = 7;</code>
       */
      public Builder addCallstacks(perfetto.protos.ProfileCommon.Callstack value) {
        if (callstacksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCallstacksIsMutable();
          callstacks_.add(value);
          onChanged();
        } else {
          callstacksBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * A callstack of a program.
       * </pre>
       *
       * <code>repeated .perfetto.protos.Callstack callstacks = 7;</code>
       */
      public Builder addCallstacks(
          int index, perfetto.protos.ProfileCommon.Callstack value) {
        if (callstacksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCallstacksIsMutable();
          callstacks_.add(index, value);
          onChanged();
        } else {
          callstacksBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * A callstack of a program.
       * </pre>
       *
       * <code>repeated .perfetto.protos.Callstack callstacks = 7;</code>
       */
      public Builder addCallstacks(
          perfetto.protos.ProfileCommon.Callstack.Builder builderForValue) {
        if (callstacksBuilder_ == null) {
          ensureCallstacksIsMutable();
          callstacks_.add(builderForValue.build());
          onChanged();
        } else {
          callstacksBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A callstack of a program.
       * </pre>
       *
       * <code>repeated .perfetto.protos.Callstack callstacks = 7;</code>
       */
      public Builder addCallstacks(
          int index, perfetto.protos.ProfileCommon.Callstack.Builder builderForValue) {
        if (callstacksBuilder_ == null) {
          ensureCallstacksIsMutable();
          callstacks_.add(index, builderForValue.build());
          onChanged();
        } else {
          callstacksBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * A callstack of a program.
       * </pre>
       *
       * <code>repeated .perfetto.protos.Callstack callstacks = 7;</code>
       */
      public Builder addAllCallstacks(
          java.lang.Iterable<? extends perfetto.protos.ProfileCommon.Callstack> values) {
        if (callstacksBuilder_ == null) {
          ensureCallstacksIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, callstacks_);
          onChanged();
        } else {
          callstacksBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * A callstack of a program.
       * </pre>
       *
       * <code>repeated .perfetto.protos.Callstack callstacks = 7;</code>
       */
      public Builder clearCallstacks() {
        if (callstacksBuilder_ == null) {
          callstacks_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00008000);
          onChanged();
        } else {
          callstacksBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * A callstack of a program.
       * </pre>
       *
       * <code>repeated .perfetto.protos.Callstack callstacks = 7;</code>
       */
      public Builder removeCallstacks(int index) {
        if (callstacksBuilder_ == null) {
          ensureCallstacksIsMutable();
          callstacks_.remove(index);
          onChanged();
        } else {
          callstacksBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * A callstack of a program.
       * </pre>
       *
       * <code>repeated .perfetto.protos.Callstack callstacks = 7;</code>
       */
      public perfetto.protos.ProfileCommon.Callstack.Builder getCallstacksBuilder(
          int index) {
        return getCallstacksFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * A callstack of a program.
       * </pre>
       *
       * <code>repeated .perfetto.protos.Callstack callstacks = 7;</code>
       */
      public perfetto.protos.ProfileCommon.CallstackOrBuilder getCallstacksOrBuilder(
          int index) {
        if (callstacksBuilder_ == null) {
          return callstacks_.get(index);  } else {
          return callstacksBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * A callstack of a program.
       * </pre>
       *
       * <code>repeated .perfetto.protos.Callstack callstacks = 7;</code>
       */
      public java.util.List<? extends perfetto.protos.ProfileCommon.CallstackOrBuilder> 
           getCallstacksOrBuilderList() {
        if (callstacksBuilder_ != null) {
          return callstacksBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(callstacks_);
        }
      }
      /**
       * <pre>
       * A callstack of a program.
       * </pre>
       *
       * <code>repeated .perfetto.protos.Callstack callstacks = 7;</code>
       */
      public perfetto.protos.ProfileCommon.Callstack.Builder addCallstacksBuilder() {
        return getCallstacksFieldBuilder().addBuilder(
            perfetto.protos.ProfileCommon.Callstack.getDefaultInstance());
      }
      /**
       * <pre>
       * A callstack of a program.
       * </pre>
       *
       * <code>repeated .perfetto.protos.Callstack callstacks = 7;</code>
       */
      public perfetto.protos.ProfileCommon.Callstack.Builder addCallstacksBuilder(
          int index) {
        return getCallstacksFieldBuilder().addBuilder(
            index, perfetto.protos.ProfileCommon.Callstack.getDefaultInstance());
      }
      /**
       * <pre>
       * A callstack of a program.
       * </pre>
       *
       * <code>repeated .perfetto.protos.Callstack callstacks = 7;</code>
       */
      public java.util.List<perfetto.protos.ProfileCommon.Callstack.Builder> 
           getCallstacksBuilderList() {
        return getCallstacksFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.ProfileCommon.Callstack, perfetto.protos.ProfileCommon.Callstack.Builder, perfetto.protos.ProfileCommon.CallstackOrBuilder> 
          getCallstacksFieldBuilder() {
        if (callstacksBuilder_ == null) {
          callstacksBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              perfetto.protos.ProfileCommon.Callstack, perfetto.protos.ProfileCommon.Callstack.Builder, perfetto.protos.ProfileCommon.CallstackOrBuilder>(
                  callstacks_,
                  ((bitField0_ & 0x00008000) != 0),
                  getParentForChildren(),
                  isClean());
          callstacks_ = null;
        }
        return callstacksBuilder_;
      }

      private java.util.List<perfetto.protos.ProfileCommon.InternedString> vulkanMemoryKeys_ =
        java.util.Collections.emptyList();
      private void ensureVulkanMemoryKeysIsMutable() {
        if (!((bitField0_ & 0x00010000) != 0)) {
          vulkanMemoryKeys_ = new java.util.ArrayList<perfetto.protos.ProfileCommon.InternedString>(vulkanMemoryKeys_);
          bitField0_ |= 0x00010000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.ProfileCommon.InternedString, perfetto.protos.ProfileCommon.InternedString.Builder, perfetto.protos.ProfileCommon.InternedStringOrBuilder> vulkanMemoryKeysBuilder_;

      /**
       * <pre>
       * Additional Vulkan information sent in a VulkanMemoryEvent message
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString vulkan_memory_keys = 22;</code>
       */
      public java.util.List<perfetto.protos.ProfileCommon.InternedString> getVulkanMemoryKeysList() {
        if (vulkanMemoryKeysBuilder_ == null) {
          return java.util.Collections.unmodifiableList(vulkanMemoryKeys_);
        } else {
          return vulkanMemoryKeysBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Additional Vulkan information sent in a VulkanMemoryEvent message
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString vulkan_memory_keys = 22;</code>
       */
      public int getVulkanMemoryKeysCount() {
        if (vulkanMemoryKeysBuilder_ == null) {
          return vulkanMemoryKeys_.size();
        } else {
          return vulkanMemoryKeysBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Additional Vulkan information sent in a VulkanMemoryEvent message
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString vulkan_memory_keys = 22;</code>
       */
      public perfetto.protos.ProfileCommon.InternedString getVulkanMemoryKeys(int index) {
        if (vulkanMemoryKeysBuilder_ == null) {
          return vulkanMemoryKeys_.get(index);
        } else {
          return vulkanMemoryKeysBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Additional Vulkan information sent in a VulkanMemoryEvent message
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString vulkan_memory_keys = 22;</code>
       */
      public Builder setVulkanMemoryKeys(
          int index, perfetto.protos.ProfileCommon.InternedString value) {
        if (vulkanMemoryKeysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVulkanMemoryKeysIsMutable();
          vulkanMemoryKeys_.set(index, value);
          onChanged();
        } else {
          vulkanMemoryKeysBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Additional Vulkan information sent in a VulkanMemoryEvent message
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString vulkan_memory_keys = 22;</code>
       */
      public Builder setVulkanMemoryKeys(
          int index, perfetto.protos.ProfileCommon.InternedString.Builder builderForValue) {
        if (vulkanMemoryKeysBuilder_ == null) {
          ensureVulkanMemoryKeysIsMutable();
          vulkanMemoryKeys_.set(index, builderForValue.build());
          onChanged();
        } else {
          vulkanMemoryKeysBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Additional Vulkan information sent in a VulkanMemoryEvent message
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString vulkan_memory_keys = 22;</code>
       */
      public Builder addVulkanMemoryKeys(perfetto.protos.ProfileCommon.InternedString value) {
        if (vulkanMemoryKeysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVulkanMemoryKeysIsMutable();
          vulkanMemoryKeys_.add(value);
          onChanged();
        } else {
          vulkanMemoryKeysBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Additional Vulkan information sent in a VulkanMemoryEvent message
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString vulkan_memory_keys = 22;</code>
       */
      public Builder addVulkanMemoryKeys(
          int index, perfetto.protos.ProfileCommon.InternedString value) {
        if (vulkanMemoryKeysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVulkanMemoryKeysIsMutable();
          vulkanMemoryKeys_.add(index, value);
          onChanged();
        } else {
          vulkanMemoryKeysBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Additional Vulkan information sent in a VulkanMemoryEvent message
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString vulkan_memory_keys = 22;</code>
       */
      public Builder addVulkanMemoryKeys(
          perfetto.protos.ProfileCommon.InternedString.Builder builderForValue) {
        if (vulkanMemoryKeysBuilder_ == null) {
          ensureVulkanMemoryKeysIsMutable();
          vulkanMemoryKeys_.add(builderForValue.build());
          onChanged();
        } else {
          vulkanMemoryKeysBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Additional Vulkan information sent in a VulkanMemoryEvent message
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString vulkan_memory_keys = 22;</code>
       */
      public Builder addVulkanMemoryKeys(
          int index, perfetto.protos.ProfileCommon.InternedString.Builder builderForValue) {
        if (vulkanMemoryKeysBuilder_ == null) {
          ensureVulkanMemoryKeysIsMutable();
          vulkanMemoryKeys_.add(index, builderForValue.build());
          onChanged();
        } else {
          vulkanMemoryKeysBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Additional Vulkan information sent in a VulkanMemoryEvent message
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString vulkan_memory_keys = 22;</code>
       */
      public Builder addAllVulkanMemoryKeys(
          java.lang.Iterable<? extends perfetto.protos.ProfileCommon.InternedString> values) {
        if (vulkanMemoryKeysBuilder_ == null) {
          ensureVulkanMemoryKeysIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, vulkanMemoryKeys_);
          onChanged();
        } else {
          vulkanMemoryKeysBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Additional Vulkan information sent in a VulkanMemoryEvent message
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString vulkan_memory_keys = 22;</code>
       */
      public Builder clearVulkanMemoryKeys() {
        if (vulkanMemoryKeysBuilder_ == null) {
          vulkanMemoryKeys_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00010000);
          onChanged();
        } else {
          vulkanMemoryKeysBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Additional Vulkan information sent in a VulkanMemoryEvent message
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString vulkan_memory_keys = 22;</code>
       */
      public Builder removeVulkanMemoryKeys(int index) {
        if (vulkanMemoryKeysBuilder_ == null) {
          ensureVulkanMemoryKeysIsMutable();
          vulkanMemoryKeys_.remove(index);
          onChanged();
        } else {
          vulkanMemoryKeysBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Additional Vulkan information sent in a VulkanMemoryEvent message
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString vulkan_memory_keys = 22;</code>
       */
      public perfetto.protos.ProfileCommon.InternedString.Builder getVulkanMemoryKeysBuilder(
          int index) {
        return getVulkanMemoryKeysFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Additional Vulkan information sent in a VulkanMemoryEvent message
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString vulkan_memory_keys = 22;</code>
       */
      public perfetto.protos.ProfileCommon.InternedStringOrBuilder getVulkanMemoryKeysOrBuilder(
          int index) {
        if (vulkanMemoryKeysBuilder_ == null) {
          return vulkanMemoryKeys_.get(index);  } else {
          return vulkanMemoryKeysBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Additional Vulkan information sent in a VulkanMemoryEvent message
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString vulkan_memory_keys = 22;</code>
       */
      public java.util.List<? extends perfetto.protos.ProfileCommon.InternedStringOrBuilder> 
           getVulkanMemoryKeysOrBuilderList() {
        if (vulkanMemoryKeysBuilder_ != null) {
          return vulkanMemoryKeysBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(vulkanMemoryKeys_);
        }
      }
      /**
       * <pre>
       * Additional Vulkan information sent in a VulkanMemoryEvent message
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString vulkan_memory_keys = 22;</code>
       */
      public perfetto.protos.ProfileCommon.InternedString.Builder addVulkanMemoryKeysBuilder() {
        return getVulkanMemoryKeysFieldBuilder().addBuilder(
            perfetto.protos.ProfileCommon.InternedString.getDefaultInstance());
      }
      /**
       * <pre>
       * Additional Vulkan information sent in a VulkanMemoryEvent message
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString vulkan_memory_keys = 22;</code>
       */
      public perfetto.protos.ProfileCommon.InternedString.Builder addVulkanMemoryKeysBuilder(
          int index) {
        return getVulkanMemoryKeysFieldBuilder().addBuilder(
            index, perfetto.protos.ProfileCommon.InternedString.getDefaultInstance());
      }
      /**
       * <pre>
       * Additional Vulkan information sent in a VulkanMemoryEvent message
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString vulkan_memory_keys = 22;</code>
       */
      public java.util.List<perfetto.protos.ProfileCommon.InternedString.Builder> 
           getVulkanMemoryKeysBuilderList() {
        return getVulkanMemoryKeysFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.ProfileCommon.InternedString, perfetto.protos.ProfileCommon.InternedString.Builder, perfetto.protos.ProfileCommon.InternedStringOrBuilder> 
          getVulkanMemoryKeysFieldBuilder() {
        if (vulkanMemoryKeysBuilder_ == null) {
          vulkanMemoryKeysBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              perfetto.protos.ProfileCommon.InternedString, perfetto.protos.ProfileCommon.InternedString.Builder, perfetto.protos.ProfileCommon.InternedStringOrBuilder>(
                  vulkanMemoryKeys_,
                  ((bitField0_ & 0x00010000) != 0),
                  getParentForChildren(),
                  isClean());
          vulkanMemoryKeys_ = null;
        }
        return vulkanMemoryKeysBuilder_;
      }

      private java.util.List<perfetto.protos.GpuRenderStageEventOuterClass.InternedGraphicsContext> graphicsContexts_ =
        java.util.Collections.emptyList();
      private void ensureGraphicsContextsIsMutable() {
        if (!((bitField0_ & 0x00020000) != 0)) {
          graphicsContexts_ = new java.util.ArrayList<perfetto.protos.GpuRenderStageEventOuterClass.InternedGraphicsContext>(graphicsContexts_);
          bitField0_ |= 0x00020000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.GpuRenderStageEventOuterClass.InternedGraphicsContext, perfetto.protos.GpuRenderStageEventOuterClass.InternedGraphicsContext.Builder, perfetto.protos.GpuRenderStageEventOuterClass.InternedGraphicsContextOrBuilder> graphicsContextsBuilder_;

      /**
       * <pre>
       * Graphics context of a render stage event.  This represent the GL
       * context for an OpenGl app or the VkDevice for a Vulkan app.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedGraphicsContext graphics_contexts = 23;</code>
       */
      public java.util.List<perfetto.protos.GpuRenderStageEventOuterClass.InternedGraphicsContext> getGraphicsContextsList() {
        if (graphicsContextsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(graphicsContexts_);
        } else {
          return graphicsContextsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Graphics context of a render stage event.  This represent the GL
       * context for an OpenGl app or the VkDevice for a Vulkan app.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedGraphicsContext graphics_contexts = 23;</code>
       */
      public int getGraphicsContextsCount() {
        if (graphicsContextsBuilder_ == null) {
          return graphicsContexts_.size();
        } else {
          return graphicsContextsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Graphics context of a render stage event.  This represent the GL
       * context for an OpenGl app or the VkDevice for a Vulkan app.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedGraphicsContext graphics_contexts = 23;</code>
       */
      public perfetto.protos.GpuRenderStageEventOuterClass.InternedGraphicsContext getGraphicsContexts(int index) {
        if (graphicsContextsBuilder_ == null) {
          return graphicsContexts_.get(index);
        } else {
          return graphicsContextsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Graphics context of a render stage event.  This represent the GL
       * context for an OpenGl app or the VkDevice for a Vulkan app.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedGraphicsContext graphics_contexts = 23;</code>
       */
      public Builder setGraphicsContexts(
          int index, perfetto.protos.GpuRenderStageEventOuterClass.InternedGraphicsContext value) {
        if (graphicsContextsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGraphicsContextsIsMutable();
          graphicsContexts_.set(index, value);
          onChanged();
        } else {
          graphicsContextsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Graphics context of a render stage event.  This represent the GL
       * context for an OpenGl app or the VkDevice for a Vulkan app.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedGraphicsContext graphics_contexts = 23;</code>
       */
      public Builder setGraphicsContexts(
          int index, perfetto.protos.GpuRenderStageEventOuterClass.InternedGraphicsContext.Builder builderForValue) {
        if (graphicsContextsBuilder_ == null) {
          ensureGraphicsContextsIsMutable();
          graphicsContexts_.set(index, builderForValue.build());
          onChanged();
        } else {
          graphicsContextsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Graphics context of a render stage event.  This represent the GL
       * context for an OpenGl app or the VkDevice for a Vulkan app.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedGraphicsContext graphics_contexts = 23;</code>
       */
      public Builder addGraphicsContexts(perfetto.protos.GpuRenderStageEventOuterClass.InternedGraphicsContext value) {
        if (graphicsContextsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGraphicsContextsIsMutable();
          graphicsContexts_.add(value);
          onChanged();
        } else {
          graphicsContextsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Graphics context of a render stage event.  This represent the GL
       * context for an OpenGl app or the VkDevice for a Vulkan app.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedGraphicsContext graphics_contexts = 23;</code>
       */
      public Builder addGraphicsContexts(
          int index, perfetto.protos.GpuRenderStageEventOuterClass.InternedGraphicsContext value) {
        if (graphicsContextsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGraphicsContextsIsMutable();
          graphicsContexts_.add(index, value);
          onChanged();
        } else {
          graphicsContextsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Graphics context of a render stage event.  This represent the GL
       * context for an OpenGl app or the VkDevice for a Vulkan app.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedGraphicsContext graphics_contexts = 23;</code>
       */
      public Builder addGraphicsContexts(
          perfetto.protos.GpuRenderStageEventOuterClass.InternedGraphicsContext.Builder builderForValue) {
        if (graphicsContextsBuilder_ == null) {
          ensureGraphicsContextsIsMutable();
          graphicsContexts_.add(builderForValue.build());
          onChanged();
        } else {
          graphicsContextsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Graphics context of a render stage event.  This represent the GL
       * context for an OpenGl app or the VkDevice for a Vulkan app.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedGraphicsContext graphics_contexts = 23;</code>
       */
      public Builder addGraphicsContexts(
          int index, perfetto.protos.GpuRenderStageEventOuterClass.InternedGraphicsContext.Builder builderForValue) {
        if (graphicsContextsBuilder_ == null) {
          ensureGraphicsContextsIsMutable();
          graphicsContexts_.add(index, builderForValue.build());
          onChanged();
        } else {
          graphicsContextsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Graphics context of a render stage event.  This represent the GL
       * context for an OpenGl app or the VkDevice for a Vulkan app.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedGraphicsContext graphics_contexts = 23;</code>
       */
      public Builder addAllGraphicsContexts(
          java.lang.Iterable<? extends perfetto.protos.GpuRenderStageEventOuterClass.InternedGraphicsContext> values) {
        if (graphicsContextsBuilder_ == null) {
          ensureGraphicsContextsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, graphicsContexts_);
          onChanged();
        } else {
          graphicsContextsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Graphics context of a render stage event.  This represent the GL
       * context for an OpenGl app or the VkDevice for a Vulkan app.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedGraphicsContext graphics_contexts = 23;</code>
       */
      public Builder clearGraphicsContexts() {
        if (graphicsContextsBuilder_ == null) {
          graphicsContexts_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00020000);
          onChanged();
        } else {
          graphicsContextsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Graphics context of a render stage event.  This represent the GL
       * context for an OpenGl app or the VkDevice for a Vulkan app.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedGraphicsContext graphics_contexts = 23;</code>
       */
      public Builder removeGraphicsContexts(int index) {
        if (graphicsContextsBuilder_ == null) {
          ensureGraphicsContextsIsMutable();
          graphicsContexts_.remove(index);
          onChanged();
        } else {
          graphicsContextsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Graphics context of a render stage event.  This represent the GL
       * context for an OpenGl app or the VkDevice for a Vulkan app.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedGraphicsContext graphics_contexts = 23;</code>
       */
      public perfetto.protos.GpuRenderStageEventOuterClass.InternedGraphicsContext.Builder getGraphicsContextsBuilder(
          int index) {
        return getGraphicsContextsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Graphics context of a render stage event.  This represent the GL
       * context for an OpenGl app or the VkDevice for a Vulkan app.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedGraphicsContext graphics_contexts = 23;</code>
       */
      public perfetto.protos.GpuRenderStageEventOuterClass.InternedGraphicsContextOrBuilder getGraphicsContextsOrBuilder(
          int index) {
        if (graphicsContextsBuilder_ == null) {
          return graphicsContexts_.get(index);  } else {
          return graphicsContextsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Graphics context of a render stage event.  This represent the GL
       * context for an OpenGl app or the VkDevice for a Vulkan app.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedGraphicsContext graphics_contexts = 23;</code>
       */
      public java.util.List<? extends perfetto.protos.GpuRenderStageEventOuterClass.InternedGraphicsContextOrBuilder> 
           getGraphicsContextsOrBuilderList() {
        if (graphicsContextsBuilder_ != null) {
          return graphicsContextsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(graphicsContexts_);
        }
      }
      /**
       * <pre>
       * Graphics context of a render stage event.  This represent the GL
       * context for an OpenGl app or the VkDevice for a Vulkan app.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedGraphicsContext graphics_contexts = 23;</code>
       */
      public perfetto.protos.GpuRenderStageEventOuterClass.InternedGraphicsContext.Builder addGraphicsContextsBuilder() {
        return getGraphicsContextsFieldBuilder().addBuilder(
            perfetto.protos.GpuRenderStageEventOuterClass.InternedGraphicsContext.getDefaultInstance());
      }
      /**
       * <pre>
       * Graphics context of a render stage event.  This represent the GL
       * context for an OpenGl app or the VkDevice for a Vulkan app.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedGraphicsContext graphics_contexts = 23;</code>
       */
      public perfetto.protos.GpuRenderStageEventOuterClass.InternedGraphicsContext.Builder addGraphicsContextsBuilder(
          int index) {
        return getGraphicsContextsFieldBuilder().addBuilder(
            index, perfetto.protos.GpuRenderStageEventOuterClass.InternedGraphicsContext.getDefaultInstance());
      }
      /**
       * <pre>
       * Graphics context of a render stage event.  This represent the GL
       * context for an OpenGl app or the VkDevice for a Vulkan app.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedGraphicsContext graphics_contexts = 23;</code>
       */
      public java.util.List<perfetto.protos.GpuRenderStageEventOuterClass.InternedGraphicsContext.Builder> 
           getGraphicsContextsBuilderList() {
        return getGraphicsContextsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.GpuRenderStageEventOuterClass.InternedGraphicsContext, perfetto.protos.GpuRenderStageEventOuterClass.InternedGraphicsContext.Builder, perfetto.protos.GpuRenderStageEventOuterClass.InternedGraphicsContextOrBuilder> 
          getGraphicsContextsFieldBuilder() {
        if (graphicsContextsBuilder_ == null) {
          graphicsContextsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              perfetto.protos.GpuRenderStageEventOuterClass.InternedGraphicsContext, perfetto.protos.GpuRenderStageEventOuterClass.InternedGraphicsContext.Builder, perfetto.protos.GpuRenderStageEventOuterClass.InternedGraphicsContextOrBuilder>(
                  graphicsContexts_,
                  ((bitField0_ & 0x00020000) != 0),
                  getParentForChildren(),
                  isClean());
          graphicsContexts_ = null;
        }
        return graphicsContextsBuilder_;
      }

      private java.util.List<perfetto.protos.GpuRenderStageEventOuterClass.InternedGpuRenderStageSpecification> gpuSpecifications_ =
        java.util.Collections.emptyList();
      private void ensureGpuSpecificationsIsMutable() {
        if (!((bitField0_ & 0x00040000) != 0)) {
          gpuSpecifications_ = new java.util.ArrayList<perfetto.protos.GpuRenderStageEventOuterClass.InternedGpuRenderStageSpecification>(gpuSpecifications_);
          bitField0_ |= 0x00040000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.GpuRenderStageEventOuterClass.InternedGpuRenderStageSpecification, perfetto.protos.GpuRenderStageEventOuterClass.InternedGpuRenderStageSpecification.Builder, perfetto.protos.GpuRenderStageEventOuterClass.InternedGpuRenderStageSpecificationOrBuilder> gpuSpecificationsBuilder_;

      /**
       * <pre>
       * Description of a GPU hardware queue or render stage.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedGpuRenderStageSpecification gpu_specifications = 24;</code>
       */
      public java.util.List<perfetto.protos.GpuRenderStageEventOuterClass.InternedGpuRenderStageSpecification> getGpuSpecificationsList() {
        if (gpuSpecificationsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(gpuSpecifications_);
        } else {
          return gpuSpecificationsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Description of a GPU hardware queue or render stage.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedGpuRenderStageSpecification gpu_specifications = 24;</code>
       */
      public int getGpuSpecificationsCount() {
        if (gpuSpecificationsBuilder_ == null) {
          return gpuSpecifications_.size();
        } else {
          return gpuSpecificationsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Description of a GPU hardware queue or render stage.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedGpuRenderStageSpecification gpu_specifications = 24;</code>
       */
      public perfetto.protos.GpuRenderStageEventOuterClass.InternedGpuRenderStageSpecification getGpuSpecifications(int index) {
        if (gpuSpecificationsBuilder_ == null) {
          return gpuSpecifications_.get(index);
        } else {
          return gpuSpecificationsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Description of a GPU hardware queue or render stage.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedGpuRenderStageSpecification gpu_specifications = 24;</code>
       */
      public Builder setGpuSpecifications(
          int index, perfetto.protos.GpuRenderStageEventOuterClass.InternedGpuRenderStageSpecification value) {
        if (gpuSpecificationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGpuSpecificationsIsMutable();
          gpuSpecifications_.set(index, value);
          onChanged();
        } else {
          gpuSpecificationsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Description of a GPU hardware queue or render stage.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedGpuRenderStageSpecification gpu_specifications = 24;</code>
       */
      public Builder setGpuSpecifications(
          int index, perfetto.protos.GpuRenderStageEventOuterClass.InternedGpuRenderStageSpecification.Builder builderForValue) {
        if (gpuSpecificationsBuilder_ == null) {
          ensureGpuSpecificationsIsMutable();
          gpuSpecifications_.set(index, builderForValue.build());
          onChanged();
        } else {
          gpuSpecificationsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Description of a GPU hardware queue or render stage.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedGpuRenderStageSpecification gpu_specifications = 24;</code>
       */
      public Builder addGpuSpecifications(perfetto.protos.GpuRenderStageEventOuterClass.InternedGpuRenderStageSpecification value) {
        if (gpuSpecificationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGpuSpecificationsIsMutable();
          gpuSpecifications_.add(value);
          onChanged();
        } else {
          gpuSpecificationsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Description of a GPU hardware queue or render stage.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedGpuRenderStageSpecification gpu_specifications = 24;</code>
       */
      public Builder addGpuSpecifications(
          int index, perfetto.protos.GpuRenderStageEventOuterClass.InternedGpuRenderStageSpecification value) {
        if (gpuSpecificationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGpuSpecificationsIsMutable();
          gpuSpecifications_.add(index, value);
          onChanged();
        } else {
          gpuSpecificationsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Description of a GPU hardware queue or render stage.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedGpuRenderStageSpecification gpu_specifications = 24;</code>
       */
      public Builder addGpuSpecifications(
          perfetto.protos.GpuRenderStageEventOuterClass.InternedGpuRenderStageSpecification.Builder builderForValue) {
        if (gpuSpecificationsBuilder_ == null) {
          ensureGpuSpecificationsIsMutable();
          gpuSpecifications_.add(builderForValue.build());
          onChanged();
        } else {
          gpuSpecificationsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Description of a GPU hardware queue or render stage.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedGpuRenderStageSpecification gpu_specifications = 24;</code>
       */
      public Builder addGpuSpecifications(
          int index, perfetto.protos.GpuRenderStageEventOuterClass.InternedGpuRenderStageSpecification.Builder builderForValue) {
        if (gpuSpecificationsBuilder_ == null) {
          ensureGpuSpecificationsIsMutable();
          gpuSpecifications_.add(index, builderForValue.build());
          onChanged();
        } else {
          gpuSpecificationsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Description of a GPU hardware queue or render stage.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedGpuRenderStageSpecification gpu_specifications = 24;</code>
       */
      public Builder addAllGpuSpecifications(
          java.lang.Iterable<? extends perfetto.protos.GpuRenderStageEventOuterClass.InternedGpuRenderStageSpecification> values) {
        if (gpuSpecificationsBuilder_ == null) {
          ensureGpuSpecificationsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, gpuSpecifications_);
          onChanged();
        } else {
          gpuSpecificationsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Description of a GPU hardware queue or render stage.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedGpuRenderStageSpecification gpu_specifications = 24;</code>
       */
      public Builder clearGpuSpecifications() {
        if (gpuSpecificationsBuilder_ == null) {
          gpuSpecifications_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00040000);
          onChanged();
        } else {
          gpuSpecificationsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Description of a GPU hardware queue or render stage.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedGpuRenderStageSpecification gpu_specifications = 24;</code>
       */
      public Builder removeGpuSpecifications(int index) {
        if (gpuSpecificationsBuilder_ == null) {
          ensureGpuSpecificationsIsMutable();
          gpuSpecifications_.remove(index);
          onChanged();
        } else {
          gpuSpecificationsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Description of a GPU hardware queue or render stage.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedGpuRenderStageSpecification gpu_specifications = 24;</code>
       */
      public perfetto.protos.GpuRenderStageEventOuterClass.InternedGpuRenderStageSpecification.Builder getGpuSpecificationsBuilder(
          int index) {
        return getGpuSpecificationsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Description of a GPU hardware queue or render stage.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedGpuRenderStageSpecification gpu_specifications = 24;</code>
       */
      public perfetto.protos.GpuRenderStageEventOuterClass.InternedGpuRenderStageSpecificationOrBuilder getGpuSpecificationsOrBuilder(
          int index) {
        if (gpuSpecificationsBuilder_ == null) {
          return gpuSpecifications_.get(index);  } else {
          return gpuSpecificationsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Description of a GPU hardware queue or render stage.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedGpuRenderStageSpecification gpu_specifications = 24;</code>
       */
      public java.util.List<? extends perfetto.protos.GpuRenderStageEventOuterClass.InternedGpuRenderStageSpecificationOrBuilder> 
           getGpuSpecificationsOrBuilderList() {
        if (gpuSpecificationsBuilder_ != null) {
          return gpuSpecificationsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(gpuSpecifications_);
        }
      }
      /**
       * <pre>
       * Description of a GPU hardware queue or render stage.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedGpuRenderStageSpecification gpu_specifications = 24;</code>
       */
      public perfetto.protos.GpuRenderStageEventOuterClass.InternedGpuRenderStageSpecification.Builder addGpuSpecificationsBuilder() {
        return getGpuSpecificationsFieldBuilder().addBuilder(
            perfetto.protos.GpuRenderStageEventOuterClass.InternedGpuRenderStageSpecification.getDefaultInstance());
      }
      /**
       * <pre>
       * Description of a GPU hardware queue or render stage.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedGpuRenderStageSpecification gpu_specifications = 24;</code>
       */
      public perfetto.protos.GpuRenderStageEventOuterClass.InternedGpuRenderStageSpecification.Builder addGpuSpecificationsBuilder(
          int index) {
        return getGpuSpecificationsFieldBuilder().addBuilder(
            index, perfetto.protos.GpuRenderStageEventOuterClass.InternedGpuRenderStageSpecification.getDefaultInstance());
      }
      /**
       * <pre>
       * Description of a GPU hardware queue or render stage.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedGpuRenderStageSpecification gpu_specifications = 24;</code>
       */
      public java.util.List<perfetto.protos.GpuRenderStageEventOuterClass.InternedGpuRenderStageSpecification.Builder> 
           getGpuSpecificationsBuilderList() {
        return getGpuSpecificationsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.GpuRenderStageEventOuterClass.InternedGpuRenderStageSpecification, perfetto.protos.GpuRenderStageEventOuterClass.InternedGpuRenderStageSpecification.Builder, perfetto.protos.GpuRenderStageEventOuterClass.InternedGpuRenderStageSpecificationOrBuilder> 
          getGpuSpecificationsFieldBuilder() {
        if (gpuSpecificationsBuilder_ == null) {
          gpuSpecificationsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              perfetto.protos.GpuRenderStageEventOuterClass.InternedGpuRenderStageSpecification, perfetto.protos.GpuRenderStageEventOuterClass.InternedGpuRenderStageSpecification.Builder, perfetto.protos.GpuRenderStageEventOuterClass.InternedGpuRenderStageSpecificationOrBuilder>(
                  gpuSpecifications_,
                  ((bitField0_ & 0x00040000) != 0),
                  getParentForChildren(),
                  isClean());
          gpuSpecifications_ = null;
        }
        return gpuSpecificationsBuilder_;
      }

      private java.util.List<perfetto.protos.ProfileCommon.InternedString> kernelSymbols_ =
        java.util.Collections.emptyList();
      private void ensureKernelSymbolsIsMutable() {
        if (!((bitField0_ & 0x00080000) != 0)) {
          kernelSymbols_ = new java.util.ArrayList<perfetto.protos.ProfileCommon.InternedString>(kernelSymbols_);
          bitField0_ |= 0x00080000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.ProfileCommon.InternedString, perfetto.protos.ProfileCommon.InternedString.Builder, perfetto.protos.ProfileCommon.InternedStringOrBuilder> kernelSymbolsBuilder_;

      /**
       * <pre>
       * This is set when FtraceConfig.symbolize_ksyms = true.
       * The id of each symbol the number that will be reported in ftrace events
       * like sched_block_reason.caller and is obtained from a monotonic counter.
       * The same symbol can have different indexes in different bundles.
       * This is is NOT the real address. This is to avoid disclosing KASLR through
       * traces.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString kernel_symbols = 26;</code>
       */
      public java.util.List<perfetto.protos.ProfileCommon.InternedString> getKernelSymbolsList() {
        if (kernelSymbolsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(kernelSymbols_);
        } else {
          return kernelSymbolsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * This is set when FtraceConfig.symbolize_ksyms = true.
       * The id of each symbol the number that will be reported in ftrace events
       * like sched_block_reason.caller and is obtained from a monotonic counter.
       * The same symbol can have different indexes in different bundles.
       * This is is NOT the real address. This is to avoid disclosing KASLR through
       * traces.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString kernel_symbols = 26;</code>
       */
      public int getKernelSymbolsCount() {
        if (kernelSymbolsBuilder_ == null) {
          return kernelSymbols_.size();
        } else {
          return kernelSymbolsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * This is set when FtraceConfig.symbolize_ksyms = true.
       * The id of each symbol the number that will be reported in ftrace events
       * like sched_block_reason.caller and is obtained from a monotonic counter.
       * The same symbol can have different indexes in different bundles.
       * This is is NOT the real address. This is to avoid disclosing KASLR through
       * traces.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString kernel_symbols = 26;</code>
       */
      public perfetto.protos.ProfileCommon.InternedString getKernelSymbols(int index) {
        if (kernelSymbolsBuilder_ == null) {
          return kernelSymbols_.get(index);
        } else {
          return kernelSymbolsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * This is set when FtraceConfig.symbolize_ksyms = true.
       * The id of each symbol the number that will be reported in ftrace events
       * like sched_block_reason.caller and is obtained from a monotonic counter.
       * The same symbol can have different indexes in different bundles.
       * This is is NOT the real address. This is to avoid disclosing KASLR through
       * traces.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString kernel_symbols = 26;</code>
       */
      public Builder setKernelSymbols(
          int index, perfetto.protos.ProfileCommon.InternedString value) {
        if (kernelSymbolsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKernelSymbolsIsMutable();
          kernelSymbols_.set(index, value);
          onChanged();
        } else {
          kernelSymbolsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * This is set when FtraceConfig.symbolize_ksyms = true.
       * The id of each symbol the number that will be reported in ftrace events
       * like sched_block_reason.caller and is obtained from a monotonic counter.
       * The same symbol can have different indexes in different bundles.
       * This is is NOT the real address. This is to avoid disclosing KASLR through
       * traces.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString kernel_symbols = 26;</code>
       */
      public Builder setKernelSymbols(
          int index, perfetto.protos.ProfileCommon.InternedString.Builder builderForValue) {
        if (kernelSymbolsBuilder_ == null) {
          ensureKernelSymbolsIsMutable();
          kernelSymbols_.set(index, builderForValue.build());
          onChanged();
        } else {
          kernelSymbolsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * This is set when FtraceConfig.symbolize_ksyms = true.
       * The id of each symbol the number that will be reported in ftrace events
       * like sched_block_reason.caller and is obtained from a monotonic counter.
       * The same symbol can have different indexes in different bundles.
       * This is is NOT the real address. This is to avoid disclosing KASLR through
       * traces.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString kernel_symbols = 26;</code>
       */
      public Builder addKernelSymbols(perfetto.protos.ProfileCommon.InternedString value) {
        if (kernelSymbolsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKernelSymbolsIsMutable();
          kernelSymbols_.add(value);
          onChanged();
        } else {
          kernelSymbolsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * This is set when FtraceConfig.symbolize_ksyms = true.
       * The id of each symbol the number that will be reported in ftrace events
       * like sched_block_reason.caller and is obtained from a monotonic counter.
       * The same symbol can have different indexes in different bundles.
       * This is is NOT the real address. This is to avoid disclosing KASLR through
       * traces.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString kernel_symbols = 26;</code>
       */
      public Builder addKernelSymbols(
          int index, perfetto.protos.ProfileCommon.InternedString value) {
        if (kernelSymbolsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKernelSymbolsIsMutable();
          kernelSymbols_.add(index, value);
          onChanged();
        } else {
          kernelSymbolsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * This is set when FtraceConfig.symbolize_ksyms = true.
       * The id of each symbol the number that will be reported in ftrace events
       * like sched_block_reason.caller and is obtained from a monotonic counter.
       * The same symbol can have different indexes in different bundles.
       * This is is NOT the real address. This is to avoid disclosing KASLR through
       * traces.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString kernel_symbols = 26;</code>
       */
      public Builder addKernelSymbols(
          perfetto.protos.ProfileCommon.InternedString.Builder builderForValue) {
        if (kernelSymbolsBuilder_ == null) {
          ensureKernelSymbolsIsMutable();
          kernelSymbols_.add(builderForValue.build());
          onChanged();
        } else {
          kernelSymbolsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * This is set when FtraceConfig.symbolize_ksyms = true.
       * The id of each symbol the number that will be reported in ftrace events
       * like sched_block_reason.caller and is obtained from a monotonic counter.
       * The same symbol can have different indexes in different bundles.
       * This is is NOT the real address. This is to avoid disclosing KASLR through
       * traces.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString kernel_symbols = 26;</code>
       */
      public Builder addKernelSymbols(
          int index, perfetto.protos.ProfileCommon.InternedString.Builder builderForValue) {
        if (kernelSymbolsBuilder_ == null) {
          ensureKernelSymbolsIsMutable();
          kernelSymbols_.add(index, builderForValue.build());
          onChanged();
        } else {
          kernelSymbolsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * This is set when FtraceConfig.symbolize_ksyms = true.
       * The id of each symbol the number that will be reported in ftrace events
       * like sched_block_reason.caller and is obtained from a monotonic counter.
       * The same symbol can have different indexes in different bundles.
       * This is is NOT the real address. This is to avoid disclosing KASLR through
       * traces.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString kernel_symbols = 26;</code>
       */
      public Builder addAllKernelSymbols(
          java.lang.Iterable<? extends perfetto.protos.ProfileCommon.InternedString> values) {
        if (kernelSymbolsBuilder_ == null) {
          ensureKernelSymbolsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, kernelSymbols_);
          onChanged();
        } else {
          kernelSymbolsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * This is set when FtraceConfig.symbolize_ksyms = true.
       * The id of each symbol the number that will be reported in ftrace events
       * like sched_block_reason.caller and is obtained from a monotonic counter.
       * The same symbol can have different indexes in different bundles.
       * This is is NOT the real address. This is to avoid disclosing KASLR through
       * traces.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString kernel_symbols = 26;</code>
       */
      public Builder clearKernelSymbols() {
        if (kernelSymbolsBuilder_ == null) {
          kernelSymbols_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00080000);
          onChanged();
        } else {
          kernelSymbolsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * This is set when FtraceConfig.symbolize_ksyms = true.
       * The id of each symbol the number that will be reported in ftrace events
       * like sched_block_reason.caller and is obtained from a monotonic counter.
       * The same symbol can have different indexes in different bundles.
       * This is is NOT the real address. This is to avoid disclosing KASLR through
       * traces.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString kernel_symbols = 26;</code>
       */
      public Builder removeKernelSymbols(int index) {
        if (kernelSymbolsBuilder_ == null) {
          ensureKernelSymbolsIsMutable();
          kernelSymbols_.remove(index);
          onChanged();
        } else {
          kernelSymbolsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * This is set when FtraceConfig.symbolize_ksyms = true.
       * The id of each symbol the number that will be reported in ftrace events
       * like sched_block_reason.caller and is obtained from a monotonic counter.
       * The same symbol can have different indexes in different bundles.
       * This is is NOT the real address. This is to avoid disclosing KASLR through
       * traces.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString kernel_symbols = 26;</code>
       */
      public perfetto.protos.ProfileCommon.InternedString.Builder getKernelSymbolsBuilder(
          int index) {
        return getKernelSymbolsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * This is set when FtraceConfig.symbolize_ksyms = true.
       * The id of each symbol the number that will be reported in ftrace events
       * like sched_block_reason.caller and is obtained from a monotonic counter.
       * The same symbol can have different indexes in different bundles.
       * This is is NOT the real address. This is to avoid disclosing KASLR through
       * traces.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString kernel_symbols = 26;</code>
       */
      public perfetto.protos.ProfileCommon.InternedStringOrBuilder getKernelSymbolsOrBuilder(
          int index) {
        if (kernelSymbolsBuilder_ == null) {
          return kernelSymbols_.get(index);  } else {
          return kernelSymbolsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * This is set when FtraceConfig.symbolize_ksyms = true.
       * The id of each symbol the number that will be reported in ftrace events
       * like sched_block_reason.caller and is obtained from a monotonic counter.
       * The same symbol can have different indexes in different bundles.
       * This is is NOT the real address. This is to avoid disclosing KASLR through
       * traces.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString kernel_symbols = 26;</code>
       */
      public java.util.List<? extends perfetto.protos.ProfileCommon.InternedStringOrBuilder> 
           getKernelSymbolsOrBuilderList() {
        if (kernelSymbolsBuilder_ != null) {
          return kernelSymbolsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(kernelSymbols_);
        }
      }
      /**
       * <pre>
       * This is set when FtraceConfig.symbolize_ksyms = true.
       * The id of each symbol the number that will be reported in ftrace events
       * like sched_block_reason.caller and is obtained from a monotonic counter.
       * The same symbol can have different indexes in different bundles.
       * This is is NOT the real address. This is to avoid disclosing KASLR through
       * traces.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString kernel_symbols = 26;</code>
       */
      public perfetto.protos.ProfileCommon.InternedString.Builder addKernelSymbolsBuilder() {
        return getKernelSymbolsFieldBuilder().addBuilder(
            perfetto.protos.ProfileCommon.InternedString.getDefaultInstance());
      }
      /**
       * <pre>
       * This is set when FtraceConfig.symbolize_ksyms = true.
       * The id of each symbol the number that will be reported in ftrace events
       * like sched_block_reason.caller and is obtained from a monotonic counter.
       * The same symbol can have different indexes in different bundles.
       * This is is NOT the real address. This is to avoid disclosing KASLR through
       * traces.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString kernel_symbols = 26;</code>
       */
      public perfetto.protos.ProfileCommon.InternedString.Builder addKernelSymbolsBuilder(
          int index) {
        return getKernelSymbolsFieldBuilder().addBuilder(
            index, perfetto.protos.ProfileCommon.InternedString.getDefaultInstance());
      }
      /**
       * <pre>
       * This is set when FtraceConfig.symbolize_ksyms = true.
       * The id of each symbol the number that will be reported in ftrace events
       * like sched_block_reason.caller and is obtained from a monotonic counter.
       * The same symbol can have different indexes in different bundles.
       * This is is NOT the real address. This is to avoid disclosing KASLR through
       * traces.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString kernel_symbols = 26;</code>
       */
      public java.util.List<perfetto.protos.ProfileCommon.InternedString.Builder> 
           getKernelSymbolsBuilderList() {
        return getKernelSymbolsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.ProfileCommon.InternedString, perfetto.protos.ProfileCommon.InternedString.Builder, perfetto.protos.ProfileCommon.InternedStringOrBuilder> 
          getKernelSymbolsFieldBuilder() {
        if (kernelSymbolsBuilder_ == null) {
          kernelSymbolsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              perfetto.protos.ProfileCommon.InternedString, perfetto.protos.ProfileCommon.InternedString.Builder, perfetto.protos.ProfileCommon.InternedStringOrBuilder>(
                  kernelSymbols_,
                  ((bitField0_ & 0x00080000) != 0),
                  getParentForChildren(),
                  isClean());
          kernelSymbols_ = null;
        }
        return kernelSymbolsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:perfetto.protos.InternedData)
    }

    // @@protoc_insertion_point(class_scope:perfetto.protos.InternedData)
    private static final perfetto.protos.InternedDataOuterClass.InternedData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new perfetto.protos.InternedDataOuterClass.InternedData();
    }

    public static perfetto.protos.InternedDataOuterClass.InternedData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<InternedData>
        PARSER = new com.google.protobuf.AbstractParser<InternedData>() {
      @java.lang.Override
      public InternedData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<InternedData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<InternedData> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public perfetto.protos.InternedDataOuterClass.InternedData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_InternedData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_perfetto_protos_InternedData_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n7protos/perfetto/trace/interned_data/in" +
      "terned_data.proto\022\017perfetto.protos\0326prot" +
      "os/perfetto/trace/gpu/gpu_render_stage_e" +
      "vent.proto\032?protos/perfetto/trace/track_" +
      "event/chrome_histogram_sample.proto\0328pro" +
      "tos/perfetto/trace/track_event/debug_ann" +
      "otation.proto\0323protos/perfetto/trace/tra" +
      "ck_event/log_message.proto\0323protos/perfe" +
      "tto/trace/track_event/track_event.proto\032" +
      "7protos/perfetto/trace/track_event/sourc" +
      "e_location.proto\0324protos/perfetto/trace/" +
      "profiling/profile_common.proto\"\320\t\n\014Inter" +
      "nedData\0228\n\020event_categories\030\001 \003(\0132\036.perf" +
      "etto.protos.EventCategory\022/\n\013event_names" +
      "\030\002 \003(\0132\032.perfetto.protos.EventName\022D\n\026de" +
      "bug_annotation_names\030\003 \003(\0132$.perfetto.pr" +
      "otos.DebugAnnotationName\022X\n!debug_annota" +
      "tion_value_type_names\030\033 \003(\0132-.perfetto.p" +
      "rotos.DebugAnnotationValueTypeName\0229\n\020so" +
      "urce_locations\030\004 \003(\0132\037.perfetto.protos.S" +
      "ourceLocation\022R\n\035unsymbolized_source_loc" +
      "ations\030\034 \003(\0132+.perfetto.protos.Unsymboli" +
      "zedSourceLocation\0229\n\020log_message_body\030\024 " +
      "\003(\0132\037.perfetto.protos.LogMessageBody\0227\n\017" +
      "histogram_names\030\031 \003(\0132\036.perfetto.protos." +
      "HistogramName\0222\n\tbuild_ids\030\020 \003(\0132\037.perfe" +
      "tto.protos.InternedString\0226\n\rmapping_pat" +
      "hs\030\021 \003(\0132\037.perfetto.protos.InternedStrin" +
      "g\0225\n\014source_paths\030\022 \003(\0132\037.perfetto.proto" +
      "s.InternedString\0227\n\016function_names\030\005 \003(\013" +
      "2\037.perfetto.protos.InternedString\022E\n\026pro" +
      "filed_frame_symbols\030\025 \003(\0132%.perfetto.pro" +
      "tos.ProfiledFrameSymbols\022*\n\010mappings\030\023 \003" +
      "(\0132\030.perfetto.protos.Mapping\022&\n\006frames\030\006" +
      " \003(\0132\026.perfetto.protos.Frame\022.\n\ncallstac" +
      "ks\030\007 \003(\0132\032.perfetto.protos.Callstack\022;\n\022" +
      "vulkan_memory_keys\030\026 \003(\0132\037.perfetto.prot" +
      "os.InternedString\022C\n\021graphics_contexts\030\027" +
      " \003(\0132(.perfetto.protos.InternedGraphicsC" +
      "ontext\022P\n\022gpu_specifications\030\030 \003(\01324.per" +
      "fetto.protos.InternedGpuRenderStageSpeci" +
      "fication\0227\n\016kernel_symbols\030\032 \003(\0132\037.perfe" +
      "tto.protos.InternedString"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          perfetto.protos.GpuRenderStageEventOuterClass.getDescriptor(),
          perfetto.protos.ChromeHistogramSampleOuterClass.getDescriptor(),
          perfetto.protos.DebugAnnotationOuterClass.getDescriptor(),
          perfetto.protos.LogMessageOuterClass.getDescriptor(),
          perfetto.protos.TrackEventOuterClass.getDescriptor(),
          perfetto.protos.SourceLocationOuterClass.getDescriptor(),
          perfetto.protos.ProfileCommon.getDescriptor(),
        });
    internal_static_perfetto_protos_InternedData_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_perfetto_protos_InternedData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_perfetto_protos_InternedData_descriptor,
        new java.lang.String[] { "EventCategories", "EventNames", "DebugAnnotationNames", "DebugAnnotationValueTypeNames", "SourceLocations", "UnsymbolizedSourceLocations", "LogMessageBody", "HistogramNames", "BuildIds", "MappingPaths", "SourcePaths", "FunctionNames", "ProfiledFrameSymbols", "Mappings", "Frames", "Callstacks", "VulkanMemoryKeys", "GraphicsContexts", "GpuSpecifications", "KernelSymbols", });
    perfetto.protos.GpuRenderStageEventOuterClass.getDescriptor();
    perfetto.protos.ChromeHistogramSampleOuterClass.getDescriptor();
    perfetto.protos.DebugAnnotationOuterClass.getDescriptor();
    perfetto.protos.LogMessageOuterClass.getDescriptor();
    perfetto.protos.TrackEventOuterClass.getDescriptor();
    perfetto.protos.SourceLocationOuterClass.getDescriptor();
    perfetto.protos.ProfileCommon.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
