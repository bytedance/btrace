// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/perfetto/config/power/android_power_config.proto

package perfetto.protos;

public final class AndroidPowerConfigOuterClass {
  private AndroidPowerConfigOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface AndroidPowerConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:perfetto.protos.AndroidPowerConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 battery_poll_ms = 1;</code>
     * @return Whether the batteryPollMs field is set.
     */
    boolean hasBatteryPollMs();
    /**
     * <code>optional uint32 battery_poll_ms = 1;</code>
     * @return The batteryPollMs.
     */
    int getBatteryPollMs();

    /**
     * <code>repeated .perfetto.protos.AndroidPowerConfig.BatteryCounters battery_counters = 2;</code>
     * @return A list containing the batteryCounters.
     */
    java.util.List<perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig.BatteryCounters> getBatteryCountersList();
    /**
     * <code>repeated .perfetto.protos.AndroidPowerConfig.BatteryCounters battery_counters = 2;</code>
     * @return The count of batteryCounters.
     */
    int getBatteryCountersCount();
    /**
     * <code>repeated .perfetto.protos.AndroidPowerConfig.BatteryCounters battery_counters = 2;</code>
     * @param index The index of the element to return.
     * @return The batteryCounters at the given index.
     */
    perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig.BatteryCounters getBatteryCounters(int index);

    /**
     * <pre>
     * Where available enables per-power-rail measurements.
     * </pre>
     *
     * <code>optional bool collect_power_rails = 3;</code>
     * @return Whether the collectPowerRails field is set.
     */
    boolean hasCollectPowerRails();
    /**
     * <pre>
     * Where available enables per-power-rail measurements.
     * </pre>
     *
     * <code>optional bool collect_power_rails = 3;</code>
     * @return The collectPowerRails.
     */
    boolean getCollectPowerRails();

    /**
     * <pre>
     * Provides a breakdown of energy estimation for various subsystem (e.g. GPU).
     * Available from Android S.
     * </pre>
     *
     * <code>optional bool collect_energy_estimation_breakdown = 4;</code>
     * @return Whether the collectEnergyEstimationBreakdown field is set.
     */
    boolean hasCollectEnergyEstimationBreakdown();
    /**
     * <pre>
     * Provides a breakdown of energy estimation for various subsystem (e.g. GPU).
     * Available from Android S.
     * </pre>
     *
     * <code>optional bool collect_energy_estimation_breakdown = 4;</code>
     * @return The collectEnergyEstimationBreakdown.
     */
    boolean getCollectEnergyEstimationBreakdown();
  }
  /**
   * Protobuf type {@code perfetto.protos.AndroidPowerConfig}
   */
  public static final class AndroidPowerConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:perfetto.protos.AndroidPowerConfig)
      AndroidPowerConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AndroidPowerConfig.newBuilder() to construct.
    private AndroidPowerConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AndroidPowerConfig() {
      batteryCounters_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new AndroidPowerConfig();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return perfetto.protos.AndroidPowerConfigOuterClass.internal_static_perfetto_protos_AndroidPowerConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return perfetto.protos.AndroidPowerConfigOuterClass.internal_static_perfetto_protos_AndroidPowerConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig.class, perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig.Builder.class);
    }

    /**
     * Protobuf enum {@code perfetto.protos.AndroidPowerConfig.BatteryCounters}
     */
    public enum BatteryCounters
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>BATTERY_COUNTER_UNSPECIFIED = 0;</code>
       */
      BATTERY_COUNTER_UNSPECIFIED(0),
      /**
       * <pre>
       * Coulomb counter.
       * </pre>
       *
       * <code>BATTERY_COUNTER_CHARGE = 1;</code>
       */
      BATTERY_COUNTER_CHARGE(1),
      /**
       * <pre>
       * Charge (%).
       * </pre>
       *
       * <code>BATTERY_COUNTER_CAPACITY_PERCENT = 2;</code>
       */
      BATTERY_COUNTER_CAPACITY_PERCENT(2),
      /**
       * <pre>
       * Instantaneous current.
       * </pre>
       *
       * <code>BATTERY_COUNTER_CURRENT = 3;</code>
       */
      BATTERY_COUNTER_CURRENT(3),
      /**
       * <pre>
       * Avg current.
       * </pre>
       *
       * <code>BATTERY_COUNTER_CURRENT_AVG = 4;</code>
       */
      BATTERY_COUNTER_CURRENT_AVG(4),
      ;

      /**
       * <code>BATTERY_COUNTER_UNSPECIFIED = 0;</code>
       */
      public static final int BATTERY_COUNTER_UNSPECIFIED_VALUE = 0;
      /**
       * <pre>
       * Coulomb counter.
       * </pre>
       *
       * <code>BATTERY_COUNTER_CHARGE = 1;</code>
       */
      public static final int BATTERY_COUNTER_CHARGE_VALUE = 1;
      /**
       * <pre>
       * Charge (%).
       * </pre>
       *
       * <code>BATTERY_COUNTER_CAPACITY_PERCENT = 2;</code>
       */
      public static final int BATTERY_COUNTER_CAPACITY_PERCENT_VALUE = 2;
      /**
       * <pre>
       * Instantaneous current.
       * </pre>
       *
       * <code>BATTERY_COUNTER_CURRENT = 3;</code>
       */
      public static final int BATTERY_COUNTER_CURRENT_VALUE = 3;
      /**
       * <pre>
       * Avg current.
       * </pre>
       *
       * <code>BATTERY_COUNTER_CURRENT_AVG = 4;</code>
       */
      public static final int BATTERY_COUNTER_CURRENT_AVG_VALUE = 4;


      public final int getNumber() {
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static BatteryCounters valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static BatteryCounters forNumber(int value) {
        switch (value) {
          case 0: return BATTERY_COUNTER_UNSPECIFIED;
          case 1: return BATTERY_COUNTER_CHARGE;
          case 2: return BATTERY_COUNTER_CAPACITY_PERCENT;
          case 3: return BATTERY_COUNTER_CURRENT;
          case 4: return BATTERY_COUNTER_CURRENT_AVG;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<BatteryCounters>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          BatteryCounters> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<BatteryCounters>() {
              public BatteryCounters findValueByNumber(int number) {
                return BatteryCounters.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig.getDescriptor().getEnumTypes().get(0);
      }

      private static final BatteryCounters[] VALUES = values();

      public static BatteryCounters valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private BatteryCounters(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:perfetto.protos.AndroidPowerConfig.BatteryCounters)
    }

    private int bitField0_;
    public static final int BATTERY_POLL_MS_FIELD_NUMBER = 1;
    private int batteryPollMs_ = 0;
    /**
     * <code>optional uint32 battery_poll_ms = 1;</code>
     * @return Whether the batteryPollMs field is set.
     */
    @java.lang.Override
    public boolean hasBatteryPollMs() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint32 battery_poll_ms = 1;</code>
     * @return The batteryPollMs.
     */
    @java.lang.Override
    public int getBatteryPollMs() {
      return batteryPollMs_;
    }

    public static final int BATTERY_COUNTERS_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private java.util.List<java.lang.Integer> batteryCounters_;
    private static final com.google.protobuf.Internal.ListAdapter.Converter<
        java.lang.Integer, perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig.BatteryCounters> batteryCounters_converter_ =
            new com.google.protobuf.Internal.ListAdapter.Converter<
                java.lang.Integer, perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig.BatteryCounters>() {
              public perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig.BatteryCounters convert(java.lang.Integer from) {
                perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig.BatteryCounters result = perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig.BatteryCounters.forNumber(from);
                return result == null ? perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig.BatteryCounters.BATTERY_COUNTER_UNSPECIFIED : result;
              }
            };
    /**
     * <code>repeated .perfetto.protos.AndroidPowerConfig.BatteryCounters battery_counters = 2;</code>
     * @return A list containing the batteryCounters.
     */
    @java.lang.Override
    public java.util.List<perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig.BatteryCounters> getBatteryCountersList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig.BatteryCounters>(batteryCounters_, batteryCounters_converter_);
    }
    /**
     * <code>repeated .perfetto.protos.AndroidPowerConfig.BatteryCounters battery_counters = 2;</code>
     * @return The count of batteryCounters.
     */
    @java.lang.Override
    public int getBatteryCountersCount() {
      return batteryCounters_.size();
    }
    /**
     * <code>repeated .perfetto.protos.AndroidPowerConfig.BatteryCounters battery_counters = 2;</code>
     * @param index The index of the element to return.
     * @return The batteryCounters at the given index.
     */
    @java.lang.Override
    public perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig.BatteryCounters getBatteryCounters(int index) {
      return batteryCounters_converter_.convert(batteryCounters_.get(index));
    }

    public static final int COLLECT_POWER_RAILS_FIELD_NUMBER = 3;
    private boolean collectPowerRails_ = false;
    /**
     * <pre>
     * Where available enables per-power-rail measurements.
     * </pre>
     *
     * <code>optional bool collect_power_rails = 3;</code>
     * @return Whether the collectPowerRails field is set.
     */
    @java.lang.Override
    public boolean hasCollectPowerRails() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Where available enables per-power-rail measurements.
     * </pre>
     *
     * <code>optional bool collect_power_rails = 3;</code>
     * @return The collectPowerRails.
     */
    @java.lang.Override
    public boolean getCollectPowerRails() {
      return collectPowerRails_;
    }

    public static final int COLLECT_ENERGY_ESTIMATION_BREAKDOWN_FIELD_NUMBER = 4;
    private boolean collectEnergyEstimationBreakdown_ = false;
    /**
     * <pre>
     * Provides a breakdown of energy estimation for various subsystem (e.g. GPU).
     * Available from Android S.
     * </pre>
     *
     * <code>optional bool collect_energy_estimation_breakdown = 4;</code>
     * @return Whether the collectEnergyEstimationBreakdown field is set.
     */
    @java.lang.Override
    public boolean hasCollectEnergyEstimationBreakdown() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Provides a breakdown of energy estimation for various subsystem (e.g. GPU).
     * Available from Android S.
     * </pre>
     *
     * <code>optional bool collect_energy_estimation_breakdown = 4;</code>
     * @return The collectEnergyEstimationBreakdown.
     */
    @java.lang.Override
    public boolean getCollectEnergyEstimationBreakdown() {
      return collectEnergyEstimationBreakdown_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, batteryPollMs_);
      }
      for (int i = 0; i < batteryCounters_.size(); i++) {
        output.writeEnum(2, batteryCounters_.get(i));
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeBool(3, collectPowerRails_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeBool(4, collectEnergyEstimationBreakdown_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, batteryPollMs_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < batteryCounters_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(batteryCounters_.get(i));
        }
        size += dataSize;
        size += 1 * batteryCounters_.size();
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, collectPowerRails_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, collectEnergyEstimationBreakdown_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig)) {
        return super.equals(obj);
      }
      perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig other = (perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig) obj;

      if (hasBatteryPollMs() != other.hasBatteryPollMs()) return false;
      if (hasBatteryPollMs()) {
        if (getBatteryPollMs()
            != other.getBatteryPollMs()) return false;
      }
      if (!batteryCounters_.equals(other.batteryCounters_)) return false;
      if (hasCollectPowerRails() != other.hasCollectPowerRails()) return false;
      if (hasCollectPowerRails()) {
        if (getCollectPowerRails()
            != other.getCollectPowerRails()) return false;
      }
      if (hasCollectEnergyEstimationBreakdown() != other.hasCollectEnergyEstimationBreakdown()) return false;
      if (hasCollectEnergyEstimationBreakdown()) {
        if (getCollectEnergyEstimationBreakdown()
            != other.getCollectEnergyEstimationBreakdown()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasBatteryPollMs()) {
        hash = (37 * hash) + BATTERY_POLL_MS_FIELD_NUMBER;
        hash = (53 * hash) + getBatteryPollMs();
      }
      if (getBatteryCountersCount() > 0) {
        hash = (37 * hash) + BATTERY_COUNTERS_FIELD_NUMBER;
        hash = (53 * hash) + batteryCounters_.hashCode();
      }
      if (hasCollectPowerRails()) {
        hash = (37 * hash) + COLLECT_POWER_RAILS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getCollectPowerRails());
      }
      if (hasCollectEnergyEstimationBreakdown()) {
        hash = (37 * hash) + COLLECT_ENERGY_ESTIMATION_BREAKDOWN_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getCollectEnergyEstimationBreakdown());
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code perfetto.protos.AndroidPowerConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:perfetto.protos.AndroidPowerConfig)
        perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.AndroidPowerConfigOuterClass.internal_static_perfetto_protos_AndroidPowerConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.AndroidPowerConfigOuterClass.internal_static_perfetto_protos_AndroidPowerConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig.class, perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig.Builder.class);
      }

      // Construct using perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        batteryPollMs_ = 0;
        batteryCounters_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        collectPowerRails_ = false;
        collectEnergyEstimationBreakdown_ = false;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return perfetto.protos.AndroidPowerConfigOuterClass.internal_static_perfetto_protos_AndroidPowerConfig_descriptor;
      }

      @java.lang.Override
      public perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig getDefaultInstanceForType() {
        return perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig.getDefaultInstance();
      }

      @java.lang.Override
      public perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig build() {
        perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig buildPartial() {
        perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig result = new perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig result) {
        if (((bitField0_ & 0x00000002) != 0)) {
          batteryCounters_ = java.util.Collections.unmodifiableList(batteryCounters_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.batteryCounters_ = batteryCounters_;
      }

      private void buildPartial0(perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.batteryPollMs_ = batteryPollMs_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.collectPowerRails_ = collectPowerRails_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.collectEnergyEstimationBreakdown_ = collectEnergyEstimationBreakdown_;
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig) {
          return mergeFrom((perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig other) {
        if (other == perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig.getDefaultInstance()) return this;
        if (other.hasBatteryPollMs()) {
          setBatteryPollMs(other.getBatteryPollMs());
        }
        if (!other.batteryCounters_.isEmpty()) {
          if (batteryCounters_.isEmpty()) {
            batteryCounters_ = other.batteryCounters_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureBatteryCountersIsMutable();
            batteryCounters_.addAll(other.batteryCounters_);
          }
          onChanged();
        }
        if (other.hasCollectPowerRails()) {
          setCollectPowerRails(other.getCollectPowerRails());
        }
        if (other.hasCollectEnergyEstimationBreakdown()) {
          setCollectEnergyEstimationBreakdown(other.getCollectEnergyEstimationBreakdown());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                batteryPollMs_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                int tmpRaw = input.readEnum();
                perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig.BatteryCounters tmpValue =
                    perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig.BatteryCounters.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(2, tmpRaw);
                } else {
                  ensureBatteryCountersIsMutable();
                  batteryCounters_.add(tmpRaw);
                }
                break;
              } // case 16
              case 18: {
                int length = input.readRawVarint32();
                int oldLimit = input.pushLimit(length);
                while(input.getBytesUntilLimit() > 0) {
                  int tmpRaw = input.readEnum();
                  perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig.BatteryCounters tmpValue =
                      perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig.BatteryCounters.forNumber(tmpRaw);
                  if (tmpValue == null) {
                    mergeUnknownVarintField(2, tmpRaw);
                  } else {
                    ensureBatteryCountersIsMutable();
                    batteryCounters_.add(tmpRaw);
                  }
                }
                input.popLimit(oldLimit);
                break;
              } // case 18
              case 24: {
                collectPowerRails_ = input.readBool();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                collectEnergyEstimationBreakdown_ = input.readBool();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int batteryPollMs_ ;
      /**
       * <code>optional uint32 battery_poll_ms = 1;</code>
       * @return Whether the batteryPollMs field is set.
       */
      @java.lang.Override
      public boolean hasBatteryPollMs() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 battery_poll_ms = 1;</code>
       * @return The batteryPollMs.
       */
      @java.lang.Override
      public int getBatteryPollMs() {
        return batteryPollMs_;
      }
      /**
       * <code>optional uint32 battery_poll_ms = 1;</code>
       * @param value The batteryPollMs to set.
       * @return This builder for chaining.
       */
      public Builder setBatteryPollMs(int value) {
        
        batteryPollMs_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 battery_poll_ms = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearBatteryPollMs() {
        bitField0_ = (bitField0_ & ~0x00000001);
        batteryPollMs_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> batteryCounters_ =
        java.util.Collections.emptyList();
      private void ensureBatteryCountersIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          batteryCounters_ = new java.util.ArrayList<java.lang.Integer>(batteryCounters_);
          bitField0_ |= 0x00000002;
        }
      }
      /**
       * <code>repeated .perfetto.protos.AndroidPowerConfig.BatteryCounters battery_counters = 2;</code>
       * @return A list containing the batteryCounters.
       */
      public java.util.List<perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig.BatteryCounters> getBatteryCountersList() {
        return new com.google.protobuf.Internal.ListAdapter<
            java.lang.Integer, perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig.BatteryCounters>(batteryCounters_, batteryCounters_converter_);
      }
      /**
       * <code>repeated .perfetto.protos.AndroidPowerConfig.BatteryCounters battery_counters = 2;</code>
       * @return The count of batteryCounters.
       */
      public int getBatteryCountersCount() {
        return batteryCounters_.size();
      }
      /**
       * <code>repeated .perfetto.protos.AndroidPowerConfig.BatteryCounters battery_counters = 2;</code>
       * @param index The index of the element to return.
       * @return The batteryCounters at the given index.
       */
      public perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig.BatteryCounters getBatteryCounters(int index) {
        return batteryCounters_converter_.convert(batteryCounters_.get(index));
      }
      /**
       * <code>repeated .perfetto.protos.AndroidPowerConfig.BatteryCounters battery_counters = 2;</code>
       * @param index The index to set the value at.
       * @param value The batteryCounters to set.
       * @return This builder for chaining.
       */
      public Builder setBatteryCounters(
          int index, perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig.BatteryCounters value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBatteryCountersIsMutable();
        batteryCounters_.set(index, value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.AndroidPowerConfig.BatteryCounters battery_counters = 2;</code>
       * @param value The batteryCounters to add.
       * @return This builder for chaining.
       */
      public Builder addBatteryCounters(perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig.BatteryCounters value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBatteryCountersIsMutable();
        batteryCounters_.add(value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.AndroidPowerConfig.BatteryCounters battery_counters = 2;</code>
       * @param values The batteryCounters to add.
       * @return This builder for chaining.
       */
      public Builder addAllBatteryCounters(
          java.lang.Iterable<? extends perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig.BatteryCounters> values) {
        ensureBatteryCountersIsMutable();
        for (perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig.BatteryCounters value : values) {
          batteryCounters_.add(value.getNumber());
        }
        onChanged();
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.AndroidPowerConfig.BatteryCounters battery_counters = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearBatteryCounters() {
        batteryCounters_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private boolean collectPowerRails_ ;
      /**
       * <pre>
       * Where available enables per-power-rail measurements.
       * </pre>
       *
       * <code>optional bool collect_power_rails = 3;</code>
       * @return Whether the collectPowerRails field is set.
       */
      @java.lang.Override
      public boolean hasCollectPowerRails() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Where available enables per-power-rail measurements.
       * </pre>
       *
       * <code>optional bool collect_power_rails = 3;</code>
       * @return The collectPowerRails.
       */
      @java.lang.Override
      public boolean getCollectPowerRails() {
        return collectPowerRails_;
      }
      /**
       * <pre>
       * Where available enables per-power-rail measurements.
       * </pre>
       *
       * <code>optional bool collect_power_rails = 3;</code>
       * @param value The collectPowerRails to set.
       * @return This builder for chaining.
       */
      public Builder setCollectPowerRails(boolean value) {
        
        collectPowerRails_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Where available enables per-power-rail measurements.
       * </pre>
       *
       * <code>optional bool collect_power_rails = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearCollectPowerRails() {
        bitField0_ = (bitField0_ & ~0x00000004);
        collectPowerRails_ = false;
        onChanged();
        return this;
      }

      private boolean collectEnergyEstimationBreakdown_ ;
      /**
       * <pre>
       * Provides a breakdown of energy estimation for various subsystem (e.g. GPU).
       * Available from Android S.
       * </pre>
       *
       * <code>optional bool collect_energy_estimation_breakdown = 4;</code>
       * @return Whether the collectEnergyEstimationBreakdown field is set.
       */
      @java.lang.Override
      public boolean hasCollectEnergyEstimationBreakdown() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Provides a breakdown of energy estimation for various subsystem (e.g. GPU).
       * Available from Android S.
       * </pre>
       *
       * <code>optional bool collect_energy_estimation_breakdown = 4;</code>
       * @return The collectEnergyEstimationBreakdown.
       */
      @java.lang.Override
      public boolean getCollectEnergyEstimationBreakdown() {
        return collectEnergyEstimationBreakdown_;
      }
      /**
       * <pre>
       * Provides a breakdown of energy estimation for various subsystem (e.g. GPU).
       * Available from Android S.
       * </pre>
       *
       * <code>optional bool collect_energy_estimation_breakdown = 4;</code>
       * @param value The collectEnergyEstimationBreakdown to set.
       * @return This builder for chaining.
       */
      public Builder setCollectEnergyEstimationBreakdown(boolean value) {
        
        collectEnergyEstimationBreakdown_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Provides a breakdown of energy estimation for various subsystem (e.g. GPU).
       * Available from Android S.
       * </pre>
       *
       * <code>optional bool collect_energy_estimation_breakdown = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearCollectEnergyEstimationBreakdown() {
        bitField0_ = (bitField0_ & ~0x00000008);
        collectEnergyEstimationBreakdown_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:perfetto.protos.AndroidPowerConfig)
    }

    // @@protoc_insertion_point(class_scope:perfetto.protos.AndroidPowerConfig)
    private static final perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig();
    }

    public static perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<AndroidPowerConfig>
        PARSER = new com.google.protobuf.AbstractParser<AndroidPowerConfig>() {
      @java.lang.Override
      public AndroidPowerConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<AndroidPowerConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AndroidPowerConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public perfetto.protos.AndroidPowerConfigOuterClass.AndroidPowerConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_AndroidPowerConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_perfetto_protos_AndroidPowerConfig_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n7protos/perfetto/config/power/android_p" +
      "ower_config.proto\022\017perfetto.protos\"\373\002\n\022A" +
      "ndroidPowerConfig\022\027\n\017battery_poll_ms\030\001 \001" +
      "(\r\022M\n\020battery_counters\030\002 \003(\01623.perfetto." +
      "protos.AndroidPowerConfig.BatteryCounter" +
      "s\022\033\n\023collect_power_rails\030\003 \001(\010\022+\n#collec" +
      "t_energy_estimation_breakdown\030\004 \001(\010\"\262\001\n\017" +
      "BatteryCounters\022\037\n\033BATTERY_COUNTER_UNSPE" +
      "CIFIED\020\000\022\032\n\026BATTERY_COUNTER_CHARGE\020\001\022$\n " +
      "BATTERY_COUNTER_CAPACITY_PERCENT\020\002\022\033\n\027BA" +
      "TTERY_COUNTER_CURRENT\020\003\022\037\n\033BATTERY_COUNT" +
      "ER_CURRENT_AVG\020\004"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_perfetto_protos_AndroidPowerConfig_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_perfetto_protos_AndroidPowerConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_perfetto_protos_AndroidPowerConfig_descriptor,
        new java.lang.String[] { "BatteryPollMs", "BatteryCounters", "CollectPowerRails", "CollectEnergyEstimationBreakdown", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
