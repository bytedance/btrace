// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/perfetto/metrics/chrome/touch_jank.proto

package perfetto.protos;

public final class TouchJankOuterClass {
  private TouchJankOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface TouchJankOrBuilder extends
      // @@protoc_insertion_point(interface_extends:perfetto.protos.TouchJank)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The percentage of time we consider janky of the total time spent performing
     * touch gestures during the trace. I.E. approximately equal to
     * |touch_jank_ms|/|touch_ms|.
     * </pre>
     *
     * <code>optional double touch_jank_percentage = 1 [(.perfetto.protos.unit) = "n%_smallerIsBetter"];</code>
     * @return Whether the touchJankPercentage field is set.
     */
    boolean hasTouchJankPercentage();
    /**
     * <pre>
     * The percentage of time we consider janky of the total time spent performing
     * touch gestures during the trace. I.E. approximately equal to
     * |touch_jank_ms|/|touch_ms|.
     * </pre>
     *
     * <code>optional double touch_jank_percentage = 1 [(.perfetto.protos.unit) = "n%_smallerIsBetter"];</code>
     * @return The touchJankPercentage.
     */
    double getTouchJankPercentage();

    /**
     * <code>optional double touch_ms = 2 [(.perfetto.protos.unit) = "ms_biggerIsBetter"];</code>
     * @return Whether the touchMs field is set.
     */
    boolean hasTouchMs();
    /**
     * <code>optional double touch_ms = 2 [(.perfetto.protos.unit) = "ms_biggerIsBetter"];</code>
     * @return The touchMs.
     */
    double getTouchMs();

    /**
     * <code>optional double touch_processing_ms = 3 [(.perfetto.protos.unit) = "ms_biggerIsBetter"];</code>
     * @return Whether the touchProcessingMs field is set.
     */
    boolean hasTouchProcessingMs();
    /**
     * <code>optional double touch_processing_ms = 3 [(.perfetto.protos.unit) = "ms_biggerIsBetter"];</code>
     * @return The touchProcessingMs.
     */
    double getTouchProcessingMs();

    /**
     * <code>optional double touch_jank_processing_ms = 4 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
     * @return Whether the touchJankProcessingMs field is set.
     */
    boolean hasTouchJankProcessingMs();
    /**
     * <code>optional double touch_jank_processing_ms = 4 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
     * @return The touchJankProcessingMs.
     */
    double getTouchJankProcessingMs();

    /**
     * <code>optional int64 num_touch_update_count = 5 [(.perfetto.protos.unit) = "count_biggerIsBetter"];</code>
     * @return Whether the numTouchUpdateCount field is set.
     */
    boolean hasNumTouchUpdateCount();
    /**
     * <code>optional int64 num_touch_update_count = 5 [(.perfetto.protos.unit) = "count_biggerIsBetter"];</code>
     * @return The numTouchUpdateCount.
     */
    long getNumTouchUpdateCount();

    /**
     * <code>optional int64 num_touch_update_jank_count = 6 [(.perfetto.protos.unit) = "count_smallerIsBetter"];</code>
     * @return Whether the numTouchUpdateJankCount field is set.
     */
    boolean hasNumTouchUpdateJankCount();
    /**
     * <code>optional int64 num_touch_update_jank_count = 6 [(.perfetto.protos.unit) = "count_smallerIsBetter"];</code>
     * @return The numTouchUpdateJankCount.
     */
    long getNumTouchUpdateJankCount();

    /**
     * <code>optional double touch_jank_budget_ms = 7 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
     * @return Whether the touchJankBudgetMs field is set.
     */
    boolean hasTouchJankBudgetMs();
    /**
     * <code>optional double touch_jank_budget_ms = 7 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
     * @return The touchJankBudgetMs.
     */
    double getTouchJankBudgetMs();
  }
  /**
   * Protobuf type {@code perfetto.protos.TouchJank}
   */
  public static final class TouchJank extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:perfetto.protos.TouchJank)
      TouchJankOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TouchJank.newBuilder() to construct.
    private TouchJank(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TouchJank() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TouchJank();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return perfetto.protos.TouchJankOuterClass.internal_static_perfetto_protos_TouchJank_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return perfetto.protos.TouchJankOuterClass.internal_static_perfetto_protos_TouchJank_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              perfetto.protos.TouchJankOuterClass.TouchJank.class, perfetto.protos.TouchJankOuterClass.TouchJank.Builder.class);
    }

    private int bitField0_;
    public static final int TOUCH_JANK_PERCENTAGE_FIELD_NUMBER = 1;
    private double touchJankPercentage_ = 0D;
    /**
     * <pre>
     * The percentage of time we consider janky of the total time spent performing
     * touch gestures during the trace. I.E. approximately equal to
     * |touch_jank_ms|/|touch_ms|.
     * </pre>
     *
     * <code>optional double touch_jank_percentage = 1 [(.perfetto.protos.unit) = "n%_smallerIsBetter"];</code>
     * @return Whether the touchJankPercentage field is set.
     */
    @java.lang.Override
    public boolean hasTouchJankPercentage() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The percentage of time we consider janky of the total time spent performing
     * touch gestures during the trace. I.E. approximately equal to
     * |touch_jank_ms|/|touch_ms|.
     * </pre>
     *
     * <code>optional double touch_jank_percentage = 1 [(.perfetto.protos.unit) = "n%_smallerIsBetter"];</code>
     * @return The touchJankPercentage.
     */
    @java.lang.Override
    public double getTouchJankPercentage() {
      return touchJankPercentage_;
    }

    public static final int TOUCH_MS_FIELD_NUMBER = 2;
    private double touchMs_ = 0D;
    /**
     * <code>optional double touch_ms = 2 [(.perfetto.protos.unit) = "ms_biggerIsBetter"];</code>
     * @return Whether the touchMs field is set.
     */
    @java.lang.Override
    public boolean hasTouchMs() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional double touch_ms = 2 [(.perfetto.protos.unit) = "ms_biggerIsBetter"];</code>
     * @return The touchMs.
     */
    @java.lang.Override
    public double getTouchMs() {
      return touchMs_;
    }

    public static final int TOUCH_PROCESSING_MS_FIELD_NUMBER = 3;
    private double touchProcessingMs_ = 0D;
    /**
     * <code>optional double touch_processing_ms = 3 [(.perfetto.protos.unit) = "ms_biggerIsBetter"];</code>
     * @return Whether the touchProcessingMs field is set.
     */
    @java.lang.Override
    public boolean hasTouchProcessingMs() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional double touch_processing_ms = 3 [(.perfetto.protos.unit) = "ms_biggerIsBetter"];</code>
     * @return The touchProcessingMs.
     */
    @java.lang.Override
    public double getTouchProcessingMs() {
      return touchProcessingMs_;
    }

    public static final int TOUCH_JANK_PROCESSING_MS_FIELD_NUMBER = 4;
    private double touchJankProcessingMs_ = 0D;
    /**
     * <code>optional double touch_jank_processing_ms = 4 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
     * @return Whether the touchJankProcessingMs field is set.
     */
    @java.lang.Override
    public boolean hasTouchJankProcessingMs() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional double touch_jank_processing_ms = 4 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
     * @return The touchJankProcessingMs.
     */
    @java.lang.Override
    public double getTouchJankProcessingMs() {
      return touchJankProcessingMs_;
    }

    public static final int NUM_TOUCH_UPDATE_COUNT_FIELD_NUMBER = 5;
    private long numTouchUpdateCount_ = 0L;
    /**
     * <code>optional int64 num_touch_update_count = 5 [(.perfetto.protos.unit) = "count_biggerIsBetter"];</code>
     * @return Whether the numTouchUpdateCount field is set.
     */
    @java.lang.Override
    public boolean hasNumTouchUpdateCount() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional int64 num_touch_update_count = 5 [(.perfetto.protos.unit) = "count_biggerIsBetter"];</code>
     * @return The numTouchUpdateCount.
     */
    @java.lang.Override
    public long getNumTouchUpdateCount() {
      return numTouchUpdateCount_;
    }

    public static final int NUM_TOUCH_UPDATE_JANK_COUNT_FIELD_NUMBER = 6;
    private long numTouchUpdateJankCount_ = 0L;
    /**
     * <code>optional int64 num_touch_update_jank_count = 6 [(.perfetto.protos.unit) = "count_smallerIsBetter"];</code>
     * @return Whether the numTouchUpdateJankCount field is set.
     */
    @java.lang.Override
    public boolean hasNumTouchUpdateJankCount() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>optional int64 num_touch_update_jank_count = 6 [(.perfetto.protos.unit) = "count_smallerIsBetter"];</code>
     * @return The numTouchUpdateJankCount.
     */
    @java.lang.Override
    public long getNumTouchUpdateJankCount() {
      return numTouchUpdateJankCount_;
    }

    public static final int TOUCH_JANK_BUDGET_MS_FIELD_NUMBER = 7;
    private double touchJankBudgetMs_ = 0D;
    /**
     * <code>optional double touch_jank_budget_ms = 7 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
     * @return Whether the touchJankBudgetMs field is set.
     */
    @java.lang.Override
    public boolean hasTouchJankBudgetMs() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <code>optional double touch_jank_budget_ms = 7 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
     * @return The touchJankBudgetMs.
     */
    @java.lang.Override
    public double getTouchJankBudgetMs() {
      return touchJankBudgetMs_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeDouble(1, touchJankPercentage_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeDouble(2, touchMs_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeDouble(3, touchProcessingMs_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeDouble(4, touchJankProcessingMs_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeInt64(5, numTouchUpdateCount_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeInt64(6, numTouchUpdateJankCount_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeDouble(7, touchJankBudgetMs_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, touchJankPercentage_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, touchMs_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, touchProcessingMs_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, touchJankProcessingMs_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, numTouchUpdateCount_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, numTouchUpdateJankCount_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, touchJankBudgetMs_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof perfetto.protos.TouchJankOuterClass.TouchJank)) {
        return super.equals(obj);
      }
      perfetto.protos.TouchJankOuterClass.TouchJank other = (perfetto.protos.TouchJankOuterClass.TouchJank) obj;

      if (hasTouchJankPercentage() != other.hasTouchJankPercentage()) return false;
      if (hasTouchJankPercentage()) {
        if (java.lang.Double.doubleToLongBits(getTouchJankPercentage())
            != java.lang.Double.doubleToLongBits(
                other.getTouchJankPercentage())) return false;
      }
      if (hasTouchMs() != other.hasTouchMs()) return false;
      if (hasTouchMs()) {
        if (java.lang.Double.doubleToLongBits(getTouchMs())
            != java.lang.Double.doubleToLongBits(
                other.getTouchMs())) return false;
      }
      if (hasTouchProcessingMs() != other.hasTouchProcessingMs()) return false;
      if (hasTouchProcessingMs()) {
        if (java.lang.Double.doubleToLongBits(getTouchProcessingMs())
            != java.lang.Double.doubleToLongBits(
                other.getTouchProcessingMs())) return false;
      }
      if (hasTouchJankProcessingMs() != other.hasTouchJankProcessingMs()) return false;
      if (hasTouchJankProcessingMs()) {
        if (java.lang.Double.doubleToLongBits(getTouchJankProcessingMs())
            != java.lang.Double.doubleToLongBits(
                other.getTouchJankProcessingMs())) return false;
      }
      if (hasNumTouchUpdateCount() != other.hasNumTouchUpdateCount()) return false;
      if (hasNumTouchUpdateCount()) {
        if (getNumTouchUpdateCount()
            != other.getNumTouchUpdateCount()) return false;
      }
      if (hasNumTouchUpdateJankCount() != other.hasNumTouchUpdateJankCount()) return false;
      if (hasNumTouchUpdateJankCount()) {
        if (getNumTouchUpdateJankCount()
            != other.getNumTouchUpdateJankCount()) return false;
      }
      if (hasTouchJankBudgetMs() != other.hasTouchJankBudgetMs()) return false;
      if (hasTouchJankBudgetMs()) {
        if (java.lang.Double.doubleToLongBits(getTouchJankBudgetMs())
            != java.lang.Double.doubleToLongBits(
                other.getTouchJankBudgetMs())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTouchJankPercentage()) {
        hash = (37 * hash) + TOUCH_JANK_PERCENTAGE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTouchJankPercentage()));
      }
      if (hasTouchMs()) {
        hash = (37 * hash) + TOUCH_MS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTouchMs()));
      }
      if (hasTouchProcessingMs()) {
        hash = (37 * hash) + TOUCH_PROCESSING_MS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTouchProcessingMs()));
      }
      if (hasTouchJankProcessingMs()) {
        hash = (37 * hash) + TOUCH_JANK_PROCESSING_MS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTouchJankProcessingMs()));
      }
      if (hasNumTouchUpdateCount()) {
        hash = (37 * hash) + NUM_TOUCH_UPDATE_COUNT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getNumTouchUpdateCount());
      }
      if (hasNumTouchUpdateJankCount()) {
        hash = (37 * hash) + NUM_TOUCH_UPDATE_JANK_COUNT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getNumTouchUpdateJankCount());
      }
      if (hasTouchJankBudgetMs()) {
        hash = (37 * hash) + TOUCH_JANK_BUDGET_MS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTouchJankBudgetMs()));
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static perfetto.protos.TouchJankOuterClass.TouchJank parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.TouchJankOuterClass.TouchJank parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.TouchJankOuterClass.TouchJank parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.TouchJankOuterClass.TouchJank parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.TouchJankOuterClass.TouchJank parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.TouchJankOuterClass.TouchJank parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.TouchJankOuterClass.TouchJank parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.TouchJankOuterClass.TouchJank parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.TouchJankOuterClass.TouchJank parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static perfetto.protos.TouchJankOuterClass.TouchJank parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.TouchJankOuterClass.TouchJank parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.TouchJankOuterClass.TouchJank parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(perfetto.protos.TouchJankOuterClass.TouchJank prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code perfetto.protos.TouchJank}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:perfetto.protos.TouchJank)
        perfetto.protos.TouchJankOuterClass.TouchJankOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.TouchJankOuterClass.internal_static_perfetto_protos_TouchJank_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.TouchJankOuterClass.internal_static_perfetto_protos_TouchJank_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.TouchJankOuterClass.TouchJank.class, perfetto.protos.TouchJankOuterClass.TouchJank.Builder.class);
      }

      // Construct using perfetto.protos.TouchJankOuterClass.TouchJank.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        touchJankPercentage_ = 0D;
        touchMs_ = 0D;
        touchProcessingMs_ = 0D;
        touchJankProcessingMs_ = 0D;
        numTouchUpdateCount_ = 0L;
        numTouchUpdateJankCount_ = 0L;
        touchJankBudgetMs_ = 0D;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return perfetto.protos.TouchJankOuterClass.internal_static_perfetto_protos_TouchJank_descriptor;
      }

      @java.lang.Override
      public perfetto.protos.TouchJankOuterClass.TouchJank getDefaultInstanceForType() {
        return perfetto.protos.TouchJankOuterClass.TouchJank.getDefaultInstance();
      }

      @java.lang.Override
      public perfetto.protos.TouchJankOuterClass.TouchJank build() {
        perfetto.protos.TouchJankOuterClass.TouchJank result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public perfetto.protos.TouchJankOuterClass.TouchJank buildPartial() {
        perfetto.protos.TouchJankOuterClass.TouchJank result = new perfetto.protos.TouchJankOuterClass.TouchJank(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(perfetto.protos.TouchJankOuterClass.TouchJank result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.touchJankPercentage_ = touchJankPercentage_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.touchMs_ = touchMs_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.touchProcessingMs_ = touchProcessingMs_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.touchJankProcessingMs_ = touchJankProcessingMs_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.numTouchUpdateCount_ = numTouchUpdateCount_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.numTouchUpdateJankCount_ = numTouchUpdateJankCount_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.touchJankBudgetMs_ = touchJankBudgetMs_;
          to_bitField0_ |= 0x00000040;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof perfetto.protos.TouchJankOuterClass.TouchJank) {
          return mergeFrom((perfetto.protos.TouchJankOuterClass.TouchJank)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(perfetto.protos.TouchJankOuterClass.TouchJank other) {
        if (other == perfetto.protos.TouchJankOuterClass.TouchJank.getDefaultInstance()) return this;
        if (other.hasTouchJankPercentage()) {
          setTouchJankPercentage(other.getTouchJankPercentage());
        }
        if (other.hasTouchMs()) {
          setTouchMs(other.getTouchMs());
        }
        if (other.hasTouchProcessingMs()) {
          setTouchProcessingMs(other.getTouchProcessingMs());
        }
        if (other.hasTouchJankProcessingMs()) {
          setTouchJankProcessingMs(other.getTouchJankProcessingMs());
        }
        if (other.hasNumTouchUpdateCount()) {
          setNumTouchUpdateCount(other.getNumTouchUpdateCount());
        }
        if (other.hasNumTouchUpdateJankCount()) {
          setNumTouchUpdateJankCount(other.getNumTouchUpdateJankCount());
        }
        if (other.hasTouchJankBudgetMs()) {
          setTouchJankBudgetMs(other.getTouchJankBudgetMs());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 9: {
                touchJankPercentage_ = input.readDouble();
                bitField0_ |= 0x00000001;
                break;
              } // case 9
              case 17: {
                touchMs_ = input.readDouble();
                bitField0_ |= 0x00000002;
                break;
              } // case 17
              case 25: {
                touchProcessingMs_ = input.readDouble();
                bitField0_ |= 0x00000004;
                break;
              } // case 25
              case 33: {
                touchJankProcessingMs_ = input.readDouble();
                bitField0_ |= 0x00000008;
                break;
              } // case 33
              case 40: {
                numTouchUpdateCount_ = input.readInt64();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                numTouchUpdateJankCount_ = input.readInt64();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 57: {
                touchJankBudgetMs_ = input.readDouble();
                bitField0_ |= 0x00000040;
                break;
              } // case 57
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private double touchJankPercentage_ ;
      /**
       * <pre>
       * The percentage of time we consider janky of the total time spent performing
       * touch gestures during the trace. I.E. approximately equal to
       * |touch_jank_ms|/|touch_ms|.
       * </pre>
       *
       * <code>optional double touch_jank_percentage = 1 [(.perfetto.protos.unit) = "n%_smallerIsBetter"];</code>
       * @return Whether the touchJankPercentage field is set.
       */
      @java.lang.Override
      public boolean hasTouchJankPercentage() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * The percentage of time we consider janky of the total time spent performing
       * touch gestures during the trace. I.E. approximately equal to
       * |touch_jank_ms|/|touch_ms|.
       * </pre>
       *
       * <code>optional double touch_jank_percentage = 1 [(.perfetto.protos.unit) = "n%_smallerIsBetter"];</code>
       * @return The touchJankPercentage.
       */
      @java.lang.Override
      public double getTouchJankPercentage() {
        return touchJankPercentage_;
      }
      /**
       * <pre>
       * The percentage of time we consider janky of the total time spent performing
       * touch gestures during the trace. I.E. approximately equal to
       * |touch_jank_ms|/|touch_ms|.
       * </pre>
       *
       * <code>optional double touch_jank_percentage = 1 [(.perfetto.protos.unit) = "n%_smallerIsBetter"];</code>
       * @param value The touchJankPercentage to set.
       * @return This builder for chaining.
       */
      public Builder setTouchJankPercentage(double value) {
        
        touchJankPercentage_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The percentage of time we consider janky of the total time spent performing
       * touch gestures during the trace. I.E. approximately equal to
       * |touch_jank_ms|/|touch_ms|.
       * </pre>
       *
       * <code>optional double touch_jank_percentage = 1 [(.perfetto.protos.unit) = "n%_smallerIsBetter"];</code>
       * @return This builder for chaining.
       */
      public Builder clearTouchJankPercentage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        touchJankPercentage_ = 0D;
        onChanged();
        return this;
      }

      private double touchMs_ ;
      /**
       * <code>optional double touch_ms = 2 [(.perfetto.protos.unit) = "ms_biggerIsBetter"];</code>
       * @return Whether the touchMs field is set.
       */
      @java.lang.Override
      public boolean hasTouchMs() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional double touch_ms = 2 [(.perfetto.protos.unit) = "ms_biggerIsBetter"];</code>
       * @return The touchMs.
       */
      @java.lang.Override
      public double getTouchMs() {
        return touchMs_;
      }
      /**
       * <code>optional double touch_ms = 2 [(.perfetto.protos.unit) = "ms_biggerIsBetter"];</code>
       * @param value The touchMs to set.
       * @return This builder for chaining.
       */
      public Builder setTouchMs(double value) {
        
        touchMs_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional double touch_ms = 2 [(.perfetto.protos.unit) = "ms_biggerIsBetter"];</code>
       * @return This builder for chaining.
       */
      public Builder clearTouchMs() {
        bitField0_ = (bitField0_ & ~0x00000002);
        touchMs_ = 0D;
        onChanged();
        return this;
      }

      private double touchProcessingMs_ ;
      /**
       * <code>optional double touch_processing_ms = 3 [(.perfetto.protos.unit) = "ms_biggerIsBetter"];</code>
       * @return Whether the touchProcessingMs field is set.
       */
      @java.lang.Override
      public boolean hasTouchProcessingMs() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional double touch_processing_ms = 3 [(.perfetto.protos.unit) = "ms_biggerIsBetter"];</code>
       * @return The touchProcessingMs.
       */
      @java.lang.Override
      public double getTouchProcessingMs() {
        return touchProcessingMs_;
      }
      /**
       * <code>optional double touch_processing_ms = 3 [(.perfetto.protos.unit) = "ms_biggerIsBetter"];</code>
       * @param value The touchProcessingMs to set.
       * @return This builder for chaining.
       */
      public Builder setTouchProcessingMs(double value) {
        
        touchProcessingMs_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional double touch_processing_ms = 3 [(.perfetto.protos.unit) = "ms_biggerIsBetter"];</code>
       * @return This builder for chaining.
       */
      public Builder clearTouchProcessingMs() {
        bitField0_ = (bitField0_ & ~0x00000004);
        touchProcessingMs_ = 0D;
        onChanged();
        return this;
      }

      private double touchJankProcessingMs_ ;
      /**
       * <code>optional double touch_jank_processing_ms = 4 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
       * @return Whether the touchJankProcessingMs field is set.
       */
      @java.lang.Override
      public boolean hasTouchJankProcessingMs() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional double touch_jank_processing_ms = 4 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
       * @return The touchJankProcessingMs.
       */
      @java.lang.Override
      public double getTouchJankProcessingMs() {
        return touchJankProcessingMs_;
      }
      /**
       * <code>optional double touch_jank_processing_ms = 4 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
       * @param value The touchJankProcessingMs to set.
       * @return This builder for chaining.
       */
      public Builder setTouchJankProcessingMs(double value) {
        
        touchJankProcessingMs_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional double touch_jank_processing_ms = 4 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
       * @return This builder for chaining.
       */
      public Builder clearTouchJankProcessingMs() {
        bitField0_ = (bitField0_ & ~0x00000008);
        touchJankProcessingMs_ = 0D;
        onChanged();
        return this;
      }

      private long numTouchUpdateCount_ ;
      /**
       * <code>optional int64 num_touch_update_count = 5 [(.perfetto.protos.unit) = "count_biggerIsBetter"];</code>
       * @return Whether the numTouchUpdateCount field is set.
       */
      @java.lang.Override
      public boolean hasNumTouchUpdateCount() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional int64 num_touch_update_count = 5 [(.perfetto.protos.unit) = "count_biggerIsBetter"];</code>
       * @return The numTouchUpdateCount.
       */
      @java.lang.Override
      public long getNumTouchUpdateCount() {
        return numTouchUpdateCount_;
      }
      /**
       * <code>optional int64 num_touch_update_count = 5 [(.perfetto.protos.unit) = "count_biggerIsBetter"];</code>
       * @param value The numTouchUpdateCount to set.
       * @return This builder for chaining.
       */
      public Builder setNumTouchUpdateCount(long value) {
        
        numTouchUpdateCount_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 num_touch_update_count = 5 [(.perfetto.protos.unit) = "count_biggerIsBetter"];</code>
       * @return This builder for chaining.
       */
      public Builder clearNumTouchUpdateCount() {
        bitField0_ = (bitField0_ & ~0x00000010);
        numTouchUpdateCount_ = 0L;
        onChanged();
        return this;
      }

      private long numTouchUpdateJankCount_ ;
      /**
       * <code>optional int64 num_touch_update_jank_count = 6 [(.perfetto.protos.unit) = "count_smallerIsBetter"];</code>
       * @return Whether the numTouchUpdateJankCount field is set.
       */
      @java.lang.Override
      public boolean hasNumTouchUpdateJankCount() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional int64 num_touch_update_jank_count = 6 [(.perfetto.protos.unit) = "count_smallerIsBetter"];</code>
       * @return The numTouchUpdateJankCount.
       */
      @java.lang.Override
      public long getNumTouchUpdateJankCount() {
        return numTouchUpdateJankCount_;
      }
      /**
       * <code>optional int64 num_touch_update_jank_count = 6 [(.perfetto.protos.unit) = "count_smallerIsBetter"];</code>
       * @param value The numTouchUpdateJankCount to set.
       * @return This builder for chaining.
       */
      public Builder setNumTouchUpdateJankCount(long value) {
        
        numTouchUpdateJankCount_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 num_touch_update_jank_count = 6 [(.perfetto.protos.unit) = "count_smallerIsBetter"];</code>
       * @return This builder for chaining.
       */
      public Builder clearNumTouchUpdateJankCount() {
        bitField0_ = (bitField0_ & ~0x00000020);
        numTouchUpdateJankCount_ = 0L;
        onChanged();
        return this;
      }

      private double touchJankBudgetMs_ ;
      /**
       * <code>optional double touch_jank_budget_ms = 7 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
       * @return Whether the touchJankBudgetMs field is set.
       */
      @java.lang.Override
      public boolean hasTouchJankBudgetMs() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional double touch_jank_budget_ms = 7 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
       * @return The touchJankBudgetMs.
       */
      @java.lang.Override
      public double getTouchJankBudgetMs() {
        return touchJankBudgetMs_;
      }
      /**
       * <code>optional double touch_jank_budget_ms = 7 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
       * @param value The touchJankBudgetMs to set.
       * @return This builder for chaining.
       */
      public Builder setTouchJankBudgetMs(double value) {
        
        touchJankBudgetMs_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>optional double touch_jank_budget_ms = 7 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
       * @return This builder for chaining.
       */
      public Builder clearTouchJankBudgetMs() {
        bitField0_ = (bitField0_ & ~0x00000040);
        touchJankBudgetMs_ = 0D;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:perfetto.protos.TouchJank)
    }

    // @@protoc_insertion_point(class_scope:perfetto.protos.TouchJank)
    private static final perfetto.protos.TouchJankOuterClass.TouchJank DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new perfetto.protos.TouchJankOuterClass.TouchJank();
    }

    public static perfetto.protos.TouchJankOuterClass.TouchJank getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<TouchJank>
        PARSER = new com.google.protobuf.AbstractParser<TouchJank>() {
      @java.lang.Override
      public TouchJank parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<TouchJank> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TouchJank> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public perfetto.protos.TouchJankOuterClass.TouchJank getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_TouchJank_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_perfetto_protos_TouchJank_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n/protos/perfetto/metrics/chrome/touch_j" +
      "ank.proto\022\017perfetto.protos\032,protos/perfe" +
      "tto/metrics/custom_options.proto\"\211\003\n\tTou" +
      "chJank\0225\n\025touch_jank_percentage\030\001 \001(\001B\026\212" +
      "\265\030\022n%_smallerIsBetter\022\'\n\010touch_ms\030\002 \001(\001B" +
      "\025\212\265\030\021ms_biggerIsBetter\0222\n\023touch_processi" +
      "ng_ms\030\003 \001(\001B\025\212\265\030\021ms_biggerIsBetter\0228\n\030to" +
      "uch_jank_processing_ms\030\004 \001(\001B\026\212\265\030\022ms_sma" +
      "llerIsBetter\0228\n\026num_touch_update_count\030\005" +
      " \001(\003B\030\212\265\030\024count_biggerIsBetter\022>\n\033num_to" +
      "uch_update_jank_count\030\006 \001(\003B\031\212\265\030\025count_s" +
      "mallerIsBetter\0224\n\024touch_jank_budget_ms\030\007" +
      " \001(\001B\026\212\265\030\022ms_smallerIsBetter"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          perfetto.protos.CustomOptions.getDescriptor(),
        });
    internal_static_perfetto_protos_TouchJank_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_perfetto_protos_TouchJank_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_perfetto_protos_TouchJank_descriptor,
        new java.lang.String[] { "TouchJankPercentage", "TouchMs", "TouchProcessingMs", "TouchJankProcessingMs", "NumTouchUpdateCount", "NumTouchUpdateJankCount", "TouchJankBudgetMs", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(perfetto.protos.CustomOptions.unit);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    perfetto.protos.CustomOptions.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
