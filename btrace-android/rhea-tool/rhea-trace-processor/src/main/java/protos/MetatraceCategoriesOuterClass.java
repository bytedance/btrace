// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/perfetto/trace_processor/metatrace_categories.proto

package perfetto.protos;

public final class MetatraceCategoriesOuterClass {
  private MetatraceCategoriesOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * Bitmask of metatrace categories which can be enabled.
   * Keep in sync with TraceProcessor::MetatraceCategories.
   * </pre>
   *
   * Protobuf enum {@code perfetto.protos.MetatraceCategories}
   */
  public enum MetatraceCategories
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 1 &lt;&lt; 0.
     * </pre>
     *
     * <code>TOPLEVEL = 1;</code>
     */
    TOPLEVEL(1),
    /**
     * <pre>
     * 1 &lt;&lt; 1.
     * </pre>
     *
     * <code>QUERY = 2;</code>
     */
    QUERY(2),
    /**
     * <pre>
     * 1 &lt;&lt; 2.
     * </pre>
     *
     * <code>FUNCTION = 4;</code>
     */
    FUNCTION(4),
    /**
     * <pre>
     * Aliases for common subsets.
     * </pre>
     *
     * <code>NONE = 0;</code>
     */
    NONE(0),
    /**
     * <pre>
     * TOPLEVEL | QUERY | FUNCTION
     * </pre>
     *
     * <code>ALL = 7;</code>
     */
    ALL(7),
    ;

    /**
     * <pre>
     * 1 &lt;&lt; 0.
     * </pre>
     *
     * <code>TOPLEVEL = 1;</code>
     */
    public static final int TOPLEVEL_VALUE = 1;
    /**
     * <pre>
     * 1 &lt;&lt; 1.
     * </pre>
     *
     * <code>QUERY = 2;</code>
     */
    public static final int QUERY_VALUE = 2;
    /**
     * <pre>
     * 1 &lt;&lt; 2.
     * </pre>
     *
     * <code>FUNCTION = 4;</code>
     */
    public static final int FUNCTION_VALUE = 4;
    /**
     * <pre>
     * Aliases for common subsets.
     * </pre>
     *
     * <code>NONE = 0;</code>
     */
    public static final int NONE_VALUE = 0;
    /**
     * <pre>
     * TOPLEVEL | QUERY | FUNCTION
     * </pre>
     *
     * <code>ALL = 7;</code>
     */
    public static final int ALL_VALUE = 7;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static MetatraceCategories valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static MetatraceCategories forNumber(int value) {
      switch (value) {
        case 1: return TOPLEVEL;
        case 2: return QUERY;
        case 4: return FUNCTION;
        case 0: return NONE;
        case 7: return ALL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<MetatraceCategories>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        MetatraceCategories> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MetatraceCategories>() {
            public MetatraceCategories findValueByNumber(int number) {
              return MetatraceCategories.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return perfetto.protos.MetatraceCategoriesOuterClass.getDescriptor().getEnumTypes().get(0);
    }

    private static final MetatraceCategories[] VALUES = values();

    public static MetatraceCategories valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private MetatraceCategories(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:perfetto.protos.MetatraceCategories)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n:protos/perfetto/trace_processor/metatr" +
      "ace_categories.proto\022\017perfetto.protos*O\n" +
      "\023MetatraceCategories\022\014\n\010TOPLEVEL\020\001\022\t\n\005QU" +
      "ERY\020\002\022\014\n\010FUNCTION\020\004\022\010\n\004NONE\020\000\022\007\n\003ALL\020\007"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
