// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/perfetto/common/tracing_service_capabilities.proto

package perfetto.protos;

public final class TracingServiceCapabilitiesOuterClass {
  private TracingServiceCapabilitiesOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface TracingServiceCapabilitiesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:perfetto.protos.TracingServiceCapabilities)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Whether the service supports QueryCapabilities() at all or not.
     * This is only used at the C++ level to distinguish the case of talking to
     * an older version of the service that doesn't support QueryCapabilities().
     * In that case the IPC layer will just reject the unknown call, and the
     * consumer_ipc_client_impl.cc will return an empty message where this field
     * is false. In all other cases, this is always set to true.
     * </pre>
     *
     * <code>optional bool has_query_capabilities = 1;</code>
     * @return Whether the hasQueryCapabilities field is set.
     */
    boolean hasHasQueryCapabilities();
    /**
     * <pre>
     * Whether the service supports QueryCapabilities() at all or not.
     * This is only used at the C++ level to distinguish the case of talking to
     * an older version of the service that doesn't support QueryCapabilities().
     * In that case the IPC layer will just reject the unknown call, and the
     * consumer_ipc_client_impl.cc will return an empty message where this field
     * is false. In all other cases, this is always set to true.
     * </pre>
     *
     * <code>optional bool has_query_capabilities = 1;</code>
     * @return The hasQueryCapabilities.
     */
    boolean getHasQueryCapabilities();

    /**
     * <pre>
     * The set of known events that can be passed to ConsumerPort.ObserveEvents().
     * </pre>
     *
     * <code>repeated .perfetto.protos.ObservableEvents.Type observable_events = 2;</code>
     * @return A list containing the observableEvents.
     */
    java.util.List<perfetto.protos.ObservableEventsOuterClass.ObservableEvents.Type> getObservableEventsList();
    /**
     * <pre>
     * The set of known events that can be passed to ConsumerPort.ObserveEvents().
     * </pre>
     *
     * <code>repeated .perfetto.protos.ObservableEvents.Type observable_events = 2;</code>
     * @return The count of observableEvents.
     */
    int getObservableEventsCount();
    /**
     * <pre>
     * The set of known events that can be passed to ConsumerPort.ObserveEvents().
     * </pre>
     *
     * <code>repeated .perfetto.protos.ObservableEvents.Type observable_events = 2;</code>
     * @param index The index of the element to return.
     * @return The observableEvents at the given index.
     */
    perfetto.protos.ObservableEventsOuterClass.ObservableEvents.Type getObservableEvents(int index);

    /**
     * <pre>
     * Whether the service supports TraceConfig.output_path (for asking traced to
     * create the output file instead of passing a file descriptor).
     * </pre>
     *
     * <code>optional bool has_trace_config_output_path = 3;</code>
     * @return Whether the hasTraceConfigOutputPath field is set.
     */
    boolean hasHasTraceConfigOutputPath();
    /**
     * <pre>
     * Whether the service supports TraceConfig.output_path (for asking traced to
     * create the output file instead of passing a file descriptor).
     * </pre>
     *
     * <code>optional bool has_trace_config_output_path = 3;</code>
     * @return The hasTraceConfigOutputPath.
     */
    boolean getHasTraceConfigOutputPath();
  }
  /**
   * Protobuf type {@code perfetto.protos.TracingServiceCapabilities}
   */
  public static final class TracingServiceCapabilities extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:perfetto.protos.TracingServiceCapabilities)
      TracingServiceCapabilitiesOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TracingServiceCapabilities.newBuilder() to construct.
    private TracingServiceCapabilities(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TracingServiceCapabilities() {
      observableEvents_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TracingServiceCapabilities();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return perfetto.protos.TracingServiceCapabilitiesOuterClass.internal_static_perfetto_protos_TracingServiceCapabilities_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return perfetto.protos.TracingServiceCapabilitiesOuterClass.internal_static_perfetto_protos_TracingServiceCapabilities_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              perfetto.protos.TracingServiceCapabilitiesOuterClass.TracingServiceCapabilities.class, perfetto.protos.TracingServiceCapabilitiesOuterClass.TracingServiceCapabilities.Builder.class);
    }

    private int bitField0_;
    public static final int HAS_QUERY_CAPABILITIES_FIELD_NUMBER = 1;
    private boolean hasQueryCapabilities_ = false;
    /**
     * <pre>
     * Whether the service supports QueryCapabilities() at all or not.
     * This is only used at the C++ level to distinguish the case of talking to
     * an older version of the service that doesn't support QueryCapabilities().
     * In that case the IPC layer will just reject the unknown call, and the
     * consumer_ipc_client_impl.cc will return an empty message where this field
     * is false. In all other cases, this is always set to true.
     * </pre>
     *
     * <code>optional bool has_query_capabilities = 1;</code>
     * @return Whether the hasQueryCapabilities field is set.
     */
    @java.lang.Override
    public boolean hasHasQueryCapabilities() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Whether the service supports QueryCapabilities() at all or not.
     * This is only used at the C++ level to distinguish the case of talking to
     * an older version of the service that doesn't support QueryCapabilities().
     * In that case the IPC layer will just reject the unknown call, and the
     * consumer_ipc_client_impl.cc will return an empty message where this field
     * is false. In all other cases, this is always set to true.
     * </pre>
     *
     * <code>optional bool has_query_capabilities = 1;</code>
     * @return The hasQueryCapabilities.
     */
    @java.lang.Override
    public boolean getHasQueryCapabilities() {
      return hasQueryCapabilities_;
    }

    public static final int OBSERVABLE_EVENTS_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private java.util.List<java.lang.Integer> observableEvents_;
    private static final com.google.protobuf.Internal.ListAdapter.Converter<
        java.lang.Integer, perfetto.protos.ObservableEventsOuterClass.ObservableEvents.Type> observableEvents_converter_ =
            new com.google.protobuf.Internal.ListAdapter.Converter<
                java.lang.Integer, perfetto.protos.ObservableEventsOuterClass.ObservableEvents.Type>() {
              public perfetto.protos.ObservableEventsOuterClass.ObservableEvents.Type convert(java.lang.Integer from) {
                perfetto.protos.ObservableEventsOuterClass.ObservableEvents.Type result = perfetto.protos.ObservableEventsOuterClass.ObservableEvents.Type.forNumber(from);
                return result == null ? perfetto.protos.ObservableEventsOuterClass.ObservableEvents.Type.TYPE_UNSPECIFIED : result;
              }
            };
    /**
     * <pre>
     * The set of known events that can be passed to ConsumerPort.ObserveEvents().
     * </pre>
     *
     * <code>repeated .perfetto.protos.ObservableEvents.Type observable_events = 2;</code>
     * @return A list containing the observableEvents.
     */
    @java.lang.Override
    public java.util.List<perfetto.protos.ObservableEventsOuterClass.ObservableEvents.Type> getObservableEventsList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, perfetto.protos.ObservableEventsOuterClass.ObservableEvents.Type>(observableEvents_, observableEvents_converter_);
    }
    /**
     * <pre>
     * The set of known events that can be passed to ConsumerPort.ObserveEvents().
     * </pre>
     *
     * <code>repeated .perfetto.protos.ObservableEvents.Type observable_events = 2;</code>
     * @return The count of observableEvents.
     */
    @java.lang.Override
    public int getObservableEventsCount() {
      return observableEvents_.size();
    }
    /**
     * <pre>
     * The set of known events that can be passed to ConsumerPort.ObserveEvents().
     * </pre>
     *
     * <code>repeated .perfetto.protos.ObservableEvents.Type observable_events = 2;</code>
     * @param index The index of the element to return.
     * @return The observableEvents at the given index.
     */
    @java.lang.Override
    public perfetto.protos.ObservableEventsOuterClass.ObservableEvents.Type getObservableEvents(int index) {
      return observableEvents_converter_.convert(observableEvents_.get(index));
    }

    public static final int HAS_TRACE_CONFIG_OUTPUT_PATH_FIELD_NUMBER = 3;
    private boolean hasTraceConfigOutputPath_ = false;
    /**
     * <pre>
     * Whether the service supports TraceConfig.output_path (for asking traced to
     * create the output file instead of passing a file descriptor).
     * </pre>
     *
     * <code>optional bool has_trace_config_output_path = 3;</code>
     * @return Whether the hasTraceConfigOutputPath field is set.
     */
    @java.lang.Override
    public boolean hasHasTraceConfigOutputPath() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Whether the service supports TraceConfig.output_path (for asking traced to
     * create the output file instead of passing a file descriptor).
     * </pre>
     *
     * <code>optional bool has_trace_config_output_path = 3;</code>
     * @return The hasTraceConfigOutputPath.
     */
    @java.lang.Override
    public boolean getHasTraceConfigOutputPath() {
      return hasTraceConfigOutputPath_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeBool(1, hasQueryCapabilities_);
      }
      for (int i = 0; i < observableEvents_.size(); i++) {
        output.writeEnum(2, observableEvents_.get(i));
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeBool(3, hasTraceConfigOutputPath_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, hasQueryCapabilities_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < observableEvents_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(observableEvents_.get(i));
        }
        size += dataSize;
        size += 1 * observableEvents_.size();
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, hasTraceConfigOutputPath_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof perfetto.protos.TracingServiceCapabilitiesOuterClass.TracingServiceCapabilities)) {
        return super.equals(obj);
      }
      perfetto.protos.TracingServiceCapabilitiesOuterClass.TracingServiceCapabilities other = (perfetto.protos.TracingServiceCapabilitiesOuterClass.TracingServiceCapabilities) obj;

      if (hasHasQueryCapabilities() != other.hasHasQueryCapabilities()) return false;
      if (hasHasQueryCapabilities()) {
        if (getHasQueryCapabilities()
            != other.getHasQueryCapabilities()) return false;
      }
      if (!observableEvents_.equals(other.observableEvents_)) return false;
      if (hasHasTraceConfigOutputPath() != other.hasHasTraceConfigOutputPath()) return false;
      if (hasHasTraceConfigOutputPath()) {
        if (getHasTraceConfigOutputPath()
            != other.getHasTraceConfigOutputPath()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasHasQueryCapabilities()) {
        hash = (37 * hash) + HAS_QUERY_CAPABILITIES_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getHasQueryCapabilities());
      }
      if (getObservableEventsCount() > 0) {
        hash = (37 * hash) + OBSERVABLE_EVENTS_FIELD_NUMBER;
        hash = (53 * hash) + observableEvents_.hashCode();
      }
      if (hasHasTraceConfigOutputPath()) {
        hash = (37 * hash) + HAS_TRACE_CONFIG_OUTPUT_PATH_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getHasTraceConfigOutputPath());
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static perfetto.protos.TracingServiceCapabilitiesOuterClass.TracingServiceCapabilities parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.TracingServiceCapabilitiesOuterClass.TracingServiceCapabilities parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.TracingServiceCapabilitiesOuterClass.TracingServiceCapabilities parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.TracingServiceCapabilitiesOuterClass.TracingServiceCapabilities parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.TracingServiceCapabilitiesOuterClass.TracingServiceCapabilities parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.TracingServiceCapabilitiesOuterClass.TracingServiceCapabilities parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.TracingServiceCapabilitiesOuterClass.TracingServiceCapabilities parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.TracingServiceCapabilitiesOuterClass.TracingServiceCapabilities parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.TracingServiceCapabilitiesOuterClass.TracingServiceCapabilities parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static perfetto.protos.TracingServiceCapabilitiesOuterClass.TracingServiceCapabilities parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.TracingServiceCapabilitiesOuterClass.TracingServiceCapabilities parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.TracingServiceCapabilitiesOuterClass.TracingServiceCapabilities parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(perfetto.protos.TracingServiceCapabilitiesOuterClass.TracingServiceCapabilities prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code perfetto.protos.TracingServiceCapabilities}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:perfetto.protos.TracingServiceCapabilities)
        perfetto.protos.TracingServiceCapabilitiesOuterClass.TracingServiceCapabilitiesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.TracingServiceCapabilitiesOuterClass.internal_static_perfetto_protos_TracingServiceCapabilities_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.TracingServiceCapabilitiesOuterClass.internal_static_perfetto_protos_TracingServiceCapabilities_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.TracingServiceCapabilitiesOuterClass.TracingServiceCapabilities.class, perfetto.protos.TracingServiceCapabilitiesOuterClass.TracingServiceCapabilities.Builder.class);
      }

      // Construct using perfetto.protos.TracingServiceCapabilitiesOuterClass.TracingServiceCapabilities.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        hasQueryCapabilities_ = false;
        observableEvents_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        hasTraceConfigOutputPath_ = false;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return perfetto.protos.TracingServiceCapabilitiesOuterClass.internal_static_perfetto_protos_TracingServiceCapabilities_descriptor;
      }

      @java.lang.Override
      public perfetto.protos.TracingServiceCapabilitiesOuterClass.TracingServiceCapabilities getDefaultInstanceForType() {
        return perfetto.protos.TracingServiceCapabilitiesOuterClass.TracingServiceCapabilities.getDefaultInstance();
      }

      @java.lang.Override
      public perfetto.protos.TracingServiceCapabilitiesOuterClass.TracingServiceCapabilities build() {
        perfetto.protos.TracingServiceCapabilitiesOuterClass.TracingServiceCapabilities result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public perfetto.protos.TracingServiceCapabilitiesOuterClass.TracingServiceCapabilities buildPartial() {
        perfetto.protos.TracingServiceCapabilitiesOuterClass.TracingServiceCapabilities result = new perfetto.protos.TracingServiceCapabilitiesOuterClass.TracingServiceCapabilities(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(perfetto.protos.TracingServiceCapabilitiesOuterClass.TracingServiceCapabilities result) {
        if (((bitField0_ & 0x00000002) != 0)) {
          observableEvents_ = java.util.Collections.unmodifiableList(observableEvents_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.observableEvents_ = observableEvents_;
      }

      private void buildPartial0(perfetto.protos.TracingServiceCapabilitiesOuterClass.TracingServiceCapabilities result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.hasQueryCapabilities_ = hasQueryCapabilities_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.hasTraceConfigOutputPath_ = hasTraceConfigOutputPath_;
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof perfetto.protos.TracingServiceCapabilitiesOuterClass.TracingServiceCapabilities) {
          return mergeFrom((perfetto.protos.TracingServiceCapabilitiesOuterClass.TracingServiceCapabilities)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(perfetto.protos.TracingServiceCapabilitiesOuterClass.TracingServiceCapabilities other) {
        if (other == perfetto.protos.TracingServiceCapabilitiesOuterClass.TracingServiceCapabilities.getDefaultInstance()) return this;
        if (other.hasHasQueryCapabilities()) {
          setHasQueryCapabilities(other.getHasQueryCapabilities());
        }
        if (!other.observableEvents_.isEmpty()) {
          if (observableEvents_.isEmpty()) {
            observableEvents_ = other.observableEvents_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureObservableEventsIsMutable();
            observableEvents_.addAll(other.observableEvents_);
          }
          onChanged();
        }
        if (other.hasHasTraceConfigOutputPath()) {
          setHasTraceConfigOutputPath(other.getHasTraceConfigOutputPath());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                hasQueryCapabilities_ = input.readBool();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                int tmpRaw = input.readEnum();
                perfetto.protos.ObservableEventsOuterClass.ObservableEvents.Type tmpValue =
                    perfetto.protos.ObservableEventsOuterClass.ObservableEvents.Type.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(2, tmpRaw);
                } else {
                  ensureObservableEventsIsMutable();
                  observableEvents_.add(tmpRaw);
                }
                break;
              } // case 16
              case 18: {
                int length = input.readRawVarint32();
                int oldLimit = input.pushLimit(length);
                while(input.getBytesUntilLimit() > 0) {
                  int tmpRaw = input.readEnum();
                  perfetto.protos.ObservableEventsOuterClass.ObservableEvents.Type tmpValue =
                      perfetto.protos.ObservableEventsOuterClass.ObservableEvents.Type.forNumber(tmpRaw);
                  if (tmpValue == null) {
                    mergeUnknownVarintField(2, tmpRaw);
                  } else {
                    ensureObservableEventsIsMutable();
                    observableEvents_.add(tmpRaw);
                  }
                }
                input.popLimit(oldLimit);
                break;
              } // case 18
              case 24: {
                hasTraceConfigOutputPath_ = input.readBool();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private boolean hasQueryCapabilities_ ;
      /**
       * <pre>
       * Whether the service supports QueryCapabilities() at all or not.
       * This is only used at the C++ level to distinguish the case of talking to
       * an older version of the service that doesn't support QueryCapabilities().
       * In that case the IPC layer will just reject the unknown call, and the
       * consumer_ipc_client_impl.cc will return an empty message where this field
       * is false. In all other cases, this is always set to true.
       * </pre>
       *
       * <code>optional bool has_query_capabilities = 1;</code>
       * @return Whether the hasQueryCapabilities field is set.
       */
      @java.lang.Override
      public boolean hasHasQueryCapabilities() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Whether the service supports QueryCapabilities() at all or not.
       * This is only used at the C++ level to distinguish the case of talking to
       * an older version of the service that doesn't support QueryCapabilities().
       * In that case the IPC layer will just reject the unknown call, and the
       * consumer_ipc_client_impl.cc will return an empty message where this field
       * is false. In all other cases, this is always set to true.
       * </pre>
       *
       * <code>optional bool has_query_capabilities = 1;</code>
       * @return The hasQueryCapabilities.
       */
      @java.lang.Override
      public boolean getHasQueryCapabilities() {
        return hasQueryCapabilities_;
      }
      /**
       * <pre>
       * Whether the service supports QueryCapabilities() at all or not.
       * This is only used at the C++ level to distinguish the case of talking to
       * an older version of the service that doesn't support QueryCapabilities().
       * In that case the IPC layer will just reject the unknown call, and the
       * consumer_ipc_client_impl.cc will return an empty message where this field
       * is false. In all other cases, this is always set to true.
       * </pre>
       *
       * <code>optional bool has_query_capabilities = 1;</code>
       * @param value The hasQueryCapabilities to set.
       * @return This builder for chaining.
       */
      public Builder setHasQueryCapabilities(boolean value) {
        
        hasQueryCapabilities_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Whether the service supports QueryCapabilities() at all or not.
       * This is only used at the C++ level to distinguish the case of talking to
       * an older version of the service that doesn't support QueryCapabilities().
       * In that case the IPC layer will just reject the unknown call, and the
       * consumer_ipc_client_impl.cc will return an empty message where this field
       * is false. In all other cases, this is always set to true.
       * </pre>
       *
       * <code>optional bool has_query_capabilities = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearHasQueryCapabilities() {
        bitField0_ = (bitField0_ & ~0x00000001);
        hasQueryCapabilities_ = false;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> observableEvents_ =
        java.util.Collections.emptyList();
      private void ensureObservableEventsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          observableEvents_ = new java.util.ArrayList<java.lang.Integer>(observableEvents_);
          bitField0_ |= 0x00000002;
        }
      }
      /**
       * <pre>
       * The set of known events that can be passed to ConsumerPort.ObserveEvents().
       * </pre>
       *
       * <code>repeated .perfetto.protos.ObservableEvents.Type observable_events = 2;</code>
       * @return A list containing the observableEvents.
       */
      public java.util.List<perfetto.protos.ObservableEventsOuterClass.ObservableEvents.Type> getObservableEventsList() {
        return new com.google.protobuf.Internal.ListAdapter<
            java.lang.Integer, perfetto.protos.ObservableEventsOuterClass.ObservableEvents.Type>(observableEvents_, observableEvents_converter_);
      }
      /**
       * <pre>
       * The set of known events that can be passed to ConsumerPort.ObserveEvents().
       * </pre>
       *
       * <code>repeated .perfetto.protos.ObservableEvents.Type observable_events = 2;</code>
       * @return The count of observableEvents.
       */
      public int getObservableEventsCount() {
        return observableEvents_.size();
      }
      /**
       * <pre>
       * The set of known events that can be passed to ConsumerPort.ObserveEvents().
       * </pre>
       *
       * <code>repeated .perfetto.protos.ObservableEvents.Type observable_events = 2;</code>
       * @param index The index of the element to return.
       * @return The observableEvents at the given index.
       */
      public perfetto.protos.ObservableEventsOuterClass.ObservableEvents.Type getObservableEvents(int index) {
        return observableEvents_converter_.convert(observableEvents_.get(index));
      }
      /**
       * <pre>
       * The set of known events that can be passed to ConsumerPort.ObserveEvents().
       * </pre>
       *
       * <code>repeated .perfetto.protos.ObservableEvents.Type observable_events = 2;</code>
       * @param index The index to set the value at.
       * @param value The observableEvents to set.
       * @return This builder for chaining.
       */
      public Builder setObservableEvents(
          int index, perfetto.protos.ObservableEventsOuterClass.ObservableEvents.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureObservableEventsIsMutable();
        observableEvents_.set(index, value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The set of known events that can be passed to ConsumerPort.ObserveEvents().
       * </pre>
       *
       * <code>repeated .perfetto.protos.ObservableEvents.Type observable_events = 2;</code>
       * @param value The observableEvents to add.
       * @return This builder for chaining.
       */
      public Builder addObservableEvents(perfetto.protos.ObservableEventsOuterClass.ObservableEvents.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureObservableEventsIsMutable();
        observableEvents_.add(value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The set of known events that can be passed to ConsumerPort.ObserveEvents().
       * </pre>
       *
       * <code>repeated .perfetto.protos.ObservableEvents.Type observable_events = 2;</code>
       * @param values The observableEvents to add.
       * @return This builder for chaining.
       */
      public Builder addAllObservableEvents(
          java.lang.Iterable<? extends perfetto.protos.ObservableEventsOuterClass.ObservableEvents.Type> values) {
        ensureObservableEventsIsMutable();
        for (perfetto.protos.ObservableEventsOuterClass.ObservableEvents.Type value : values) {
          observableEvents_.add(value.getNumber());
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The set of known events that can be passed to ConsumerPort.ObserveEvents().
       * </pre>
       *
       * <code>repeated .perfetto.protos.ObservableEvents.Type observable_events = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearObservableEvents() {
        observableEvents_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private boolean hasTraceConfigOutputPath_ ;
      /**
       * <pre>
       * Whether the service supports TraceConfig.output_path (for asking traced to
       * create the output file instead of passing a file descriptor).
       * </pre>
       *
       * <code>optional bool has_trace_config_output_path = 3;</code>
       * @return Whether the hasTraceConfigOutputPath field is set.
       */
      @java.lang.Override
      public boolean hasHasTraceConfigOutputPath() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Whether the service supports TraceConfig.output_path (for asking traced to
       * create the output file instead of passing a file descriptor).
       * </pre>
       *
       * <code>optional bool has_trace_config_output_path = 3;</code>
       * @return The hasTraceConfigOutputPath.
       */
      @java.lang.Override
      public boolean getHasTraceConfigOutputPath() {
        return hasTraceConfigOutputPath_;
      }
      /**
       * <pre>
       * Whether the service supports TraceConfig.output_path (for asking traced to
       * create the output file instead of passing a file descriptor).
       * </pre>
       *
       * <code>optional bool has_trace_config_output_path = 3;</code>
       * @param value The hasTraceConfigOutputPath to set.
       * @return This builder for chaining.
       */
      public Builder setHasTraceConfigOutputPath(boolean value) {
        
        hasTraceConfigOutputPath_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Whether the service supports TraceConfig.output_path (for asking traced to
       * create the output file instead of passing a file descriptor).
       * </pre>
       *
       * <code>optional bool has_trace_config_output_path = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearHasTraceConfigOutputPath() {
        bitField0_ = (bitField0_ & ~0x00000004);
        hasTraceConfigOutputPath_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:perfetto.protos.TracingServiceCapabilities)
    }

    // @@protoc_insertion_point(class_scope:perfetto.protos.TracingServiceCapabilities)
    private static final perfetto.protos.TracingServiceCapabilitiesOuterClass.TracingServiceCapabilities DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new perfetto.protos.TracingServiceCapabilitiesOuterClass.TracingServiceCapabilities();
    }

    public static perfetto.protos.TracingServiceCapabilitiesOuterClass.TracingServiceCapabilities getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<TracingServiceCapabilities>
        PARSER = new com.google.protobuf.AbstractParser<TracingServiceCapabilities>() {
      @java.lang.Override
      public TracingServiceCapabilities parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<TracingServiceCapabilities> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TracingServiceCapabilities> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public perfetto.protos.TracingServiceCapabilitiesOuterClass.TracingServiceCapabilities getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_TracingServiceCapabilities_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_perfetto_protos_TracingServiceCapabilities_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n9protos/perfetto/common/tracing_service" +
      "_capabilities.proto\022\017perfetto.protos\032.pr" +
      "otos/perfetto/common/observable_events.p" +
      "roto\"\245\001\n\032TracingServiceCapabilities\022\036\n\026h" +
      "as_query_capabilities\030\001 \001(\010\022A\n\021observabl" +
      "e_events\030\002 \003(\0162&.perfetto.protos.Observa" +
      "bleEvents.Type\022$\n\034has_trace_config_outpu" +
      "t_path\030\003 \001(\010"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          perfetto.protos.ObservableEventsOuterClass.getDescriptor(),
        });
    internal_static_perfetto_protos_TracingServiceCapabilities_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_perfetto_protos_TracingServiceCapabilities_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_perfetto_protos_TracingServiceCapabilities_descriptor,
        new java.lang.String[] { "HasQueryCapabilities", "ObservableEvents", "HasTraceConfigOutputPath", });
    perfetto.protos.ObservableEventsOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
