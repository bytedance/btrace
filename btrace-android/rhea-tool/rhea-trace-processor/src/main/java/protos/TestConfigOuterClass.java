// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/perfetto/config/test_config.proto

package perfetto.protos;

public final class TestConfigOuterClass {
  private TestConfigOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface TestConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:perfetto.protos.TestConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The number of messages the fake producer should send.
     * </pre>
     *
     * <code>optional uint32 message_count = 1;</code>
     * @return Whether the messageCount field is set.
     */
    boolean hasMessageCount();
    /**
     * <pre>
     * The number of messages the fake producer should send.
     * </pre>
     *
     * <code>optional uint32 message_count = 1;</code>
     * @return The messageCount.
     */
    int getMessageCount();

    /**
     * <pre>
     * The maximum number of messages which should be sent each second.
     * The actual obserced speed may be lower if the producer is unable to
     * work fast enough.
     * If this is zero or unset, the producer will send as fast as possible.
     * </pre>
     *
     * <code>optional uint32 max_messages_per_second = 2;</code>
     * @return Whether the maxMessagesPerSecond field is set.
     */
    boolean hasMaxMessagesPerSecond();
    /**
     * <pre>
     * The maximum number of messages which should be sent each second.
     * The actual obserced speed may be lower if the producer is unable to
     * work fast enough.
     * If this is zero or unset, the producer will send as fast as possible.
     * </pre>
     *
     * <code>optional uint32 max_messages_per_second = 2;</code>
     * @return The maxMessagesPerSecond.
     */
    int getMaxMessagesPerSecond();

    /**
     * <pre>
     * The seed value for a simple multiplicative congruential pseudo-random
     * number sequence.
     * </pre>
     *
     * <code>optional uint32 seed = 3;</code>
     * @return Whether the seed field is set.
     */
    boolean hasSeed();
    /**
     * <pre>
     * The seed value for a simple multiplicative congruential pseudo-random
     * number sequence.
     * </pre>
     *
     * <code>optional uint32 seed = 3;</code>
     * @return The seed.
     */
    int getSeed();

    /**
     * <pre>
     * The size of each message in bytes. Should be greater than or equal 5 to
     * account for the number of bytes needed to encode the random number and a
     * null byte for the string.
     * </pre>
     *
     * <code>optional uint32 message_size = 4;</code>
     * @return Whether the messageSize field is set.
     */
    boolean hasMessageSize();
    /**
     * <pre>
     * The size of each message in bytes. Should be greater than or equal 5 to
     * account for the number of bytes needed to encode the random number and a
     * null byte for the string.
     * </pre>
     *
     * <code>optional uint32 message_size = 4;</code>
     * @return The messageSize.
     */
    int getMessageSize();

    /**
     * <pre>
     * Whether the producer should send a event batch when the data source is
     * is initially registered.
     * </pre>
     *
     * <code>optional bool send_batch_on_register = 5;</code>
     * @return Whether the sendBatchOnRegister field is set.
     */
    boolean hasSendBatchOnRegister();
    /**
     * <pre>
     * Whether the producer should send a event batch when the data source is
     * is initially registered.
     * </pre>
     *
     * <code>optional bool send_batch_on_register = 5;</code>
     * @return The sendBatchOnRegister.
     */
    boolean getSendBatchOnRegister();

    /**
     * <code>optional .perfetto.protos.TestConfig.DummyFields dummy_fields = 6;</code>
     * @return Whether the dummyFields field is set.
     */
    boolean hasDummyFields();
    /**
     * <code>optional .perfetto.protos.TestConfig.DummyFields dummy_fields = 6;</code>
     * @return The dummyFields.
     */
    perfetto.protos.TestConfigOuterClass.TestConfig.DummyFields getDummyFields();
    /**
     * <code>optional .perfetto.protos.TestConfig.DummyFields dummy_fields = 6;</code>
     */
    perfetto.protos.TestConfigOuterClass.TestConfig.DummyFieldsOrBuilder getDummyFieldsOrBuilder();
  }
  /**
   * <pre>
   * The configuration for a fake producer used in tests.
   * </pre>
   *
   * Protobuf type {@code perfetto.protos.TestConfig}
   */
  public static final class TestConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:perfetto.protos.TestConfig)
      TestConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TestConfig.newBuilder() to construct.
    private TestConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TestConfig() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TestConfig();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return perfetto.protos.TestConfigOuterClass.internal_static_perfetto_protos_TestConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return perfetto.protos.TestConfigOuterClass.internal_static_perfetto_protos_TestConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              perfetto.protos.TestConfigOuterClass.TestConfig.class, perfetto.protos.TestConfigOuterClass.TestConfig.Builder.class);
    }

    public interface DummyFieldsOrBuilder extends
        // @@protoc_insertion_point(interface_extends:perfetto.protos.TestConfig.DummyFields)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 field_uint32 = 1;</code>
       * @return Whether the fieldUint32 field is set.
       */
      boolean hasFieldUint32();
      /**
       * <code>optional uint32 field_uint32 = 1;</code>
       * @return The fieldUint32.
       */
      int getFieldUint32();

      /**
       * <code>optional int32 field_int32 = 2;</code>
       * @return Whether the fieldInt32 field is set.
       */
      boolean hasFieldInt32();
      /**
       * <code>optional int32 field_int32 = 2;</code>
       * @return The fieldInt32.
       */
      int getFieldInt32();

      /**
       * <code>optional uint64 field_uint64 = 3;</code>
       * @return Whether the fieldUint64 field is set.
       */
      boolean hasFieldUint64();
      /**
       * <code>optional uint64 field_uint64 = 3;</code>
       * @return The fieldUint64.
       */
      long getFieldUint64();

      /**
       * <code>optional int64 field_int64 = 4;</code>
       * @return Whether the fieldInt64 field is set.
       */
      boolean hasFieldInt64();
      /**
       * <code>optional int64 field_int64 = 4;</code>
       * @return The fieldInt64.
       */
      long getFieldInt64();

      /**
       * <code>optional fixed64 field_fixed64 = 5;</code>
       * @return Whether the fieldFixed64 field is set.
       */
      boolean hasFieldFixed64();
      /**
       * <code>optional fixed64 field_fixed64 = 5;</code>
       * @return The fieldFixed64.
       */
      long getFieldFixed64();

      /**
       * <code>optional sfixed64 field_sfixed64 = 6;</code>
       * @return Whether the fieldSfixed64 field is set.
       */
      boolean hasFieldSfixed64();
      /**
       * <code>optional sfixed64 field_sfixed64 = 6;</code>
       * @return The fieldSfixed64.
       */
      long getFieldSfixed64();

      /**
       * <code>optional fixed32 field_fixed32 = 7;</code>
       * @return Whether the fieldFixed32 field is set.
       */
      boolean hasFieldFixed32();
      /**
       * <code>optional fixed32 field_fixed32 = 7;</code>
       * @return The fieldFixed32.
       */
      int getFieldFixed32();

      /**
       * <code>optional sfixed32 field_sfixed32 = 8;</code>
       * @return Whether the fieldSfixed32 field is set.
       */
      boolean hasFieldSfixed32();
      /**
       * <code>optional sfixed32 field_sfixed32 = 8;</code>
       * @return The fieldSfixed32.
       */
      int getFieldSfixed32();

      /**
       * <code>optional double field_double = 9;</code>
       * @return Whether the fieldDouble field is set.
       */
      boolean hasFieldDouble();
      /**
       * <code>optional double field_double = 9;</code>
       * @return The fieldDouble.
       */
      double getFieldDouble();

      /**
       * <code>optional float field_float = 10;</code>
       * @return Whether the fieldFloat field is set.
       */
      boolean hasFieldFloat();
      /**
       * <code>optional float field_float = 10;</code>
       * @return The fieldFloat.
       */
      float getFieldFloat();

      /**
       * <code>optional sint64 field_sint64 = 11;</code>
       * @return Whether the fieldSint64 field is set.
       */
      boolean hasFieldSint64();
      /**
       * <code>optional sint64 field_sint64 = 11;</code>
       * @return The fieldSint64.
       */
      long getFieldSint64();

      /**
       * <code>optional sint32 field_sint32 = 12;</code>
       * @return Whether the fieldSint32 field is set.
       */
      boolean hasFieldSint32();
      /**
       * <code>optional sint32 field_sint32 = 12;</code>
       * @return The fieldSint32.
       */
      int getFieldSint32();

      /**
       * <code>optional string field_string = 13;</code>
       * @return Whether the fieldString field is set.
       */
      boolean hasFieldString();
      /**
       * <code>optional string field_string = 13;</code>
       * @return The fieldString.
       */
      java.lang.String getFieldString();
      /**
       * <code>optional string field_string = 13;</code>
       * @return The bytes for fieldString.
       */
      com.google.protobuf.ByteString
          getFieldStringBytes();

      /**
       * <code>optional bytes field_bytes = 14;</code>
       * @return Whether the fieldBytes field is set.
       */
      boolean hasFieldBytes();
      /**
       * <code>optional bytes field_bytes = 14;</code>
       * @return The fieldBytes.
       */
      com.google.protobuf.ByteString getFieldBytes();
    }
    /**
     * Protobuf type {@code perfetto.protos.TestConfig.DummyFields}
     */
    public static final class DummyFields extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:perfetto.protos.TestConfig.DummyFields)
        DummyFieldsOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use DummyFields.newBuilder() to construct.
      private DummyFields(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private DummyFields() {
        fieldString_ = "";
        fieldBytes_ = com.google.protobuf.ByteString.EMPTY;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new DummyFields();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.TestConfigOuterClass.internal_static_perfetto_protos_TestConfig_DummyFields_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.TestConfigOuterClass.internal_static_perfetto_protos_TestConfig_DummyFields_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.TestConfigOuterClass.TestConfig.DummyFields.class, perfetto.protos.TestConfigOuterClass.TestConfig.DummyFields.Builder.class);
      }

      private int bitField0_;
      public static final int FIELD_UINT32_FIELD_NUMBER = 1;
      private int fieldUint32_ = 0;
      /**
       * <code>optional uint32 field_uint32 = 1;</code>
       * @return Whether the fieldUint32 field is set.
       */
      @java.lang.Override
      public boolean hasFieldUint32() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 field_uint32 = 1;</code>
       * @return The fieldUint32.
       */
      @java.lang.Override
      public int getFieldUint32() {
        return fieldUint32_;
      }

      public static final int FIELD_INT32_FIELD_NUMBER = 2;
      private int fieldInt32_ = 0;
      /**
       * <code>optional int32 field_int32 = 2;</code>
       * @return Whether the fieldInt32 field is set.
       */
      @java.lang.Override
      public boolean hasFieldInt32() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional int32 field_int32 = 2;</code>
       * @return The fieldInt32.
       */
      @java.lang.Override
      public int getFieldInt32() {
        return fieldInt32_;
      }

      public static final int FIELD_UINT64_FIELD_NUMBER = 3;
      private long fieldUint64_ = 0L;
      /**
       * <code>optional uint64 field_uint64 = 3;</code>
       * @return Whether the fieldUint64 field is set.
       */
      @java.lang.Override
      public boolean hasFieldUint64() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional uint64 field_uint64 = 3;</code>
       * @return The fieldUint64.
       */
      @java.lang.Override
      public long getFieldUint64() {
        return fieldUint64_;
      }

      public static final int FIELD_INT64_FIELD_NUMBER = 4;
      private long fieldInt64_ = 0L;
      /**
       * <code>optional int64 field_int64 = 4;</code>
       * @return Whether the fieldInt64 field is set.
       */
      @java.lang.Override
      public boolean hasFieldInt64() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional int64 field_int64 = 4;</code>
       * @return The fieldInt64.
       */
      @java.lang.Override
      public long getFieldInt64() {
        return fieldInt64_;
      }

      public static final int FIELD_FIXED64_FIELD_NUMBER = 5;
      private long fieldFixed64_ = 0L;
      /**
       * <code>optional fixed64 field_fixed64 = 5;</code>
       * @return Whether the fieldFixed64 field is set.
       */
      @java.lang.Override
      public boolean hasFieldFixed64() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional fixed64 field_fixed64 = 5;</code>
       * @return The fieldFixed64.
       */
      @java.lang.Override
      public long getFieldFixed64() {
        return fieldFixed64_;
      }

      public static final int FIELD_SFIXED64_FIELD_NUMBER = 6;
      private long fieldSfixed64_ = 0L;
      /**
       * <code>optional sfixed64 field_sfixed64 = 6;</code>
       * @return Whether the fieldSfixed64 field is set.
       */
      @java.lang.Override
      public boolean hasFieldSfixed64() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional sfixed64 field_sfixed64 = 6;</code>
       * @return The fieldSfixed64.
       */
      @java.lang.Override
      public long getFieldSfixed64() {
        return fieldSfixed64_;
      }

      public static final int FIELD_FIXED32_FIELD_NUMBER = 7;
      private int fieldFixed32_ = 0;
      /**
       * <code>optional fixed32 field_fixed32 = 7;</code>
       * @return Whether the fieldFixed32 field is set.
       */
      @java.lang.Override
      public boolean hasFieldFixed32() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional fixed32 field_fixed32 = 7;</code>
       * @return The fieldFixed32.
       */
      @java.lang.Override
      public int getFieldFixed32() {
        return fieldFixed32_;
      }

      public static final int FIELD_SFIXED32_FIELD_NUMBER = 8;
      private int fieldSfixed32_ = 0;
      /**
       * <code>optional sfixed32 field_sfixed32 = 8;</code>
       * @return Whether the fieldSfixed32 field is set.
       */
      @java.lang.Override
      public boolean hasFieldSfixed32() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <code>optional sfixed32 field_sfixed32 = 8;</code>
       * @return The fieldSfixed32.
       */
      @java.lang.Override
      public int getFieldSfixed32() {
        return fieldSfixed32_;
      }

      public static final int FIELD_DOUBLE_FIELD_NUMBER = 9;
      private double fieldDouble_ = 0D;
      /**
       * <code>optional double field_double = 9;</code>
       * @return Whether the fieldDouble field is set.
       */
      @java.lang.Override
      public boolean hasFieldDouble() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <code>optional double field_double = 9;</code>
       * @return The fieldDouble.
       */
      @java.lang.Override
      public double getFieldDouble() {
        return fieldDouble_;
      }

      public static final int FIELD_FLOAT_FIELD_NUMBER = 10;
      private float fieldFloat_ = 0F;
      /**
       * <code>optional float field_float = 10;</code>
       * @return Whether the fieldFloat field is set.
       */
      @java.lang.Override
      public boolean hasFieldFloat() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <code>optional float field_float = 10;</code>
       * @return The fieldFloat.
       */
      @java.lang.Override
      public float getFieldFloat() {
        return fieldFloat_;
      }

      public static final int FIELD_SINT64_FIELD_NUMBER = 11;
      private long fieldSint64_ = 0L;
      /**
       * <code>optional sint64 field_sint64 = 11;</code>
       * @return Whether the fieldSint64 field is set.
       */
      @java.lang.Override
      public boolean hasFieldSint64() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <code>optional sint64 field_sint64 = 11;</code>
       * @return The fieldSint64.
       */
      @java.lang.Override
      public long getFieldSint64() {
        return fieldSint64_;
      }

      public static final int FIELD_SINT32_FIELD_NUMBER = 12;
      private int fieldSint32_ = 0;
      /**
       * <code>optional sint32 field_sint32 = 12;</code>
       * @return Whether the fieldSint32 field is set.
       */
      @java.lang.Override
      public boolean hasFieldSint32() {
        return ((bitField0_ & 0x00000800) != 0);
      }
      /**
       * <code>optional sint32 field_sint32 = 12;</code>
       * @return The fieldSint32.
       */
      @java.lang.Override
      public int getFieldSint32() {
        return fieldSint32_;
      }

      public static final int FIELD_STRING_FIELD_NUMBER = 13;
      @SuppressWarnings("serial")
      private volatile java.lang.Object fieldString_ = "";
      /**
       * <code>optional string field_string = 13;</code>
       * @return Whether the fieldString field is set.
       */
      @java.lang.Override
      public boolean hasFieldString() {
        return ((bitField0_ & 0x00001000) != 0);
      }
      /**
       * <code>optional string field_string = 13;</code>
       * @return The fieldString.
       */
      @java.lang.Override
      public java.lang.String getFieldString() {
        java.lang.Object ref = fieldString_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            fieldString_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string field_string = 13;</code>
       * @return The bytes for fieldString.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getFieldStringBytes() {
        java.lang.Object ref = fieldString_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fieldString_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int FIELD_BYTES_FIELD_NUMBER = 14;
      private com.google.protobuf.ByteString fieldBytes_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes field_bytes = 14;</code>
       * @return Whether the fieldBytes field is set.
       */
      @java.lang.Override
      public boolean hasFieldBytes() {
        return ((bitField0_ & 0x00002000) != 0);
      }
      /**
       * <code>optional bytes field_bytes = 14;</code>
       * @return The fieldBytes.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getFieldBytes() {
        return fieldBytes_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeUInt32(1, fieldUint32_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeInt32(2, fieldInt32_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeUInt64(3, fieldUint64_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          output.writeInt64(4, fieldInt64_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          output.writeFixed64(5, fieldFixed64_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          output.writeSFixed64(6, fieldSfixed64_);
        }
        if (((bitField0_ & 0x00000040) != 0)) {
          output.writeFixed32(7, fieldFixed32_);
        }
        if (((bitField0_ & 0x00000080) != 0)) {
          output.writeSFixed32(8, fieldSfixed32_);
        }
        if (((bitField0_ & 0x00000100) != 0)) {
          output.writeDouble(9, fieldDouble_);
        }
        if (((bitField0_ & 0x00000200) != 0)) {
          output.writeFloat(10, fieldFloat_);
        }
        if (((bitField0_ & 0x00000400) != 0)) {
          output.writeSInt64(11, fieldSint64_);
        }
        if (((bitField0_ & 0x00000800) != 0)) {
          output.writeSInt32(12, fieldSint32_);
        }
        if (((bitField0_ & 0x00001000) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 13, fieldString_);
        }
        if (((bitField0_ & 0x00002000) != 0)) {
          output.writeBytes(14, fieldBytes_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, fieldUint32_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, fieldInt32_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(3, fieldUint64_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(4, fieldInt64_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFixed64Size(5, fieldFixed64_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSFixed64Size(6, fieldSfixed64_);
        }
        if (((bitField0_ & 0x00000040) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFixed32Size(7, fieldFixed32_);
        }
        if (((bitField0_ & 0x00000080) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSFixed32Size(8, fieldSfixed32_);
        }
        if (((bitField0_ & 0x00000100) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(9, fieldDouble_);
        }
        if (((bitField0_ & 0x00000200) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(10, fieldFloat_);
        }
        if (((bitField0_ & 0x00000400) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt64Size(11, fieldSint64_);
        }
        if (((bitField0_ & 0x00000800) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(12, fieldSint32_);
        }
        if (((bitField0_ & 0x00001000) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(13, fieldString_);
        }
        if (((bitField0_ & 0x00002000) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(14, fieldBytes_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof perfetto.protos.TestConfigOuterClass.TestConfig.DummyFields)) {
          return super.equals(obj);
        }
        perfetto.protos.TestConfigOuterClass.TestConfig.DummyFields other = (perfetto.protos.TestConfigOuterClass.TestConfig.DummyFields) obj;

        if (hasFieldUint32() != other.hasFieldUint32()) return false;
        if (hasFieldUint32()) {
          if (getFieldUint32()
              != other.getFieldUint32()) return false;
        }
        if (hasFieldInt32() != other.hasFieldInt32()) return false;
        if (hasFieldInt32()) {
          if (getFieldInt32()
              != other.getFieldInt32()) return false;
        }
        if (hasFieldUint64() != other.hasFieldUint64()) return false;
        if (hasFieldUint64()) {
          if (getFieldUint64()
              != other.getFieldUint64()) return false;
        }
        if (hasFieldInt64() != other.hasFieldInt64()) return false;
        if (hasFieldInt64()) {
          if (getFieldInt64()
              != other.getFieldInt64()) return false;
        }
        if (hasFieldFixed64() != other.hasFieldFixed64()) return false;
        if (hasFieldFixed64()) {
          if (getFieldFixed64()
              != other.getFieldFixed64()) return false;
        }
        if (hasFieldSfixed64() != other.hasFieldSfixed64()) return false;
        if (hasFieldSfixed64()) {
          if (getFieldSfixed64()
              != other.getFieldSfixed64()) return false;
        }
        if (hasFieldFixed32() != other.hasFieldFixed32()) return false;
        if (hasFieldFixed32()) {
          if (getFieldFixed32()
              != other.getFieldFixed32()) return false;
        }
        if (hasFieldSfixed32() != other.hasFieldSfixed32()) return false;
        if (hasFieldSfixed32()) {
          if (getFieldSfixed32()
              != other.getFieldSfixed32()) return false;
        }
        if (hasFieldDouble() != other.hasFieldDouble()) return false;
        if (hasFieldDouble()) {
          if (java.lang.Double.doubleToLongBits(getFieldDouble())
              != java.lang.Double.doubleToLongBits(
                  other.getFieldDouble())) return false;
        }
        if (hasFieldFloat() != other.hasFieldFloat()) return false;
        if (hasFieldFloat()) {
          if (java.lang.Float.floatToIntBits(getFieldFloat())
              != java.lang.Float.floatToIntBits(
                  other.getFieldFloat())) return false;
        }
        if (hasFieldSint64() != other.hasFieldSint64()) return false;
        if (hasFieldSint64()) {
          if (getFieldSint64()
              != other.getFieldSint64()) return false;
        }
        if (hasFieldSint32() != other.hasFieldSint32()) return false;
        if (hasFieldSint32()) {
          if (getFieldSint32()
              != other.getFieldSint32()) return false;
        }
        if (hasFieldString() != other.hasFieldString()) return false;
        if (hasFieldString()) {
          if (!getFieldString()
              .equals(other.getFieldString())) return false;
        }
        if (hasFieldBytes() != other.hasFieldBytes()) return false;
        if (hasFieldBytes()) {
          if (!getFieldBytes()
              .equals(other.getFieldBytes())) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasFieldUint32()) {
          hash = (37 * hash) + FIELD_UINT32_FIELD_NUMBER;
          hash = (53 * hash) + getFieldUint32();
        }
        if (hasFieldInt32()) {
          hash = (37 * hash) + FIELD_INT32_FIELD_NUMBER;
          hash = (53 * hash) + getFieldInt32();
        }
        if (hasFieldUint64()) {
          hash = (37 * hash) + FIELD_UINT64_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getFieldUint64());
        }
        if (hasFieldInt64()) {
          hash = (37 * hash) + FIELD_INT64_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getFieldInt64());
        }
        if (hasFieldFixed64()) {
          hash = (37 * hash) + FIELD_FIXED64_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getFieldFixed64());
        }
        if (hasFieldSfixed64()) {
          hash = (37 * hash) + FIELD_SFIXED64_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getFieldSfixed64());
        }
        if (hasFieldFixed32()) {
          hash = (37 * hash) + FIELD_FIXED32_FIELD_NUMBER;
          hash = (53 * hash) + getFieldFixed32();
        }
        if (hasFieldSfixed32()) {
          hash = (37 * hash) + FIELD_SFIXED32_FIELD_NUMBER;
          hash = (53 * hash) + getFieldSfixed32();
        }
        if (hasFieldDouble()) {
          hash = (37 * hash) + FIELD_DOUBLE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getFieldDouble()));
        }
        if (hasFieldFloat()) {
          hash = (37 * hash) + FIELD_FLOAT_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getFieldFloat());
        }
        if (hasFieldSint64()) {
          hash = (37 * hash) + FIELD_SINT64_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getFieldSint64());
        }
        if (hasFieldSint32()) {
          hash = (37 * hash) + FIELD_SINT32_FIELD_NUMBER;
          hash = (53 * hash) + getFieldSint32();
        }
        if (hasFieldString()) {
          hash = (37 * hash) + FIELD_STRING_FIELD_NUMBER;
          hash = (53 * hash) + getFieldString().hashCode();
        }
        if (hasFieldBytes()) {
          hash = (37 * hash) + FIELD_BYTES_FIELD_NUMBER;
          hash = (53 * hash) + getFieldBytes().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static perfetto.protos.TestConfigOuterClass.TestConfig.DummyFields parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static perfetto.protos.TestConfigOuterClass.TestConfig.DummyFields parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static perfetto.protos.TestConfigOuterClass.TestConfig.DummyFields parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static perfetto.protos.TestConfigOuterClass.TestConfig.DummyFields parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static perfetto.protos.TestConfigOuterClass.TestConfig.DummyFields parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static perfetto.protos.TestConfigOuterClass.TestConfig.DummyFields parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static perfetto.protos.TestConfigOuterClass.TestConfig.DummyFields parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static perfetto.protos.TestConfigOuterClass.TestConfig.DummyFields parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static perfetto.protos.TestConfigOuterClass.TestConfig.DummyFields parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static perfetto.protos.TestConfigOuterClass.TestConfig.DummyFields parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static perfetto.protos.TestConfigOuterClass.TestConfig.DummyFields parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static perfetto.protos.TestConfigOuterClass.TestConfig.DummyFields parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(perfetto.protos.TestConfigOuterClass.TestConfig.DummyFields prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code perfetto.protos.TestConfig.DummyFields}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:perfetto.protos.TestConfig.DummyFields)
          perfetto.protos.TestConfigOuterClass.TestConfig.DummyFieldsOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return perfetto.protos.TestConfigOuterClass.internal_static_perfetto_protos_TestConfig_DummyFields_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return perfetto.protos.TestConfigOuterClass.internal_static_perfetto_protos_TestConfig_DummyFields_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  perfetto.protos.TestConfigOuterClass.TestConfig.DummyFields.class, perfetto.protos.TestConfigOuterClass.TestConfig.DummyFields.Builder.class);
        }

        // Construct using perfetto.protos.TestConfigOuterClass.TestConfig.DummyFields.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          fieldUint32_ = 0;
          fieldInt32_ = 0;
          fieldUint64_ = 0L;
          fieldInt64_ = 0L;
          fieldFixed64_ = 0L;
          fieldSfixed64_ = 0L;
          fieldFixed32_ = 0;
          fieldSfixed32_ = 0;
          fieldDouble_ = 0D;
          fieldFloat_ = 0F;
          fieldSint64_ = 0L;
          fieldSint32_ = 0;
          fieldString_ = "";
          fieldBytes_ = com.google.protobuf.ByteString.EMPTY;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return perfetto.protos.TestConfigOuterClass.internal_static_perfetto_protos_TestConfig_DummyFields_descriptor;
        }

        @java.lang.Override
        public perfetto.protos.TestConfigOuterClass.TestConfig.DummyFields getDefaultInstanceForType() {
          return perfetto.protos.TestConfigOuterClass.TestConfig.DummyFields.getDefaultInstance();
        }

        @java.lang.Override
        public perfetto.protos.TestConfigOuterClass.TestConfig.DummyFields build() {
          perfetto.protos.TestConfigOuterClass.TestConfig.DummyFields result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public perfetto.protos.TestConfigOuterClass.TestConfig.DummyFields buildPartial() {
          perfetto.protos.TestConfigOuterClass.TestConfig.DummyFields result = new perfetto.protos.TestConfigOuterClass.TestConfig.DummyFields(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(perfetto.protos.TestConfigOuterClass.TestConfig.DummyFields result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.fieldUint32_ = fieldUint32_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.fieldInt32_ = fieldInt32_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.fieldUint64_ = fieldUint64_;
            to_bitField0_ |= 0x00000004;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.fieldInt64_ = fieldInt64_;
            to_bitField0_ |= 0x00000008;
          }
          if (((from_bitField0_ & 0x00000010) != 0)) {
            result.fieldFixed64_ = fieldFixed64_;
            to_bitField0_ |= 0x00000010;
          }
          if (((from_bitField0_ & 0x00000020) != 0)) {
            result.fieldSfixed64_ = fieldSfixed64_;
            to_bitField0_ |= 0x00000020;
          }
          if (((from_bitField0_ & 0x00000040) != 0)) {
            result.fieldFixed32_ = fieldFixed32_;
            to_bitField0_ |= 0x00000040;
          }
          if (((from_bitField0_ & 0x00000080) != 0)) {
            result.fieldSfixed32_ = fieldSfixed32_;
            to_bitField0_ |= 0x00000080;
          }
          if (((from_bitField0_ & 0x00000100) != 0)) {
            result.fieldDouble_ = fieldDouble_;
            to_bitField0_ |= 0x00000100;
          }
          if (((from_bitField0_ & 0x00000200) != 0)) {
            result.fieldFloat_ = fieldFloat_;
            to_bitField0_ |= 0x00000200;
          }
          if (((from_bitField0_ & 0x00000400) != 0)) {
            result.fieldSint64_ = fieldSint64_;
            to_bitField0_ |= 0x00000400;
          }
          if (((from_bitField0_ & 0x00000800) != 0)) {
            result.fieldSint32_ = fieldSint32_;
            to_bitField0_ |= 0x00000800;
          }
          if (((from_bitField0_ & 0x00001000) != 0)) {
            result.fieldString_ = fieldString_;
            to_bitField0_ |= 0x00001000;
          }
          if (((from_bitField0_ & 0x00002000) != 0)) {
            result.fieldBytes_ = fieldBytes_;
            to_bitField0_ |= 0x00002000;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof perfetto.protos.TestConfigOuterClass.TestConfig.DummyFields) {
            return mergeFrom((perfetto.protos.TestConfigOuterClass.TestConfig.DummyFields)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(perfetto.protos.TestConfigOuterClass.TestConfig.DummyFields other) {
          if (other == perfetto.protos.TestConfigOuterClass.TestConfig.DummyFields.getDefaultInstance()) return this;
          if (other.hasFieldUint32()) {
            setFieldUint32(other.getFieldUint32());
          }
          if (other.hasFieldInt32()) {
            setFieldInt32(other.getFieldInt32());
          }
          if (other.hasFieldUint64()) {
            setFieldUint64(other.getFieldUint64());
          }
          if (other.hasFieldInt64()) {
            setFieldInt64(other.getFieldInt64());
          }
          if (other.hasFieldFixed64()) {
            setFieldFixed64(other.getFieldFixed64());
          }
          if (other.hasFieldSfixed64()) {
            setFieldSfixed64(other.getFieldSfixed64());
          }
          if (other.hasFieldFixed32()) {
            setFieldFixed32(other.getFieldFixed32());
          }
          if (other.hasFieldSfixed32()) {
            setFieldSfixed32(other.getFieldSfixed32());
          }
          if (other.hasFieldDouble()) {
            setFieldDouble(other.getFieldDouble());
          }
          if (other.hasFieldFloat()) {
            setFieldFloat(other.getFieldFloat());
          }
          if (other.hasFieldSint64()) {
            setFieldSint64(other.getFieldSint64());
          }
          if (other.hasFieldSint32()) {
            setFieldSint32(other.getFieldSint32());
          }
          if (other.hasFieldString()) {
            fieldString_ = other.fieldString_;
            bitField0_ |= 0x00001000;
            onChanged();
          }
          if (other.hasFieldBytes()) {
            setFieldBytes(other.getFieldBytes());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  fieldUint32_ = input.readUInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 16: {
                  fieldInt32_ = input.readInt32();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                case 24: {
                  fieldUint64_ = input.readUInt64();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 24
                case 32: {
                  fieldInt64_ = input.readInt64();
                  bitField0_ |= 0x00000008;
                  break;
                } // case 32
                case 41: {
                  fieldFixed64_ = input.readFixed64();
                  bitField0_ |= 0x00000010;
                  break;
                } // case 41
                case 49: {
                  fieldSfixed64_ = input.readSFixed64();
                  bitField0_ |= 0x00000020;
                  break;
                } // case 49
                case 61: {
                  fieldFixed32_ = input.readFixed32();
                  bitField0_ |= 0x00000040;
                  break;
                } // case 61
                case 69: {
                  fieldSfixed32_ = input.readSFixed32();
                  bitField0_ |= 0x00000080;
                  break;
                } // case 69
                case 73: {
                  fieldDouble_ = input.readDouble();
                  bitField0_ |= 0x00000100;
                  break;
                } // case 73
                case 85: {
                  fieldFloat_ = input.readFloat();
                  bitField0_ |= 0x00000200;
                  break;
                } // case 85
                case 88: {
                  fieldSint64_ = input.readSInt64();
                  bitField0_ |= 0x00000400;
                  break;
                } // case 88
                case 96: {
                  fieldSint32_ = input.readSInt32();
                  bitField0_ |= 0x00000800;
                  break;
                } // case 96
                case 106: {
                  fieldString_ = input.readBytes();
                  bitField0_ |= 0x00001000;
                  break;
                } // case 106
                case 114: {
                  fieldBytes_ = input.readBytes();
                  bitField0_ |= 0x00002000;
                  break;
                } // case 114
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int fieldUint32_ ;
        /**
         * <code>optional uint32 field_uint32 = 1;</code>
         * @return Whether the fieldUint32 field is set.
         */
        @java.lang.Override
        public boolean hasFieldUint32() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional uint32 field_uint32 = 1;</code>
         * @return The fieldUint32.
         */
        @java.lang.Override
        public int getFieldUint32() {
          return fieldUint32_;
        }
        /**
         * <code>optional uint32 field_uint32 = 1;</code>
         * @param value The fieldUint32 to set.
         * @return This builder for chaining.
         */
        public Builder setFieldUint32(int value) {
          
          fieldUint32_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 field_uint32 = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearFieldUint32() {
          bitField0_ = (bitField0_ & ~0x00000001);
          fieldUint32_ = 0;
          onChanged();
          return this;
        }

        private int fieldInt32_ ;
        /**
         * <code>optional int32 field_int32 = 2;</code>
         * @return Whether the fieldInt32 field is set.
         */
        @java.lang.Override
        public boolean hasFieldInt32() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional int32 field_int32 = 2;</code>
         * @return The fieldInt32.
         */
        @java.lang.Override
        public int getFieldInt32() {
          return fieldInt32_;
        }
        /**
         * <code>optional int32 field_int32 = 2;</code>
         * @param value The fieldInt32 to set.
         * @return This builder for chaining.
         */
        public Builder setFieldInt32(int value) {
          
          fieldInt32_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 field_int32 = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearFieldInt32() {
          bitField0_ = (bitField0_ & ~0x00000002);
          fieldInt32_ = 0;
          onChanged();
          return this;
        }

        private long fieldUint64_ ;
        /**
         * <code>optional uint64 field_uint64 = 3;</code>
         * @return Whether the fieldUint64 field is set.
         */
        @java.lang.Override
        public boolean hasFieldUint64() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional uint64 field_uint64 = 3;</code>
         * @return The fieldUint64.
         */
        @java.lang.Override
        public long getFieldUint64() {
          return fieldUint64_;
        }
        /**
         * <code>optional uint64 field_uint64 = 3;</code>
         * @param value The fieldUint64 to set.
         * @return This builder for chaining.
         */
        public Builder setFieldUint64(long value) {
          
          fieldUint64_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 field_uint64 = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearFieldUint64() {
          bitField0_ = (bitField0_ & ~0x00000004);
          fieldUint64_ = 0L;
          onChanged();
          return this;
        }

        private long fieldInt64_ ;
        /**
         * <code>optional int64 field_int64 = 4;</code>
         * @return Whether the fieldInt64 field is set.
         */
        @java.lang.Override
        public boolean hasFieldInt64() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <code>optional int64 field_int64 = 4;</code>
         * @return The fieldInt64.
         */
        @java.lang.Override
        public long getFieldInt64() {
          return fieldInt64_;
        }
        /**
         * <code>optional int64 field_int64 = 4;</code>
         * @param value The fieldInt64 to set.
         * @return This builder for chaining.
         */
        public Builder setFieldInt64(long value) {
          
          fieldInt64_ = value;
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <code>optional int64 field_int64 = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearFieldInt64() {
          bitField0_ = (bitField0_ & ~0x00000008);
          fieldInt64_ = 0L;
          onChanged();
          return this;
        }

        private long fieldFixed64_ ;
        /**
         * <code>optional fixed64 field_fixed64 = 5;</code>
         * @return Whether the fieldFixed64 field is set.
         */
        @java.lang.Override
        public boolean hasFieldFixed64() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <code>optional fixed64 field_fixed64 = 5;</code>
         * @return The fieldFixed64.
         */
        @java.lang.Override
        public long getFieldFixed64() {
          return fieldFixed64_;
        }
        /**
         * <code>optional fixed64 field_fixed64 = 5;</code>
         * @param value The fieldFixed64 to set.
         * @return This builder for chaining.
         */
        public Builder setFieldFixed64(long value) {
          
          fieldFixed64_ = value;
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <code>optional fixed64 field_fixed64 = 5;</code>
         * @return This builder for chaining.
         */
        public Builder clearFieldFixed64() {
          bitField0_ = (bitField0_ & ~0x00000010);
          fieldFixed64_ = 0L;
          onChanged();
          return this;
        }

        private long fieldSfixed64_ ;
        /**
         * <code>optional sfixed64 field_sfixed64 = 6;</code>
         * @return Whether the fieldSfixed64 field is set.
         */
        @java.lang.Override
        public boolean hasFieldSfixed64() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        /**
         * <code>optional sfixed64 field_sfixed64 = 6;</code>
         * @return The fieldSfixed64.
         */
        @java.lang.Override
        public long getFieldSfixed64() {
          return fieldSfixed64_;
        }
        /**
         * <code>optional sfixed64 field_sfixed64 = 6;</code>
         * @param value The fieldSfixed64 to set.
         * @return This builder for chaining.
         */
        public Builder setFieldSfixed64(long value) {
          
          fieldSfixed64_ = value;
          bitField0_ |= 0x00000020;
          onChanged();
          return this;
        }
        /**
         * <code>optional sfixed64 field_sfixed64 = 6;</code>
         * @return This builder for chaining.
         */
        public Builder clearFieldSfixed64() {
          bitField0_ = (bitField0_ & ~0x00000020);
          fieldSfixed64_ = 0L;
          onChanged();
          return this;
        }

        private int fieldFixed32_ ;
        /**
         * <code>optional fixed32 field_fixed32 = 7;</code>
         * @return Whether the fieldFixed32 field is set.
         */
        @java.lang.Override
        public boolean hasFieldFixed32() {
          return ((bitField0_ & 0x00000040) != 0);
        }
        /**
         * <code>optional fixed32 field_fixed32 = 7;</code>
         * @return The fieldFixed32.
         */
        @java.lang.Override
        public int getFieldFixed32() {
          return fieldFixed32_;
        }
        /**
         * <code>optional fixed32 field_fixed32 = 7;</code>
         * @param value The fieldFixed32 to set.
         * @return This builder for chaining.
         */
        public Builder setFieldFixed32(int value) {
          
          fieldFixed32_ = value;
          bitField0_ |= 0x00000040;
          onChanged();
          return this;
        }
        /**
         * <code>optional fixed32 field_fixed32 = 7;</code>
         * @return This builder for chaining.
         */
        public Builder clearFieldFixed32() {
          bitField0_ = (bitField0_ & ~0x00000040);
          fieldFixed32_ = 0;
          onChanged();
          return this;
        }

        private int fieldSfixed32_ ;
        /**
         * <code>optional sfixed32 field_sfixed32 = 8;</code>
         * @return Whether the fieldSfixed32 field is set.
         */
        @java.lang.Override
        public boolean hasFieldSfixed32() {
          return ((bitField0_ & 0x00000080) != 0);
        }
        /**
         * <code>optional sfixed32 field_sfixed32 = 8;</code>
         * @return The fieldSfixed32.
         */
        @java.lang.Override
        public int getFieldSfixed32() {
          return fieldSfixed32_;
        }
        /**
         * <code>optional sfixed32 field_sfixed32 = 8;</code>
         * @param value The fieldSfixed32 to set.
         * @return This builder for chaining.
         */
        public Builder setFieldSfixed32(int value) {
          
          fieldSfixed32_ = value;
          bitField0_ |= 0x00000080;
          onChanged();
          return this;
        }
        /**
         * <code>optional sfixed32 field_sfixed32 = 8;</code>
         * @return This builder for chaining.
         */
        public Builder clearFieldSfixed32() {
          bitField0_ = (bitField0_ & ~0x00000080);
          fieldSfixed32_ = 0;
          onChanged();
          return this;
        }

        private double fieldDouble_ ;
        /**
         * <code>optional double field_double = 9;</code>
         * @return Whether the fieldDouble field is set.
         */
        @java.lang.Override
        public boolean hasFieldDouble() {
          return ((bitField0_ & 0x00000100) != 0);
        }
        /**
         * <code>optional double field_double = 9;</code>
         * @return The fieldDouble.
         */
        @java.lang.Override
        public double getFieldDouble() {
          return fieldDouble_;
        }
        /**
         * <code>optional double field_double = 9;</code>
         * @param value The fieldDouble to set.
         * @return This builder for chaining.
         */
        public Builder setFieldDouble(double value) {
          
          fieldDouble_ = value;
          bitField0_ |= 0x00000100;
          onChanged();
          return this;
        }
        /**
         * <code>optional double field_double = 9;</code>
         * @return This builder for chaining.
         */
        public Builder clearFieldDouble() {
          bitField0_ = (bitField0_ & ~0x00000100);
          fieldDouble_ = 0D;
          onChanged();
          return this;
        }

        private float fieldFloat_ ;
        /**
         * <code>optional float field_float = 10;</code>
         * @return Whether the fieldFloat field is set.
         */
        @java.lang.Override
        public boolean hasFieldFloat() {
          return ((bitField0_ & 0x00000200) != 0);
        }
        /**
         * <code>optional float field_float = 10;</code>
         * @return The fieldFloat.
         */
        @java.lang.Override
        public float getFieldFloat() {
          return fieldFloat_;
        }
        /**
         * <code>optional float field_float = 10;</code>
         * @param value The fieldFloat to set.
         * @return This builder for chaining.
         */
        public Builder setFieldFloat(float value) {
          
          fieldFloat_ = value;
          bitField0_ |= 0x00000200;
          onChanged();
          return this;
        }
        /**
         * <code>optional float field_float = 10;</code>
         * @return This builder for chaining.
         */
        public Builder clearFieldFloat() {
          bitField0_ = (bitField0_ & ~0x00000200);
          fieldFloat_ = 0F;
          onChanged();
          return this;
        }

        private long fieldSint64_ ;
        /**
         * <code>optional sint64 field_sint64 = 11;</code>
         * @return Whether the fieldSint64 field is set.
         */
        @java.lang.Override
        public boolean hasFieldSint64() {
          return ((bitField0_ & 0x00000400) != 0);
        }
        /**
         * <code>optional sint64 field_sint64 = 11;</code>
         * @return The fieldSint64.
         */
        @java.lang.Override
        public long getFieldSint64() {
          return fieldSint64_;
        }
        /**
         * <code>optional sint64 field_sint64 = 11;</code>
         * @param value The fieldSint64 to set.
         * @return This builder for chaining.
         */
        public Builder setFieldSint64(long value) {
          
          fieldSint64_ = value;
          bitField0_ |= 0x00000400;
          onChanged();
          return this;
        }
        /**
         * <code>optional sint64 field_sint64 = 11;</code>
         * @return This builder for chaining.
         */
        public Builder clearFieldSint64() {
          bitField0_ = (bitField0_ & ~0x00000400);
          fieldSint64_ = 0L;
          onChanged();
          return this;
        }

        private int fieldSint32_ ;
        /**
         * <code>optional sint32 field_sint32 = 12;</code>
         * @return Whether the fieldSint32 field is set.
         */
        @java.lang.Override
        public boolean hasFieldSint32() {
          return ((bitField0_ & 0x00000800) != 0);
        }
        /**
         * <code>optional sint32 field_sint32 = 12;</code>
         * @return The fieldSint32.
         */
        @java.lang.Override
        public int getFieldSint32() {
          return fieldSint32_;
        }
        /**
         * <code>optional sint32 field_sint32 = 12;</code>
         * @param value The fieldSint32 to set.
         * @return This builder for chaining.
         */
        public Builder setFieldSint32(int value) {
          
          fieldSint32_ = value;
          bitField0_ |= 0x00000800;
          onChanged();
          return this;
        }
        /**
         * <code>optional sint32 field_sint32 = 12;</code>
         * @return This builder for chaining.
         */
        public Builder clearFieldSint32() {
          bitField0_ = (bitField0_ & ~0x00000800);
          fieldSint32_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object fieldString_ = "";
        /**
         * <code>optional string field_string = 13;</code>
         * @return Whether the fieldString field is set.
         */
        public boolean hasFieldString() {
          return ((bitField0_ & 0x00001000) != 0);
        }
        /**
         * <code>optional string field_string = 13;</code>
         * @return The fieldString.
         */
        public java.lang.String getFieldString() {
          java.lang.Object ref = fieldString_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              fieldString_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string field_string = 13;</code>
         * @return The bytes for fieldString.
         */
        public com.google.protobuf.ByteString
            getFieldStringBytes() {
          java.lang.Object ref = fieldString_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            fieldString_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string field_string = 13;</code>
         * @param value The fieldString to set.
         * @return This builder for chaining.
         */
        public Builder setFieldString(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          fieldString_ = value;
          bitField0_ |= 0x00001000;
          onChanged();
          return this;
        }
        /**
         * <code>optional string field_string = 13;</code>
         * @return This builder for chaining.
         */
        public Builder clearFieldString() {
          fieldString_ = getDefaultInstance().getFieldString();
          bitField0_ = (bitField0_ & ~0x00001000);
          onChanged();
          return this;
        }
        /**
         * <code>optional string field_string = 13;</code>
         * @param value The bytes for fieldString to set.
         * @return This builder for chaining.
         */
        public Builder setFieldStringBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          fieldString_ = value;
          bitField0_ |= 0x00001000;
          onChanged();
          return this;
        }

        private com.google.protobuf.ByteString fieldBytes_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <code>optional bytes field_bytes = 14;</code>
         * @return Whether the fieldBytes field is set.
         */
        @java.lang.Override
        public boolean hasFieldBytes() {
          return ((bitField0_ & 0x00002000) != 0);
        }
        /**
         * <code>optional bytes field_bytes = 14;</code>
         * @return The fieldBytes.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getFieldBytes() {
          return fieldBytes_;
        }
        /**
         * <code>optional bytes field_bytes = 14;</code>
         * @param value The fieldBytes to set.
         * @return This builder for chaining.
         */
        public Builder setFieldBytes(com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          fieldBytes_ = value;
          bitField0_ |= 0x00002000;
          onChanged();
          return this;
        }
        /**
         * <code>optional bytes field_bytes = 14;</code>
         * @return This builder for chaining.
         */
        public Builder clearFieldBytes() {
          bitField0_ = (bitField0_ & ~0x00002000);
          fieldBytes_ = getDefaultInstance().getFieldBytes();
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:perfetto.protos.TestConfig.DummyFields)
      }

      // @@protoc_insertion_point(class_scope:perfetto.protos.TestConfig.DummyFields)
      private static final perfetto.protos.TestConfigOuterClass.TestConfig.DummyFields DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new perfetto.protos.TestConfigOuterClass.TestConfig.DummyFields();
      }

      public static perfetto.protos.TestConfigOuterClass.TestConfig.DummyFields getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<DummyFields>
          PARSER = new com.google.protobuf.AbstractParser<DummyFields>() {
        @java.lang.Override
        public DummyFields parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<DummyFields> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<DummyFields> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public perfetto.protos.TestConfigOuterClass.TestConfig.DummyFields getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int MESSAGE_COUNT_FIELD_NUMBER = 1;
    private int messageCount_ = 0;
    /**
     * <pre>
     * The number of messages the fake producer should send.
     * </pre>
     *
     * <code>optional uint32 message_count = 1;</code>
     * @return Whether the messageCount field is set.
     */
    @java.lang.Override
    public boolean hasMessageCount() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The number of messages the fake producer should send.
     * </pre>
     *
     * <code>optional uint32 message_count = 1;</code>
     * @return The messageCount.
     */
    @java.lang.Override
    public int getMessageCount() {
      return messageCount_;
    }

    public static final int MAX_MESSAGES_PER_SECOND_FIELD_NUMBER = 2;
    private int maxMessagesPerSecond_ = 0;
    /**
     * <pre>
     * The maximum number of messages which should be sent each second.
     * The actual obserced speed may be lower if the producer is unable to
     * work fast enough.
     * If this is zero or unset, the producer will send as fast as possible.
     * </pre>
     *
     * <code>optional uint32 max_messages_per_second = 2;</code>
     * @return Whether the maxMessagesPerSecond field is set.
     */
    @java.lang.Override
    public boolean hasMaxMessagesPerSecond() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The maximum number of messages which should be sent each second.
     * The actual obserced speed may be lower if the producer is unable to
     * work fast enough.
     * If this is zero or unset, the producer will send as fast as possible.
     * </pre>
     *
     * <code>optional uint32 max_messages_per_second = 2;</code>
     * @return The maxMessagesPerSecond.
     */
    @java.lang.Override
    public int getMaxMessagesPerSecond() {
      return maxMessagesPerSecond_;
    }

    public static final int SEED_FIELD_NUMBER = 3;
    private int seed_ = 0;
    /**
     * <pre>
     * The seed value for a simple multiplicative congruential pseudo-random
     * number sequence.
     * </pre>
     *
     * <code>optional uint32 seed = 3;</code>
     * @return Whether the seed field is set.
     */
    @java.lang.Override
    public boolean hasSeed() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * The seed value for a simple multiplicative congruential pseudo-random
     * number sequence.
     * </pre>
     *
     * <code>optional uint32 seed = 3;</code>
     * @return The seed.
     */
    @java.lang.Override
    public int getSeed() {
      return seed_;
    }

    public static final int MESSAGE_SIZE_FIELD_NUMBER = 4;
    private int messageSize_ = 0;
    /**
     * <pre>
     * The size of each message in bytes. Should be greater than or equal 5 to
     * account for the number of bytes needed to encode the random number and a
     * null byte for the string.
     * </pre>
     *
     * <code>optional uint32 message_size = 4;</code>
     * @return Whether the messageSize field is set.
     */
    @java.lang.Override
    public boolean hasMessageSize() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * The size of each message in bytes. Should be greater than or equal 5 to
     * account for the number of bytes needed to encode the random number and a
     * null byte for the string.
     * </pre>
     *
     * <code>optional uint32 message_size = 4;</code>
     * @return The messageSize.
     */
    @java.lang.Override
    public int getMessageSize() {
      return messageSize_;
    }

    public static final int SEND_BATCH_ON_REGISTER_FIELD_NUMBER = 5;
    private boolean sendBatchOnRegister_ = false;
    /**
     * <pre>
     * Whether the producer should send a event batch when the data source is
     * is initially registered.
     * </pre>
     *
     * <code>optional bool send_batch_on_register = 5;</code>
     * @return Whether the sendBatchOnRegister field is set.
     */
    @java.lang.Override
    public boolean hasSendBatchOnRegister() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Whether the producer should send a event batch when the data source is
     * is initially registered.
     * </pre>
     *
     * <code>optional bool send_batch_on_register = 5;</code>
     * @return The sendBatchOnRegister.
     */
    @java.lang.Override
    public boolean getSendBatchOnRegister() {
      return sendBatchOnRegister_;
    }

    public static final int DUMMY_FIELDS_FIELD_NUMBER = 6;
    private perfetto.protos.TestConfigOuterClass.TestConfig.DummyFields dummyFields_;
    /**
     * <code>optional .perfetto.protos.TestConfig.DummyFields dummy_fields = 6;</code>
     * @return Whether the dummyFields field is set.
     */
    @java.lang.Override
    public boolean hasDummyFields() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>optional .perfetto.protos.TestConfig.DummyFields dummy_fields = 6;</code>
     * @return The dummyFields.
     */
    @java.lang.Override
    public perfetto.protos.TestConfigOuterClass.TestConfig.DummyFields getDummyFields() {
      return dummyFields_ == null ? perfetto.protos.TestConfigOuterClass.TestConfig.DummyFields.getDefaultInstance() : dummyFields_;
    }
    /**
     * <code>optional .perfetto.protos.TestConfig.DummyFields dummy_fields = 6;</code>
     */
    @java.lang.Override
    public perfetto.protos.TestConfigOuterClass.TestConfig.DummyFieldsOrBuilder getDummyFieldsOrBuilder() {
      return dummyFields_ == null ? perfetto.protos.TestConfigOuterClass.TestConfig.DummyFields.getDefaultInstance() : dummyFields_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, messageCount_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt32(2, maxMessagesPerSecond_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeUInt32(3, seed_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeUInt32(4, messageSize_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeBool(5, sendBatchOnRegister_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeMessage(6, getDummyFields());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, messageCount_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, maxMessagesPerSecond_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, seed_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, messageSize_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, sendBatchOnRegister_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getDummyFields());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof perfetto.protos.TestConfigOuterClass.TestConfig)) {
        return super.equals(obj);
      }
      perfetto.protos.TestConfigOuterClass.TestConfig other = (perfetto.protos.TestConfigOuterClass.TestConfig) obj;

      if (hasMessageCount() != other.hasMessageCount()) return false;
      if (hasMessageCount()) {
        if (getMessageCount()
            != other.getMessageCount()) return false;
      }
      if (hasMaxMessagesPerSecond() != other.hasMaxMessagesPerSecond()) return false;
      if (hasMaxMessagesPerSecond()) {
        if (getMaxMessagesPerSecond()
            != other.getMaxMessagesPerSecond()) return false;
      }
      if (hasSeed() != other.hasSeed()) return false;
      if (hasSeed()) {
        if (getSeed()
            != other.getSeed()) return false;
      }
      if (hasMessageSize() != other.hasMessageSize()) return false;
      if (hasMessageSize()) {
        if (getMessageSize()
            != other.getMessageSize()) return false;
      }
      if (hasSendBatchOnRegister() != other.hasSendBatchOnRegister()) return false;
      if (hasSendBatchOnRegister()) {
        if (getSendBatchOnRegister()
            != other.getSendBatchOnRegister()) return false;
      }
      if (hasDummyFields() != other.hasDummyFields()) return false;
      if (hasDummyFields()) {
        if (!getDummyFields()
            .equals(other.getDummyFields())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMessageCount()) {
        hash = (37 * hash) + MESSAGE_COUNT_FIELD_NUMBER;
        hash = (53 * hash) + getMessageCount();
      }
      if (hasMaxMessagesPerSecond()) {
        hash = (37 * hash) + MAX_MESSAGES_PER_SECOND_FIELD_NUMBER;
        hash = (53 * hash) + getMaxMessagesPerSecond();
      }
      if (hasSeed()) {
        hash = (37 * hash) + SEED_FIELD_NUMBER;
        hash = (53 * hash) + getSeed();
      }
      if (hasMessageSize()) {
        hash = (37 * hash) + MESSAGE_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getMessageSize();
      }
      if (hasSendBatchOnRegister()) {
        hash = (37 * hash) + SEND_BATCH_ON_REGISTER_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getSendBatchOnRegister());
      }
      if (hasDummyFields()) {
        hash = (37 * hash) + DUMMY_FIELDS_FIELD_NUMBER;
        hash = (53 * hash) + getDummyFields().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static perfetto.protos.TestConfigOuterClass.TestConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.TestConfigOuterClass.TestConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.TestConfigOuterClass.TestConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.TestConfigOuterClass.TestConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.TestConfigOuterClass.TestConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.TestConfigOuterClass.TestConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.TestConfigOuterClass.TestConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.TestConfigOuterClass.TestConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.TestConfigOuterClass.TestConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static perfetto.protos.TestConfigOuterClass.TestConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.TestConfigOuterClass.TestConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.TestConfigOuterClass.TestConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(perfetto.protos.TestConfigOuterClass.TestConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The configuration for a fake producer used in tests.
     * </pre>
     *
     * Protobuf type {@code perfetto.protos.TestConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:perfetto.protos.TestConfig)
        perfetto.protos.TestConfigOuterClass.TestConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.TestConfigOuterClass.internal_static_perfetto_protos_TestConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.TestConfigOuterClass.internal_static_perfetto_protos_TestConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.TestConfigOuterClass.TestConfig.class, perfetto.protos.TestConfigOuterClass.TestConfig.Builder.class);
      }

      // Construct using perfetto.protos.TestConfigOuterClass.TestConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getDummyFieldsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        messageCount_ = 0;
        maxMessagesPerSecond_ = 0;
        seed_ = 0;
        messageSize_ = 0;
        sendBatchOnRegister_ = false;
        dummyFields_ = null;
        if (dummyFieldsBuilder_ != null) {
          dummyFieldsBuilder_.dispose();
          dummyFieldsBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return perfetto.protos.TestConfigOuterClass.internal_static_perfetto_protos_TestConfig_descriptor;
      }

      @java.lang.Override
      public perfetto.protos.TestConfigOuterClass.TestConfig getDefaultInstanceForType() {
        return perfetto.protos.TestConfigOuterClass.TestConfig.getDefaultInstance();
      }

      @java.lang.Override
      public perfetto.protos.TestConfigOuterClass.TestConfig build() {
        perfetto.protos.TestConfigOuterClass.TestConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public perfetto.protos.TestConfigOuterClass.TestConfig buildPartial() {
        perfetto.protos.TestConfigOuterClass.TestConfig result = new perfetto.protos.TestConfigOuterClass.TestConfig(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(perfetto.protos.TestConfigOuterClass.TestConfig result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.messageCount_ = messageCount_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.maxMessagesPerSecond_ = maxMessagesPerSecond_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.seed_ = seed_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.messageSize_ = messageSize_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.sendBatchOnRegister_ = sendBatchOnRegister_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.dummyFields_ = dummyFieldsBuilder_ == null
              ? dummyFields_
              : dummyFieldsBuilder_.build();
          to_bitField0_ |= 0x00000020;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof perfetto.protos.TestConfigOuterClass.TestConfig) {
          return mergeFrom((perfetto.protos.TestConfigOuterClass.TestConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(perfetto.protos.TestConfigOuterClass.TestConfig other) {
        if (other == perfetto.protos.TestConfigOuterClass.TestConfig.getDefaultInstance()) return this;
        if (other.hasMessageCount()) {
          setMessageCount(other.getMessageCount());
        }
        if (other.hasMaxMessagesPerSecond()) {
          setMaxMessagesPerSecond(other.getMaxMessagesPerSecond());
        }
        if (other.hasSeed()) {
          setSeed(other.getSeed());
        }
        if (other.hasMessageSize()) {
          setMessageSize(other.getMessageSize());
        }
        if (other.hasSendBatchOnRegister()) {
          setSendBatchOnRegister(other.getSendBatchOnRegister());
        }
        if (other.hasDummyFields()) {
          mergeDummyFields(other.getDummyFields());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                messageCount_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                maxMessagesPerSecond_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                seed_ = input.readUInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                messageSize_ = input.readUInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                sendBatchOnRegister_ = input.readBool();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 50: {
                input.readMessage(
                    getDummyFieldsFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000020;
                break;
              } // case 50
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int messageCount_ ;
      /**
       * <pre>
       * The number of messages the fake producer should send.
       * </pre>
       *
       * <code>optional uint32 message_count = 1;</code>
       * @return Whether the messageCount field is set.
       */
      @java.lang.Override
      public boolean hasMessageCount() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * The number of messages the fake producer should send.
       * </pre>
       *
       * <code>optional uint32 message_count = 1;</code>
       * @return The messageCount.
       */
      @java.lang.Override
      public int getMessageCount() {
        return messageCount_;
      }
      /**
       * <pre>
       * The number of messages the fake producer should send.
       * </pre>
       *
       * <code>optional uint32 message_count = 1;</code>
       * @param value The messageCount to set.
       * @return This builder for chaining.
       */
      public Builder setMessageCount(int value) {
        
        messageCount_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The number of messages the fake producer should send.
       * </pre>
       *
       * <code>optional uint32 message_count = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearMessageCount() {
        bitField0_ = (bitField0_ & ~0x00000001);
        messageCount_ = 0;
        onChanged();
        return this;
      }

      private int maxMessagesPerSecond_ ;
      /**
       * <pre>
       * The maximum number of messages which should be sent each second.
       * The actual obserced speed may be lower if the producer is unable to
       * work fast enough.
       * If this is zero or unset, the producer will send as fast as possible.
       * </pre>
       *
       * <code>optional uint32 max_messages_per_second = 2;</code>
       * @return Whether the maxMessagesPerSecond field is set.
       */
      @java.lang.Override
      public boolean hasMaxMessagesPerSecond() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * The maximum number of messages which should be sent each second.
       * The actual obserced speed may be lower if the producer is unable to
       * work fast enough.
       * If this is zero or unset, the producer will send as fast as possible.
       * </pre>
       *
       * <code>optional uint32 max_messages_per_second = 2;</code>
       * @return The maxMessagesPerSecond.
       */
      @java.lang.Override
      public int getMaxMessagesPerSecond() {
        return maxMessagesPerSecond_;
      }
      /**
       * <pre>
       * The maximum number of messages which should be sent each second.
       * The actual obserced speed may be lower if the producer is unable to
       * work fast enough.
       * If this is zero or unset, the producer will send as fast as possible.
       * </pre>
       *
       * <code>optional uint32 max_messages_per_second = 2;</code>
       * @param value The maxMessagesPerSecond to set.
       * @return This builder for chaining.
       */
      public Builder setMaxMessagesPerSecond(int value) {
        
        maxMessagesPerSecond_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The maximum number of messages which should be sent each second.
       * The actual obserced speed may be lower if the producer is unable to
       * work fast enough.
       * If this is zero or unset, the producer will send as fast as possible.
       * </pre>
       *
       * <code>optional uint32 max_messages_per_second = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxMessagesPerSecond() {
        bitField0_ = (bitField0_ & ~0x00000002);
        maxMessagesPerSecond_ = 0;
        onChanged();
        return this;
      }

      private int seed_ ;
      /**
       * <pre>
       * The seed value for a simple multiplicative congruential pseudo-random
       * number sequence.
       * </pre>
       *
       * <code>optional uint32 seed = 3;</code>
       * @return Whether the seed field is set.
       */
      @java.lang.Override
      public boolean hasSeed() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * The seed value for a simple multiplicative congruential pseudo-random
       * number sequence.
       * </pre>
       *
       * <code>optional uint32 seed = 3;</code>
       * @return The seed.
       */
      @java.lang.Override
      public int getSeed() {
        return seed_;
      }
      /**
       * <pre>
       * The seed value for a simple multiplicative congruential pseudo-random
       * number sequence.
       * </pre>
       *
       * <code>optional uint32 seed = 3;</code>
       * @param value The seed to set.
       * @return This builder for chaining.
       */
      public Builder setSeed(int value) {
        
        seed_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The seed value for a simple multiplicative congruential pseudo-random
       * number sequence.
       * </pre>
       *
       * <code>optional uint32 seed = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearSeed() {
        bitField0_ = (bitField0_ & ~0x00000004);
        seed_ = 0;
        onChanged();
        return this;
      }

      private int messageSize_ ;
      /**
       * <pre>
       * The size of each message in bytes. Should be greater than or equal 5 to
       * account for the number of bytes needed to encode the random number and a
       * null byte for the string.
       * </pre>
       *
       * <code>optional uint32 message_size = 4;</code>
       * @return Whether the messageSize field is set.
       */
      @java.lang.Override
      public boolean hasMessageSize() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * The size of each message in bytes. Should be greater than or equal 5 to
       * account for the number of bytes needed to encode the random number and a
       * null byte for the string.
       * </pre>
       *
       * <code>optional uint32 message_size = 4;</code>
       * @return The messageSize.
       */
      @java.lang.Override
      public int getMessageSize() {
        return messageSize_;
      }
      /**
       * <pre>
       * The size of each message in bytes. Should be greater than or equal 5 to
       * account for the number of bytes needed to encode the random number and a
       * null byte for the string.
       * </pre>
       *
       * <code>optional uint32 message_size = 4;</code>
       * @param value The messageSize to set.
       * @return This builder for chaining.
       */
      public Builder setMessageSize(int value) {
        
        messageSize_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The size of each message in bytes. Should be greater than or equal 5 to
       * account for the number of bytes needed to encode the random number and a
       * null byte for the string.
       * </pre>
       *
       * <code>optional uint32 message_size = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearMessageSize() {
        bitField0_ = (bitField0_ & ~0x00000008);
        messageSize_ = 0;
        onChanged();
        return this;
      }

      private boolean sendBatchOnRegister_ ;
      /**
       * <pre>
       * Whether the producer should send a event batch when the data source is
       * is initially registered.
       * </pre>
       *
       * <code>optional bool send_batch_on_register = 5;</code>
       * @return Whether the sendBatchOnRegister field is set.
       */
      @java.lang.Override
      public boolean hasSendBatchOnRegister() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * Whether the producer should send a event batch when the data source is
       * is initially registered.
       * </pre>
       *
       * <code>optional bool send_batch_on_register = 5;</code>
       * @return The sendBatchOnRegister.
       */
      @java.lang.Override
      public boolean getSendBatchOnRegister() {
        return sendBatchOnRegister_;
      }
      /**
       * <pre>
       * Whether the producer should send a event batch when the data source is
       * is initially registered.
       * </pre>
       *
       * <code>optional bool send_batch_on_register = 5;</code>
       * @param value The sendBatchOnRegister to set.
       * @return This builder for chaining.
       */
      public Builder setSendBatchOnRegister(boolean value) {
        
        sendBatchOnRegister_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Whether the producer should send a event batch when the data source is
       * is initially registered.
       * </pre>
       *
       * <code>optional bool send_batch_on_register = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearSendBatchOnRegister() {
        bitField0_ = (bitField0_ & ~0x00000010);
        sendBatchOnRegister_ = false;
        onChanged();
        return this;
      }

      private perfetto.protos.TestConfigOuterClass.TestConfig.DummyFields dummyFields_;
      private com.google.protobuf.SingleFieldBuilderV3<
          perfetto.protos.TestConfigOuterClass.TestConfig.DummyFields, perfetto.protos.TestConfigOuterClass.TestConfig.DummyFields.Builder, perfetto.protos.TestConfigOuterClass.TestConfig.DummyFieldsOrBuilder> dummyFieldsBuilder_;
      /**
       * <code>optional .perfetto.protos.TestConfig.DummyFields dummy_fields = 6;</code>
       * @return Whether the dummyFields field is set.
       */
      public boolean hasDummyFields() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional .perfetto.protos.TestConfig.DummyFields dummy_fields = 6;</code>
       * @return The dummyFields.
       */
      public perfetto.protos.TestConfigOuterClass.TestConfig.DummyFields getDummyFields() {
        if (dummyFieldsBuilder_ == null) {
          return dummyFields_ == null ? perfetto.protos.TestConfigOuterClass.TestConfig.DummyFields.getDefaultInstance() : dummyFields_;
        } else {
          return dummyFieldsBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .perfetto.protos.TestConfig.DummyFields dummy_fields = 6;</code>
       */
      public Builder setDummyFields(perfetto.protos.TestConfigOuterClass.TestConfig.DummyFields value) {
        if (dummyFieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dummyFields_ = value;
        } else {
          dummyFieldsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>optional .perfetto.protos.TestConfig.DummyFields dummy_fields = 6;</code>
       */
      public Builder setDummyFields(
          perfetto.protos.TestConfigOuterClass.TestConfig.DummyFields.Builder builderForValue) {
        if (dummyFieldsBuilder_ == null) {
          dummyFields_ = builderForValue.build();
        } else {
          dummyFieldsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>optional .perfetto.protos.TestConfig.DummyFields dummy_fields = 6;</code>
       */
      public Builder mergeDummyFields(perfetto.protos.TestConfigOuterClass.TestConfig.DummyFields value) {
        if (dummyFieldsBuilder_ == null) {
          if (((bitField0_ & 0x00000020) != 0) &&
            dummyFields_ != null &&
            dummyFields_ != perfetto.protos.TestConfigOuterClass.TestConfig.DummyFields.getDefaultInstance()) {
            getDummyFieldsBuilder().mergeFrom(value);
          } else {
            dummyFields_ = value;
          }
        } else {
          dummyFieldsBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>optional .perfetto.protos.TestConfig.DummyFields dummy_fields = 6;</code>
       */
      public Builder clearDummyFields() {
        bitField0_ = (bitField0_ & ~0x00000020);
        dummyFields_ = null;
        if (dummyFieldsBuilder_ != null) {
          dummyFieldsBuilder_.dispose();
          dummyFieldsBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional .perfetto.protos.TestConfig.DummyFields dummy_fields = 6;</code>
       */
      public perfetto.protos.TestConfigOuterClass.TestConfig.DummyFields.Builder getDummyFieldsBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getDummyFieldsFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .perfetto.protos.TestConfig.DummyFields dummy_fields = 6;</code>
       */
      public perfetto.protos.TestConfigOuterClass.TestConfig.DummyFieldsOrBuilder getDummyFieldsOrBuilder() {
        if (dummyFieldsBuilder_ != null) {
          return dummyFieldsBuilder_.getMessageOrBuilder();
        } else {
          return dummyFields_ == null ?
              perfetto.protos.TestConfigOuterClass.TestConfig.DummyFields.getDefaultInstance() : dummyFields_;
        }
      }
      /**
       * <code>optional .perfetto.protos.TestConfig.DummyFields dummy_fields = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          perfetto.protos.TestConfigOuterClass.TestConfig.DummyFields, perfetto.protos.TestConfigOuterClass.TestConfig.DummyFields.Builder, perfetto.protos.TestConfigOuterClass.TestConfig.DummyFieldsOrBuilder> 
          getDummyFieldsFieldBuilder() {
        if (dummyFieldsBuilder_ == null) {
          dummyFieldsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              perfetto.protos.TestConfigOuterClass.TestConfig.DummyFields, perfetto.protos.TestConfigOuterClass.TestConfig.DummyFields.Builder, perfetto.protos.TestConfigOuterClass.TestConfig.DummyFieldsOrBuilder>(
                  getDummyFields(),
                  getParentForChildren(),
                  isClean());
          dummyFields_ = null;
        }
        return dummyFieldsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:perfetto.protos.TestConfig)
    }

    // @@protoc_insertion_point(class_scope:perfetto.protos.TestConfig)
    private static final perfetto.protos.TestConfigOuterClass.TestConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new perfetto.protos.TestConfigOuterClass.TestConfig();
    }

    public static perfetto.protos.TestConfigOuterClass.TestConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<TestConfig>
        PARSER = new com.google.protobuf.AbstractParser<TestConfig>() {
      @java.lang.Override
      public TestConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<TestConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TestConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public perfetto.protos.TestConfigOuterClass.TestConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_TestConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_perfetto_protos_TestConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_TestConfig_DummyFields_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_perfetto_protos_TestConfig_DummyFields_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n(protos/perfetto/config/test_config.pro" +
      "to\022\017perfetto.protos\"\215\004\n\nTestConfig\022\025\n\rme" +
      "ssage_count\030\001 \001(\r\022\037\n\027max_messages_per_se" +
      "cond\030\002 \001(\r\022\014\n\004seed\030\003 \001(\r\022\024\n\014message_size" +
      "\030\004 \001(\r\022\036\n\026send_batch_on_register\030\005 \001(\010\022=" +
      "\n\014dummy_fields\030\006 \001(\0132\'.perfetto.protos.T" +
      "estConfig.DummyFields\032\303\002\n\013DummyFields\022\024\n" +
      "\014field_uint32\030\001 \001(\r\022\023\n\013field_int32\030\002 \001(\005" +
      "\022\024\n\014field_uint64\030\003 \001(\004\022\023\n\013field_int64\030\004 " +
      "\001(\003\022\025\n\rfield_fixed64\030\005 \001(\006\022\026\n\016field_sfix" +
      "ed64\030\006 \001(\020\022\025\n\rfield_fixed32\030\007 \001(\007\022\026\n\016fie" +
      "ld_sfixed32\030\010 \001(\017\022\024\n\014field_double\030\t \001(\001\022" +
      "\023\n\013field_float\030\n \001(\002\022\024\n\014field_sint64\030\013 \001" +
      "(\022\022\024\n\014field_sint32\030\014 \001(\021\022\024\n\014field_string" +
      "\030\r \001(\t\022\023\n\013field_bytes\030\016 \001(\014"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_perfetto_protos_TestConfig_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_perfetto_protos_TestConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_perfetto_protos_TestConfig_descriptor,
        new java.lang.String[] { "MessageCount", "MaxMessagesPerSecond", "Seed", "MessageSize", "SendBatchOnRegister", "DummyFields", });
    internal_static_perfetto_protos_TestConfig_DummyFields_descriptor =
      internal_static_perfetto_protos_TestConfig_descriptor.getNestedTypes().get(0);
    internal_static_perfetto_protos_TestConfig_DummyFields_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_perfetto_protos_TestConfig_DummyFields_descriptor,
        new java.lang.String[] { "FieldUint32", "FieldInt32", "FieldUint64", "FieldInt64", "FieldFixed64", "FieldSfixed64", "FieldFixed32", "FieldSfixed32", "FieldDouble", "FieldFloat", "FieldSint64", "FieldSint32", "FieldString", "FieldBytes", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
