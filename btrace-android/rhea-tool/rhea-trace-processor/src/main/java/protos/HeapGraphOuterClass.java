// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/perfetto/trace/profiling/heap_graph.proto

package perfetto.protos;

public final class HeapGraphOuterClass {
  private HeapGraphOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface HeapGraphRootOrBuilder extends
      // @@protoc_insertion_point(interface_extends:perfetto.protos.HeapGraphRoot)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Objects retained by this root.
     * </pre>
     *
     * <code>repeated uint64 object_ids = 1 [packed = true];</code>
     * @return A list containing the objectIds.
     */
    java.util.List<java.lang.Long> getObjectIdsList();
    /**
     * <pre>
     * Objects retained by this root.
     * </pre>
     *
     * <code>repeated uint64 object_ids = 1 [packed = true];</code>
     * @return The count of objectIds.
     */
    int getObjectIdsCount();
    /**
     * <pre>
     * Objects retained by this root.
     * </pre>
     *
     * <code>repeated uint64 object_ids = 1 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The objectIds at the given index.
     */
    long getObjectIds(int index);

    /**
     * <code>optional .perfetto.protos.HeapGraphRoot.Type root_type = 2;</code>
     * @return Whether the rootType field is set.
     */
    boolean hasRootType();
    /**
     * <code>optional .perfetto.protos.HeapGraphRoot.Type root_type = 2;</code>
     * @return The rootType.
     */
    perfetto.protos.HeapGraphOuterClass.HeapGraphRoot.Type getRootType();
  }
  /**
   * Protobuf type {@code perfetto.protos.HeapGraphRoot}
   */
  public static final class HeapGraphRoot extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:perfetto.protos.HeapGraphRoot)
      HeapGraphRootOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use HeapGraphRoot.newBuilder() to construct.
    private HeapGraphRoot(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private HeapGraphRoot() {
      objectIds_ = emptyLongList();
      rootType_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new HeapGraphRoot();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return perfetto.protos.HeapGraphOuterClass.internal_static_perfetto_protos_HeapGraphRoot_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return perfetto.protos.HeapGraphOuterClass.internal_static_perfetto_protos_HeapGraphRoot_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              perfetto.protos.HeapGraphOuterClass.HeapGraphRoot.class, perfetto.protos.HeapGraphOuterClass.HeapGraphRoot.Builder.class);
    }

    /**
     * Protobuf enum {@code perfetto.protos.HeapGraphRoot.Type}
     */
    public enum Type
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>ROOT_UNKNOWN = 0;</code>
       */
      ROOT_UNKNOWN(0),
      /**
       * <code>ROOT_JNI_GLOBAL = 1;</code>
       */
      ROOT_JNI_GLOBAL(1),
      /**
       * <code>ROOT_JNI_LOCAL = 2;</code>
       */
      ROOT_JNI_LOCAL(2),
      /**
       * <code>ROOT_JAVA_FRAME = 3;</code>
       */
      ROOT_JAVA_FRAME(3),
      /**
       * <code>ROOT_NATIVE_STACK = 4;</code>
       */
      ROOT_NATIVE_STACK(4),
      /**
       * <code>ROOT_STICKY_CLASS = 5;</code>
       */
      ROOT_STICKY_CLASS(5),
      /**
       * <code>ROOT_THREAD_BLOCK = 6;</code>
       */
      ROOT_THREAD_BLOCK(6),
      /**
       * <code>ROOT_MONITOR_USED = 7;</code>
       */
      ROOT_MONITOR_USED(7),
      /**
       * <code>ROOT_THREAD_OBJECT = 8;</code>
       */
      ROOT_THREAD_OBJECT(8),
      /**
       * <code>ROOT_INTERNED_STRING = 9;</code>
       */
      ROOT_INTERNED_STRING(9),
      /**
       * <code>ROOT_FINALIZING = 10;</code>
       */
      ROOT_FINALIZING(10),
      /**
       * <code>ROOT_DEBUGGER = 11;</code>
       */
      ROOT_DEBUGGER(11),
      /**
       * <code>ROOT_REFERENCE_CLEANUP = 12;</code>
       */
      ROOT_REFERENCE_CLEANUP(12),
      /**
       * <code>ROOT_VM_INTERNAL = 13;</code>
       */
      ROOT_VM_INTERNAL(13),
      /**
       * <code>ROOT_JNI_MONITOR = 14;</code>
       */
      ROOT_JNI_MONITOR(14),
      ;

      /**
       * <code>ROOT_UNKNOWN = 0;</code>
       */
      public static final int ROOT_UNKNOWN_VALUE = 0;
      /**
       * <code>ROOT_JNI_GLOBAL = 1;</code>
       */
      public static final int ROOT_JNI_GLOBAL_VALUE = 1;
      /**
       * <code>ROOT_JNI_LOCAL = 2;</code>
       */
      public static final int ROOT_JNI_LOCAL_VALUE = 2;
      /**
       * <code>ROOT_JAVA_FRAME = 3;</code>
       */
      public static final int ROOT_JAVA_FRAME_VALUE = 3;
      /**
       * <code>ROOT_NATIVE_STACK = 4;</code>
       */
      public static final int ROOT_NATIVE_STACK_VALUE = 4;
      /**
       * <code>ROOT_STICKY_CLASS = 5;</code>
       */
      public static final int ROOT_STICKY_CLASS_VALUE = 5;
      /**
       * <code>ROOT_THREAD_BLOCK = 6;</code>
       */
      public static final int ROOT_THREAD_BLOCK_VALUE = 6;
      /**
       * <code>ROOT_MONITOR_USED = 7;</code>
       */
      public static final int ROOT_MONITOR_USED_VALUE = 7;
      /**
       * <code>ROOT_THREAD_OBJECT = 8;</code>
       */
      public static final int ROOT_THREAD_OBJECT_VALUE = 8;
      /**
       * <code>ROOT_INTERNED_STRING = 9;</code>
       */
      public static final int ROOT_INTERNED_STRING_VALUE = 9;
      /**
       * <code>ROOT_FINALIZING = 10;</code>
       */
      public static final int ROOT_FINALIZING_VALUE = 10;
      /**
       * <code>ROOT_DEBUGGER = 11;</code>
       */
      public static final int ROOT_DEBUGGER_VALUE = 11;
      /**
       * <code>ROOT_REFERENCE_CLEANUP = 12;</code>
       */
      public static final int ROOT_REFERENCE_CLEANUP_VALUE = 12;
      /**
       * <code>ROOT_VM_INTERNAL = 13;</code>
       */
      public static final int ROOT_VM_INTERNAL_VALUE = 13;
      /**
       * <code>ROOT_JNI_MONITOR = 14;</code>
       */
      public static final int ROOT_JNI_MONITOR_VALUE = 14;


      public final int getNumber() {
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Type valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Type forNumber(int value) {
        switch (value) {
          case 0: return ROOT_UNKNOWN;
          case 1: return ROOT_JNI_GLOBAL;
          case 2: return ROOT_JNI_LOCAL;
          case 3: return ROOT_JAVA_FRAME;
          case 4: return ROOT_NATIVE_STACK;
          case 5: return ROOT_STICKY_CLASS;
          case 6: return ROOT_THREAD_BLOCK;
          case 7: return ROOT_MONITOR_USED;
          case 8: return ROOT_THREAD_OBJECT;
          case 9: return ROOT_INTERNED_STRING;
          case 10: return ROOT_FINALIZING;
          case 11: return ROOT_DEBUGGER;
          case 12: return ROOT_REFERENCE_CLEANUP;
          case 13: return ROOT_VM_INTERNAL;
          case 14: return ROOT_JNI_MONITOR;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Type> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return perfetto.protos.HeapGraphOuterClass.HeapGraphRoot.getDescriptor().getEnumTypes().get(0);
      }

      private static final Type[] VALUES = values();

      public static Type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Type(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:perfetto.protos.HeapGraphRoot.Type)
    }

    private int bitField0_;
    public static final int OBJECT_IDS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.LongList objectIds_;
    /**
     * <pre>
     * Objects retained by this root.
     * </pre>
     *
     * <code>repeated uint64 object_ids = 1 [packed = true];</code>
     * @return A list containing the objectIds.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getObjectIdsList() {
      return objectIds_;
    }
    /**
     * <pre>
     * Objects retained by this root.
     * </pre>
     *
     * <code>repeated uint64 object_ids = 1 [packed = true];</code>
     * @return The count of objectIds.
     */
    public int getObjectIdsCount() {
      return objectIds_.size();
    }
    /**
     * <pre>
     * Objects retained by this root.
     * </pre>
     *
     * <code>repeated uint64 object_ids = 1 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The objectIds at the given index.
     */
    public long getObjectIds(int index) {
      return objectIds_.getLong(index);
    }
    private int objectIdsMemoizedSerializedSize = -1;

    public static final int ROOT_TYPE_FIELD_NUMBER = 2;
    private int rootType_ = 0;
    /**
     * <code>optional .perfetto.protos.HeapGraphRoot.Type root_type = 2;</code>
     * @return Whether the rootType field is set.
     */
    @java.lang.Override public boolean hasRootType() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional .perfetto.protos.HeapGraphRoot.Type root_type = 2;</code>
     * @return The rootType.
     */
    @java.lang.Override public perfetto.protos.HeapGraphOuterClass.HeapGraphRoot.Type getRootType() {
      perfetto.protos.HeapGraphOuterClass.HeapGraphRoot.Type result = perfetto.protos.HeapGraphOuterClass.HeapGraphRoot.Type.forNumber(rootType_);
      return result == null ? perfetto.protos.HeapGraphOuterClass.HeapGraphRoot.Type.ROOT_UNKNOWN : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getObjectIdsList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(objectIdsMemoizedSerializedSize);
      }
      for (int i = 0; i < objectIds_.size(); i++) {
        output.writeUInt64NoTag(objectIds_.getLong(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeEnum(2, rootType_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < objectIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt64SizeNoTag(objectIds_.getLong(i));
        }
        size += dataSize;
        if (!getObjectIdsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        objectIdsMemoizedSerializedSize = dataSize;
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, rootType_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof perfetto.protos.HeapGraphOuterClass.HeapGraphRoot)) {
        return super.equals(obj);
      }
      perfetto.protos.HeapGraphOuterClass.HeapGraphRoot other = (perfetto.protos.HeapGraphOuterClass.HeapGraphRoot) obj;

      if (!getObjectIdsList()
          .equals(other.getObjectIdsList())) return false;
      if (hasRootType() != other.hasRootType()) return false;
      if (hasRootType()) {
        if (rootType_ != other.rootType_) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getObjectIdsCount() > 0) {
        hash = (37 * hash) + OBJECT_IDS_FIELD_NUMBER;
        hash = (53 * hash) + getObjectIdsList().hashCode();
      }
      if (hasRootType()) {
        hash = (37 * hash) + ROOT_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + rootType_;
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static perfetto.protos.HeapGraphOuterClass.HeapGraphRoot parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.HeapGraphOuterClass.HeapGraphRoot parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.HeapGraphOuterClass.HeapGraphRoot parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.HeapGraphOuterClass.HeapGraphRoot parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.HeapGraphOuterClass.HeapGraphRoot parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.HeapGraphOuterClass.HeapGraphRoot parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.HeapGraphOuterClass.HeapGraphRoot parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.HeapGraphOuterClass.HeapGraphRoot parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.HeapGraphOuterClass.HeapGraphRoot parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static perfetto.protos.HeapGraphOuterClass.HeapGraphRoot parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.HeapGraphOuterClass.HeapGraphRoot parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.HeapGraphOuterClass.HeapGraphRoot parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(perfetto.protos.HeapGraphOuterClass.HeapGraphRoot prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code perfetto.protos.HeapGraphRoot}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:perfetto.protos.HeapGraphRoot)
        perfetto.protos.HeapGraphOuterClass.HeapGraphRootOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.HeapGraphOuterClass.internal_static_perfetto_protos_HeapGraphRoot_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.HeapGraphOuterClass.internal_static_perfetto_protos_HeapGraphRoot_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.HeapGraphOuterClass.HeapGraphRoot.class, perfetto.protos.HeapGraphOuterClass.HeapGraphRoot.Builder.class);
      }

      // Construct using perfetto.protos.HeapGraphOuterClass.HeapGraphRoot.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        objectIds_ = emptyLongList();
        rootType_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return perfetto.protos.HeapGraphOuterClass.internal_static_perfetto_protos_HeapGraphRoot_descriptor;
      }

      @java.lang.Override
      public perfetto.protos.HeapGraphOuterClass.HeapGraphRoot getDefaultInstanceForType() {
        return perfetto.protos.HeapGraphOuterClass.HeapGraphRoot.getDefaultInstance();
      }

      @java.lang.Override
      public perfetto.protos.HeapGraphOuterClass.HeapGraphRoot build() {
        perfetto.protos.HeapGraphOuterClass.HeapGraphRoot result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public perfetto.protos.HeapGraphOuterClass.HeapGraphRoot buildPartial() {
        perfetto.protos.HeapGraphOuterClass.HeapGraphRoot result = new perfetto.protos.HeapGraphOuterClass.HeapGraphRoot(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(perfetto.protos.HeapGraphOuterClass.HeapGraphRoot result) {
        if (((bitField0_ & 0x00000001) != 0)) {
          objectIds_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.objectIds_ = objectIds_;
      }

      private void buildPartial0(perfetto.protos.HeapGraphOuterClass.HeapGraphRoot result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.rootType_ = rootType_;
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof perfetto.protos.HeapGraphOuterClass.HeapGraphRoot) {
          return mergeFrom((perfetto.protos.HeapGraphOuterClass.HeapGraphRoot)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(perfetto.protos.HeapGraphOuterClass.HeapGraphRoot other) {
        if (other == perfetto.protos.HeapGraphOuterClass.HeapGraphRoot.getDefaultInstance()) return this;
        if (!other.objectIds_.isEmpty()) {
          if (objectIds_.isEmpty()) {
            objectIds_ = other.objectIds_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureObjectIdsIsMutable();
            objectIds_.addAll(other.objectIds_);
          }
          onChanged();
        }
        if (other.hasRootType()) {
          setRootType(other.getRootType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                long v = input.readUInt64();
                ensureObjectIdsIsMutable();
                objectIds_.addLong(v);
                break;
              } // case 8
              case 10: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureObjectIdsIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  objectIds_.addLong(input.readUInt64());
                }
                input.popLimit(limit);
                break;
              } // case 10
              case 16: {
                int tmpRaw = input.readEnum();
                perfetto.protos.HeapGraphOuterClass.HeapGraphRoot.Type tmpValue =
                    perfetto.protos.HeapGraphOuterClass.HeapGraphRoot.Type.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(2, tmpRaw);
                } else {
                  rootType_ = tmpRaw;
                  bitField0_ |= 0x00000002;
                }
                break;
              } // case 16
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.LongList objectIds_ = emptyLongList();
      private void ensureObjectIdsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          objectIds_ = mutableCopy(objectIds_);
          bitField0_ |= 0x00000001;
        }
      }
      /**
       * <pre>
       * Objects retained by this root.
       * </pre>
       *
       * <code>repeated uint64 object_ids = 1 [packed = true];</code>
       * @return A list containing the objectIds.
       */
      public java.util.List<java.lang.Long>
          getObjectIdsList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(objectIds_) : objectIds_;
      }
      /**
       * <pre>
       * Objects retained by this root.
       * </pre>
       *
       * <code>repeated uint64 object_ids = 1 [packed = true];</code>
       * @return The count of objectIds.
       */
      public int getObjectIdsCount() {
        return objectIds_.size();
      }
      /**
       * <pre>
       * Objects retained by this root.
       * </pre>
       *
       * <code>repeated uint64 object_ids = 1 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The objectIds at the given index.
       */
      public long getObjectIds(int index) {
        return objectIds_.getLong(index);
      }
      /**
       * <pre>
       * Objects retained by this root.
       * </pre>
       *
       * <code>repeated uint64 object_ids = 1 [packed = true];</code>
       * @param index The index to set the value at.
       * @param value The objectIds to set.
       * @return This builder for chaining.
       */
      public Builder setObjectIds(
          int index, long value) {
        
        ensureObjectIdsIsMutable();
        objectIds_.setLong(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Objects retained by this root.
       * </pre>
       *
       * <code>repeated uint64 object_ids = 1 [packed = true];</code>
       * @param value The objectIds to add.
       * @return This builder for chaining.
       */
      public Builder addObjectIds(long value) {
        
        ensureObjectIdsIsMutable();
        objectIds_.addLong(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Objects retained by this root.
       * </pre>
       *
       * <code>repeated uint64 object_ids = 1 [packed = true];</code>
       * @param values The objectIds to add.
       * @return This builder for chaining.
       */
      public Builder addAllObjectIds(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureObjectIdsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, objectIds_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Objects retained by this root.
       * </pre>
       *
       * <code>repeated uint64 object_ids = 1 [packed = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearObjectIds() {
        objectIds_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private int rootType_ = 0;
      /**
       * <code>optional .perfetto.protos.HeapGraphRoot.Type root_type = 2;</code>
       * @return Whether the rootType field is set.
       */
      @java.lang.Override public boolean hasRootType() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional .perfetto.protos.HeapGraphRoot.Type root_type = 2;</code>
       * @return The rootType.
       */
      @java.lang.Override
      public perfetto.protos.HeapGraphOuterClass.HeapGraphRoot.Type getRootType() {
        perfetto.protos.HeapGraphOuterClass.HeapGraphRoot.Type result = perfetto.protos.HeapGraphOuterClass.HeapGraphRoot.Type.forNumber(rootType_);
        return result == null ? perfetto.protos.HeapGraphOuterClass.HeapGraphRoot.Type.ROOT_UNKNOWN : result;
      }
      /**
       * <code>optional .perfetto.protos.HeapGraphRoot.Type root_type = 2;</code>
       * @param value The rootType to set.
       * @return This builder for chaining.
       */
      public Builder setRootType(perfetto.protos.HeapGraphOuterClass.HeapGraphRoot.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        rootType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .perfetto.protos.HeapGraphRoot.Type root_type = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearRootType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        rootType_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:perfetto.protos.HeapGraphRoot)
    }

    // @@protoc_insertion_point(class_scope:perfetto.protos.HeapGraphRoot)
    private static final perfetto.protos.HeapGraphOuterClass.HeapGraphRoot DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new perfetto.protos.HeapGraphOuterClass.HeapGraphRoot();
    }

    public static perfetto.protos.HeapGraphOuterClass.HeapGraphRoot getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<HeapGraphRoot>
        PARSER = new com.google.protobuf.AbstractParser<HeapGraphRoot>() {
      @java.lang.Override
      public HeapGraphRoot parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<HeapGraphRoot> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<HeapGraphRoot> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public perfetto.protos.HeapGraphOuterClass.HeapGraphRoot getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface HeapGraphTypeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:perfetto.protos.HeapGraphType)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * TODO(fmayer): Consider removing this and using the index in the repeaed
     * field to save space.
     * </pre>
     *
     * <code>optional uint64 id = 1;</code>
     * @return Whether the id field is set.
     */
    boolean hasId();
    /**
     * <pre>
     * TODO(fmayer): Consider removing this and using the index in the repeaed
     * field to save space.
     * </pre>
     *
     * <code>optional uint64 id = 1;</code>
     * @return The id.
     */
    long getId();

    /**
     * <code>optional uint64 location_id = 2;</code>
     * @return Whether the locationId field is set.
     */
    boolean hasLocationId();
    /**
     * <code>optional uint64 location_id = 2;</code>
     * @return The locationId.
     */
    long getLocationId();

    /**
     * <code>optional string class_name = 3;</code>
     * @return Whether the className field is set.
     */
    boolean hasClassName();
    /**
     * <code>optional string class_name = 3;</code>
     * @return The className.
     */
    java.lang.String getClassName();
    /**
     * <code>optional string class_name = 3;</code>
     * @return The bytes for className.
     */
    com.google.protobuf.ByteString
        getClassNameBytes();

    /**
     * <pre>
     * Size of objects of this type.
     * </pre>
     *
     * <code>optional uint64 object_size = 4;</code>
     * @return Whether the objectSize field is set.
     */
    boolean hasObjectSize();
    /**
     * <pre>
     * Size of objects of this type.
     * </pre>
     *
     * <code>optional uint64 object_size = 4;</code>
     * @return The objectSize.
     */
    long getObjectSize();

    /**
     * <code>optional uint64 superclass_id = 5;</code>
     * @return Whether the superclassId field is set.
     */
    boolean hasSuperclassId();
    /**
     * <code>optional uint64 superclass_id = 5;</code>
     * @return The superclassId.
     */
    long getSuperclassId();

    /**
     * <pre>
     * Indices for InternedData.field_names for the names of the fields of
     * instances of this class. This does NOT include the fields from
     * superclasses. The consumer of this data needs to walk all super
     * classes to get a full lists of fields. Objects always write the
     * fields in order of most specific class to the furthest up superclass.
     * </pre>
     *
     * <code>repeated uint64 reference_field_id = 6 [packed = true];</code>
     * @return A list containing the referenceFieldId.
     */
    java.util.List<java.lang.Long> getReferenceFieldIdList();
    /**
     * <pre>
     * Indices for InternedData.field_names for the names of the fields of
     * instances of this class. This does NOT include the fields from
     * superclasses. The consumer of this data needs to walk all super
     * classes to get a full lists of fields. Objects always write the
     * fields in order of most specific class to the furthest up superclass.
     * </pre>
     *
     * <code>repeated uint64 reference_field_id = 6 [packed = true];</code>
     * @return The count of referenceFieldId.
     */
    int getReferenceFieldIdCount();
    /**
     * <pre>
     * Indices for InternedData.field_names for the names of the fields of
     * instances of this class. This does NOT include the fields from
     * superclasses. The consumer of this data needs to walk all super
     * classes to get a full lists of fields. Objects always write the
     * fields in order of most specific class to the furthest up superclass.
     * </pre>
     *
     * <code>repeated uint64 reference_field_id = 6 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The referenceFieldId at the given index.
     */
    long getReferenceFieldId(int index);

    /**
     * <code>optional .perfetto.protos.HeapGraphType.Kind kind = 7;</code>
     * @return Whether the kind field is set.
     */
    boolean hasKind();
    /**
     * <code>optional .perfetto.protos.HeapGraphType.Kind kind = 7;</code>
     * @return The kind.
     */
    perfetto.protos.HeapGraphOuterClass.HeapGraphType.Kind getKind();

    /**
     * <code>optional uint64 classloader_id = 8;</code>
     * @return Whether the classloaderId field is set.
     */
    boolean hasClassloaderId();
    /**
     * <code>optional uint64 classloader_id = 8;</code>
     * @return The classloaderId.
     */
    long getClassloaderId();
  }
  /**
   * Protobuf type {@code perfetto.protos.HeapGraphType}
   */
  public static final class HeapGraphType extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:perfetto.protos.HeapGraphType)
      HeapGraphTypeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use HeapGraphType.newBuilder() to construct.
    private HeapGraphType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private HeapGraphType() {
      className_ = "";
      referenceFieldId_ = emptyLongList();
      kind_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new HeapGraphType();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return perfetto.protos.HeapGraphOuterClass.internal_static_perfetto_protos_HeapGraphType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return perfetto.protos.HeapGraphOuterClass.internal_static_perfetto_protos_HeapGraphType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              perfetto.protos.HeapGraphOuterClass.HeapGraphType.class, perfetto.protos.HeapGraphOuterClass.HeapGraphType.Builder.class);
    }

    /**
     * Protobuf enum {@code perfetto.protos.HeapGraphType.Kind}
     */
    public enum Kind
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>KIND_UNKNOWN = 0;</code>
       */
      KIND_UNKNOWN(0),
      /**
       * <code>KIND_NORMAL = 1;</code>
       */
      KIND_NORMAL(1),
      /**
       * <code>KIND_NOREFERENCES = 2;</code>
       */
      KIND_NOREFERENCES(2),
      /**
       * <code>KIND_STRING = 3;</code>
       */
      KIND_STRING(3),
      /**
       * <code>KIND_ARRAY = 4;</code>
       */
      KIND_ARRAY(4),
      /**
       * <code>KIND_CLASS = 5;</code>
       */
      KIND_CLASS(5),
      /**
       * <code>KIND_CLASSLOADER = 6;</code>
       */
      KIND_CLASSLOADER(6),
      /**
       * <code>KIND_DEXCACHE = 7;</code>
       */
      KIND_DEXCACHE(7),
      /**
       * <code>KIND_SOFT_REFERENCE = 8;</code>
       */
      KIND_SOFT_REFERENCE(8),
      /**
       * <code>KIND_WEAK_REFERENCE = 9;</code>
       */
      KIND_WEAK_REFERENCE(9),
      /**
       * <code>KIND_FINALIZER_REFERENCE = 10;</code>
       */
      KIND_FINALIZER_REFERENCE(10),
      /**
       * <code>KIND_PHANTOM_REFERENCE = 11;</code>
       */
      KIND_PHANTOM_REFERENCE(11),
      ;

      /**
       * <code>KIND_UNKNOWN = 0;</code>
       */
      public static final int KIND_UNKNOWN_VALUE = 0;
      /**
       * <code>KIND_NORMAL = 1;</code>
       */
      public static final int KIND_NORMAL_VALUE = 1;
      /**
       * <code>KIND_NOREFERENCES = 2;</code>
       */
      public static final int KIND_NOREFERENCES_VALUE = 2;
      /**
       * <code>KIND_STRING = 3;</code>
       */
      public static final int KIND_STRING_VALUE = 3;
      /**
       * <code>KIND_ARRAY = 4;</code>
       */
      public static final int KIND_ARRAY_VALUE = 4;
      /**
       * <code>KIND_CLASS = 5;</code>
       */
      public static final int KIND_CLASS_VALUE = 5;
      /**
       * <code>KIND_CLASSLOADER = 6;</code>
       */
      public static final int KIND_CLASSLOADER_VALUE = 6;
      /**
       * <code>KIND_DEXCACHE = 7;</code>
       */
      public static final int KIND_DEXCACHE_VALUE = 7;
      /**
       * <code>KIND_SOFT_REFERENCE = 8;</code>
       */
      public static final int KIND_SOFT_REFERENCE_VALUE = 8;
      /**
       * <code>KIND_WEAK_REFERENCE = 9;</code>
       */
      public static final int KIND_WEAK_REFERENCE_VALUE = 9;
      /**
       * <code>KIND_FINALIZER_REFERENCE = 10;</code>
       */
      public static final int KIND_FINALIZER_REFERENCE_VALUE = 10;
      /**
       * <code>KIND_PHANTOM_REFERENCE = 11;</code>
       */
      public static final int KIND_PHANTOM_REFERENCE_VALUE = 11;


      public final int getNumber() {
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Kind valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Kind forNumber(int value) {
        switch (value) {
          case 0: return KIND_UNKNOWN;
          case 1: return KIND_NORMAL;
          case 2: return KIND_NOREFERENCES;
          case 3: return KIND_STRING;
          case 4: return KIND_ARRAY;
          case 5: return KIND_CLASS;
          case 6: return KIND_CLASSLOADER;
          case 7: return KIND_DEXCACHE;
          case 8: return KIND_SOFT_REFERENCE;
          case 9: return KIND_WEAK_REFERENCE;
          case 10: return KIND_FINALIZER_REFERENCE;
          case 11: return KIND_PHANTOM_REFERENCE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Kind>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Kind> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Kind>() {
              public Kind findValueByNumber(int number) {
                return Kind.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return perfetto.protos.HeapGraphOuterClass.HeapGraphType.getDescriptor().getEnumTypes().get(0);
      }

      private static final Kind[] VALUES = values();

      public static Kind valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Kind(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:perfetto.protos.HeapGraphType.Kind)
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_ = 0L;
    /**
     * <pre>
     * TODO(fmayer): Consider removing this and using the index in the repeaed
     * field to save space.
     * </pre>
     *
     * <code>optional uint64 id = 1;</code>
     * @return Whether the id field is set.
     */
    @java.lang.Override
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * TODO(fmayer): Consider removing this and using the index in the repeaed
     * field to save space.
     * </pre>
     *
     * <code>optional uint64 id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public long getId() {
      return id_;
    }

    public static final int LOCATION_ID_FIELD_NUMBER = 2;
    private long locationId_ = 0L;
    /**
     * <code>optional uint64 location_id = 2;</code>
     * @return Whether the locationId field is set.
     */
    @java.lang.Override
    public boolean hasLocationId() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional uint64 location_id = 2;</code>
     * @return The locationId.
     */
    @java.lang.Override
    public long getLocationId() {
      return locationId_;
    }

    public static final int CLASS_NAME_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile java.lang.Object className_ = "";
    /**
     * <code>optional string class_name = 3;</code>
     * @return Whether the className field is set.
     */
    @java.lang.Override
    public boolean hasClassName() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional string class_name = 3;</code>
     * @return The className.
     */
    @java.lang.Override
    public java.lang.String getClassName() {
      java.lang.Object ref = className_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          className_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string class_name = 3;</code>
     * @return The bytes for className.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getClassNameBytes() {
      java.lang.Object ref = className_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        className_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OBJECT_SIZE_FIELD_NUMBER = 4;
    private long objectSize_ = 0L;
    /**
     * <pre>
     * Size of objects of this type.
     * </pre>
     *
     * <code>optional uint64 object_size = 4;</code>
     * @return Whether the objectSize field is set.
     */
    @java.lang.Override
    public boolean hasObjectSize() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Size of objects of this type.
     * </pre>
     *
     * <code>optional uint64 object_size = 4;</code>
     * @return The objectSize.
     */
    @java.lang.Override
    public long getObjectSize() {
      return objectSize_;
    }

    public static final int SUPERCLASS_ID_FIELD_NUMBER = 5;
    private long superclassId_ = 0L;
    /**
     * <code>optional uint64 superclass_id = 5;</code>
     * @return Whether the superclassId field is set.
     */
    @java.lang.Override
    public boolean hasSuperclassId() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional uint64 superclass_id = 5;</code>
     * @return The superclassId.
     */
    @java.lang.Override
    public long getSuperclassId() {
      return superclassId_;
    }

    public static final int REFERENCE_FIELD_ID_FIELD_NUMBER = 6;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.LongList referenceFieldId_;
    /**
     * <pre>
     * Indices for InternedData.field_names for the names of the fields of
     * instances of this class. This does NOT include the fields from
     * superclasses. The consumer of this data needs to walk all super
     * classes to get a full lists of fields. Objects always write the
     * fields in order of most specific class to the furthest up superclass.
     * </pre>
     *
     * <code>repeated uint64 reference_field_id = 6 [packed = true];</code>
     * @return A list containing the referenceFieldId.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getReferenceFieldIdList() {
      return referenceFieldId_;
    }
    /**
     * <pre>
     * Indices for InternedData.field_names for the names of the fields of
     * instances of this class. This does NOT include the fields from
     * superclasses. The consumer of this data needs to walk all super
     * classes to get a full lists of fields. Objects always write the
     * fields in order of most specific class to the furthest up superclass.
     * </pre>
     *
     * <code>repeated uint64 reference_field_id = 6 [packed = true];</code>
     * @return The count of referenceFieldId.
     */
    public int getReferenceFieldIdCount() {
      return referenceFieldId_.size();
    }
    /**
     * <pre>
     * Indices for InternedData.field_names for the names of the fields of
     * instances of this class. This does NOT include the fields from
     * superclasses. The consumer of this data needs to walk all super
     * classes to get a full lists of fields. Objects always write the
     * fields in order of most specific class to the furthest up superclass.
     * </pre>
     *
     * <code>repeated uint64 reference_field_id = 6 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The referenceFieldId at the given index.
     */
    public long getReferenceFieldId(int index) {
      return referenceFieldId_.getLong(index);
    }
    private int referenceFieldIdMemoizedSerializedSize = -1;

    public static final int KIND_FIELD_NUMBER = 7;
    private int kind_ = 0;
    /**
     * <code>optional .perfetto.protos.HeapGraphType.Kind kind = 7;</code>
     * @return Whether the kind field is set.
     */
    @java.lang.Override public boolean hasKind() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>optional .perfetto.protos.HeapGraphType.Kind kind = 7;</code>
     * @return The kind.
     */
    @java.lang.Override public perfetto.protos.HeapGraphOuterClass.HeapGraphType.Kind getKind() {
      perfetto.protos.HeapGraphOuterClass.HeapGraphType.Kind result = perfetto.protos.HeapGraphOuterClass.HeapGraphType.Kind.forNumber(kind_);
      return result == null ? perfetto.protos.HeapGraphOuterClass.HeapGraphType.Kind.KIND_UNKNOWN : result;
    }

    public static final int CLASSLOADER_ID_FIELD_NUMBER = 8;
    private long classloaderId_ = 0L;
    /**
     * <code>optional uint64 classloader_id = 8;</code>
     * @return Whether the classloaderId field is set.
     */
    @java.lang.Override
    public boolean hasClassloaderId() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <code>optional uint64 classloader_id = 8;</code>
     * @return The classloaderId.
     */
    @java.lang.Override
    public long getClassloaderId() {
      return classloaderId_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt64(1, id_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt64(2, locationId_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, className_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeUInt64(4, objectSize_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeUInt64(5, superclassId_);
      }
      if (getReferenceFieldIdList().size() > 0) {
        output.writeUInt32NoTag(50);
        output.writeUInt32NoTag(referenceFieldIdMemoizedSerializedSize);
      }
      for (int i = 0; i < referenceFieldId_.size(); i++) {
        output.writeUInt64NoTag(referenceFieldId_.getLong(i));
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeEnum(7, kind_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeUInt64(8, classloaderId_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, locationId_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, className_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, objectSize_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, superclassId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < referenceFieldId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt64SizeNoTag(referenceFieldId_.getLong(i));
        }
        size += dataSize;
        if (!getReferenceFieldIdList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        referenceFieldIdMemoizedSerializedSize = dataSize;
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(7, kind_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(8, classloaderId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof perfetto.protos.HeapGraphOuterClass.HeapGraphType)) {
        return super.equals(obj);
      }
      perfetto.protos.HeapGraphOuterClass.HeapGraphType other = (perfetto.protos.HeapGraphOuterClass.HeapGraphType) obj;

      if (hasId() != other.hasId()) return false;
      if (hasId()) {
        if (getId()
            != other.getId()) return false;
      }
      if (hasLocationId() != other.hasLocationId()) return false;
      if (hasLocationId()) {
        if (getLocationId()
            != other.getLocationId()) return false;
      }
      if (hasClassName() != other.hasClassName()) return false;
      if (hasClassName()) {
        if (!getClassName()
            .equals(other.getClassName())) return false;
      }
      if (hasObjectSize() != other.hasObjectSize()) return false;
      if (hasObjectSize()) {
        if (getObjectSize()
            != other.getObjectSize()) return false;
      }
      if (hasSuperclassId() != other.hasSuperclassId()) return false;
      if (hasSuperclassId()) {
        if (getSuperclassId()
            != other.getSuperclassId()) return false;
      }
      if (!getReferenceFieldIdList()
          .equals(other.getReferenceFieldIdList())) return false;
      if (hasKind() != other.hasKind()) return false;
      if (hasKind()) {
        if (kind_ != other.kind_) return false;
      }
      if (hasClassloaderId() != other.hasClassloaderId()) return false;
      if (hasClassloaderId()) {
        if (getClassloaderId()
            != other.getClassloaderId()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasId()) {
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getId());
      }
      if (hasLocationId()) {
        hash = (37 * hash) + LOCATION_ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getLocationId());
      }
      if (hasClassName()) {
        hash = (37 * hash) + CLASS_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getClassName().hashCode();
      }
      if (hasObjectSize()) {
        hash = (37 * hash) + OBJECT_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getObjectSize());
      }
      if (hasSuperclassId()) {
        hash = (37 * hash) + SUPERCLASS_ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getSuperclassId());
      }
      if (getReferenceFieldIdCount() > 0) {
        hash = (37 * hash) + REFERENCE_FIELD_ID_FIELD_NUMBER;
        hash = (53 * hash) + getReferenceFieldIdList().hashCode();
      }
      if (hasKind()) {
        hash = (37 * hash) + KIND_FIELD_NUMBER;
        hash = (53 * hash) + kind_;
      }
      if (hasClassloaderId()) {
        hash = (37 * hash) + CLASSLOADER_ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getClassloaderId());
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static perfetto.protos.HeapGraphOuterClass.HeapGraphType parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.HeapGraphOuterClass.HeapGraphType parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.HeapGraphOuterClass.HeapGraphType parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.HeapGraphOuterClass.HeapGraphType parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.HeapGraphOuterClass.HeapGraphType parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.HeapGraphOuterClass.HeapGraphType parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.HeapGraphOuterClass.HeapGraphType parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.HeapGraphOuterClass.HeapGraphType parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.HeapGraphOuterClass.HeapGraphType parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static perfetto.protos.HeapGraphOuterClass.HeapGraphType parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.HeapGraphOuterClass.HeapGraphType parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.HeapGraphOuterClass.HeapGraphType parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(perfetto.protos.HeapGraphOuterClass.HeapGraphType prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code perfetto.protos.HeapGraphType}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:perfetto.protos.HeapGraphType)
        perfetto.protos.HeapGraphOuterClass.HeapGraphTypeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.HeapGraphOuterClass.internal_static_perfetto_protos_HeapGraphType_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.HeapGraphOuterClass.internal_static_perfetto_protos_HeapGraphType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.HeapGraphOuterClass.HeapGraphType.class, perfetto.protos.HeapGraphOuterClass.HeapGraphType.Builder.class);
      }

      // Construct using perfetto.protos.HeapGraphOuterClass.HeapGraphType.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        id_ = 0L;
        locationId_ = 0L;
        className_ = "";
        objectSize_ = 0L;
        superclassId_ = 0L;
        referenceFieldId_ = emptyLongList();
        kind_ = 0;
        classloaderId_ = 0L;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return perfetto.protos.HeapGraphOuterClass.internal_static_perfetto_protos_HeapGraphType_descriptor;
      }

      @java.lang.Override
      public perfetto.protos.HeapGraphOuterClass.HeapGraphType getDefaultInstanceForType() {
        return perfetto.protos.HeapGraphOuterClass.HeapGraphType.getDefaultInstance();
      }

      @java.lang.Override
      public perfetto.protos.HeapGraphOuterClass.HeapGraphType build() {
        perfetto.protos.HeapGraphOuterClass.HeapGraphType result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public perfetto.protos.HeapGraphOuterClass.HeapGraphType buildPartial() {
        perfetto.protos.HeapGraphOuterClass.HeapGraphType result = new perfetto.protos.HeapGraphOuterClass.HeapGraphType(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(perfetto.protos.HeapGraphOuterClass.HeapGraphType result) {
        if (((bitField0_ & 0x00000020) != 0)) {
          referenceFieldId_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.referenceFieldId_ = referenceFieldId_;
      }

      private void buildPartial0(perfetto.protos.HeapGraphOuterClass.HeapGraphType result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.id_ = id_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.locationId_ = locationId_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.className_ = className_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.objectSize_ = objectSize_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.superclassId_ = superclassId_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.kind_ = kind_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.classloaderId_ = classloaderId_;
          to_bitField0_ |= 0x00000040;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof perfetto.protos.HeapGraphOuterClass.HeapGraphType) {
          return mergeFrom((perfetto.protos.HeapGraphOuterClass.HeapGraphType)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(perfetto.protos.HeapGraphOuterClass.HeapGraphType other) {
        if (other == perfetto.protos.HeapGraphOuterClass.HeapGraphType.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasLocationId()) {
          setLocationId(other.getLocationId());
        }
        if (other.hasClassName()) {
          className_ = other.className_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        if (other.hasObjectSize()) {
          setObjectSize(other.getObjectSize());
        }
        if (other.hasSuperclassId()) {
          setSuperclassId(other.getSuperclassId());
        }
        if (!other.referenceFieldId_.isEmpty()) {
          if (referenceFieldId_.isEmpty()) {
            referenceFieldId_ = other.referenceFieldId_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureReferenceFieldIdIsMutable();
            referenceFieldId_.addAll(other.referenceFieldId_);
          }
          onChanged();
        }
        if (other.hasKind()) {
          setKind(other.getKind());
        }
        if (other.hasClassloaderId()) {
          setClassloaderId(other.getClassloaderId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                id_ = input.readUInt64();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                locationId_ = input.readUInt64();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 26: {
                className_ = input.readBytes();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 32: {
                objectSize_ = input.readUInt64();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                superclassId_ = input.readUInt64();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                long v = input.readUInt64();
                ensureReferenceFieldIdIsMutable();
                referenceFieldId_.addLong(v);
                break;
              } // case 48
              case 50: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureReferenceFieldIdIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  referenceFieldId_.addLong(input.readUInt64());
                }
                input.popLimit(limit);
                break;
              } // case 50
              case 56: {
                int tmpRaw = input.readEnum();
                perfetto.protos.HeapGraphOuterClass.HeapGraphType.Kind tmpValue =
                    perfetto.protos.HeapGraphOuterClass.HeapGraphType.Kind.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(7, tmpRaw);
                } else {
                  kind_ = tmpRaw;
                  bitField0_ |= 0x00000040;
                }
                break;
              } // case 56
              case 64: {
                classloaderId_ = input.readUInt64();
                bitField0_ |= 0x00000080;
                break;
              } // case 64
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private long id_ ;
      /**
       * <pre>
       * TODO(fmayer): Consider removing this and using the index in the repeaed
       * field to save space.
       * </pre>
       *
       * <code>optional uint64 id = 1;</code>
       * @return Whether the id field is set.
       */
      @java.lang.Override
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * TODO(fmayer): Consider removing this and using the index in the repeaed
       * field to save space.
       * </pre>
       *
       * <code>optional uint64 id = 1;</code>
       * @return The id.
       */
      @java.lang.Override
      public long getId() {
        return id_;
      }
      /**
       * <pre>
       * TODO(fmayer): Consider removing this and using the index in the repeaed
       * field to save space.
       * </pre>
       *
       * <code>optional uint64 id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(long value) {
        
        id_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * TODO(fmayer): Consider removing this and using the index in the repeaed
       * field to save space.
       * </pre>
       *
       * <code>optional uint64 id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        onChanged();
        return this;
      }

      private long locationId_ ;
      /**
       * <code>optional uint64 location_id = 2;</code>
       * @return Whether the locationId field is set.
       */
      @java.lang.Override
      public boolean hasLocationId() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint64 location_id = 2;</code>
       * @return The locationId.
       */
      @java.lang.Override
      public long getLocationId() {
        return locationId_;
      }
      /**
       * <code>optional uint64 location_id = 2;</code>
       * @param value The locationId to set.
       * @return This builder for chaining.
       */
      public Builder setLocationId(long value) {
        
        locationId_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 location_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearLocationId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        locationId_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object className_ = "";
      /**
       * <code>optional string class_name = 3;</code>
       * @return Whether the className field is set.
       */
      public boolean hasClassName() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional string class_name = 3;</code>
       * @return The className.
       */
      public java.lang.String getClassName() {
        java.lang.Object ref = className_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            className_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string class_name = 3;</code>
       * @return The bytes for className.
       */
      public com.google.protobuf.ByteString
          getClassNameBytes() {
        java.lang.Object ref = className_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          className_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string class_name = 3;</code>
       * @param value The className to set.
       * @return This builder for chaining.
       */
      public Builder setClassName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        className_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional string class_name = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearClassName() {
        className_ = getDefaultInstance().getClassName();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <code>optional string class_name = 3;</code>
       * @param value The bytes for className to set.
       * @return This builder for chaining.
       */
      public Builder setClassNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        className_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      private long objectSize_ ;
      /**
       * <pre>
       * Size of objects of this type.
       * </pre>
       *
       * <code>optional uint64 object_size = 4;</code>
       * @return Whether the objectSize field is set.
       */
      @java.lang.Override
      public boolean hasObjectSize() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Size of objects of this type.
       * </pre>
       *
       * <code>optional uint64 object_size = 4;</code>
       * @return The objectSize.
       */
      @java.lang.Override
      public long getObjectSize() {
        return objectSize_;
      }
      /**
       * <pre>
       * Size of objects of this type.
       * </pre>
       *
       * <code>optional uint64 object_size = 4;</code>
       * @param value The objectSize to set.
       * @return This builder for chaining.
       */
      public Builder setObjectSize(long value) {
        
        objectSize_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Size of objects of this type.
       * </pre>
       *
       * <code>optional uint64 object_size = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearObjectSize() {
        bitField0_ = (bitField0_ & ~0x00000008);
        objectSize_ = 0L;
        onChanged();
        return this;
      }

      private long superclassId_ ;
      /**
       * <code>optional uint64 superclass_id = 5;</code>
       * @return Whether the superclassId field is set.
       */
      @java.lang.Override
      public boolean hasSuperclassId() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional uint64 superclass_id = 5;</code>
       * @return The superclassId.
       */
      @java.lang.Override
      public long getSuperclassId() {
        return superclassId_;
      }
      /**
       * <code>optional uint64 superclass_id = 5;</code>
       * @param value The superclassId to set.
       * @return This builder for chaining.
       */
      public Builder setSuperclassId(long value) {
        
        superclassId_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 superclass_id = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearSuperclassId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        superclassId_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.LongList referenceFieldId_ = emptyLongList();
      private void ensureReferenceFieldIdIsMutable() {
        if (!((bitField0_ & 0x00000020) != 0)) {
          referenceFieldId_ = mutableCopy(referenceFieldId_);
          bitField0_ |= 0x00000020;
        }
      }
      /**
       * <pre>
       * Indices for InternedData.field_names for the names of the fields of
       * instances of this class. This does NOT include the fields from
       * superclasses. The consumer of this data needs to walk all super
       * classes to get a full lists of fields. Objects always write the
       * fields in order of most specific class to the furthest up superclass.
       * </pre>
       *
       * <code>repeated uint64 reference_field_id = 6 [packed = true];</code>
       * @return A list containing the referenceFieldId.
       */
      public java.util.List<java.lang.Long>
          getReferenceFieldIdList() {
        return ((bitField0_ & 0x00000020) != 0) ?
                 java.util.Collections.unmodifiableList(referenceFieldId_) : referenceFieldId_;
      }
      /**
       * <pre>
       * Indices for InternedData.field_names for the names of the fields of
       * instances of this class. This does NOT include the fields from
       * superclasses. The consumer of this data needs to walk all super
       * classes to get a full lists of fields. Objects always write the
       * fields in order of most specific class to the furthest up superclass.
       * </pre>
       *
       * <code>repeated uint64 reference_field_id = 6 [packed = true];</code>
       * @return The count of referenceFieldId.
       */
      public int getReferenceFieldIdCount() {
        return referenceFieldId_.size();
      }
      /**
       * <pre>
       * Indices for InternedData.field_names for the names of the fields of
       * instances of this class. This does NOT include the fields from
       * superclasses. The consumer of this data needs to walk all super
       * classes to get a full lists of fields. Objects always write the
       * fields in order of most specific class to the furthest up superclass.
       * </pre>
       *
       * <code>repeated uint64 reference_field_id = 6 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The referenceFieldId at the given index.
       */
      public long getReferenceFieldId(int index) {
        return referenceFieldId_.getLong(index);
      }
      /**
       * <pre>
       * Indices for InternedData.field_names for the names of the fields of
       * instances of this class. This does NOT include the fields from
       * superclasses. The consumer of this data needs to walk all super
       * classes to get a full lists of fields. Objects always write the
       * fields in order of most specific class to the furthest up superclass.
       * </pre>
       *
       * <code>repeated uint64 reference_field_id = 6 [packed = true];</code>
       * @param index The index to set the value at.
       * @param value The referenceFieldId to set.
       * @return This builder for chaining.
       */
      public Builder setReferenceFieldId(
          int index, long value) {
        
        ensureReferenceFieldIdIsMutable();
        referenceFieldId_.setLong(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Indices for InternedData.field_names for the names of the fields of
       * instances of this class. This does NOT include the fields from
       * superclasses. The consumer of this data needs to walk all super
       * classes to get a full lists of fields. Objects always write the
       * fields in order of most specific class to the furthest up superclass.
       * </pre>
       *
       * <code>repeated uint64 reference_field_id = 6 [packed = true];</code>
       * @param value The referenceFieldId to add.
       * @return This builder for chaining.
       */
      public Builder addReferenceFieldId(long value) {
        
        ensureReferenceFieldIdIsMutable();
        referenceFieldId_.addLong(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Indices for InternedData.field_names for the names of the fields of
       * instances of this class. This does NOT include the fields from
       * superclasses. The consumer of this data needs to walk all super
       * classes to get a full lists of fields. Objects always write the
       * fields in order of most specific class to the furthest up superclass.
       * </pre>
       *
       * <code>repeated uint64 reference_field_id = 6 [packed = true];</code>
       * @param values The referenceFieldId to add.
       * @return This builder for chaining.
       */
      public Builder addAllReferenceFieldId(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureReferenceFieldIdIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, referenceFieldId_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Indices for InternedData.field_names for the names of the fields of
       * instances of this class. This does NOT include the fields from
       * superclasses. The consumer of this data needs to walk all super
       * classes to get a full lists of fields. Objects always write the
       * fields in order of most specific class to the furthest up superclass.
       * </pre>
       *
       * <code>repeated uint64 reference_field_id = 6 [packed = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearReferenceFieldId() {
        referenceFieldId_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      private int kind_ = 0;
      /**
       * <code>optional .perfetto.protos.HeapGraphType.Kind kind = 7;</code>
       * @return Whether the kind field is set.
       */
      @java.lang.Override public boolean hasKind() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional .perfetto.protos.HeapGraphType.Kind kind = 7;</code>
       * @return The kind.
       */
      @java.lang.Override
      public perfetto.protos.HeapGraphOuterClass.HeapGraphType.Kind getKind() {
        perfetto.protos.HeapGraphOuterClass.HeapGraphType.Kind result = perfetto.protos.HeapGraphOuterClass.HeapGraphType.Kind.forNumber(kind_);
        return result == null ? perfetto.protos.HeapGraphOuterClass.HeapGraphType.Kind.KIND_UNKNOWN : result;
      }
      /**
       * <code>optional .perfetto.protos.HeapGraphType.Kind kind = 7;</code>
       * @param value The kind to set.
       * @return This builder for chaining.
       */
      public Builder setKind(perfetto.protos.HeapGraphOuterClass.HeapGraphType.Kind value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000040;
        kind_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .perfetto.protos.HeapGraphType.Kind kind = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearKind() {
        bitField0_ = (bitField0_ & ~0x00000040);
        kind_ = 0;
        onChanged();
        return this;
      }

      private long classloaderId_ ;
      /**
       * <code>optional uint64 classloader_id = 8;</code>
       * @return Whether the classloaderId field is set.
       */
      @java.lang.Override
      public boolean hasClassloaderId() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <code>optional uint64 classloader_id = 8;</code>
       * @return The classloaderId.
       */
      @java.lang.Override
      public long getClassloaderId() {
        return classloaderId_;
      }
      /**
       * <code>optional uint64 classloader_id = 8;</code>
       * @param value The classloaderId to set.
       * @return This builder for chaining.
       */
      public Builder setClassloaderId(long value) {
        
        classloaderId_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 classloader_id = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearClassloaderId() {
        bitField0_ = (bitField0_ & ~0x00000080);
        classloaderId_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:perfetto.protos.HeapGraphType)
    }

    // @@protoc_insertion_point(class_scope:perfetto.protos.HeapGraphType)
    private static final perfetto.protos.HeapGraphOuterClass.HeapGraphType DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new perfetto.protos.HeapGraphOuterClass.HeapGraphType();
    }

    public static perfetto.protos.HeapGraphOuterClass.HeapGraphType getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<HeapGraphType>
        PARSER = new com.google.protobuf.AbstractParser<HeapGraphType>() {
      @java.lang.Override
      public HeapGraphType parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<HeapGraphType> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<HeapGraphType> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public perfetto.protos.HeapGraphOuterClass.HeapGraphType getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface HeapGraphObjectOrBuilder extends
      // @@protoc_insertion_point(interface_extends:perfetto.protos.HeapGraphObject)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint64 id = 1;</code>
     * @return Whether the id field is set.
     */
    boolean hasId();
    /**
     * <code>uint64 id = 1;</code>
     * @return The id.
     */
    long getId();

    /**
     * <code>uint64 id_delta = 7;</code>
     * @return Whether the idDelta field is set.
     */
    boolean hasIdDelta();
    /**
     * <code>uint64 id_delta = 7;</code>
     * @return The idDelta.
     */
    long getIdDelta();

    /**
     * <pre>
     * Index for InternedData.types for the name of the type of this object.
     * </pre>
     *
     * <code>optional uint64 type_id = 2;</code>
     * @return Whether the typeId field is set.
     */
    boolean hasTypeId();
    /**
     * <pre>
     * Index for InternedData.types for the name of the type of this object.
     * </pre>
     *
     * <code>optional uint64 type_id = 2;</code>
     * @return The typeId.
     */
    long getTypeId();

    /**
     * <pre>
     * Bytes occupied by this objects.
     * </pre>
     *
     * <code>optional uint64 self_size = 3;</code>
     * @return Whether the selfSize field is set.
     */
    boolean hasSelfSize();
    /**
     * <pre>
     * Bytes occupied by this objects.
     * </pre>
     *
     * <code>optional uint64 self_size = 3;</code>
     * @return The selfSize.
     */
    long getSelfSize();

    /**
     * <pre>
     * Add this to all non-zero values in reference_object_id. This is used to
     * get more compact varint encoding.
     * The name is confusing, but this has always been used as a base for
     * reference_object_id. The field should be named reference_object_id_base.
     * </pre>
     *
     * <code>optional uint64 reference_field_id_base = 6;</code>
     * @return Whether the referenceFieldIdBase field is set.
     */
    boolean hasReferenceFieldIdBase();
    /**
     * <pre>
     * Add this to all non-zero values in reference_object_id. This is used to
     * get more compact varint encoding.
     * The name is confusing, but this has always been used as a base for
     * reference_object_id. The field should be named reference_object_id_base.
     * </pre>
     *
     * <code>optional uint64 reference_field_id_base = 6;</code>
     * @return The referenceFieldIdBase.
     */
    long getReferenceFieldIdBase();

    /**
     * <pre>
     * Indices for InternedData.field_names for the name of the field referring
     * to the object. For Android S+ and for instances of normal classes (e.g.
     * not instances of java.lang.Class or arrays), this is instead set in the
     * corresponding HeapGraphType, and this is left empty.
     * </pre>
     *
     * <code>repeated uint64 reference_field_id = 4 [packed = true];</code>
     * @return A list containing the referenceFieldId.
     */
    java.util.List<java.lang.Long> getReferenceFieldIdList();
    /**
     * <pre>
     * Indices for InternedData.field_names for the name of the field referring
     * to the object. For Android S+ and for instances of normal classes (e.g.
     * not instances of java.lang.Class or arrays), this is instead set in the
     * corresponding HeapGraphType, and this is left empty.
     * </pre>
     *
     * <code>repeated uint64 reference_field_id = 4 [packed = true];</code>
     * @return The count of referenceFieldId.
     */
    int getReferenceFieldIdCount();
    /**
     * <pre>
     * Indices for InternedData.field_names for the name of the field referring
     * to the object. For Android S+ and for instances of normal classes (e.g.
     * not instances of java.lang.Class or arrays), this is instead set in the
     * corresponding HeapGraphType, and this is left empty.
     * </pre>
     *
     * <code>repeated uint64 reference_field_id = 4 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The referenceFieldId at the given index.
     */
    long getReferenceFieldId(int index);

    /**
     * <pre>
     * Ids of the Object that is referred to.
     * </pre>
     *
     * <code>repeated uint64 reference_object_id = 5 [packed = true];</code>
     * @return A list containing the referenceObjectId.
     */
    java.util.List<java.lang.Long> getReferenceObjectIdList();
    /**
     * <pre>
     * Ids of the Object that is referred to.
     * </pre>
     *
     * <code>repeated uint64 reference_object_id = 5 [packed = true];</code>
     * @return The count of referenceObjectId.
     */
    int getReferenceObjectIdCount();
    /**
     * <pre>
     * Ids of the Object that is referred to.
     * </pre>
     *
     * <code>repeated uint64 reference_object_id = 5 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The referenceObjectId at the given index.
     */
    long getReferenceObjectId(int index);

    /**
     * <pre>
     * If this object is an instance of `libcore.util.NativeAllocationRegistry`,
     * the value of the `size` field.
     * N.B. This is not the native size of this object.
     * </pre>
     *
     * <code>optional int64 native_allocation_registry_size_field = 8;</code>
     * @return Whether the nativeAllocationRegistrySizeField field is set.
     */
    boolean hasNativeAllocationRegistrySizeField();
    /**
     * <pre>
     * If this object is an instance of `libcore.util.NativeAllocationRegistry`,
     * the value of the `size` field.
     * N.B. This is not the native size of this object.
     * </pre>
     *
     * <code>optional int64 native_allocation_registry_size_field = 8;</code>
     * @return The nativeAllocationRegistrySizeField.
     */
    long getNativeAllocationRegistrySizeField();

    public perfetto.protos.HeapGraphOuterClass.HeapGraphObject.IdentifierCase getIdentifierCase();
  }
  /**
   * Protobuf type {@code perfetto.protos.HeapGraphObject}
   */
  public static final class HeapGraphObject extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:perfetto.protos.HeapGraphObject)
      HeapGraphObjectOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use HeapGraphObject.newBuilder() to construct.
    private HeapGraphObject(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private HeapGraphObject() {
      referenceFieldId_ = emptyLongList();
      referenceObjectId_ = emptyLongList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new HeapGraphObject();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return perfetto.protos.HeapGraphOuterClass.internal_static_perfetto_protos_HeapGraphObject_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return perfetto.protos.HeapGraphOuterClass.internal_static_perfetto_protos_HeapGraphObject_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              perfetto.protos.HeapGraphOuterClass.HeapGraphObject.class, perfetto.protos.HeapGraphOuterClass.HeapGraphObject.Builder.class);
    }

    private int bitField0_;
    private int identifierCase_ = 0;
    private java.lang.Object identifier_;
    public enum IdentifierCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      ID(1),
      ID_DELTA(7),
      IDENTIFIER_NOT_SET(0);
      private final int value;
      private IdentifierCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static IdentifierCase valueOf(int value) {
        return forNumber(value);
      }

      public static IdentifierCase forNumber(int value) {
        switch (value) {
          case 1: return ID;
          case 7: return ID_DELTA;
          case 0: return IDENTIFIER_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public IdentifierCase
    getIdentifierCase() {
      return IdentifierCase.forNumber(
          identifierCase_);
    }

    public static final int ID_FIELD_NUMBER = 1;
    /**
     * <code>uint64 id = 1;</code>
     * @return Whether the id field is set.
     */
    @java.lang.Override
    public boolean hasId() {
      return identifierCase_ == 1;
    }
    /**
     * <code>uint64 id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public long getId() {
      if (identifierCase_ == 1) {
        return (java.lang.Long) identifier_;
      }
      return 0L;
    }

    public static final int ID_DELTA_FIELD_NUMBER = 7;
    /**
     * <code>uint64 id_delta = 7;</code>
     * @return Whether the idDelta field is set.
     */
    @java.lang.Override
    public boolean hasIdDelta() {
      return identifierCase_ == 7;
    }
    /**
     * <code>uint64 id_delta = 7;</code>
     * @return The idDelta.
     */
    @java.lang.Override
    public long getIdDelta() {
      if (identifierCase_ == 7) {
        return (java.lang.Long) identifier_;
      }
      return 0L;
    }

    public static final int TYPE_ID_FIELD_NUMBER = 2;
    private long typeId_ = 0L;
    /**
     * <pre>
     * Index for InternedData.types for the name of the type of this object.
     * </pre>
     *
     * <code>optional uint64 type_id = 2;</code>
     * @return Whether the typeId field is set.
     */
    @java.lang.Override
    public boolean hasTypeId() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Index for InternedData.types for the name of the type of this object.
     * </pre>
     *
     * <code>optional uint64 type_id = 2;</code>
     * @return The typeId.
     */
    @java.lang.Override
    public long getTypeId() {
      return typeId_;
    }

    public static final int SELF_SIZE_FIELD_NUMBER = 3;
    private long selfSize_ = 0L;
    /**
     * <pre>
     * Bytes occupied by this objects.
     * </pre>
     *
     * <code>optional uint64 self_size = 3;</code>
     * @return Whether the selfSize field is set.
     */
    @java.lang.Override
    public boolean hasSelfSize() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Bytes occupied by this objects.
     * </pre>
     *
     * <code>optional uint64 self_size = 3;</code>
     * @return The selfSize.
     */
    @java.lang.Override
    public long getSelfSize() {
      return selfSize_;
    }

    public static final int REFERENCE_FIELD_ID_BASE_FIELD_NUMBER = 6;
    private long referenceFieldIdBase_ = 0L;
    /**
     * <pre>
     * Add this to all non-zero values in reference_object_id. This is used to
     * get more compact varint encoding.
     * The name is confusing, but this has always been used as a base for
     * reference_object_id. The field should be named reference_object_id_base.
     * </pre>
     *
     * <code>optional uint64 reference_field_id_base = 6;</code>
     * @return Whether the referenceFieldIdBase field is set.
     */
    @java.lang.Override
    public boolean hasReferenceFieldIdBase() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Add this to all non-zero values in reference_object_id. This is used to
     * get more compact varint encoding.
     * The name is confusing, but this has always been used as a base for
     * reference_object_id. The field should be named reference_object_id_base.
     * </pre>
     *
     * <code>optional uint64 reference_field_id_base = 6;</code>
     * @return The referenceFieldIdBase.
     */
    @java.lang.Override
    public long getReferenceFieldIdBase() {
      return referenceFieldIdBase_;
    }

    public static final int REFERENCE_FIELD_ID_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.LongList referenceFieldId_;
    /**
     * <pre>
     * Indices for InternedData.field_names for the name of the field referring
     * to the object. For Android S+ and for instances of normal classes (e.g.
     * not instances of java.lang.Class or arrays), this is instead set in the
     * corresponding HeapGraphType, and this is left empty.
     * </pre>
     *
     * <code>repeated uint64 reference_field_id = 4 [packed = true];</code>
     * @return A list containing the referenceFieldId.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getReferenceFieldIdList() {
      return referenceFieldId_;
    }
    /**
     * <pre>
     * Indices for InternedData.field_names for the name of the field referring
     * to the object. For Android S+ and for instances of normal classes (e.g.
     * not instances of java.lang.Class or arrays), this is instead set in the
     * corresponding HeapGraphType, and this is left empty.
     * </pre>
     *
     * <code>repeated uint64 reference_field_id = 4 [packed = true];</code>
     * @return The count of referenceFieldId.
     */
    public int getReferenceFieldIdCount() {
      return referenceFieldId_.size();
    }
    /**
     * <pre>
     * Indices for InternedData.field_names for the name of the field referring
     * to the object. For Android S+ and for instances of normal classes (e.g.
     * not instances of java.lang.Class or arrays), this is instead set in the
     * corresponding HeapGraphType, and this is left empty.
     * </pre>
     *
     * <code>repeated uint64 reference_field_id = 4 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The referenceFieldId at the given index.
     */
    public long getReferenceFieldId(int index) {
      return referenceFieldId_.getLong(index);
    }
    private int referenceFieldIdMemoizedSerializedSize = -1;

    public static final int REFERENCE_OBJECT_ID_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.LongList referenceObjectId_;
    /**
     * <pre>
     * Ids of the Object that is referred to.
     * </pre>
     *
     * <code>repeated uint64 reference_object_id = 5 [packed = true];</code>
     * @return A list containing the referenceObjectId.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getReferenceObjectIdList() {
      return referenceObjectId_;
    }
    /**
     * <pre>
     * Ids of the Object that is referred to.
     * </pre>
     *
     * <code>repeated uint64 reference_object_id = 5 [packed = true];</code>
     * @return The count of referenceObjectId.
     */
    public int getReferenceObjectIdCount() {
      return referenceObjectId_.size();
    }
    /**
     * <pre>
     * Ids of the Object that is referred to.
     * </pre>
     *
     * <code>repeated uint64 reference_object_id = 5 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The referenceObjectId at the given index.
     */
    public long getReferenceObjectId(int index) {
      return referenceObjectId_.getLong(index);
    }
    private int referenceObjectIdMemoizedSerializedSize = -1;

    public static final int NATIVE_ALLOCATION_REGISTRY_SIZE_FIELD_FIELD_NUMBER = 8;
    private long nativeAllocationRegistrySizeField_ = 0L;
    /**
     * <pre>
     * If this object is an instance of `libcore.util.NativeAllocationRegistry`,
     * the value of the `size` field.
     * N.B. This is not the native size of this object.
     * </pre>
     *
     * <code>optional int64 native_allocation_registry_size_field = 8;</code>
     * @return Whether the nativeAllocationRegistrySizeField field is set.
     */
    @java.lang.Override
    public boolean hasNativeAllocationRegistrySizeField() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * If this object is an instance of `libcore.util.NativeAllocationRegistry`,
     * the value of the `size` field.
     * N.B. This is not the native size of this object.
     * </pre>
     *
     * <code>optional int64 native_allocation_registry_size_field = 8;</code>
     * @return The nativeAllocationRegistrySizeField.
     */
    @java.lang.Override
    public long getNativeAllocationRegistrySizeField() {
      return nativeAllocationRegistrySizeField_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (identifierCase_ == 1) {
        output.writeUInt64(
            1, (long)((java.lang.Long) identifier_));
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeUInt64(2, typeId_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeUInt64(3, selfSize_);
      }
      if (getReferenceFieldIdList().size() > 0) {
        output.writeUInt32NoTag(34);
        output.writeUInt32NoTag(referenceFieldIdMemoizedSerializedSize);
      }
      for (int i = 0; i < referenceFieldId_.size(); i++) {
        output.writeUInt64NoTag(referenceFieldId_.getLong(i));
      }
      if (getReferenceObjectIdList().size() > 0) {
        output.writeUInt32NoTag(42);
        output.writeUInt32NoTag(referenceObjectIdMemoizedSerializedSize);
      }
      for (int i = 0; i < referenceObjectId_.size(); i++) {
        output.writeUInt64NoTag(referenceObjectId_.getLong(i));
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeUInt64(6, referenceFieldIdBase_);
      }
      if (identifierCase_ == 7) {
        output.writeUInt64(
            7, (long)((java.lang.Long) identifier_));
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeInt64(8, nativeAllocationRegistrySizeField_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (identifierCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(
              1, (long)((java.lang.Long) identifier_));
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, typeId_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, selfSize_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < referenceFieldId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt64SizeNoTag(referenceFieldId_.getLong(i));
        }
        size += dataSize;
        if (!getReferenceFieldIdList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        referenceFieldIdMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < referenceObjectId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt64SizeNoTag(referenceObjectId_.getLong(i));
        }
        size += dataSize;
        if (!getReferenceObjectIdList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        referenceObjectIdMemoizedSerializedSize = dataSize;
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, referenceFieldIdBase_);
      }
      if (identifierCase_ == 7) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(
              7, (long)((java.lang.Long) identifier_));
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(8, nativeAllocationRegistrySizeField_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof perfetto.protos.HeapGraphOuterClass.HeapGraphObject)) {
        return super.equals(obj);
      }
      perfetto.protos.HeapGraphOuterClass.HeapGraphObject other = (perfetto.protos.HeapGraphOuterClass.HeapGraphObject) obj;

      if (hasTypeId() != other.hasTypeId()) return false;
      if (hasTypeId()) {
        if (getTypeId()
            != other.getTypeId()) return false;
      }
      if (hasSelfSize() != other.hasSelfSize()) return false;
      if (hasSelfSize()) {
        if (getSelfSize()
            != other.getSelfSize()) return false;
      }
      if (hasReferenceFieldIdBase() != other.hasReferenceFieldIdBase()) return false;
      if (hasReferenceFieldIdBase()) {
        if (getReferenceFieldIdBase()
            != other.getReferenceFieldIdBase()) return false;
      }
      if (!getReferenceFieldIdList()
          .equals(other.getReferenceFieldIdList())) return false;
      if (!getReferenceObjectIdList()
          .equals(other.getReferenceObjectIdList())) return false;
      if (hasNativeAllocationRegistrySizeField() != other.hasNativeAllocationRegistrySizeField()) return false;
      if (hasNativeAllocationRegistrySizeField()) {
        if (getNativeAllocationRegistrySizeField()
            != other.getNativeAllocationRegistrySizeField()) return false;
      }
      if (!getIdentifierCase().equals(other.getIdentifierCase())) return false;
      switch (identifierCase_) {
        case 1:
          if (getId()
              != other.getId()) return false;
          break;
        case 7:
          if (getIdDelta()
              != other.getIdDelta()) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTypeId()) {
        hash = (37 * hash) + TYPE_ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getTypeId());
      }
      if (hasSelfSize()) {
        hash = (37 * hash) + SELF_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getSelfSize());
      }
      if (hasReferenceFieldIdBase()) {
        hash = (37 * hash) + REFERENCE_FIELD_ID_BASE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getReferenceFieldIdBase());
      }
      if (getReferenceFieldIdCount() > 0) {
        hash = (37 * hash) + REFERENCE_FIELD_ID_FIELD_NUMBER;
        hash = (53 * hash) + getReferenceFieldIdList().hashCode();
      }
      if (getReferenceObjectIdCount() > 0) {
        hash = (37 * hash) + REFERENCE_OBJECT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getReferenceObjectIdList().hashCode();
      }
      if (hasNativeAllocationRegistrySizeField()) {
        hash = (37 * hash) + NATIVE_ALLOCATION_REGISTRY_SIZE_FIELD_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getNativeAllocationRegistrySizeField());
      }
      switch (identifierCase_) {
        case 1:
          hash = (37 * hash) + ID_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getId());
          break;
        case 7:
          hash = (37 * hash) + ID_DELTA_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getIdDelta());
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static perfetto.protos.HeapGraphOuterClass.HeapGraphObject parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.HeapGraphOuterClass.HeapGraphObject parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.HeapGraphOuterClass.HeapGraphObject parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.HeapGraphOuterClass.HeapGraphObject parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.HeapGraphOuterClass.HeapGraphObject parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.HeapGraphOuterClass.HeapGraphObject parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.HeapGraphOuterClass.HeapGraphObject parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.HeapGraphOuterClass.HeapGraphObject parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.HeapGraphOuterClass.HeapGraphObject parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static perfetto.protos.HeapGraphOuterClass.HeapGraphObject parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.HeapGraphOuterClass.HeapGraphObject parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.HeapGraphOuterClass.HeapGraphObject parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(perfetto.protos.HeapGraphOuterClass.HeapGraphObject prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code perfetto.protos.HeapGraphObject}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:perfetto.protos.HeapGraphObject)
        perfetto.protos.HeapGraphOuterClass.HeapGraphObjectOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.HeapGraphOuterClass.internal_static_perfetto_protos_HeapGraphObject_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.HeapGraphOuterClass.internal_static_perfetto_protos_HeapGraphObject_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.HeapGraphOuterClass.HeapGraphObject.class, perfetto.protos.HeapGraphOuterClass.HeapGraphObject.Builder.class);
      }

      // Construct using perfetto.protos.HeapGraphOuterClass.HeapGraphObject.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        typeId_ = 0L;
        selfSize_ = 0L;
        referenceFieldIdBase_ = 0L;
        referenceFieldId_ = emptyLongList();
        referenceObjectId_ = emptyLongList();
        nativeAllocationRegistrySizeField_ = 0L;
        identifierCase_ = 0;
        identifier_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return perfetto.protos.HeapGraphOuterClass.internal_static_perfetto_protos_HeapGraphObject_descriptor;
      }

      @java.lang.Override
      public perfetto.protos.HeapGraphOuterClass.HeapGraphObject getDefaultInstanceForType() {
        return perfetto.protos.HeapGraphOuterClass.HeapGraphObject.getDefaultInstance();
      }

      @java.lang.Override
      public perfetto.protos.HeapGraphOuterClass.HeapGraphObject build() {
        perfetto.protos.HeapGraphOuterClass.HeapGraphObject result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public perfetto.protos.HeapGraphOuterClass.HeapGraphObject buildPartial() {
        perfetto.protos.HeapGraphOuterClass.HeapGraphObject result = new perfetto.protos.HeapGraphOuterClass.HeapGraphObject(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        buildPartialOneofs(result);
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(perfetto.protos.HeapGraphOuterClass.HeapGraphObject result) {
        if (((bitField0_ & 0x00000020) != 0)) {
          referenceFieldId_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.referenceFieldId_ = referenceFieldId_;
        if (((bitField0_ & 0x00000040) != 0)) {
          referenceObjectId_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.referenceObjectId_ = referenceObjectId_;
      }

      private void buildPartial0(perfetto.protos.HeapGraphOuterClass.HeapGraphObject result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.typeId_ = typeId_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.selfSize_ = selfSize_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.referenceFieldIdBase_ = referenceFieldIdBase_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.nativeAllocationRegistrySizeField_ = nativeAllocationRegistrySizeField_;
          to_bitField0_ |= 0x00000020;
        }
        result.bitField0_ |= to_bitField0_;
      }

      private void buildPartialOneofs(perfetto.protos.HeapGraphOuterClass.HeapGraphObject result) {
        result.identifierCase_ = identifierCase_;
        result.identifier_ = this.identifier_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof perfetto.protos.HeapGraphOuterClass.HeapGraphObject) {
          return mergeFrom((perfetto.protos.HeapGraphOuterClass.HeapGraphObject)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(perfetto.protos.HeapGraphOuterClass.HeapGraphObject other) {
        if (other == perfetto.protos.HeapGraphOuterClass.HeapGraphObject.getDefaultInstance()) return this;
        if (other.hasTypeId()) {
          setTypeId(other.getTypeId());
        }
        if (other.hasSelfSize()) {
          setSelfSize(other.getSelfSize());
        }
        if (other.hasReferenceFieldIdBase()) {
          setReferenceFieldIdBase(other.getReferenceFieldIdBase());
        }
        if (!other.referenceFieldId_.isEmpty()) {
          if (referenceFieldId_.isEmpty()) {
            referenceFieldId_ = other.referenceFieldId_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureReferenceFieldIdIsMutable();
            referenceFieldId_.addAll(other.referenceFieldId_);
          }
          onChanged();
        }
        if (!other.referenceObjectId_.isEmpty()) {
          if (referenceObjectId_.isEmpty()) {
            referenceObjectId_ = other.referenceObjectId_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureReferenceObjectIdIsMutable();
            referenceObjectId_.addAll(other.referenceObjectId_);
          }
          onChanged();
        }
        if (other.hasNativeAllocationRegistrySizeField()) {
          setNativeAllocationRegistrySizeField(other.getNativeAllocationRegistrySizeField());
        }
        switch (other.getIdentifierCase()) {
          case ID: {
            setId(other.getId());
            break;
          }
          case ID_DELTA: {
            setIdDelta(other.getIdDelta());
            break;
          }
          case IDENTIFIER_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                identifier_ = input.readUInt64();
                identifierCase_ = 1;
                break;
              } // case 8
              case 16: {
                typeId_ = input.readUInt64();
                bitField0_ |= 0x00000004;
                break;
              } // case 16
              case 24: {
                selfSize_ = input.readUInt64();
                bitField0_ |= 0x00000008;
                break;
              } // case 24
              case 32: {
                long v = input.readUInt64();
                ensureReferenceFieldIdIsMutable();
                referenceFieldId_.addLong(v);
                break;
              } // case 32
              case 34: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureReferenceFieldIdIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  referenceFieldId_.addLong(input.readUInt64());
                }
                input.popLimit(limit);
                break;
              } // case 34
              case 40: {
                long v = input.readUInt64();
                ensureReferenceObjectIdIsMutable();
                referenceObjectId_.addLong(v);
                break;
              } // case 40
              case 42: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureReferenceObjectIdIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  referenceObjectId_.addLong(input.readUInt64());
                }
                input.popLimit(limit);
                break;
              } // case 42
              case 48: {
                referenceFieldIdBase_ = input.readUInt64();
                bitField0_ |= 0x00000010;
                break;
              } // case 48
              case 56: {
                identifier_ = input.readUInt64();
                identifierCase_ = 7;
                break;
              } // case 56
              case 64: {
                nativeAllocationRegistrySizeField_ = input.readInt64();
                bitField0_ |= 0x00000080;
                break;
              } // case 64
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int identifierCase_ = 0;
      private java.lang.Object identifier_;
      public IdentifierCase
          getIdentifierCase() {
        return IdentifierCase.forNumber(
            identifierCase_);
      }

      public Builder clearIdentifier() {
        identifierCase_ = 0;
        identifier_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      /**
       * <code>uint64 id = 1;</code>
       * @return Whether the id field is set.
       */
      public boolean hasId() {
        return identifierCase_ == 1;
      }
      /**
       * <code>uint64 id = 1;</code>
       * @return The id.
       */
      public long getId() {
        if (identifierCase_ == 1) {
          return (java.lang.Long) identifier_;
        }
        return 0L;
      }
      /**
       * <code>uint64 id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(long value) {
        
        identifierCase_ = 1;
        identifier_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        if (identifierCase_ == 1) {
          identifierCase_ = 0;
          identifier_ = null;
          onChanged();
        }
        return this;
      }

      /**
       * <code>uint64 id_delta = 7;</code>
       * @return Whether the idDelta field is set.
       */
      public boolean hasIdDelta() {
        return identifierCase_ == 7;
      }
      /**
       * <code>uint64 id_delta = 7;</code>
       * @return The idDelta.
       */
      public long getIdDelta() {
        if (identifierCase_ == 7) {
          return (java.lang.Long) identifier_;
        }
        return 0L;
      }
      /**
       * <code>uint64 id_delta = 7;</code>
       * @param value The idDelta to set.
       * @return This builder for chaining.
       */
      public Builder setIdDelta(long value) {
        
        identifierCase_ = 7;
        identifier_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint64 id_delta = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearIdDelta() {
        if (identifierCase_ == 7) {
          identifierCase_ = 0;
          identifier_ = null;
          onChanged();
        }
        return this;
      }

      private long typeId_ ;
      /**
       * <pre>
       * Index for InternedData.types for the name of the type of this object.
       * </pre>
       *
       * <code>optional uint64 type_id = 2;</code>
       * @return Whether the typeId field is set.
       */
      @java.lang.Override
      public boolean hasTypeId() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Index for InternedData.types for the name of the type of this object.
       * </pre>
       *
       * <code>optional uint64 type_id = 2;</code>
       * @return The typeId.
       */
      @java.lang.Override
      public long getTypeId() {
        return typeId_;
      }
      /**
       * <pre>
       * Index for InternedData.types for the name of the type of this object.
       * </pre>
       *
       * <code>optional uint64 type_id = 2;</code>
       * @param value The typeId to set.
       * @return This builder for chaining.
       */
      public Builder setTypeId(long value) {
        
        typeId_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Index for InternedData.types for the name of the type of this object.
       * </pre>
       *
       * <code>optional uint64 type_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTypeId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        typeId_ = 0L;
        onChanged();
        return this;
      }

      private long selfSize_ ;
      /**
       * <pre>
       * Bytes occupied by this objects.
       * </pre>
       *
       * <code>optional uint64 self_size = 3;</code>
       * @return Whether the selfSize field is set.
       */
      @java.lang.Override
      public boolean hasSelfSize() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Bytes occupied by this objects.
       * </pre>
       *
       * <code>optional uint64 self_size = 3;</code>
       * @return The selfSize.
       */
      @java.lang.Override
      public long getSelfSize() {
        return selfSize_;
      }
      /**
       * <pre>
       * Bytes occupied by this objects.
       * </pre>
       *
       * <code>optional uint64 self_size = 3;</code>
       * @param value The selfSize to set.
       * @return This builder for chaining.
       */
      public Builder setSelfSize(long value) {
        
        selfSize_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Bytes occupied by this objects.
       * </pre>
       *
       * <code>optional uint64 self_size = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearSelfSize() {
        bitField0_ = (bitField0_ & ~0x00000008);
        selfSize_ = 0L;
        onChanged();
        return this;
      }

      private long referenceFieldIdBase_ ;
      /**
       * <pre>
       * Add this to all non-zero values in reference_object_id. This is used to
       * get more compact varint encoding.
       * The name is confusing, but this has always been used as a base for
       * reference_object_id. The field should be named reference_object_id_base.
       * </pre>
       *
       * <code>optional uint64 reference_field_id_base = 6;</code>
       * @return Whether the referenceFieldIdBase field is set.
       */
      @java.lang.Override
      public boolean hasReferenceFieldIdBase() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * Add this to all non-zero values in reference_object_id. This is used to
       * get more compact varint encoding.
       * The name is confusing, but this has always been used as a base for
       * reference_object_id. The field should be named reference_object_id_base.
       * </pre>
       *
       * <code>optional uint64 reference_field_id_base = 6;</code>
       * @return The referenceFieldIdBase.
       */
      @java.lang.Override
      public long getReferenceFieldIdBase() {
        return referenceFieldIdBase_;
      }
      /**
       * <pre>
       * Add this to all non-zero values in reference_object_id. This is used to
       * get more compact varint encoding.
       * The name is confusing, but this has always been used as a base for
       * reference_object_id. The field should be named reference_object_id_base.
       * </pre>
       *
       * <code>optional uint64 reference_field_id_base = 6;</code>
       * @param value The referenceFieldIdBase to set.
       * @return This builder for chaining.
       */
      public Builder setReferenceFieldIdBase(long value) {
        
        referenceFieldIdBase_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Add this to all non-zero values in reference_object_id. This is used to
       * get more compact varint encoding.
       * The name is confusing, but this has always been used as a base for
       * reference_object_id. The field should be named reference_object_id_base.
       * </pre>
       *
       * <code>optional uint64 reference_field_id_base = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearReferenceFieldIdBase() {
        bitField0_ = (bitField0_ & ~0x00000010);
        referenceFieldIdBase_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.LongList referenceFieldId_ = emptyLongList();
      private void ensureReferenceFieldIdIsMutable() {
        if (!((bitField0_ & 0x00000020) != 0)) {
          referenceFieldId_ = mutableCopy(referenceFieldId_);
          bitField0_ |= 0x00000020;
        }
      }
      /**
       * <pre>
       * Indices for InternedData.field_names for the name of the field referring
       * to the object. For Android S+ and for instances of normal classes (e.g.
       * not instances of java.lang.Class or arrays), this is instead set in the
       * corresponding HeapGraphType, and this is left empty.
       * </pre>
       *
       * <code>repeated uint64 reference_field_id = 4 [packed = true];</code>
       * @return A list containing the referenceFieldId.
       */
      public java.util.List<java.lang.Long>
          getReferenceFieldIdList() {
        return ((bitField0_ & 0x00000020) != 0) ?
                 java.util.Collections.unmodifiableList(referenceFieldId_) : referenceFieldId_;
      }
      /**
       * <pre>
       * Indices for InternedData.field_names for the name of the field referring
       * to the object. For Android S+ and for instances of normal classes (e.g.
       * not instances of java.lang.Class or arrays), this is instead set in the
       * corresponding HeapGraphType, and this is left empty.
       * </pre>
       *
       * <code>repeated uint64 reference_field_id = 4 [packed = true];</code>
       * @return The count of referenceFieldId.
       */
      public int getReferenceFieldIdCount() {
        return referenceFieldId_.size();
      }
      /**
       * <pre>
       * Indices for InternedData.field_names for the name of the field referring
       * to the object. For Android S+ and for instances of normal classes (e.g.
       * not instances of java.lang.Class or arrays), this is instead set in the
       * corresponding HeapGraphType, and this is left empty.
       * </pre>
       *
       * <code>repeated uint64 reference_field_id = 4 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The referenceFieldId at the given index.
       */
      public long getReferenceFieldId(int index) {
        return referenceFieldId_.getLong(index);
      }
      /**
       * <pre>
       * Indices for InternedData.field_names for the name of the field referring
       * to the object. For Android S+ and for instances of normal classes (e.g.
       * not instances of java.lang.Class or arrays), this is instead set in the
       * corresponding HeapGraphType, and this is left empty.
       * </pre>
       *
       * <code>repeated uint64 reference_field_id = 4 [packed = true];</code>
       * @param index The index to set the value at.
       * @param value The referenceFieldId to set.
       * @return This builder for chaining.
       */
      public Builder setReferenceFieldId(
          int index, long value) {
        
        ensureReferenceFieldIdIsMutable();
        referenceFieldId_.setLong(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Indices for InternedData.field_names for the name of the field referring
       * to the object. For Android S+ and for instances of normal classes (e.g.
       * not instances of java.lang.Class or arrays), this is instead set in the
       * corresponding HeapGraphType, and this is left empty.
       * </pre>
       *
       * <code>repeated uint64 reference_field_id = 4 [packed = true];</code>
       * @param value The referenceFieldId to add.
       * @return This builder for chaining.
       */
      public Builder addReferenceFieldId(long value) {
        
        ensureReferenceFieldIdIsMutable();
        referenceFieldId_.addLong(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Indices for InternedData.field_names for the name of the field referring
       * to the object. For Android S+ and for instances of normal classes (e.g.
       * not instances of java.lang.Class or arrays), this is instead set in the
       * corresponding HeapGraphType, and this is left empty.
       * </pre>
       *
       * <code>repeated uint64 reference_field_id = 4 [packed = true];</code>
       * @param values The referenceFieldId to add.
       * @return This builder for chaining.
       */
      public Builder addAllReferenceFieldId(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureReferenceFieldIdIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, referenceFieldId_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Indices for InternedData.field_names for the name of the field referring
       * to the object. For Android S+ and for instances of normal classes (e.g.
       * not instances of java.lang.Class or arrays), this is instead set in the
       * corresponding HeapGraphType, and this is left empty.
       * </pre>
       *
       * <code>repeated uint64 reference_field_id = 4 [packed = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearReferenceFieldId() {
        referenceFieldId_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.LongList referenceObjectId_ = emptyLongList();
      private void ensureReferenceObjectIdIsMutable() {
        if (!((bitField0_ & 0x00000040) != 0)) {
          referenceObjectId_ = mutableCopy(referenceObjectId_);
          bitField0_ |= 0x00000040;
        }
      }
      /**
       * <pre>
       * Ids of the Object that is referred to.
       * </pre>
       *
       * <code>repeated uint64 reference_object_id = 5 [packed = true];</code>
       * @return A list containing the referenceObjectId.
       */
      public java.util.List<java.lang.Long>
          getReferenceObjectIdList() {
        return ((bitField0_ & 0x00000040) != 0) ?
                 java.util.Collections.unmodifiableList(referenceObjectId_) : referenceObjectId_;
      }
      /**
       * <pre>
       * Ids of the Object that is referred to.
       * </pre>
       *
       * <code>repeated uint64 reference_object_id = 5 [packed = true];</code>
       * @return The count of referenceObjectId.
       */
      public int getReferenceObjectIdCount() {
        return referenceObjectId_.size();
      }
      /**
       * <pre>
       * Ids of the Object that is referred to.
       * </pre>
       *
       * <code>repeated uint64 reference_object_id = 5 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The referenceObjectId at the given index.
       */
      public long getReferenceObjectId(int index) {
        return referenceObjectId_.getLong(index);
      }
      /**
       * <pre>
       * Ids of the Object that is referred to.
       * </pre>
       *
       * <code>repeated uint64 reference_object_id = 5 [packed = true];</code>
       * @param index The index to set the value at.
       * @param value The referenceObjectId to set.
       * @return This builder for chaining.
       */
      public Builder setReferenceObjectId(
          int index, long value) {
        
        ensureReferenceObjectIdIsMutable();
        referenceObjectId_.setLong(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Ids of the Object that is referred to.
       * </pre>
       *
       * <code>repeated uint64 reference_object_id = 5 [packed = true];</code>
       * @param value The referenceObjectId to add.
       * @return This builder for chaining.
       */
      public Builder addReferenceObjectId(long value) {
        
        ensureReferenceObjectIdIsMutable();
        referenceObjectId_.addLong(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Ids of the Object that is referred to.
       * </pre>
       *
       * <code>repeated uint64 reference_object_id = 5 [packed = true];</code>
       * @param values The referenceObjectId to add.
       * @return This builder for chaining.
       */
      public Builder addAllReferenceObjectId(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureReferenceObjectIdIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, referenceObjectId_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Ids of the Object that is referred to.
       * </pre>
       *
       * <code>repeated uint64 reference_object_id = 5 [packed = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearReferenceObjectId() {
        referenceObjectId_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      private long nativeAllocationRegistrySizeField_ ;
      /**
       * <pre>
       * If this object is an instance of `libcore.util.NativeAllocationRegistry`,
       * the value of the `size` field.
       * N.B. This is not the native size of this object.
       * </pre>
       *
       * <code>optional int64 native_allocation_registry_size_field = 8;</code>
       * @return Whether the nativeAllocationRegistrySizeField field is set.
       */
      @java.lang.Override
      public boolean hasNativeAllocationRegistrySizeField() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <pre>
       * If this object is an instance of `libcore.util.NativeAllocationRegistry`,
       * the value of the `size` field.
       * N.B. This is not the native size of this object.
       * </pre>
       *
       * <code>optional int64 native_allocation_registry_size_field = 8;</code>
       * @return The nativeAllocationRegistrySizeField.
       */
      @java.lang.Override
      public long getNativeAllocationRegistrySizeField() {
        return nativeAllocationRegistrySizeField_;
      }
      /**
       * <pre>
       * If this object is an instance of `libcore.util.NativeAllocationRegistry`,
       * the value of the `size` field.
       * N.B. This is not the native size of this object.
       * </pre>
       *
       * <code>optional int64 native_allocation_registry_size_field = 8;</code>
       * @param value The nativeAllocationRegistrySizeField to set.
       * @return This builder for chaining.
       */
      public Builder setNativeAllocationRegistrySizeField(long value) {
        
        nativeAllocationRegistrySizeField_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If this object is an instance of `libcore.util.NativeAllocationRegistry`,
       * the value of the `size` field.
       * N.B. This is not the native size of this object.
       * </pre>
       *
       * <code>optional int64 native_allocation_registry_size_field = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearNativeAllocationRegistrySizeField() {
        bitField0_ = (bitField0_ & ~0x00000080);
        nativeAllocationRegistrySizeField_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:perfetto.protos.HeapGraphObject)
    }

    // @@protoc_insertion_point(class_scope:perfetto.protos.HeapGraphObject)
    private static final perfetto.protos.HeapGraphOuterClass.HeapGraphObject DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new perfetto.protos.HeapGraphOuterClass.HeapGraphObject();
    }

    public static perfetto.protos.HeapGraphOuterClass.HeapGraphObject getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<HeapGraphObject>
        PARSER = new com.google.protobuf.AbstractParser<HeapGraphObject>() {
      @java.lang.Override
      public HeapGraphObject parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<HeapGraphObject> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<HeapGraphObject> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public perfetto.protos.HeapGraphOuterClass.HeapGraphObject getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface HeapGraphOrBuilder extends
      // @@protoc_insertion_point(interface_extends:perfetto.protos.HeapGraph)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 pid = 1;</code>
     * @return Whether the pid field is set.
     */
    boolean hasPid();
    /**
     * <code>optional int32 pid = 1;</code>
     * @return The pid.
     */
    int getPid();

    /**
     * <pre>
     * This contains all objects at the time this dump was taken. Some of these
     * will be live, some of those unreachable (garbage). To find the live
     * objects, the client needs to build the transitive closure of objects
     * reachable from |roots|.
     * All objects not contained within that transitive closure are garbage that
     * has not yet been collected.
     * </pre>
     *
     * <code>repeated .perfetto.protos.HeapGraphObject objects = 2;</code>
     */
    java.util.List<perfetto.protos.HeapGraphOuterClass.HeapGraphObject> 
        getObjectsList();
    /**
     * <pre>
     * This contains all objects at the time this dump was taken. Some of these
     * will be live, some of those unreachable (garbage). To find the live
     * objects, the client needs to build the transitive closure of objects
     * reachable from |roots|.
     * All objects not contained within that transitive closure are garbage that
     * has not yet been collected.
     * </pre>
     *
     * <code>repeated .perfetto.protos.HeapGraphObject objects = 2;</code>
     */
    perfetto.protos.HeapGraphOuterClass.HeapGraphObject getObjects(int index);
    /**
     * <pre>
     * This contains all objects at the time this dump was taken. Some of these
     * will be live, some of those unreachable (garbage). To find the live
     * objects, the client needs to build the transitive closure of objects
     * reachable from |roots|.
     * All objects not contained within that transitive closure are garbage that
     * has not yet been collected.
     * </pre>
     *
     * <code>repeated .perfetto.protos.HeapGraphObject objects = 2;</code>
     */
    int getObjectsCount();
    /**
     * <pre>
     * This contains all objects at the time this dump was taken. Some of these
     * will be live, some of those unreachable (garbage). To find the live
     * objects, the client needs to build the transitive closure of objects
     * reachable from |roots|.
     * All objects not contained within that transitive closure are garbage that
     * has not yet been collected.
     * </pre>
     *
     * <code>repeated .perfetto.protos.HeapGraphObject objects = 2;</code>
     */
    java.util.List<? extends perfetto.protos.HeapGraphOuterClass.HeapGraphObjectOrBuilder> 
        getObjectsOrBuilderList();
    /**
     * <pre>
     * This contains all objects at the time this dump was taken. Some of these
     * will be live, some of those unreachable (garbage). To find the live
     * objects, the client needs to build the transitive closure of objects
     * reachable from |roots|.
     * All objects not contained within that transitive closure are garbage that
     * has not yet been collected.
     * </pre>
     *
     * <code>repeated .perfetto.protos.HeapGraphObject objects = 2;</code>
     */
    perfetto.protos.HeapGraphOuterClass.HeapGraphObjectOrBuilder getObjectsOrBuilder(
        int index);

    /**
     * <pre>
     * Roots at the time this dump was taken.
     * All live objects are reachable from the roots. All other objects are
     * garbage.
     * </pre>
     *
     * <code>repeated .perfetto.protos.HeapGraphRoot roots = 7;</code>
     */
    java.util.List<perfetto.protos.HeapGraphOuterClass.HeapGraphRoot> 
        getRootsList();
    /**
     * <pre>
     * Roots at the time this dump was taken.
     * All live objects are reachable from the roots. All other objects are
     * garbage.
     * </pre>
     *
     * <code>repeated .perfetto.protos.HeapGraphRoot roots = 7;</code>
     */
    perfetto.protos.HeapGraphOuterClass.HeapGraphRoot getRoots(int index);
    /**
     * <pre>
     * Roots at the time this dump was taken.
     * All live objects are reachable from the roots. All other objects are
     * garbage.
     * </pre>
     *
     * <code>repeated .perfetto.protos.HeapGraphRoot roots = 7;</code>
     */
    int getRootsCount();
    /**
     * <pre>
     * Roots at the time this dump was taken.
     * All live objects are reachable from the roots. All other objects are
     * garbage.
     * </pre>
     *
     * <code>repeated .perfetto.protos.HeapGraphRoot roots = 7;</code>
     */
    java.util.List<? extends perfetto.protos.HeapGraphOuterClass.HeapGraphRootOrBuilder> 
        getRootsOrBuilderList();
    /**
     * <pre>
     * Roots at the time this dump was taken.
     * All live objects are reachable from the roots. All other objects are
     * garbage.
     * </pre>
     *
     * <code>repeated .perfetto.protos.HeapGraphRoot roots = 7;</code>
     */
    perfetto.protos.HeapGraphOuterClass.HeapGraphRootOrBuilder getRootsOrBuilder(
        int index);

    /**
     * <pre>
     * Types used in HeapGraphObjects.
     * </pre>
     *
     * <code>repeated .perfetto.protos.HeapGraphType types = 9;</code>
     */
    java.util.List<perfetto.protos.HeapGraphOuterClass.HeapGraphType> 
        getTypesList();
    /**
     * <pre>
     * Types used in HeapGraphObjects.
     * </pre>
     *
     * <code>repeated .perfetto.protos.HeapGraphType types = 9;</code>
     */
    perfetto.protos.HeapGraphOuterClass.HeapGraphType getTypes(int index);
    /**
     * <pre>
     * Types used in HeapGraphObjects.
     * </pre>
     *
     * <code>repeated .perfetto.protos.HeapGraphType types = 9;</code>
     */
    int getTypesCount();
    /**
     * <pre>
     * Types used in HeapGraphObjects.
     * </pre>
     *
     * <code>repeated .perfetto.protos.HeapGraphType types = 9;</code>
     */
    java.util.List<? extends perfetto.protos.HeapGraphOuterClass.HeapGraphTypeOrBuilder> 
        getTypesOrBuilderList();
    /**
     * <pre>
     * Types used in HeapGraphObjects.
     * </pre>
     *
     * <code>repeated .perfetto.protos.HeapGraphType types = 9;</code>
     */
    perfetto.protos.HeapGraphOuterClass.HeapGraphTypeOrBuilder getTypesOrBuilder(
        int index);

    /**
     * <pre>
     * Field names for references in managed heap graph.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString field_names = 4;</code>
     */
    java.util.List<perfetto.protos.ProfileCommon.InternedString> 
        getFieldNamesList();
    /**
     * <pre>
     * Field names for references in managed heap graph.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString field_names = 4;</code>
     */
    perfetto.protos.ProfileCommon.InternedString getFieldNames(int index);
    /**
     * <pre>
     * Field names for references in managed heap graph.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString field_names = 4;</code>
     */
    int getFieldNamesCount();
    /**
     * <pre>
     * Field names for references in managed heap graph.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString field_names = 4;</code>
     */
    java.util.List<? extends perfetto.protos.ProfileCommon.InternedStringOrBuilder> 
        getFieldNamesOrBuilderList();
    /**
     * <pre>
     * Field names for references in managed heap graph.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString field_names = 4;</code>
     */
    perfetto.protos.ProfileCommon.InternedStringOrBuilder getFieldNamesOrBuilder(
        int index);

    /**
     * <pre>
     * Paths of files used in managed heap graph.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString location_names = 8;</code>
     */
    java.util.List<perfetto.protos.ProfileCommon.InternedString> 
        getLocationNamesList();
    /**
     * <pre>
     * Paths of files used in managed heap graph.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString location_names = 8;</code>
     */
    perfetto.protos.ProfileCommon.InternedString getLocationNames(int index);
    /**
     * <pre>
     * Paths of files used in managed heap graph.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString location_names = 8;</code>
     */
    int getLocationNamesCount();
    /**
     * <pre>
     * Paths of files used in managed heap graph.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString location_names = 8;</code>
     */
    java.util.List<? extends perfetto.protos.ProfileCommon.InternedStringOrBuilder> 
        getLocationNamesOrBuilderList();
    /**
     * <pre>
     * Paths of files used in managed heap graph.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString location_names = 8;</code>
     */
    perfetto.protos.ProfileCommon.InternedStringOrBuilder getLocationNamesOrBuilder(
        int index);

    /**
     * <code>optional bool continued = 5;</code>
     * @return Whether the continued field is set.
     */
    boolean hasContinued();
    /**
     * <code>optional bool continued = 5;</code>
     * @return The continued.
     */
    boolean getContinued();

    /**
     * <code>optional uint64 index = 6;</code>
     * @return Whether the index field is set.
     */
    boolean hasIndex();
    /**
     * <code>optional uint64 index = 6;</code>
     * @return The index.
     */
    long getIndex();
  }
  /**
   * Protobuf type {@code perfetto.protos.HeapGraph}
   */
  public static final class HeapGraph extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:perfetto.protos.HeapGraph)
      HeapGraphOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use HeapGraph.newBuilder() to construct.
    private HeapGraph(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private HeapGraph() {
      objects_ = java.util.Collections.emptyList();
      roots_ = java.util.Collections.emptyList();
      types_ = java.util.Collections.emptyList();
      fieldNames_ = java.util.Collections.emptyList();
      locationNames_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new HeapGraph();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return perfetto.protos.HeapGraphOuterClass.internal_static_perfetto_protos_HeapGraph_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return perfetto.protos.HeapGraphOuterClass.internal_static_perfetto_protos_HeapGraph_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              perfetto.protos.HeapGraphOuterClass.HeapGraph.class, perfetto.protos.HeapGraphOuterClass.HeapGraph.Builder.class);
    }

    private int bitField0_;
    public static final int PID_FIELD_NUMBER = 1;
    private int pid_ = 0;
    /**
     * <code>optional int32 pid = 1;</code>
     * @return Whether the pid field is set.
     */
    @java.lang.Override
    public boolean hasPid() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional int32 pid = 1;</code>
     * @return The pid.
     */
    @java.lang.Override
    public int getPid() {
      return pid_;
    }

    public static final int OBJECTS_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private java.util.List<perfetto.protos.HeapGraphOuterClass.HeapGraphObject> objects_;
    /**
     * <pre>
     * This contains all objects at the time this dump was taken. Some of these
     * will be live, some of those unreachable (garbage). To find the live
     * objects, the client needs to build the transitive closure of objects
     * reachable from |roots|.
     * All objects not contained within that transitive closure are garbage that
     * has not yet been collected.
     * </pre>
     *
     * <code>repeated .perfetto.protos.HeapGraphObject objects = 2;</code>
     */
    @java.lang.Override
    public java.util.List<perfetto.protos.HeapGraphOuterClass.HeapGraphObject> getObjectsList() {
      return objects_;
    }
    /**
     * <pre>
     * This contains all objects at the time this dump was taken. Some of these
     * will be live, some of those unreachable (garbage). To find the live
     * objects, the client needs to build the transitive closure of objects
     * reachable from |roots|.
     * All objects not contained within that transitive closure are garbage that
     * has not yet been collected.
     * </pre>
     *
     * <code>repeated .perfetto.protos.HeapGraphObject objects = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends perfetto.protos.HeapGraphOuterClass.HeapGraphObjectOrBuilder> 
        getObjectsOrBuilderList() {
      return objects_;
    }
    /**
     * <pre>
     * This contains all objects at the time this dump was taken. Some of these
     * will be live, some of those unreachable (garbage). To find the live
     * objects, the client needs to build the transitive closure of objects
     * reachable from |roots|.
     * All objects not contained within that transitive closure are garbage that
     * has not yet been collected.
     * </pre>
     *
     * <code>repeated .perfetto.protos.HeapGraphObject objects = 2;</code>
     */
    @java.lang.Override
    public int getObjectsCount() {
      return objects_.size();
    }
    /**
     * <pre>
     * This contains all objects at the time this dump was taken. Some of these
     * will be live, some of those unreachable (garbage). To find the live
     * objects, the client needs to build the transitive closure of objects
     * reachable from |roots|.
     * All objects not contained within that transitive closure are garbage that
     * has not yet been collected.
     * </pre>
     *
     * <code>repeated .perfetto.protos.HeapGraphObject objects = 2;</code>
     */
    @java.lang.Override
    public perfetto.protos.HeapGraphOuterClass.HeapGraphObject getObjects(int index) {
      return objects_.get(index);
    }
    /**
     * <pre>
     * This contains all objects at the time this dump was taken. Some of these
     * will be live, some of those unreachable (garbage). To find the live
     * objects, the client needs to build the transitive closure of objects
     * reachable from |roots|.
     * All objects not contained within that transitive closure are garbage that
     * has not yet been collected.
     * </pre>
     *
     * <code>repeated .perfetto.protos.HeapGraphObject objects = 2;</code>
     */
    @java.lang.Override
    public perfetto.protos.HeapGraphOuterClass.HeapGraphObjectOrBuilder getObjectsOrBuilder(
        int index) {
      return objects_.get(index);
    }

    public static final int ROOTS_FIELD_NUMBER = 7;
    @SuppressWarnings("serial")
    private java.util.List<perfetto.protos.HeapGraphOuterClass.HeapGraphRoot> roots_;
    /**
     * <pre>
     * Roots at the time this dump was taken.
     * All live objects are reachable from the roots. All other objects are
     * garbage.
     * </pre>
     *
     * <code>repeated .perfetto.protos.HeapGraphRoot roots = 7;</code>
     */
    @java.lang.Override
    public java.util.List<perfetto.protos.HeapGraphOuterClass.HeapGraphRoot> getRootsList() {
      return roots_;
    }
    /**
     * <pre>
     * Roots at the time this dump was taken.
     * All live objects are reachable from the roots. All other objects are
     * garbage.
     * </pre>
     *
     * <code>repeated .perfetto.protos.HeapGraphRoot roots = 7;</code>
     */
    @java.lang.Override
    public java.util.List<? extends perfetto.protos.HeapGraphOuterClass.HeapGraphRootOrBuilder> 
        getRootsOrBuilderList() {
      return roots_;
    }
    /**
     * <pre>
     * Roots at the time this dump was taken.
     * All live objects are reachable from the roots. All other objects are
     * garbage.
     * </pre>
     *
     * <code>repeated .perfetto.protos.HeapGraphRoot roots = 7;</code>
     */
    @java.lang.Override
    public int getRootsCount() {
      return roots_.size();
    }
    /**
     * <pre>
     * Roots at the time this dump was taken.
     * All live objects are reachable from the roots. All other objects are
     * garbage.
     * </pre>
     *
     * <code>repeated .perfetto.protos.HeapGraphRoot roots = 7;</code>
     */
    @java.lang.Override
    public perfetto.protos.HeapGraphOuterClass.HeapGraphRoot getRoots(int index) {
      return roots_.get(index);
    }
    /**
     * <pre>
     * Roots at the time this dump was taken.
     * All live objects are reachable from the roots. All other objects are
     * garbage.
     * </pre>
     *
     * <code>repeated .perfetto.protos.HeapGraphRoot roots = 7;</code>
     */
    @java.lang.Override
    public perfetto.protos.HeapGraphOuterClass.HeapGraphRootOrBuilder getRootsOrBuilder(
        int index) {
      return roots_.get(index);
    }

    public static final int TYPES_FIELD_NUMBER = 9;
    @SuppressWarnings("serial")
    private java.util.List<perfetto.protos.HeapGraphOuterClass.HeapGraphType> types_;
    /**
     * <pre>
     * Types used in HeapGraphObjects.
     * </pre>
     *
     * <code>repeated .perfetto.protos.HeapGraphType types = 9;</code>
     */
    @java.lang.Override
    public java.util.List<perfetto.protos.HeapGraphOuterClass.HeapGraphType> getTypesList() {
      return types_;
    }
    /**
     * <pre>
     * Types used in HeapGraphObjects.
     * </pre>
     *
     * <code>repeated .perfetto.protos.HeapGraphType types = 9;</code>
     */
    @java.lang.Override
    public java.util.List<? extends perfetto.protos.HeapGraphOuterClass.HeapGraphTypeOrBuilder> 
        getTypesOrBuilderList() {
      return types_;
    }
    /**
     * <pre>
     * Types used in HeapGraphObjects.
     * </pre>
     *
     * <code>repeated .perfetto.protos.HeapGraphType types = 9;</code>
     */
    @java.lang.Override
    public int getTypesCount() {
      return types_.size();
    }
    /**
     * <pre>
     * Types used in HeapGraphObjects.
     * </pre>
     *
     * <code>repeated .perfetto.protos.HeapGraphType types = 9;</code>
     */
    @java.lang.Override
    public perfetto.protos.HeapGraphOuterClass.HeapGraphType getTypes(int index) {
      return types_.get(index);
    }
    /**
     * <pre>
     * Types used in HeapGraphObjects.
     * </pre>
     *
     * <code>repeated .perfetto.protos.HeapGraphType types = 9;</code>
     */
    @java.lang.Override
    public perfetto.protos.HeapGraphOuterClass.HeapGraphTypeOrBuilder getTypesOrBuilder(
        int index) {
      return types_.get(index);
    }

    public static final int FIELD_NAMES_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private java.util.List<perfetto.protos.ProfileCommon.InternedString> fieldNames_;
    /**
     * <pre>
     * Field names for references in managed heap graph.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString field_names = 4;</code>
     */
    @java.lang.Override
    public java.util.List<perfetto.protos.ProfileCommon.InternedString> getFieldNamesList() {
      return fieldNames_;
    }
    /**
     * <pre>
     * Field names for references in managed heap graph.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString field_names = 4;</code>
     */
    @java.lang.Override
    public java.util.List<? extends perfetto.protos.ProfileCommon.InternedStringOrBuilder> 
        getFieldNamesOrBuilderList() {
      return fieldNames_;
    }
    /**
     * <pre>
     * Field names for references in managed heap graph.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString field_names = 4;</code>
     */
    @java.lang.Override
    public int getFieldNamesCount() {
      return fieldNames_.size();
    }
    /**
     * <pre>
     * Field names for references in managed heap graph.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString field_names = 4;</code>
     */
    @java.lang.Override
    public perfetto.protos.ProfileCommon.InternedString getFieldNames(int index) {
      return fieldNames_.get(index);
    }
    /**
     * <pre>
     * Field names for references in managed heap graph.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString field_names = 4;</code>
     */
    @java.lang.Override
    public perfetto.protos.ProfileCommon.InternedStringOrBuilder getFieldNamesOrBuilder(
        int index) {
      return fieldNames_.get(index);
    }

    public static final int LOCATION_NAMES_FIELD_NUMBER = 8;
    @SuppressWarnings("serial")
    private java.util.List<perfetto.protos.ProfileCommon.InternedString> locationNames_;
    /**
     * <pre>
     * Paths of files used in managed heap graph.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString location_names = 8;</code>
     */
    @java.lang.Override
    public java.util.List<perfetto.protos.ProfileCommon.InternedString> getLocationNamesList() {
      return locationNames_;
    }
    /**
     * <pre>
     * Paths of files used in managed heap graph.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString location_names = 8;</code>
     */
    @java.lang.Override
    public java.util.List<? extends perfetto.protos.ProfileCommon.InternedStringOrBuilder> 
        getLocationNamesOrBuilderList() {
      return locationNames_;
    }
    /**
     * <pre>
     * Paths of files used in managed heap graph.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString location_names = 8;</code>
     */
    @java.lang.Override
    public int getLocationNamesCount() {
      return locationNames_.size();
    }
    /**
     * <pre>
     * Paths of files used in managed heap graph.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString location_names = 8;</code>
     */
    @java.lang.Override
    public perfetto.protos.ProfileCommon.InternedString getLocationNames(int index) {
      return locationNames_.get(index);
    }
    /**
     * <pre>
     * Paths of files used in managed heap graph.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString location_names = 8;</code>
     */
    @java.lang.Override
    public perfetto.protos.ProfileCommon.InternedStringOrBuilder getLocationNamesOrBuilder(
        int index) {
      return locationNames_.get(index);
    }

    public static final int CONTINUED_FIELD_NUMBER = 5;
    private boolean continued_ = false;
    /**
     * <code>optional bool continued = 5;</code>
     * @return Whether the continued field is set.
     */
    @java.lang.Override
    public boolean hasContinued() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional bool continued = 5;</code>
     * @return The continued.
     */
    @java.lang.Override
    public boolean getContinued() {
      return continued_;
    }

    public static final int INDEX_FIELD_NUMBER = 6;
    private long index_ = 0L;
    /**
     * <code>optional uint64 index = 6;</code>
     * @return Whether the index field is set.
     */
    @java.lang.Override
    public boolean hasIndex() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional uint64 index = 6;</code>
     * @return The index.
     */
    @java.lang.Override
    public long getIndex() {
      return index_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, pid_);
      }
      for (int i = 0; i < objects_.size(); i++) {
        output.writeMessage(2, objects_.get(i));
      }
      for (int i = 0; i < fieldNames_.size(); i++) {
        output.writeMessage(4, fieldNames_.get(i));
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeBool(5, continued_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeUInt64(6, index_);
      }
      for (int i = 0; i < roots_.size(); i++) {
        output.writeMessage(7, roots_.get(i));
      }
      for (int i = 0; i < locationNames_.size(); i++) {
        output.writeMessage(8, locationNames_.get(i));
      }
      for (int i = 0; i < types_.size(); i++) {
        output.writeMessage(9, types_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, pid_);
      }
      for (int i = 0; i < objects_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, objects_.get(i));
      }
      for (int i = 0; i < fieldNames_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, fieldNames_.get(i));
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, continued_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, index_);
      }
      for (int i = 0; i < roots_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, roots_.get(i));
      }
      for (int i = 0; i < locationNames_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, locationNames_.get(i));
      }
      for (int i = 0; i < types_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, types_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof perfetto.protos.HeapGraphOuterClass.HeapGraph)) {
        return super.equals(obj);
      }
      perfetto.protos.HeapGraphOuterClass.HeapGraph other = (perfetto.protos.HeapGraphOuterClass.HeapGraph) obj;

      if (hasPid() != other.hasPid()) return false;
      if (hasPid()) {
        if (getPid()
            != other.getPid()) return false;
      }
      if (!getObjectsList()
          .equals(other.getObjectsList())) return false;
      if (!getRootsList()
          .equals(other.getRootsList())) return false;
      if (!getTypesList()
          .equals(other.getTypesList())) return false;
      if (!getFieldNamesList()
          .equals(other.getFieldNamesList())) return false;
      if (!getLocationNamesList()
          .equals(other.getLocationNamesList())) return false;
      if (hasContinued() != other.hasContinued()) return false;
      if (hasContinued()) {
        if (getContinued()
            != other.getContinued()) return false;
      }
      if (hasIndex() != other.hasIndex()) return false;
      if (hasIndex()) {
        if (getIndex()
            != other.getIndex()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPid()) {
        hash = (37 * hash) + PID_FIELD_NUMBER;
        hash = (53 * hash) + getPid();
      }
      if (getObjectsCount() > 0) {
        hash = (37 * hash) + OBJECTS_FIELD_NUMBER;
        hash = (53 * hash) + getObjectsList().hashCode();
      }
      if (getRootsCount() > 0) {
        hash = (37 * hash) + ROOTS_FIELD_NUMBER;
        hash = (53 * hash) + getRootsList().hashCode();
      }
      if (getTypesCount() > 0) {
        hash = (37 * hash) + TYPES_FIELD_NUMBER;
        hash = (53 * hash) + getTypesList().hashCode();
      }
      if (getFieldNamesCount() > 0) {
        hash = (37 * hash) + FIELD_NAMES_FIELD_NUMBER;
        hash = (53 * hash) + getFieldNamesList().hashCode();
      }
      if (getLocationNamesCount() > 0) {
        hash = (37 * hash) + LOCATION_NAMES_FIELD_NUMBER;
        hash = (53 * hash) + getLocationNamesList().hashCode();
      }
      if (hasContinued()) {
        hash = (37 * hash) + CONTINUED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getContinued());
      }
      if (hasIndex()) {
        hash = (37 * hash) + INDEX_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getIndex());
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static perfetto.protos.HeapGraphOuterClass.HeapGraph parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.HeapGraphOuterClass.HeapGraph parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.HeapGraphOuterClass.HeapGraph parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.HeapGraphOuterClass.HeapGraph parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.HeapGraphOuterClass.HeapGraph parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.HeapGraphOuterClass.HeapGraph parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.HeapGraphOuterClass.HeapGraph parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.HeapGraphOuterClass.HeapGraph parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.HeapGraphOuterClass.HeapGraph parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static perfetto.protos.HeapGraphOuterClass.HeapGraph parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.HeapGraphOuterClass.HeapGraph parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.HeapGraphOuterClass.HeapGraph parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(perfetto.protos.HeapGraphOuterClass.HeapGraph prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code perfetto.protos.HeapGraph}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:perfetto.protos.HeapGraph)
        perfetto.protos.HeapGraphOuterClass.HeapGraphOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.HeapGraphOuterClass.internal_static_perfetto_protos_HeapGraph_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.HeapGraphOuterClass.internal_static_perfetto_protos_HeapGraph_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.HeapGraphOuterClass.HeapGraph.class, perfetto.protos.HeapGraphOuterClass.HeapGraph.Builder.class);
      }

      // Construct using perfetto.protos.HeapGraphOuterClass.HeapGraph.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        pid_ = 0;
        if (objectsBuilder_ == null) {
          objects_ = java.util.Collections.emptyList();
        } else {
          objects_ = null;
          objectsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (rootsBuilder_ == null) {
          roots_ = java.util.Collections.emptyList();
        } else {
          roots_ = null;
          rootsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (typesBuilder_ == null) {
          types_ = java.util.Collections.emptyList();
        } else {
          types_ = null;
          typesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (fieldNamesBuilder_ == null) {
          fieldNames_ = java.util.Collections.emptyList();
        } else {
          fieldNames_ = null;
          fieldNamesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        if (locationNamesBuilder_ == null) {
          locationNames_ = java.util.Collections.emptyList();
        } else {
          locationNames_ = null;
          locationNamesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        continued_ = false;
        index_ = 0L;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return perfetto.protos.HeapGraphOuterClass.internal_static_perfetto_protos_HeapGraph_descriptor;
      }

      @java.lang.Override
      public perfetto.protos.HeapGraphOuterClass.HeapGraph getDefaultInstanceForType() {
        return perfetto.protos.HeapGraphOuterClass.HeapGraph.getDefaultInstance();
      }

      @java.lang.Override
      public perfetto.protos.HeapGraphOuterClass.HeapGraph build() {
        perfetto.protos.HeapGraphOuterClass.HeapGraph result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public perfetto.protos.HeapGraphOuterClass.HeapGraph buildPartial() {
        perfetto.protos.HeapGraphOuterClass.HeapGraph result = new perfetto.protos.HeapGraphOuterClass.HeapGraph(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(perfetto.protos.HeapGraphOuterClass.HeapGraph result) {
        if (objectsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            objects_ = java.util.Collections.unmodifiableList(objects_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.objects_ = objects_;
        } else {
          result.objects_ = objectsBuilder_.build();
        }
        if (rootsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            roots_ = java.util.Collections.unmodifiableList(roots_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.roots_ = roots_;
        } else {
          result.roots_ = rootsBuilder_.build();
        }
        if (typesBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0)) {
            types_ = java.util.Collections.unmodifiableList(types_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.types_ = types_;
        } else {
          result.types_ = typesBuilder_.build();
        }
        if (fieldNamesBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0)) {
            fieldNames_ = java.util.Collections.unmodifiableList(fieldNames_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.fieldNames_ = fieldNames_;
        } else {
          result.fieldNames_ = fieldNamesBuilder_.build();
        }
        if (locationNamesBuilder_ == null) {
          if (((bitField0_ & 0x00000020) != 0)) {
            locationNames_ = java.util.Collections.unmodifiableList(locationNames_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.locationNames_ = locationNames_;
        } else {
          result.locationNames_ = locationNamesBuilder_.build();
        }
      }

      private void buildPartial0(perfetto.protos.HeapGraphOuterClass.HeapGraph result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.pid_ = pid_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.continued_ = continued_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.index_ = index_;
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof perfetto.protos.HeapGraphOuterClass.HeapGraph) {
          return mergeFrom((perfetto.protos.HeapGraphOuterClass.HeapGraph)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(perfetto.protos.HeapGraphOuterClass.HeapGraph other) {
        if (other == perfetto.protos.HeapGraphOuterClass.HeapGraph.getDefaultInstance()) return this;
        if (other.hasPid()) {
          setPid(other.getPid());
        }
        if (objectsBuilder_ == null) {
          if (!other.objects_.isEmpty()) {
            if (objects_.isEmpty()) {
              objects_ = other.objects_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureObjectsIsMutable();
              objects_.addAll(other.objects_);
            }
            onChanged();
          }
        } else {
          if (!other.objects_.isEmpty()) {
            if (objectsBuilder_.isEmpty()) {
              objectsBuilder_.dispose();
              objectsBuilder_ = null;
              objects_ = other.objects_;
              bitField0_ = (bitField0_ & ~0x00000002);
              objectsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getObjectsFieldBuilder() : null;
            } else {
              objectsBuilder_.addAllMessages(other.objects_);
            }
          }
        }
        if (rootsBuilder_ == null) {
          if (!other.roots_.isEmpty()) {
            if (roots_.isEmpty()) {
              roots_ = other.roots_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureRootsIsMutable();
              roots_.addAll(other.roots_);
            }
            onChanged();
          }
        } else {
          if (!other.roots_.isEmpty()) {
            if (rootsBuilder_.isEmpty()) {
              rootsBuilder_.dispose();
              rootsBuilder_ = null;
              roots_ = other.roots_;
              bitField0_ = (bitField0_ & ~0x00000004);
              rootsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRootsFieldBuilder() : null;
            } else {
              rootsBuilder_.addAllMessages(other.roots_);
            }
          }
        }
        if (typesBuilder_ == null) {
          if (!other.types_.isEmpty()) {
            if (types_.isEmpty()) {
              types_ = other.types_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureTypesIsMutable();
              types_.addAll(other.types_);
            }
            onChanged();
          }
        } else {
          if (!other.types_.isEmpty()) {
            if (typesBuilder_.isEmpty()) {
              typesBuilder_.dispose();
              typesBuilder_ = null;
              types_ = other.types_;
              bitField0_ = (bitField0_ & ~0x00000008);
              typesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTypesFieldBuilder() : null;
            } else {
              typesBuilder_.addAllMessages(other.types_);
            }
          }
        }
        if (fieldNamesBuilder_ == null) {
          if (!other.fieldNames_.isEmpty()) {
            if (fieldNames_.isEmpty()) {
              fieldNames_ = other.fieldNames_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureFieldNamesIsMutable();
              fieldNames_.addAll(other.fieldNames_);
            }
            onChanged();
          }
        } else {
          if (!other.fieldNames_.isEmpty()) {
            if (fieldNamesBuilder_.isEmpty()) {
              fieldNamesBuilder_.dispose();
              fieldNamesBuilder_ = null;
              fieldNames_ = other.fieldNames_;
              bitField0_ = (bitField0_ & ~0x00000010);
              fieldNamesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFieldNamesFieldBuilder() : null;
            } else {
              fieldNamesBuilder_.addAllMessages(other.fieldNames_);
            }
          }
        }
        if (locationNamesBuilder_ == null) {
          if (!other.locationNames_.isEmpty()) {
            if (locationNames_.isEmpty()) {
              locationNames_ = other.locationNames_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureLocationNamesIsMutable();
              locationNames_.addAll(other.locationNames_);
            }
            onChanged();
          }
        } else {
          if (!other.locationNames_.isEmpty()) {
            if (locationNamesBuilder_.isEmpty()) {
              locationNamesBuilder_.dispose();
              locationNamesBuilder_ = null;
              locationNames_ = other.locationNames_;
              bitField0_ = (bitField0_ & ~0x00000020);
              locationNamesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getLocationNamesFieldBuilder() : null;
            } else {
              locationNamesBuilder_.addAllMessages(other.locationNames_);
            }
          }
        }
        if (other.hasContinued()) {
          setContinued(other.getContinued());
        }
        if (other.hasIndex()) {
          setIndex(other.getIndex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                pid_ = input.readInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                perfetto.protos.HeapGraphOuterClass.HeapGraphObject m =
                    input.readMessage(
                        perfetto.protos.HeapGraphOuterClass.HeapGraphObject.PARSER,
                        extensionRegistry);
                if (objectsBuilder_ == null) {
                  ensureObjectsIsMutable();
                  objects_.add(m);
                } else {
                  objectsBuilder_.addMessage(m);
                }
                break;
              } // case 18
              case 34: {
                perfetto.protos.ProfileCommon.InternedString m =
                    input.readMessage(
                        perfetto.protos.ProfileCommon.InternedString.PARSER,
                        extensionRegistry);
                if (fieldNamesBuilder_ == null) {
                  ensureFieldNamesIsMutable();
                  fieldNames_.add(m);
                } else {
                  fieldNamesBuilder_.addMessage(m);
                }
                break;
              } // case 34
              case 40: {
                continued_ = input.readBool();
                bitField0_ |= 0x00000040;
                break;
              } // case 40
              case 48: {
                index_ = input.readUInt64();
                bitField0_ |= 0x00000080;
                break;
              } // case 48
              case 58: {
                perfetto.protos.HeapGraphOuterClass.HeapGraphRoot m =
                    input.readMessage(
                        perfetto.protos.HeapGraphOuterClass.HeapGraphRoot.PARSER,
                        extensionRegistry);
                if (rootsBuilder_ == null) {
                  ensureRootsIsMutable();
                  roots_.add(m);
                } else {
                  rootsBuilder_.addMessage(m);
                }
                break;
              } // case 58
              case 66: {
                perfetto.protos.ProfileCommon.InternedString m =
                    input.readMessage(
                        perfetto.protos.ProfileCommon.InternedString.PARSER,
                        extensionRegistry);
                if (locationNamesBuilder_ == null) {
                  ensureLocationNamesIsMutable();
                  locationNames_.add(m);
                } else {
                  locationNamesBuilder_.addMessage(m);
                }
                break;
              } // case 66
              case 74: {
                perfetto.protos.HeapGraphOuterClass.HeapGraphType m =
                    input.readMessage(
                        perfetto.protos.HeapGraphOuterClass.HeapGraphType.PARSER,
                        extensionRegistry);
                if (typesBuilder_ == null) {
                  ensureTypesIsMutable();
                  types_.add(m);
                } else {
                  typesBuilder_.addMessage(m);
                }
                break;
              } // case 74
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int pid_ ;
      /**
       * <code>optional int32 pid = 1;</code>
       * @return Whether the pid field is set.
       */
      @java.lang.Override
      public boolean hasPid() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional int32 pid = 1;</code>
       * @return The pid.
       */
      @java.lang.Override
      public int getPid() {
        return pid_;
      }
      /**
       * <code>optional int32 pid = 1;</code>
       * @param value The pid to set.
       * @return This builder for chaining.
       */
      public Builder setPid(int value) {
        
        pid_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pid = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearPid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        pid_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<perfetto.protos.HeapGraphOuterClass.HeapGraphObject> objects_ =
        java.util.Collections.emptyList();
      private void ensureObjectsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          objects_ = new java.util.ArrayList<perfetto.protos.HeapGraphOuterClass.HeapGraphObject>(objects_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.HeapGraphOuterClass.HeapGraphObject, perfetto.protos.HeapGraphOuterClass.HeapGraphObject.Builder, perfetto.protos.HeapGraphOuterClass.HeapGraphObjectOrBuilder> objectsBuilder_;

      /**
       * <pre>
       * This contains all objects at the time this dump was taken. Some of these
       * will be live, some of those unreachable (garbage). To find the live
       * objects, the client needs to build the transitive closure of objects
       * reachable from |roots|.
       * All objects not contained within that transitive closure are garbage that
       * has not yet been collected.
       * </pre>
       *
       * <code>repeated .perfetto.protos.HeapGraphObject objects = 2;</code>
       */
      public java.util.List<perfetto.protos.HeapGraphOuterClass.HeapGraphObject> getObjectsList() {
        if (objectsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(objects_);
        } else {
          return objectsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * This contains all objects at the time this dump was taken. Some of these
       * will be live, some of those unreachable (garbage). To find the live
       * objects, the client needs to build the transitive closure of objects
       * reachable from |roots|.
       * All objects not contained within that transitive closure are garbage that
       * has not yet been collected.
       * </pre>
       *
       * <code>repeated .perfetto.protos.HeapGraphObject objects = 2;</code>
       */
      public int getObjectsCount() {
        if (objectsBuilder_ == null) {
          return objects_.size();
        } else {
          return objectsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * This contains all objects at the time this dump was taken. Some of these
       * will be live, some of those unreachable (garbage). To find the live
       * objects, the client needs to build the transitive closure of objects
       * reachable from |roots|.
       * All objects not contained within that transitive closure are garbage that
       * has not yet been collected.
       * </pre>
       *
       * <code>repeated .perfetto.protos.HeapGraphObject objects = 2;</code>
       */
      public perfetto.protos.HeapGraphOuterClass.HeapGraphObject getObjects(int index) {
        if (objectsBuilder_ == null) {
          return objects_.get(index);
        } else {
          return objectsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * This contains all objects at the time this dump was taken. Some of these
       * will be live, some of those unreachable (garbage). To find the live
       * objects, the client needs to build the transitive closure of objects
       * reachable from |roots|.
       * All objects not contained within that transitive closure are garbage that
       * has not yet been collected.
       * </pre>
       *
       * <code>repeated .perfetto.protos.HeapGraphObject objects = 2;</code>
       */
      public Builder setObjects(
          int index, perfetto.protos.HeapGraphOuterClass.HeapGraphObject value) {
        if (objectsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureObjectsIsMutable();
          objects_.set(index, value);
          onChanged();
        } else {
          objectsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * This contains all objects at the time this dump was taken. Some of these
       * will be live, some of those unreachable (garbage). To find the live
       * objects, the client needs to build the transitive closure of objects
       * reachable from |roots|.
       * All objects not contained within that transitive closure are garbage that
       * has not yet been collected.
       * </pre>
       *
       * <code>repeated .perfetto.protos.HeapGraphObject objects = 2;</code>
       */
      public Builder setObjects(
          int index, perfetto.protos.HeapGraphOuterClass.HeapGraphObject.Builder builderForValue) {
        if (objectsBuilder_ == null) {
          ensureObjectsIsMutable();
          objects_.set(index, builderForValue.build());
          onChanged();
        } else {
          objectsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * This contains all objects at the time this dump was taken. Some of these
       * will be live, some of those unreachable (garbage). To find the live
       * objects, the client needs to build the transitive closure of objects
       * reachable from |roots|.
       * All objects not contained within that transitive closure are garbage that
       * has not yet been collected.
       * </pre>
       *
       * <code>repeated .perfetto.protos.HeapGraphObject objects = 2;</code>
       */
      public Builder addObjects(perfetto.protos.HeapGraphOuterClass.HeapGraphObject value) {
        if (objectsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureObjectsIsMutable();
          objects_.add(value);
          onChanged();
        } else {
          objectsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * This contains all objects at the time this dump was taken. Some of these
       * will be live, some of those unreachable (garbage). To find the live
       * objects, the client needs to build the transitive closure of objects
       * reachable from |roots|.
       * All objects not contained within that transitive closure are garbage that
       * has not yet been collected.
       * </pre>
       *
       * <code>repeated .perfetto.protos.HeapGraphObject objects = 2;</code>
       */
      public Builder addObjects(
          int index, perfetto.protos.HeapGraphOuterClass.HeapGraphObject value) {
        if (objectsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureObjectsIsMutable();
          objects_.add(index, value);
          onChanged();
        } else {
          objectsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * This contains all objects at the time this dump was taken. Some of these
       * will be live, some of those unreachable (garbage). To find the live
       * objects, the client needs to build the transitive closure of objects
       * reachable from |roots|.
       * All objects not contained within that transitive closure are garbage that
       * has not yet been collected.
       * </pre>
       *
       * <code>repeated .perfetto.protos.HeapGraphObject objects = 2;</code>
       */
      public Builder addObjects(
          perfetto.protos.HeapGraphOuterClass.HeapGraphObject.Builder builderForValue) {
        if (objectsBuilder_ == null) {
          ensureObjectsIsMutable();
          objects_.add(builderForValue.build());
          onChanged();
        } else {
          objectsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * This contains all objects at the time this dump was taken. Some of these
       * will be live, some of those unreachable (garbage). To find the live
       * objects, the client needs to build the transitive closure of objects
       * reachable from |roots|.
       * All objects not contained within that transitive closure are garbage that
       * has not yet been collected.
       * </pre>
       *
       * <code>repeated .perfetto.protos.HeapGraphObject objects = 2;</code>
       */
      public Builder addObjects(
          int index, perfetto.protos.HeapGraphOuterClass.HeapGraphObject.Builder builderForValue) {
        if (objectsBuilder_ == null) {
          ensureObjectsIsMutable();
          objects_.add(index, builderForValue.build());
          onChanged();
        } else {
          objectsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * This contains all objects at the time this dump was taken. Some of these
       * will be live, some of those unreachable (garbage). To find the live
       * objects, the client needs to build the transitive closure of objects
       * reachable from |roots|.
       * All objects not contained within that transitive closure are garbage that
       * has not yet been collected.
       * </pre>
       *
       * <code>repeated .perfetto.protos.HeapGraphObject objects = 2;</code>
       */
      public Builder addAllObjects(
          java.lang.Iterable<? extends perfetto.protos.HeapGraphOuterClass.HeapGraphObject> values) {
        if (objectsBuilder_ == null) {
          ensureObjectsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, objects_);
          onChanged();
        } else {
          objectsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * This contains all objects at the time this dump was taken. Some of these
       * will be live, some of those unreachable (garbage). To find the live
       * objects, the client needs to build the transitive closure of objects
       * reachable from |roots|.
       * All objects not contained within that transitive closure are garbage that
       * has not yet been collected.
       * </pre>
       *
       * <code>repeated .perfetto.protos.HeapGraphObject objects = 2;</code>
       */
      public Builder clearObjects() {
        if (objectsBuilder_ == null) {
          objects_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          objectsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * This contains all objects at the time this dump was taken. Some of these
       * will be live, some of those unreachable (garbage). To find the live
       * objects, the client needs to build the transitive closure of objects
       * reachable from |roots|.
       * All objects not contained within that transitive closure are garbage that
       * has not yet been collected.
       * </pre>
       *
       * <code>repeated .perfetto.protos.HeapGraphObject objects = 2;</code>
       */
      public Builder removeObjects(int index) {
        if (objectsBuilder_ == null) {
          ensureObjectsIsMutable();
          objects_.remove(index);
          onChanged();
        } else {
          objectsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * This contains all objects at the time this dump was taken. Some of these
       * will be live, some of those unreachable (garbage). To find the live
       * objects, the client needs to build the transitive closure of objects
       * reachable from |roots|.
       * All objects not contained within that transitive closure are garbage that
       * has not yet been collected.
       * </pre>
       *
       * <code>repeated .perfetto.protos.HeapGraphObject objects = 2;</code>
       */
      public perfetto.protos.HeapGraphOuterClass.HeapGraphObject.Builder getObjectsBuilder(
          int index) {
        return getObjectsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * This contains all objects at the time this dump was taken. Some of these
       * will be live, some of those unreachable (garbage). To find the live
       * objects, the client needs to build the transitive closure of objects
       * reachable from |roots|.
       * All objects not contained within that transitive closure are garbage that
       * has not yet been collected.
       * </pre>
       *
       * <code>repeated .perfetto.protos.HeapGraphObject objects = 2;</code>
       */
      public perfetto.protos.HeapGraphOuterClass.HeapGraphObjectOrBuilder getObjectsOrBuilder(
          int index) {
        if (objectsBuilder_ == null) {
          return objects_.get(index);  } else {
          return objectsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * This contains all objects at the time this dump was taken. Some of these
       * will be live, some of those unreachable (garbage). To find the live
       * objects, the client needs to build the transitive closure of objects
       * reachable from |roots|.
       * All objects not contained within that transitive closure are garbage that
       * has not yet been collected.
       * </pre>
       *
       * <code>repeated .perfetto.protos.HeapGraphObject objects = 2;</code>
       */
      public java.util.List<? extends perfetto.protos.HeapGraphOuterClass.HeapGraphObjectOrBuilder> 
           getObjectsOrBuilderList() {
        if (objectsBuilder_ != null) {
          return objectsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(objects_);
        }
      }
      /**
       * <pre>
       * This contains all objects at the time this dump was taken. Some of these
       * will be live, some of those unreachable (garbage). To find the live
       * objects, the client needs to build the transitive closure of objects
       * reachable from |roots|.
       * All objects not contained within that transitive closure are garbage that
       * has not yet been collected.
       * </pre>
       *
       * <code>repeated .perfetto.protos.HeapGraphObject objects = 2;</code>
       */
      public perfetto.protos.HeapGraphOuterClass.HeapGraphObject.Builder addObjectsBuilder() {
        return getObjectsFieldBuilder().addBuilder(
            perfetto.protos.HeapGraphOuterClass.HeapGraphObject.getDefaultInstance());
      }
      /**
       * <pre>
       * This contains all objects at the time this dump was taken. Some of these
       * will be live, some of those unreachable (garbage). To find the live
       * objects, the client needs to build the transitive closure of objects
       * reachable from |roots|.
       * All objects not contained within that transitive closure are garbage that
       * has not yet been collected.
       * </pre>
       *
       * <code>repeated .perfetto.protos.HeapGraphObject objects = 2;</code>
       */
      public perfetto.protos.HeapGraphOuterClass.HeapGraphObject.Builder addObjectsBuilder(
          int index) {
        return getObjectsFieldBuilder().addBuilder(
            index, perfetto.protos.HeapGraphOuterClass.HeapGraphObject.getDefaultInstance());
      }
      /**
       * <pre>
       * This contains all objects at the time this dump was taken. Some of these
       * will be live, some of those unreachable (garbage). To find the live
       * objects, the client needs to build the transitive closure of objects
       * reachable from |roots|.
       * All objects not contained within that transitive closure are garbage that
       * has not yet been collected.
       * </pre>
       *
       * <code>repeated .perfetto.protos.HeapGraphObject objects = 2;</code>
       */
      public java.util.List<perfetto.protos.HeapGraphOuterClass.HeapGraphObject.Builder> 
           getObjectsBuilderList() {
        return getObjectsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.HeapGraphOuterClass.HeapGraphObject, perfetto.protos.HeapGraphOuterClass.HeapGraphObject.Builder, perfetto.protos.HeapGraphOuterClass.HeapGraphObjectOrBuilder> 
          getObjectsFieldBuilder() {
        if (objectsBuilder_ == null) {
          objectsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              perfetto.protos.HeapGraphOuterClass.HeapGraphObject, perfetto.protos.HeapGraphOuterClass.HeapGraphObject.Builder, perfetto.protos.HeapGraphOuterClass.HeapGraphObjectOrBuilder>(
                  objects_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          objects_ = null;
        }
        return objectsBuilder_;
      }

      private java.util.List<perfetto.protos.HeapGraphOuterClass.HeapGraphRoot> roots_ =
        java.util.Collections.emptyList();
      private void ensureRootsIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          roots_ = new java.util.ArrayList<perfetto.protos.HeapGraphOuterClass.HeapGraphRoot>(roots_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.HeapGraphOuterClass.HeapGraphRoot, perfetto.protos.HeapGraphOuterClass.HeapGraphRoot.Builder, perfetto.protos.HeapGraphOuterClass.HeapGraphRootOrBuilder> rootsBuilder_;

      /**
       * <pre>
       * Roots at the time this dump was taken.
       * All live objects are reachable from the roots. All other objects are
       * garbage.
       * </pre>
       *
       * <code>repeated .perfetto.protos.HeapGraphRoot roots = 7;</code>
       */
      public java.util.List<perfetto.protos.HeapGraphOuterClass.HeapGraphRoot> getRootsList() {
        if (rootsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(roots_);
        } else {
          return rootsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Roots at the time this dump was taken.
       * All live objects are reachable from the roots. All other objects are
       * garbage.
       * </pre>
       *
       * <code>repeated .perfetto.protos.HeapGraphRoot roots = 7;</code>
       */
      public int getRootsCount() {
        if (rootsBuilder_ == null) {
          return roots_.size();
        } else {
          return rootsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Roots at the time this dump was taken.
       * All live objects are reachable from the roots. All other objects are
       * garbage.
       * </pre>
       *
       * <code>repeated .perfetto.protos.HeapGraphRoot roots = 7;</code>
       */
      public perfetto.protos.HeapGraphOuterClass.HeapGraphRoot getRoots(int index) {
        if (rootsBuilder_ == null) {
          return roots_.get(index);
        } else {
          return rootsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Roots at the time this dump was taken.
       * All live objects are reachable from the roots. All other objects are
       * garbage.
       * </pre>
       *
       * <code>repeated .perfetto.protos.HeapGraphRoot roots = 7;</code>
       */
      public Builder setRoots(
          int index, perfetto.protos.HeapGraphOuterClass.HeapGraphRoot value) {
        if (rootsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRootsIsMutable();
          roots_.set(index, value);
          onChanged();
        } else {
          rootsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Roots at the time this dump was taken.
       * All live objects are reachable from the roots. All other objects are
       * garbage.
       * </pre>
       *
       * <code>repeated .perfetto.protos.HeapGraphRoot roots = 7;</code>
       */
      public Builder setRoots(
          int index, perfetto.protos.HeapGraphOuterClass.HeapGraphRoot.Builder builderForValue) {
        if (rootsBuilder_ == null) {
          ensureRootsIsMutable();
          roots_.set(index, builderForValue.build());
          onChanged();
        } else {
          rootsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Roots at the time this dump was taken.
       * All live objects are reachable from the roots. All other objects are
       * garbage.
       * </pre>
       *
       * <code>repeated .perfetto.protos.HeapGraphRoot roots = 7;</code>
       */
      public Builder addRoots(perfetto.protos.HeapGraphOuterClass.HeapGraphRoot value) {
        if (rootsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRootsIsMutable();
          roots_.add(value);
          onChanged();
        } else {
          rootsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Roots at the time this dump was taken.
       * All live objects are reachable from the roots. All other objects are
       * garbage.
       * </pre>
       *
       * <code>repeated .perfetto.protos.HeapGraphRoot roots = 7;</code>
       */
      public Builder addRoots(
          int index, perfetto.protos.HeapGraphOuterClass.HeapGraphRoot value) {
        if (rootsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRootsIsMutable();
          roots_.add(index, value);
          onChanged();
        } else {
          rootsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Roots at the time this dump was taken.
       * All live objects are reachable from the roots. All other objects are
       * garbage.
       * </pre>
       *
       * <code>repeated .perfetto.protos.HeapGraphRoot roots = 7;</code>
       */
      public Builder addRoots(
          perfetto.protos.HeapGraphOuterClass.HeapGraphRoot.Builder builderForValue) {
        if (rootsBuilder_ == null) {
          ensureRootsIsMutable();
          roots_.add(builderForValue.build());
          onChanged();
        } else {
          rootsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Roots at the time this dump was taken.
       * All live objects are reachable from the roots. All other objects are
       * garbage.
       * </pre>
       *
       * <code>repeated .perfetto.protos.HeapGraphRoot roots = 7;</code>
       */
      public Builder addRoots(
          int index, perfetto.protos.HeapGraphOuterClass.HeapGraphRoot.Builder builderForValue) {
        if (rootsBuilder_ == null) {
          ensureRootsIsMutable();
          roots_.add(index, builderForValue.build());
          onChanged();
        } else {
          rootsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Roots at the time this dump was taken.
       * All live objects are reachable from the roots. All other objects are
       * garbage.
       * </pre>
       *
       * <code>repeated .perfetto.protos.HeapGraphRoot roots = 7;</code>
       */
      public Builder addAllRoots(
          java.lang.Iterable<? extends perfetto.protos.HeapGraphOuterClass.HeapGraphRoot> values) {
        if (rootsBuilder_ == null) {
          ensureRootsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, roots_);
          onChanged();
        } else {
          rootsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Roots at the time this dump was taken.
       * All live objects are reachable from the roots. All other objects are
       * garbage.
       * </pre>
       *
       * <code>repeated .perfetto.protos.HeapGraphRoot roots = 7;</code>
       */
      public Builder clearRoots() {
        if (rootsBuilder_ == null) {
          roots_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          rootsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Roots at the time this dump was taken.
       * All live objects are reachable from the roots. All other objects are
       * garbage.
       * </pre>
       *
       * <code>repeated .perfetto.protos.HeapGraphRoot roots = 7;</code>
       */
      public Builder removeRoots(int index) {
        if (rootsBuilder_ == null) {
          ensureRootsIsMutable();
          roots_.remove(index);
          onChanged();
        } else {
          rootsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Roots at the time this dump was taken.
       * All live objects are reachable from the roots. All other objects are
       * garbage.
       * </pre>
       *
       * <code>repeated .perfetto.protos.HeapGraphRoot roots = 7;</code>
       */
      public perfetto.protos.HeapGraphOuterClass.HeapGraphRoot.Builder getRootsBuilder(
          int index) {
        return getRootsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Roots at the time this dump was taken.
       * All live objects are reachable from the roots. All other objects are
       * garbage.
       * </pre>
       *
       * <code>repeated .perfetto.protos.HeapGraphRoot roots = 7;</code>
       */
      public perfetto.protos.HeapGraphOuterClass.HeapGraphRootOrBuilder getRootsOrBuilder(
          int index) {
        if (rootsBuilder_ == null) {
          return roots_.get(index);  } else {
          return rootsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Roots at the time this dump was taken.
       * All live objects are reachable from the roots. All other objects are
       * garbage.
       * </pre>
       *
       * <code>repeated .perfetto.protos.HeapGraphRoot roots = 7;</code>
       */
      public java.util.List<? extends perfetto.protos.HeapGraphOuterClass.HeapGraphRootOrBuilder> 
           getRootsOrBuilderList() {
        if (rootsBuilder_ != null) {
          return rootsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(roots_);
        }
      }
      /**
       * <pre>
       * Roots at the time this dump was taken.
       * All live objects are reachable from the roots. All other objects are
       * garbage.
       * </pre>
       *
       * <code>repeated .perfetto.protos.HeapGraphRoot roots = 7;</code>
       */
      public perfetto.protos.HeapGraphOuterClass.HeapGraphRoot.Builder addRootsBuilder() {
        return getRootsFieldBuilder().addBuilder(
            perfetto.protos.HeapGraphOuterClass.HeapGraphRoot.getDefaultInstance());
      }
      /**
       * <pre>
       * Roots at the time this dump was taken.
       * All live objects are reachable from the roots. All other objects are
       * garbage.
       * </pre>
       *
       * <code>repeated .perfetto.protos.HeapGraphRoot roots = 7;</code>
       */
      public perfetto.protos.HeapGraphOuterClass.HeapGraphRoot.Builder addRootsBuilder(
          int index) {
        return getRootsFieldBuilder().addBuilder(
            index, perfetto.protos.HeapGraphOuterClass.HeapGraphRoot.getDefaultInstance());
      }
      /**
       * <pre>
       * Roots at the time this dump was taken.
       * All live objects are reachable from the roots. All other objects are
       * garbage.
       * </pre>
       *
       * <code>repeated .perfetto.protos.HeapGraphRoot roots = 7;</code>
       */
      public java.util.List<perfetto.protos.HeapGraphOuterClass.HeapGraphRoot.Builder> 
           getRootsBuilderList() {
        return getRootsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.HeapGraphOuterClass.HeapGraphRoot, perfetto.protos.HeapGraphOuterClass.HeapGraphRoot.Builder, perfetto.protos.HeapGraphOuterClass.HeapGraphRootOrBuilder> 
          getRootsFieldBuilder() {
        if (rootsBuilder_ == null) {
          rootsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              perfetto.protos.HeapGraphOuterClass.HeapGraphRoot, perfetto.protos.HeapGraphOuterClass.HeapGraphRoot.Builder, perfetto.protos.HeapGraphOuterClass.HeapGraphRootOrBuilder>(
                  roots_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          roots_ = null;
        }
        return rootsBuilder_;
      }

      private java.util.List<perfetto.protos.HeapGraphOuterClass.HeapGraphType> types_ =
        java.util.Collections.emptyList();
      private void ensureTypesIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          types_ = new java.util.ArrayList<perfetto.protos.HeapGraphOuterClass.HeapGraphType>(types_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.HeapGraphOuterClass.HeapGraphType, perfetto.protos.HeapGraphOuterClass.HeapGraphType.Builder, perfetto.protos.HeapGraphOuterClass.HeapGraphTypeOrBuilder> typesBuilder_;

      /**
       * <pre>
       * Types used in HeapGraphObjects.
       * </pre>
       *
       * <code>repeated .perfetto.protos.HeapGraphType types = 9;</code>
       */
      public java.util.List<perfetto.protos.HeapGraphOuterClass.HeapGraphType> getTypesList() {
        if (typesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(types_);
        } else {
          return typesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Types used in HeapGraphObjects.
       * </pre>
       *
       * <code>repeated .perfetto.protos.HeapGraphType types = 9;</code>
       */
      public int getTypesCount() {
        if (typesBuilder_ == null) {
          return types_.size();
        } else {
          return typesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Types used in HeapGraphObjects.
       * </pre>
       *
       * <code>repeated .perfetto.protos.HeapGraphType types = 9;</code>
       */
      public perfetto.protos.HeapGraphOuterClass.HeapGraphType getTypes(int index) {
        if (typesBuilder_ == null) {
          return types_.get(index);
        } else {
          return typesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Types used in HeapGraphObjects.
       * </pre>
       *
       * <code>repeated .perfetto.protos.HeapGraphType types = 9;</code>
       */
      public Builder setTypes(
          int index, perfetto.protos.HeapGraphOuterClass.HeapGraphType value) {
        if (typesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTypesIsMutable();
          types_.set(index, value);
          onChanged();
        } else {
          typesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Types used in HeapGraphObjects.
       * </pre>
       *
       * <code>repeated .perfetto.protos.HeapGraphType types = 9;</code>
       */
      public Builder setTypes(
          int index, perfetto.protos.HeapGraphOuterClass.HeapGraphType.Builder builderForValue) {
        if (typesBuilder_ == null) {
          ensureTypesIsMutable();
          types_.set(index, builderForValue.build());
          onChanged();
        } else {
          typesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Types used in HeapGraphObjects.
       * </pre>
       *
       * <code>repeated .perfetto.protos.HeapGraphType types = 9;</code>
       */
      public Builder addTypes(perfetto.protos.HeapGraphOuterClass.HeapGraphType value) {
        if (typesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTypesIsMutable();
          types_.add(value);
          onChanged();
        } else {
          typesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Types used in HeapGraphObjects.
       * </pre>
       *
       * <code>repeated .perfetto.protos.HeapGraphType types = 9;</code>
       */
      public Builder addTypes(
          int index, perfetto.protos.HeapGraphOuterClass.HeapGraphType value) {
        if (typesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTypesIsMutable();
          types_.add(index, value);
          onChanged();
        } else {
          typesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Types used in HeapGraphObjects.
       * </pre>
       *
       * <code>repeated .perfetto.protos.HeapGraphType types = 9;</code>
       */
      public Builder addTypes(
          perfetto.protos.HeapGraphOuterClass.HeapGraphType.Builder builderForValue) {
        if (typesBuilder_ == null) {
          ensureTypesIsMutable();
          types_.add(builderForValue.build());
          onChanged();
        } else {
          typesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Types used in HeapGraphObjects.
       * </pre>
       *
       * <code>repeated .perfetto.protos.HeapGraphType types = 9;</code>
       */
      public Builder addTypes(
          int index, perfetto.protos.HeapGraphOuterClass.HeapGraphType.Builder builderForValue) {
        if (typesBuilder_ == null) {
          ensureTypesIsMutable();
          types_.add(index, builderForValue.build());
          onChanged();
        } else {
          typesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Types used in HeapGraphObjects.
       * </pre>
       *
       * <code>repeated .perfetto.protos.HeapGraphType types = 9;</code>
       */
      public Builder addAllTypes(
          java.lang.Iterable<? extends perfetto.protos.HeapGraphOuterClass.HeapGraphType> values) {
        if (typesBuilder_ == null) {
          ensureTypesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, types_);
          onChanged();
        } else {
          typesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Types used in HeapGraphObjects.
       * </pre>
       *
       * <code>repeated .perfetto.protos.HeapGraphType types = 9;</code>
       */
      public Builder clearTypes() {
        if (typesBuilder_ == null) {
          types_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          typesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Types used in HeapGraphObjects.
       * </pre>
       *
       * <code>repeated .perfetto.protos.HeapGraphType types = 9;</code>
       */
      public Builder removeTypes(int index) {
        if (typesBuilder_ == null) {
          ensureTypesIsMutable();
          types_.remove(index);
          onChanged();
        } else {
          typesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Types used in HeapGraphObjects.
       * </pre>
       *
       * <code>repeated .perfetto.protos.HeapGraphType types = 9;</code>
       */
      public perfetto.protos.HeapGraphOuterClass.HeapGraphType.Builder getTypesBuilder(
          int index) {
        return getTypesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Types used in HeapGraphObjects.
       * </pre>
       *
       * <code>repeated .perfetto.protos.HeapGraphType types = 9;</code>
       */
      public perfetto.protos.HeapGraphOuterClass.HeapGraphTypeOrBuilder getTypesOrBuilder(
          int index) {
        if (typesBuilder_ == null) {
          return types_.get(index);  } else {
          return typesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Types used in HeapGraphObjects.
       * </pre>
       *
       * <code>repeated .perfetto.protos.HeapGraphType types = 9;</code>
       */
      public java.util.List<? extends perfetto.protos.HeapGraphOuterClass.HeapGraphTypeOrBuilder> 
           getTypesOrBuilderList() {
        if (typesBuilder_ != null) {
          return typesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(types_);
        }
      }
      /**
       * <pre>
       * Types used in HeapGraphObjects.
       * </pre>
       *
       * <code>repeated .perfetto.protos.HeapGraphType types = 9;</code>
       */
      public perfetto.protos.HeapGraphOuterClass.HeapGraphType.Builder addTypesBuilder() {
        return getTypesFieldBuilder().addBuilder(
            perfetto.protos.HeapGraphOuterClass.HeapGraphType.getDefaultInstance());
      }
      /**
       * <pre>
       * Types used in HeapGraphObjects.
       * </pre>
       *
       * <code>repeated .perfetto.protos.HeapGraphType types = 9;</code>
       */
      public perfetto.protos.HeapGraphOuterClass.HeapGraphType.Builder addTypesBuilder(
          int index) {
        return getTypesFieldBuilder().addBuilder(
            index, perfetto.protos.HeapGraphOuterClass.HeapGraphType.getDefaultInstance());
      }
      /**
       * <pre>
       * Types used in HeapGraphObjects.
       * </pre>
       *
       * <code>repeated .perfetto.protos.HeapGraphType types = 9;</code>
       */
      public java.util.List<perfetto.protos.HeapGraphOuterClass.HeapGraphType.Builder> 
           getTypesBuilderList() {
        return getTypesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.HeapGraphOuterClass.HeapGraphType, perfetto.protos.HeapGraphOuterClass.HeapGraphType.Builder, perfetto.protos.HeapGraphOuterClass.HeapGraphTypeOrBuilder> 
          getTypesFieldBuilder() {
        if (typesBuilder_ == null) {
          typesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              perfetto.protos.HeapGraphOuterClass.HeapGraphType, perfetto.protos.HeapGraphOuterClass.HeapGraphType.Builder, perfetto.protos.HeapGraphOuterClass.HeapGraphTypeOrBuilder>(
                  types_,
                  ((bitField0_ & 0x00000008) != 0),
                  getParentForChildren(),
                  isClean());
          types_ = null;
        }
        return typesBuilder_;
      }

      private java.util.List<perfetto.protos.ProfileCommon.InternedString> fieldNames_ =
        java.util.Collections.emptyList();
      private void ensureFieldNamesIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          fieldNames_ = new java.util.ArrayList<perfetto.protos.ProfileCommon.InternedString>(fieldNames_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.ProfileCommon.InternedString, perfetto.protos.ProfileCommon.InternedString.Builder, perfetto.protos.ProfileCommon.InternedStringOrBuilder> fieldNamesBuilder_;

      /**
       * <pre>
       * Field names for references in managed heap graph.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString field_names = 4;</code>
       */
      public java.util.List<perfetto.protos.ProfileCommon.InternedString> getFieldNamesList() {
        if (fieldNamesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fieldNames_);
        } else {
          return fieldNamesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Field names for references in managed heap graph.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString field_names = 4;</code>
       */
      public int getFieldNamesCount() {
        if (fieldNamesBuilder_ == null) {
          return fieldNames_.size();
        } else {
          return fieldNamesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Field names for references in managed heap graph.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString field_names = 4;</code>
       */
      public perfetto.protos.ProfileCommon.InternedString getFieldNames(int index) {
        if (fieldNamesBuilder_ == null) {
          return fieldNames_.get(index);
        } else {
          return fieldNamesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Field names for references in managed heap graph.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString field_names = 4;</code>
       */
      public Builder setFieldNames(
          int index, perfetto.protos.ProfileCommon.InternedString value) {
        if (fieldNamesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldNamesIsMutable();
          fieldNames_.set(index, value);
          onChanged();
        } else {
          fieldNamesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Field names for references in managed heap graph.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString field_names = 4;</code>
       */
      public Builder setFieldNames(
          int index, perfetto.protos.ProfileCommon.InternedString.Builder builderForValue) {
        if (fieldNamesBuilder_ == null) {
          ensureFieldNamesIsMutable();
          fieldNames_.set(index, builderForValue.build());
          onChanged();
        } else {
          fieldNamesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Field names for references in managed heap graph.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString field_names = 4;</code>
       */
      public Builder addFieldNames(perfetto.protos.ProfileCommon.InternedString value) {
        if (fieldNamesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldNamesIsMutable();
          fieldNames_.add(value);
          onChanged();
        } else {
          fieldNamesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Field names for references in managed heap graph.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString field_names = 4;</code>
       */
      public Builder addFieldNames(
          int index, perfetto.protos.ProfileCommon.InternedString value) {
        if (fieldNamesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFieldNamesIsMutable();
          fieldNames_.add(index, value);
          onChanged();
        } else {
          fieldNamesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Field names for references in managed heap graph.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString field_names = 4;</code>
       */
      public Builder addFieldNames(
          perfetto.protos.ProfileCommon.InternedString.Builder builderForValue) {
        if (fieldNamesBuilder_ == null) {
          ensureFieldNamesIsMutable();
          fieldNames_.add(builderForValue.build());
          onChanged();
        } else {
          fieldNamesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Field names for references in managed heap graph.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString field_names = 4;</code>
       */
      public Builder addFieldNames(
          int index, perfetto.protos.ProfileCommon.InternedString.Builder builderForValue) {
        if (fieldNamesBuilder_ == null) {
          ensureFieldNamesIsMutable();
          fieldNames_.add(index, builderForValue.build());
          onChanged();
        } else {
          fieldNamesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Field names for references in managed heap graph.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString field_names = 4;</code>
       */
      public Builder addAllFieldNames(
          java.lang.Iterable<? extends perfetto.protos.ProfileCommon.InternedString> values) {
        if (fieldNamesBuilder_ == null) {
          ensureFieldNamesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, fieldNames_);
          onChanged();
        } else {
          fieldNamesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Field names for references in managed heap graph.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString field_names = 4;</code>
       */
      public Builder clearFieldNames() {
        if (fieldNamesBuilder_ == null) {
          fieldNames_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          fieldNamesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Field names for references in managed heap graph.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString field_names = 4;</code>
       */
      public Builder removeFieldNames(int index) {
        if (fieldNamesBuilder_ == null) {
          ensureFieldNamesIsMutable();
          fieldNames_.remove(index);
          onChanged();
        } else {
          fieldNamesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Field names for references in managed heap graph.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString field_names = 4;</code>
       */
      public perfetto.protos.ProfileCommon.InternedString.Builder getFieldNamesBuilder(
          int index) {
        return getFieldNamesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Field names for references in managed heap graph.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString field_names = 4;</code>
       */
      public perfetto.protos.ProfileCommon.InternedStringOrBuilder getFieldNamesOrBuilder(
          int index) {
        if (fieldNamesBuilder_ == null) {
          return fieldNames_.get(index);  } else {
          return fieldNamesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Field names for references in managed heap graph.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString field_names = 4;</code>
       */
      public java.util.List<? extends perfetto.protos.ProfileCommon.InternedStringOrBuilder> 
           getFieldNamesOrBuilderList() {
        if (fieldNamesBuilder_ != null) {
          return fieldNamesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fieldNames_);
        }
      }
      /**
       * <pre>
       * Field names for references in managed heap graph.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString field_names = 4;</code>
       */
      public perfetto.protos.ProfileCommon.InternedString.Builder addFieldNamesBuilder() {
        return getFieldNamesFieldBuilder().addBuilder(
            perfetto.protos.ProfileCommon.InternedString.getDefaultInstance());
      }
      /**
       * <pre>
       * Field names for references in managed heap graph.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString field_names = 4;</code>
       */
      public perfetto.protos.ProfileCommon.InternedString.Builder addFieldNamesBuilder(
          int index) {
        return getFieldNamesFieldBuilder().addBuilder(
            index, perfetto.protos.ProfileCommon.InternedString.getDefaultInstance());
      }
      /**
       * <pre>
       * Field names for references in managed heap graph.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString field_names = 4;</code>
       */
      public java.util.List<perfetto.protos.ProfileCommon.InternedString.Builder> 
           getFieldNamesBuilderList() {
        return getFieldNamesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.ProfileCommon.InternedString, perfetto.protos.ProfileCommon.InternedString.Builder, perfetto.protos.ProfileCommon.InternedStringOrBuilder> 
          getFieldNamesFieldBuilder() {
        if (fieldNamesBuilder_ == null) {
          fieldNamesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              perfetto.protos.ProfileCommon.InternedString, perfetto.protos.ProfileCommon.InternedString.Builder, perfetto.protos.ProfileCommon.InternedStringOrBuilder>(
                  fieldNames_,
                  ((bitField0_ & 0x00000010) != 0),
                  getParentForChildren(),
                  isClean());
          fieldNames_ = null;
        }
        return fieldNamesBuilder_;
      }

      private java.util.List<perfetto.protos.ProfileCommon.InternedString> locationNames_ =
        java.util.Collections.emptyList();
      private void ensureLocationNamesIsMutable() {
        if (!((bitField0_ & 0x00000020) != 0)) {
          locationNames_ = new java.util.ArrayList<perfetto.protos.ProfileCommon.InternedString>(locationNames_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.ProfileCommon.InternedString, perfetto.protos.ProfileCommon.InternedString.Builder, perfetto.protos.ProfileCommon.InternedStringOrBuilder> locationNamesBuilder_;

      /**
       * <pre>
       * Paths of files used in managed heap graph.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString location_names = 8;</code>
       */
      public java.util.List<perfetto.protos.ProfileCommon.InternedString> getLocationNamesList() {
        if (locationNamesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(locationNames_);
        } else {
          return locationNamesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Paths of files used in managed heap graph.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString location_names = 8;</code>
       */
      public int getLocationNamesCount() {
        if (locationNamesBuilder_ == null) {
          return locationNames_.size();
        } else {
          return locationNamesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Paths of files used in managed heap graph.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString location_names = 8;</code>
       */
      public perfetto.protos.ProfileCommon.InternedString getLocationNames(int index) {
        if (locationNamesBuilder_ == null) {
          return locationNames_.get(index);
        } else {
          return locationNamesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Paths of files used in managed heap graph.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString location_names = 8;</code>
       */
      public Builder setLocationNames(
          int index, perfetto.protos.ProfileCommon.InternedString value) {
        if (locationNamesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLocationNamesIsMutable();
          locationNames_.set(index, value);
          onChanged();
        } else {
          locationNamesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Paths of files used in managed heap graph.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString location_names = 8;</code>
       */
      public Builder setLocationNames(
          int index, perfetto.protos.ProfileCommon.InternedString.Builder builderForValue) {
        if (locationNamesBuilder_ == null) {
          ensureLocationNamesIsMutable();
          locationNames_.set(index, builderForValue.build());
          onChanged();
        } else {
          locationNamesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Paths of files used in managed heap graph.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString location_names = 8;</code>
       */
      public Builder addLocationNames(perfetto.protos.ProfileCommon.InternedString value) {
        if (locationNamesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLocationNamesIsMutable();
          locationNames_.add(value);
          onChanged();
        } else {
          locationNamesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Paths of files used in managed heap graph.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString location_names = 8;</code>
       */
      public Builder addLocationNames(
          int index, perfetto.protos.ProfileCommon.InternedString value) {
        if (locationNamesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLocationNamesIsMutable();
          locationNames_.add(index, value);
          onChanged();
        } else {
          locationNamesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Paths of files used in managed heap graph.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString location_names = 8;</code>
       */
      public Builder addLocationNames(
          perfetto.protos.ProfileCommon.InternedString.Builder builderForValue) {
        if (locationNamesBuilder_ == null) {
          ensureLocationNamesIsMutable();
          locationNames_.add(builderForValue.build());
          onChanged();
        } else {
          locationNamesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Paths of files used in managed heap graph.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString location_names = 8;</code>
       */
      public Builder addLocationNames(
          int index, perfetto.protos.ProfileCommon.InternedString.Builder builderForValue) {
        if (locationNamesBuilder_ == null) {
          ensureLocationNamesIsMutable();
          locationNames_.add(index, builderForValue.build());
          onChanged();
        } else {
          locationNamesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Paths of files used in managed heap graph.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString location_names = 8;</code>
       */
      public Builder addAllLocationNames(
          java.lang.Iterable<? extends perfetto.protos.ProfileCommon.InternedString> values) {
        if (locationNamesBuilder_ == null) {
          ensureLocationNamesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, locationNames_);
          onChanged();
        } else {
          locationNamesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Paths of files used in managed heap graph.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString location_names = 8;</code>
       */
      public Builder clearLocationNames() {
        if (locationNamesBuilder_ == null) {
          locationNames_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          locationNamesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Paths of files used in managed heap graph.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString location_names = 8;</code>
       */
      public Builder removeLocationNames(int index) {
        if (locationNamesBuilder_ == null) {
          ensureLocationNamesIsMutable();
          locationNames_.remove(index);
          onChanged();
        } else {
          locationNamesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Paths of files used in managed heap graph.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString location_names = 8;</code>
       */
      public perfetto.protos.ProfileCommon.InternedString.Builder getLocationNamesBuilder(
          int index) {
        return getLocationNamesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Paths of files used in managed heap graph.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString location_names = 8;</code>
       */
      public perfetto.protos.ProfileCommon.InternedStringOrBuilder getLocationNamesOrBuilder(
          int index) {
        if (locationNamesBuilder_ == null) {
          return locationNames_.get(index);  } else {
          return locationNamesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Paths of files used in managed heap graph.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString location_names = 8;</code>
       */
      public java.util.List<? extends perfetto.protos.ProfileCommon.InternedStringOrBuilder> 
           getLocationNamesOrBuilderList() {
        if (locationNamesBuilder_ != null) {
          return locationNamesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(locationNames_);
        }
      }
      /**
       * <pre>
       * Paths of files used in managed heap graph.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString location_names = 8;</code>
       */
      public perfetto.protos.ProfileCommon.InternedString.Builder addLocationNamesBuilder() {
        return getLocationNamesFieldBuilder().addBuilder(
            perfetto.protos.ProfileCommon.InternedString.getDefaultInstance());
      }
      /**
       * <pre>
       * Paths of files used in managed heap graph.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString location_names = 8;</code>
       */
      public perfetto.protos.ProfileCommon.InternedString.Builder addLocationNamesBuilder(
          int index) {
        return getLocationNamesFieldBuilder().addBuilder(
            index, perfetto.protos.ProfileCommon.InternedString.getDefaultInstance());
      }
      /**
       * <pre>
       * Paths of files used in managed heap graph.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString location_names = 8;</code>
       */
      public java.util.List<perfetto.protos.ProfileCommon.InternedString.Builder> 
           getLocationNamesBuilderList() {
        return getLocationNamesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.ProfileCommon.InternedString, perfetto.protos.ProfileCommon.InternedString.Builder, perfetto.protos.ProfileCommon.InternedStringOrBuilder> 
          getLocationNamesFieldBuilder() {
        if (locationNamesBuilder_ == null) {
          locationNamesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              perfetto.protos.ProfileCommon.InternedString, perfetto.protos.ProfileCommon.InternedString.Builder, perfetto.protos.ProfileCommon.InternedStringOrBuilder>(
                  locationNames_,
                  ((bitField0_ & 0x00000020) != 0),
                  getParentForChildren(),
                  isClean());
          locationNames_ = null;
        }
        return locationNamesBuilder_;
      }

      private boolean continued_ ;
      /**
       * <code>optional bool continued = 5;</code>
       * @return Whether the continued field is set.
       */
      @java.lang.Override
      public boolean hasContinued() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional bool continued = 5;</code>
       * @return The continued.
       */
      @java.lang.Override
      public boolean getContinued() {
        return continued_;
      }
      /**
       * <code>optional bool continued = 5;</code>
       * @param value The continued to set.
       * @return This builder for chaining.
       */
      public Builder setContinued(boolean value) {
        
        continued_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool continued = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearContinued() {
        bitField0_ = (bitField0_ & ~0x00000040);
        continued_ = false;
        onChanged();
        return this;
      }

      private long index_ ;
      /**
       * <code>optional uint64 index = 6;</code>
       * @return Whether the index field is set.
       */
      @java.lang.Override
      public boolean hasIndex() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <code>optional uint64 index = 6;</code>
       * @return The index.
       */
      @java.lang.Override
      public long getIndex() {
        return index_;
      }
      /**
       * <code>optional uint64 index = 6;</code>
       * @param value The index to set.
       * @return This builder for chaining.
       */
      public Builder setIndex(long value) {
        
        index_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 index = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearIndex() {
        bitField0_ = (bitField0_ & ~0x00000080);
        index_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:perfetto.protos.HeapGraph)
    }

    // @@protoc_insertion_point(class_scope:perfetto.protos.HeapGraph)
    private static final perfetto.protos.HeapGraphOuterClass.HeapGraph DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new perfetto.protos.HeapGraphOuterClass.HeapGraph();
    }

    public static perfetto.protos.HeapGraphOuterClass.HeapGraph getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<HeapGraph>
        PARSER = new com.google.protobuf.AbstractParser<HeapGraph>() {
      @java.lang.Override
      public HeapGraph parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<HeapGraph> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<HeapGraph> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public perfetto.protos.HeapGraphOuterClass.HeapGraph getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_HeapGraphRoot_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_perfetto_protos_HeapGraphRoot_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_HeapGraphType_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_perfetto_protos_HeapGraphType_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_HeapGraphObject_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_perfetto_protos_HeapGraphObject_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_HeapGraph_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_perfetto_protos_HeapGraph_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n0protos/perfetto/trace/profiling/heap_g" +
      "raph.proto\022\017perfetto.protos\0323protos/perf" +
      "etto/trace/profiling/deobfuscation.proto" +
      "\0324protos/perfetto/trace/profiling/profil" +
      "e_common.proto\"\266\003\n\rHeapGraphRoot\022\026\n\nobje" +
      "ct_ids\030\001 \003(\004B\002\020\001\0226\n\troot_type\030\002 \001(\0162#.pe" +
      "rfetto.protos.HeapGraphRoot.Type\"\324\002\n\004Typ" +
      "e\022\020\n\014ROOT_UNKNOWN\020\000\022\023\n\017ROOT_JNI_GLOBAL\020\001" +
      "\022\022\n\016ROOT_JNI_LOCAL\020\002\022\023\n\017ROOT_JAVA_FRAME\020" +
      "\003\022\025\n\021ROOT_NATIVE_STACK\020\004\022\025\n\021ROOT_STICKY_" +
      "CLASS\020\005\022\025\n\021ROOT_THREAD_BLOCK\020\006\022\025\n\021ROOT_M" +
      "ONITOR_USED\020\007\022\026\n\022ROOT_THREAD_OBJECT\020\010\022\030\n" +
      "\024ROOT_INTERNED_STRING\020\t\022\023\n\017ROOT_FINALIZI" +
      "NG\020\n\022\021\n\rROOT_DEBUGGER\020\013\022\032\n\026ROOT_REFERENC" +
      "E_CLEANUP\020\014\022\024\n\020ROOT_VM_INTERNAL\020\r\022\024\n\020ROO" +
      "T_JNI_MONITOR\020\016\"\344\003\n\rHeapGraphType\022\n\n\002id\030" +
      "\001 \001(\004\022\023\n\013location_id\030\002 \001(\004\022\022\n\nclass_name" +
      "\030\003 \001(\t\022\023\n\013object_size\030\004 \001(\004\022\025\n\rsuperclas" +
      "s_id\030\005 \001(\004\022\036\n\022reference_field_id\030\006 \003(\004B\002" +
      "\020\001\0221\n\004kind\030\007 \001(\0162#.perfetto.protos.HeapG" +
      "raphType.Kind\022\026\n\016classloader_id\030\010 \001(\004\"\206\002" +
      "\n\004Kind\022\020\n\014KIND_UNKNOWN\020\000\022\017\n\013KIND_NORMAL\020" +
      "\001\022\025\n\021KIND_NOREFERENCES\020\002\022\017\n\013KIND_STRING\020" +
      "\003\022\016\n\nKIND_ARRAY\020\004\022\016\n\nKIND_CLASS\020\005\022\024\n\020KIN" +
      "D_CLASSLOADER\020\006\022\021\n\rKIND_DEXCACHE\020\007\022\027\n\023KI" +
      "ND_SOFT_REFERENCE\020\010\022\027\n\023KIND_WEAK_REFEREN" +
      "CE\020\t\022\034\n\030KIND_FINALIZER_REFERENCE\020\n\022\032\n\026KI" +
      "ND_PHANTOM_REFERENCE\020\013\"\366\001\n\017HeapGraphObje" +
      "ct\022\014\n\002id\030\001 \001(\004H\000\022\022\n\010id_delta\030\007 \001(\004H\000\022\017\n\007" +
      "type_id\030\002 \001(\004\022\021\n\tself_size\030\003 \001(\004\022\037\n\027refe" +
      "rence_field_id_base\030\006 \001(\004\022\036\n\022reference_f" +
      "ield_id\030\004 \003(\004B\002\020\001\022\037\n\023reference_object_id" +
      "\030\005 \003(\004B\002\020\001\022-\n%native_allocation_registry" +
      "_size_field\030\010 \001(\003B\014\n\nidentifier\"\300\002\n\tHeap" +
      "Graph\022\013\n\003pid\030\001 \001(\005\0221\n\007objects\030\002 \003(\0132 .pe" +
      "rfetto.protos.HeapGraphObject\022-\n\005roots\030\007" +
      " \003(\0132\036.perfetto.protos.HeapGraphRoot\022-\n\005" +
      "types\030\t \003(\0132\036.perfetto.protos.HeapGraphT" +
      "ype\0224\n\013field_names\030\004 \003(\0132\037.perfetto.prot" +
      "os.InternedString\0227\n\016location_names\030\010 \003(" +
      "\0132\037.perfetto.protos.InternedString\022\021\n\tco" +
      "ntinued\030\005 \001(\010\022\r\n\005index\030\006 \001(\004J\004\010\003\020\004P\000"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          perfetto.protos.Deobfuscation.getDescriptor(),
          perfetto.protos.ProfileCommon.getDescriptor(),
        });
    internal_static_perfetto_protos_HeapGraphRoot_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_perfetto_protos_HeapGraphRoot_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_perfetto_protos_HeapGraphRoot_descriptor,
        new java.lang.String[] { "ObjectIds", "RootType", });
    internal_static_perfetto_protos_HeapGraphType_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_perfetto_protos_HeapGraphType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_perfetto_protos_HeapGraphType_descriptor,
        new java.lang.String[] { "Id", "LocationId", "ClassName", "ObjectSize", "SuperclassId", "ReferenceFieldId", "Kind", "ClassloaderId", });
    internal_static_perfetto_protos_HeapGraphObject_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_perfetto_protos_HeapGraphObject_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_perfetto_protos_HeapGraphObject_descriptor,
        new java.lang.String[] { "Id", "IdDelta", "TypeId", "SelfSize", "ReferenceFieldIdBase", "ReferenceFieldId", "ReferenceObjectId", "NativeAllocationRegistrySizeField", "Identifier", });
    internal_static_perfetto_protos_HeapGraph_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_perfetto_protos_HeapGraph_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_perfetto_protos_HeapGraph_descriptor,
        new java.lang.String[] { "Pid", "Objects", "Roots", "Types", "FieldNames", "LocationNames", "Continued", "Index", });
    perfetto.protos.Deobfuscation.getDescriptor();
    perfetto.protos.ProfileCommon.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
