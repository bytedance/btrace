// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/perfetto/metrics/android/display_metrics.proto

package perfetto.protos;

public final class DisplayMetrics {
  private DisplayMetrics() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface AndroidDisplayMetricsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:perfetto.protos.AndroidDisplayMetrics)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Stat that reports the number of duplicate frames submitted
     * to the display for rendering. That is frames that have the same
     * pixels values but where still submitted. It is tracked based on
     * comparing the MISR of the current frame vs previous frame.
     * </pre>
     *
     * <code>optional uint32 total_duplicate_frames = 1;</code>
     * @return Whether the totalDuplicateFrames field is set.
     */
    boolean hasTotalDuplicateFrames();
    /**
     * <pre>
     * Stat that reports the number of duplicate frames submitted
     * to the display for rendering. That is frames that have the same
     * pixels values but where still submitted. It is tracked based on
     * comparing the MISR of the current frame vs previous frame.
     * </pre>
     *
     * <code>optional uint32 total_duplicate_frames = 1;</code>
     * @return The totalDuplicateFrames.
     */
    int getTotalDuplicateFrames();

    /**
     * <pre>
     * Stat reports whether there is any duplicate_frames tracked
     * </pre>
     *
     * <code>optional uint32 duplicate_frames_logged = 2;</code>
     * @return Whether the duplicateFramesLogged field is set.
     */
    boolean hasDuplicateFramesLogged();
    /**
     * <pre>
     * Stat reports whether there is any duplicate_frames tracked
     * </pre>
     *
     * <code>optional uint32 duplicate_frames_logged = 2;</code>
     * @return The duplicateFramesLogged.
     */
    int getDuplicateFramesLogged();

    /**
     * <pre>
     * Stat that reports the number of dpu underrrun occurs count.
     * </pre>
     *
     * <code>optional uint32 total_dpu_underrun_count = 3;</code>
     * @return Whether the totalDpuUnderrunCount field is set.
     */
    boolean hasTotalDpuUnderrunCount();
    /**
     * <pre>
     * Stat that reports the number of dpu underrrun occurs count.
     * </pre>
     *
     * <code>optional uint32 total_dpu_underrun_count = 3;</code>
     * @return The totalDpuUnderrunCount.
     */
    int getTotalDpuUnderrunCount();

    /**
     * <pre>
     * Calculate the total number of refresh rate changes
     * </pre>
     *
     * <code>optional uint32 refresh_rate_switches = 4;</code>
     * @return Whether the refreshRateSwitches field is set.
     */
    boolean hasRefreshRateSwitches();
    /**
     * <pre>
     * Calculate the total number of refresh rate changes
     * </pre>
     *
     * <code>optional uint32 refresh_rate_switches = 4;</code>
     * @return The refreshRateSwitches.
     */
    int getRefreshRateSwitches();

    /**
     * <pre>
     * The statistics for each refresh rate value
     * </pre>
     *
     * <code>repeated .perfetto.protos.AndroidDisplayMetrics.RefreshRateStat refresh_rate_stats = 5;</code>
     */
    java.util.List<perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat> 
        getRefreshRateStatsList();
    /**
     * <pre>
     * The statistics for each refresh rate value
     * </pre>
     *
     * <code>repeated .perfetto.protos.AndroidDisplayMetrics.RefreshRateStat refresh_rate_stats = 5;</code>
     */
    perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat getRefreshRateStats(int index);
    /**
     * <pre>
     * The statistics for each refresh rate value
     * </pre>
     *
     * <code>repeated .perfetto.protos.AndroidDisplayMetrics.RefreshRateStat refresh_rate_stats = 5;</code>
     */
    int getRefreshRateStatsCount();
    /**
     * <pre>
     * The statistics for each refresh rate value
     * </pre>
     *
     * <code>repeated .perfetto.protos.AndroidDisplayMetrics.RefreshRateStat refresh_rate_stats = 5;</code>
     */
    java.util.List<? extends perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStatOrBuilder> 
        getRefreshRateStatsOrBuilderList();
    /**
     * <pre>
     * The statistics for each refresh rate value
     * </pre>
     *
     * <code>repeated .perfetto.protos.AndroidDisplayMetrics.RefreshRateStat refresh_rate_stats = 5;</code>
     */
    perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStatOrBuilder getRefreshRateStatsOrBuilder(
        int index);

    /**
     * <code>optional .perfetto.protos.AndroidDisplayMetrics.UpdatePowerState update_power_state = 6;</code>
     * @return Whether the updatePowerState field is set.
     */
    boolean hasUpdatePowerState();
    /**
     * <code>optional .perfetto.protos.AndroidDisplayMetrics.UpdatePowerState update_power_state = 6;</code>
     * @return The updatePowerState.
     */
    perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerState getUpdatePowerState();
    /**
     * <code>optional .perfetto.protos.AndroidDisplayMetrics.UpdatePowerState update_power_state = 6;</code>
     */
    perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerStateOrBuilder getUpdatePowerStateOrBuilder();
  }
  /**
   * Protobuf type {@code perfetto.protos.AndroidDisplayMetrics}
   */
  public static final class AndroidDisplayMetrics extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:perfetto.protos.AndroidDisplayMetrics)
      AndroidDisplayMetricsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AndroidDisplayMetrics.newBuilder() to construct.
    private AndroidDisplayMetrics(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AndroidDisplayMetrics() {
      refreshRateStats_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new AndroidDisplayMetrics();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return perfetto.protos.DisplayMetrics.internal_static_perfetto_protos_AndroidDisplayMetrics_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return perfetto.protos.DisplayMetrics.internal_static_perfetto_protos_AndroidDisplayMetrics_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.class, perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.Builder.class);
    }

    public interface RefreshRateStatOrBuilder extends
        // @@protoc_insertion_point(interface_extends:perfetto.protos.AndroidDisplayMetrics.RefreshRateStat)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * The refresh rate value (the number of frames per second)
       * </pre>
       *
       * <code>optional uint32 refresh_rate_fps = 1;</code>
       * @return Whether the refreshRateFps field is set.
       */
      boolean hasRefreshRateFps();
      /**
       * <pre>
       * The refresh rate value (the number of frames per second)
       * </pre>
       *
       * <code>optional uint32 refresh_rate_fps = 1;</code>
       * @return The refreshRateFps.
       */
      int getRefreshRateFps();

      /**
       * <pre>
       * Calculate the number of refresh rate switches to this fps
       * </pre>
       *
       * <code>optional uint32 count = 2;</code>
       * @return Whether the count field is set.
       */
      boolean hasCount();
      /**
       * <pre>
       * Calculate the number of refresh rate switches to this fps
       * </pre>
       *
       * <code>optional uint32 count = 2;</code>
       * @return The count.
       */
      int getCount();

      /**
       * <pre>
       * Calculate the total duration of refresh rate stays at this fps
       * </pre>
       *
       * <code>optional double total_dur_ms = 3;</code>
       * @return Whether the totalDurMs field is set.
       */
      boolean hasTotalDurMs();
      /**
       * <pre>
       * Calculate the total duration of refresh rate stays at this fps
       * </pre>
       *
       * <code>optional double total_dur_ms = 3;</code>
       * @return The totalDurMs.
       */
      double getTotalDurMs();

      /**
       * <pre>
       * Calculate the average duration of refresh rate stays at this fps
       * </pre>
       *
       * <code>optional double avg_dur_ms = 4;</code>
       * @return Whether the avgDurMs field is set.
       */
      boolean hasAvgDurMs();
      /**
       * <pre>
       * Calculate the average duration of refresh rate stays at this fps
       * </pre>
       *
       * <code>optional double avg_dur_ms = 4;</code>
       * @return The avgDurMs.
       */
      double getAvgDurMs();
    }
    /**
     * Protobuf type {@code perfetto.protos.AndroidDisplayMetrics.RefreshRateStat}
     */
    public static final class RefreshRateStat extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:perfetto.protos.AndroidDisplayMetrics.RefreshRateStat)
        RefreshRateStatOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use RefreshRateStat.newBuilder() to construct.
      private RefreshRateStat(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private RefreshRateStat() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new RefreshRateStat();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.DisplayMetrics.internal_static_perfetto_protos_AndroidDisplayMetrics_RefreshRateStat_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.DisplayMetrics.internal_static_perfetto_protos_AndroidDisplayMetrics_RefreshRateStat_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat.class, perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat.Builder.class);
      }

      private int bitField0_;
      public static final int REFRESH_RATE_FPS_FIELD_NUMBER = 1;
      private int refreshRateFps_ = 0;
      /**
       * <pre>
       * The refresh rate value (the number of frames per second)
       * </pre>
       *
       * <code>optional uint32 refresh_rate_fps = 1;</code>
       * @return Whether the refreshRateFps field is set.
       */
      @java.lang.Override
      public boolean hasRefreshRateFps() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * The refresh rate value (the number of frames per second)
       * </pre>
       *
       * <code>optional uint32 refresh_rate_fps = 1;</code>
       * @return The refreshRateFps.
       */
      @java.lang.Override
      public int getRefreshRateFps() {
        return refreshRateFps_;
      }

      public static final int COUNT_FIELD_NUMBER = 2;
      private int count_ = 0;
      /**
       * <pre>
       * Calculate the number of refresh rate switches to this fps
       * </pre>
       *
       * <code>optional uint32 count = 2;</code>
       * @return Whether the count field is set.
       */
      @java.lang.Override
      public boolean hasCount() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Calculate the number of refresh rate switches to this fps
       * </pre>
       *
       * <code>optional uint32 count = 2;</code>
       * @return The count.
       */
      @java.lang.Override
      public int getCount() {
        return count_;
      }

      public static final int TOTAL_DUR_MS_FIELD_NUMBER = 3;
      private double totalDurMs_ = 0D;
      /**
       * <pre>
       * Calculate the total duration of refresh rate stays at this fps
       * </pre>
       *
       * <code>optional double total_dur_ms = 3;</code>
       * @return Whether the totalDurMs field is set.
       */
      @java.lang.Override
      public boolean hasTotalDurMs() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Calculate the total duration of refresh rate stays at this fps
       * </pre>
       *
       * <code>optional double total_dur_ms = 3;</code>
       * @return The totalDurMs.
       */
      @java.lang.Override
      public double getTotalDurMs() {
        return totalDurMs_;
      }

      public static final int AVG_DUR_MS_FIELD_NUMBER = 4;
      private double avgDurMs_ = 0D;
      /**
       * <pre>
       * Calculate the average duration of refresh rate stays at this fps
       * </pre>
       *
       * <code>optional double avg_dur_ms = 4;</code>
       * @return Whether the avgDurMs field is set.
       */
      @java.lang.Override
      public boolean hasAvgDurMs() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Calculate the average duration of refresh rate stays at this fps
       * </pre>
       *
       * <code>optional double avg_dur_ms = 4;</code>
       * @return The avgDurMs.
       */
      @java.lang.Override
      public double getAvgDurMs() {
        return avgDurMs_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeUInt32(1, refreshRateFps_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeUInt32(2, count_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeDouble(3, totalDurMs_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          output.writeDouble(4, avgDurMs_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, refreshRateFps_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, count_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(3, totalDurMs_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(4, avgDurMs_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat)) {
          return super.equals(obj);
        }
        perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat other = (perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat) obj;

        if (hasRefreshRateFps() != other.hasRefreshRateFps()) return false;
        if (hasRefreshRateFps()) {
          if (getRefreshRateFps()
              != other.getRefreshRateFps()) return false;
        }
        if (hasCount() != other.hasCount()) return false;
        if (hasCount()) {
          if (getCount()
              != other.getCount()) return false;
        }
        if (hasTotalDurMs() != other.hasTotalDurMs()) return false;
        if (hasTotalDurMs()) {
          if (java.lang.Double.doubleToLongBits(getTotalDurMs())
              != java.lang.Double.doubleToLongBits(
                  other.getTotalDurMs())) return false;
        }
        if (hasAvgDurMs() != other.hasAvgDurMs()) return false;
        if (hasAvgDurMs()) {
          if (java.lang.Double.doubleToLongBits(getAvgDurMs())
              != java.lang.Double.doubleToLongBits(
                  other.getAvgDurMs())) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasRefreshRateFps()) {
          hash = (37 * hash) + REFRESH_RATE_FPS_FIELD_NUMBER;
          hash = (53 * hash) + getRefreshRateFps();
        }
        if (hasCount()) {
          hash = (37 * hash) + COUNT_FIELD_NUMBER;
          hash = (53 * hash) + getCount();
        }
        if (hasTotalDurMs()) {
          hash = (37 * hash) + TOTAL_DUR_MS_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getTotalDurMs()));
        }
        if (hasAvgDurMs()) {
          hash = (37 * hash) + AVG_DUR_MS_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getAvgDurMs()));
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code perfetto.protos.AndroidDisplayMetrics.RefreshRateStat}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:perfetto.protos.AndroidDisplayMetrics.RefreshRateStat)
          perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStatOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return perfetto.protos.DisplayMetrics.internal_static_perfetto_protos_AndroidDisplayMetrics_RefreshRateStat_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return perfetto.protos.DisplayMetrics.internal_static_perfetto_protos_AndroidDisplayMetrics_RefreshRateStat_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat.class, perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat.Builder.class);
        }

        // Construct using perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          refreshRateFps_ = 0;
          count_ = 0;
          totalDurMs_ = 0D;
          avgDurMs_ = 0D;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return perfetto.protos.DisplayMetrics.internal_static_perfetto_protos_AndroidDisplayMetrics_RefreshRateStat_descriptor;
        }

        @java.lang.Override
        public perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat getDefaultInstanceForType() {
          return perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat.getDefaultInstance();
        }

        @java.lang.Override
        public perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat build() {
          perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat buildPartial() {
          perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat result = new perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.refreshRateFps_ = refreshRateFps_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.count_ = count_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.totalDurMs_ = totalDurMs_;
            to_bitField0_ |= 0x00000004;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.avgDurMs_ = avgDurMs_;
            to_bitField0_ |= 0x00000008;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat) {
            return mergeFrom((perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat other) {
          if (other == perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat.getDefaultInstance()) return this;
          if (other.hasRefreshRateFps()) {
            setRefreshRateFps(other.getRefreshRateFps());
          }
          if (other.hasCount()) {
            setCount(other.getCount());
          }
          if (other.hasTotalDurMs()) {
            setTotalDurMs(other.getTotalDurMs());
          }
          if (other.hasAvgDurMs()) {
            setAvgDurMs(other.getAvgDurMs());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  refreshRateFps_ = input.readUInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 16: {
                  count_ = input.readUInt32();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                case 25: {
                  totalDurMs_ = input.readDouble();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 25
                case 33: {
                  avgDurMs_ = input.readDouble();
                  bitField0_ |= 0x00000008;
                  break;
                } // case 33
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int refreshRateFps_ ;
        /**
         * <pre>
         * The refresh rate value (the number of frames per second)
         * </pre>
         *
         * <code>optional uint32 refresh_rate_fps = 1;</code>
         * @return Whether the refreshRateFps field is set.
         */
        @java.lang.Override
        public boolean hasRefreshRateFps() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * The refresh rate value (the number of frames per second)
         * </pre>
         *
         * <code>optional uint32 refresh_rate_fps = 1;</code>
         * @return The refreshRateFps.
         */
        @java.lang.Override
        public int getRefreshRateFps() {
          return refreshRateFps_;
        }
        /**
         * <pre>
         * The refresh rate value (the number of frames per second)
         * </pre>
         *
         * <code>optional uint32 refresh_rate_fps = 1;</code>
         * @param value The refreshRateFps to set.
         * @return This builder for chaining.
         */
        public Builder setRefreshRateFps(int value) {
          
          refreshRateFps_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The refresh rate value (the number of frames per second)
         * </pre>
         *
         * <code>optional uint32 refresh_rate_fps = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearRefreshRateFps() {
          bitField0_ = (bitField0_ & ~0x00000001);
          refreshRateFps_ = 0;
          onChanged();
          return this;
        }

        private int count_ ;
        /**
         * <pre>
         * Calculate the number of refresh rate switches to this fps
         * </pre>
         *
         * <code>optional uint32 count = 2;</code>
         * @return Whether the count field is set.
         */
        @java.lang.Override
        public boolean hasCount() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * Calculate the number of refresh rate switches to this fps
         * </pre>
         *
         * <code>optional uint32 count = 2;</code>
         * @return The count.
         */
        @java.lang.Override
        public int getCount() {
          return count_;
        }
        /**
         * <pre>
         * Calculate the number of refresh rate switches to this fps
         * </pre>
         *
         * <code>optional uint32 count = 2;</code>
         * @param value The count to set.
         * @return This builder for chaining.
         */
        public Builder setCount(int value) {
          
          count_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Calculate the number of refresh rate switches to this fps
         * </pre>
         *
         * <code>optional uint32 count = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearCount() {
          bitField0_ = (bitField0_ & ~0x00000002);
          count_ = 0;
          onChanged();
          return this;
        }

        private double totalDurMs_ ;
        /**
         * <pre>
         * Calculate the total duration of refresh rate stays at this fps
         * </pre>
         *
         * <code>optional double total_dur_ms = 3;</code>
         * @return Whether the totalDurMs field is set.
         */
        @java.lang.Override
        public boolean hasTotalDurMs() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         * Calculate the total duration of refresh rate stays at this fps
         * </pre>
         *
         * <code>optional double total_dur_ms = 3;</code>
         * @return The totalDurMs.
         */
        @java.lang.Override
        public double getTotalDurMs() {
          return totalDurMs_;
        }
        /**
         * <pre>
         * Calculate the total duration of refresh rate stays at this fps
         * </pre>
         *
         * <code>optional double total_dur_ms = 3;</code>
         * @param value The totalDurMs to set.
         * @return This builder for chaining.
         */
        public Builder setTotalDurMs(double value) {
          
          totalDurMs_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Calculate the total duration of refresh rate stays at this fps
         * </pre>
         *
         * <code>optional double total_dur_ms = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearTotalDurMs() {
          bitField0_ = (bitField0_ & ~0x00000004);
          totalDurMs_ = 0D;
          onChanged();
          return this;
        }

        private double avgDurMs_ ;
        /**
         * <pre>
         * Calculate the average duration of refresh rate stays at this fps
         * </pre>
         *
         * <code>optional double avg_dur_ms = 4;</code>
         * @return Whether the avgDurMs field is set.
         */
        @java.lang.Override
        public boolean hasAvgDurMs() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <pre>
         * Calculate the average duration of refresh rate stays at this fps
         * </pre>
         *
         * <code>optional double avg_dur_ms = 4;</code>
         * @return The avgDurMs.
         */
        @java.lang.Override
        public double getAvgDurMs() {
          return avgDurMs_;
        }
        /**
         * <pre>
         * Calculate the average duration of refresh rate stays at this fps
         * </pre>
         *
         * <code>optional double avg_dur_ms = 4;</code>
         * @param value The avgDurMs to set.
         * @return This builder for chaining.
         */
        public Builder setAvgDurMs(double value) {
          
          avgDurMs_ = value;
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Calculate the average duration of refresh rate stays at this fps
         * </pre>
         *
         * <code>optional double avg_dur_ms = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearAvgDurMs() {
          bitField0_ = (bitField0_ & ~0x00000008);
          avgDurMs_ = 0D;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:perfetto.protos.AndroidDisplayMetrics.RefreshRateStat)
      }

      // @@protoc_insertion_point(class_scope:perfetto.protos.AndroidDisplayMetrics.RefreshRateStat)
      private static final perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat();
      }

      public static perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<RefreshRateStat>
          PARSER = new com.google.protobuf.AbstractParser<RefreshRateStat>() {
        @java.lang.Override
        public RefreshRateStat parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<RefreshRateStat> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<RefreshRateStat> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface UpdatePowerStateOrBuilder extends
        // @@protoc_insertion_point(interface_extends:perfetto.protos.AndroidDisplayMetrics.UpdatePowerState)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint32 avg_runtime_micro_secs = 2;</code>
       * @return Whether the avgRuntimeMicroSecs field is set.
       */
      boolean hasAvgRuntimeMicroSecs();
      /**
       * <code>optional uint32 avg_runtime_micro_secs = 2;</code>
       * @return The avgRuntimeMicroSecs.
       */
      int getAvgRuntimeMicroSecs();
    }
    /**
     * <pre>
     * Stats to measure the runtime of updating the power state in
     * DisplayPowerController
     * </pre>
     *
     * Protobuf type {@code perfetto.protos.AndroidDisplayMetrics.UpdatePowerState}
     */
    public static final class UpdatePowerState extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:perfetto.protos.AndroidDisplayMetrics.UpdatePowerState)
        UpdatePowerStateOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use UpdatePowerState.newBuilder() to construct.
      private UpdatePowerState(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private UpdatePowerState() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new UpdatePowerState();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.DisplayMetrics.internal_static_perfetto_protos_AndroidDisplayMetrics_UpdatePowerState_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.DisplayMetrics.internal_static_perfetto_protos_AndroidDisplayMetrics_UpdatePowerState_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerState.class, perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerState.Builder.class);
      }

      private int bitField0_;
      public static final int AVG_RUNTIME_MICRO_SECS_FIELD_NUMBER = 2;
      private int avgRuntimeMicroSecs_ = 0;
      /**
       * <code>optional uint32 avg_runtime_micro_secs = 2;</code>
       * @return Whether the avgRuntimeMicroSecs field is set.
       */
      @java.lang.Override
      public boolean hasAvgRuntimeMicroSecs() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 avg_runtime_micro_secs = 2;</code>
       * @return The avgRuntimeMicroSecs.
       */
      @java.lang.Override
      public int getAvgRuntimeMicroSecs() {
        return avgRuntimeMicroSecs_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeUInt32(2, avgRuntimeMicroSecs_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, avgRuntimeMicroSecs_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerState)) {
          return super.equals(obj);
        }
        perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerState other = (perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerState) obj;

        if (hasAvgRuntimeMicroSecs() != other.hasAvgRuntimeMicroSecs()) return false;
        if (hasAvgRuntimeMicroSecs()) {
          if (getAvgRuntimeMicroSecs()
              != other.getAvgRuntimeMicroSecs()) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasAvgRuntimeMicroSecs()) {
          hash = (37 * hash) + AVG_RUNTIME_MICRO_SECS_FIELD_NUMBER;
          hash = (53 * hash) + getAvgRuntimeMicroSecs();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerState parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerState parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerState parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerState parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerState parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerState parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerState parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerState parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerState parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerState parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerState parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerState parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerState prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Stats to measure the runtime of updating the power state in
       * DisplayPowerController
       * </pre>
       *
       * Protobuf type {@code perfetto.protos.AndroidDisplayMetrics.UpdatePowerState}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:perfetto.protos.AndroidDisplayMetrics.UpdatePowerState)
          perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerStateOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return perfetto.protos.DisplayMetrics.internal_static_perfetto_protos_AndroidDisplayMetrics_UpdatePowerState_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return perfetto.protos.DisplayMetrics.internal_static_perfetto_protos_AndroidDisplayMetrics_UpdatePowerState_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerState.class, perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerState.Builder.class);
        }

        // Construct using perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerState.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          avgRuntimeMicroSecs_ = 0;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return perfetto.protos.DisplayMetrics.internal_static_perfetto_protos_AndroidDisplayMetrics_UpdatePowerState_descriptor;
        }

        @java.lang.Override
        public perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerState getDefaultInstanceForType() {
          return perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerState.getDefaultInstance();
        }

        @java.lang.Override
        public perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerState build() {
          perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerState result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerState buildPartial() {
          perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerState result = new perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerState(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerState result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.avgRuntimeMicroSecs_ = avgRuntimeMicroSecs_;
            to_bitField0_ |= 0x00000001;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerState) {
            return mergeFrom((perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerState)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerState other) {
          if (other == perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerState.getDefaultInstance()) return this;
          if (other.hasAvgRuntimeMicroSecs()) {
            setAvgRuntimeMicroSecs(other.getAvgRuntimeMicroSecs());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 16: {
                  avgRuntimeMicroSecs_ = input.readUInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 16
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int avgRuntimeMicroSecs_ ;
        /**
         * <code>optional uint32 avg_runtime_micro_secs = 2;</code>
         * @return Whether the avgRuntimeMicroSecs field is set.
         */
        @java.lang.Override
        public boolean hasAvgRuntimeMicroSecs() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional uint32 avg_runtime_micro_secs = 2;</code>
         * @return The avgRuntimeMicroSecs.
         */
        @java.lang.Override
        public int getAvgRuntimeMicroSecs() {
          return avgRuntimeMicroSecs_;
        }
        /**
         * <code>optional uint32 avg_runtime_micro_secs = 2;</code>
         * @param value The avgRuntimeMicroSecs to set.
         * @return This builder for chaining.
         */
        public Builder setAvgRuntimeMicroSecs(int value) {
          
          avgRuntimeMicroSecs_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 avg_runtime_micro_secs = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearAvgRuntimeMicroSecs() {
          bitField0_ = (bitField0_ & ~0x00000001);
          avgRuntimeMicroSecs_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:perfetto.protos.AndroidDisplayMetrics.UpdatePowerState)
      }

      // @@protoc_insertion_point(class_scope:perfetto.protos.AndroidDisplayMetrics.UpdatePowerState)
      private static final perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerState DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerState();
      }

      public static perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerState getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<UpdatePowerState>
          PARSER = new com.google.protobuf.AbstractParser<UpdatePowerState>() {
        @java.lang.Override
        public UpdatePowerState parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<UpdatePowerState> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<UpdatePowerState> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerState getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int TOTAL_DUPLICATE_FRAMES_FIELD_NUMBER = 1;
    private int totalDuplicateFrames_ = 0;
    /**
     * <pre>
     * Stat that reports the number of duplicate frames submitted
     * to the display for rendering. That is frames that have the same
     * pixels values but where still submitted. It is tracked based on
     * comparing the MISR of the current frame vs previous frame.
     * </pre>
     *
     * <code>optional uint32 total_duplicate_frames = 1;</code>
     * @return Whether the totalDuplicateFrames field is set.
     */
    @java.lang.Override
    public boolean hasTotalDuplicateFrames() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Stat that reports the number of duplicate frames submitted
     * to the display for rendering. That is frames that have the same
     * pixels values but where still submitted. It is tracked based on
     * comparing the MISR of the current frame vs previous frame.
     * </pre>
     *
     * <code>optional uint32 total_duplicate_frames = 1;</code>
     * @return The totalDuplicateFrames.
     */
    @java.lang.Override
    public int getTotalDuplicateFrames() {
      return totalDuplicateFrames_;
    }

    public static final int DUPLICATE_FRAMES_LOGGED_FIELD_NUMBER = 2;
    private int duplicateFramesLogged_ = 0;
    /**
     * <pre>
     * Stat reports whether there is any duplicate_frames tracked
     * </pre>
     *
     * <code>optional uint32 duplicate_frames_logged = 2;</code>
     * @return Whether the duplicateFramesLogged field is set.
     */
    @java.lang.Override
    public boolean hasDuplicateFramesLogged() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Stat reports whether there is any duplicate_frames tracked
     * </pre>
     *
     * <code>optional uint32 duplicate_frames_logged = 2;</code>
     * @return The duplicateFramesLogged.
     */
    @java.lang.Override
    public int getDuplicateFramesLogged() {
      return duplicateFramesLogged_;
    }

    public static final int TOTAL_DPU_UNDERRUN_COUNT_FIELD_NUMBER = 3;
    private int totalDpuUnderrunCount_ = 0;
    /**
     * <pre>
     * Stat that reports the number of dpu underrrun occurs count.
     * </pre>
     *
     * <code>optional uint32 total_dpu_underrun_count = 3;</code>
     * @return Whether the totalDpuUnderrunCount field is set.
     */
    @java.lang.Override
    public boolean hasTotalDpuUnderrunCount() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Stat that reports the number of dpu underrrun occurs count.
     * </pre>
     *
     * <code>optional uint32 total_dpu_underrun_count = 3;</code>
     * @return The totalDpuUnderrunCount.
     */
    @java.lang.Override
    public int getTotalDpuUnderrunCount() {
      return totalDpuUnderrunCount_;
    }

    public static final int REFRESH_RATE_SWITCHES_FIELD_NUMBER = 4;
    private int refreshRateSwitches_ = 0;
    /**
     * <pre>
     * Calculate the total number of refresh rate changes
     * </pre>
     *
     * <code>optional uint32 refresh_rate_switches = 4;</code>
     * @return Whether the refreshRateSwitches field is set.
     */
    @java.lang.Override
    public boolean hasRefreshRateSwitches() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Calculate the total number of refresh rate changes
     * </pre>
     *
     * <code>optional uint32 refresh_rate_switches = 4;</code>
     * @return The refreshRateSwitches.
     */
    @java.lang.Override
    public int getRefreshRateSwitches() {
      return refreshRateSwitches_;
    }

    public static final int REFRESH_RATE_STATS_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private java.util.List<perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat> refreshRateStats_;
    /**
     * <pre>
     * The statistics for each refresh rate value
     * </pre>
     *
     * <code>repeated .perfetto.protos.AndroidDisplayMetrics.RefreshRateStat refresh_rate_stats = 5;</code>
     */
    @java.lang.Override
    public java.util.List<perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat> getRefreshRateStatsList() {
      return refreshRateStats_;
    }
    /**
     * <pre>
     * The statistics for each refresh rate value
     * </pre>
     *
     * <code>repeated .perfetto.protos.AndroidDisplayMetrics.RefreshRateStat refresh_rate_stats = 5;</code>
     */
    @java.lang.Override
    public java.util.List<? extends perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStatOrBuilder> 
        getRefreshRateStatsOrBuilderList() {
      return refreshRateStats_;
    }
    /**
     * <pre>
     * The statistics for each refresh rate value
     * </pre>
     *
     * <code>repeated .perfetto.protos.AndroidDisplayMetrics.RefreshRateStat refresh_rate_stats = 5;</code>
     */
    @java.lang.Override
    public int getRefreshRateStatsCount() {
      return refreshRateStats_.size();
    }
    /**
     * <pre>
     * The statistics for each refresh rate value
     * </pre>
     *
     * <code>repeated .perfetto.protos.AndroidDisplayMetrics.RefreshRateStat refresh_rate_stats = 5;</code>
     */
    @java.lang.Override
    public perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat getRefreshRateStats(int index) {
      return refreshRateStats_.get(index);
    }
    /**
     * <pre>
     * The statistics for each refresh rate value
     * </pre>
     *
     * <code>repeated .perfetto.protos.AndroidDisplayMetrics.RefreshRateStat refresh_rate_stats = 5;</code>
     */
    @java.lang.Override
    public perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStatOrBuilder getRefreshRateStatsOrBuilder(
        int index) {
      return refreshRateStats_.get(index);
    }

    public static final int UPDATE_POWER_STATE_FIELD_NUMBER = 6;
    private perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerState updatePowerState_;
    /**
     * <code>optional .perfetto.protos.AndroidDisplayMetrics.UpdatePowerState update_power_state = 6;</code>
     * @return Whether the updatePowerState field is set.
     */
    @java.lang.Override
    public boolean hasUpdatePowerState() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional .perfetto.protos.AndroidDisplayMetrics.UpdatePowerState update_power_state = 6;</code>
     * @return The updatePowerState.
     */
    @java.lang.Override
    public perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerState getUpdatePowerState() {
      return updatePowerState_ == null ? perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerState.getDefaultInstance() : updatePowerState_;
    }
    /**
     * <code>optional .perfetto.protos.AndroidDisplayMetrics.UpdatePowerState update_power_state = 6;</code>
     */
    @java.lang.Override
    public perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerStateOrBuilder getUpdatePowerStateOrBuilder() {
      return updatePowerState_ == null ? perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerState.getDefaultInstance() : updatePowerState_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, totalDuplicateFrames_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt32(2, duplicateFramesLogged_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeUInt32(3, totalDpuUnderrunCount_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeUInt32(4, refreshRateSwitches_);
      }
      for (int i = 0; i < refreshRateStats_.size(); i++) {
        output.writeMessage(5, refreshRateStats_.get(i));
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeMessage(6, getUpdatePowerState());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, totalDuplicateFrames_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, duplicateFramesLogged_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, totalDpuUnderrunCount_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, refreshRateSwitches_);
      }
      for (int i = 0; i < refreshRateStats_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, refreshRateStats_.get(i));
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getUpdatePowerState());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof perfetto.protos.DisplayMetrics.AndroidDisplayMetrics)) {
        return super.equals(obj);
      }
      perfetto.protos.DisplayMetrics.AndroidDisplayMetrics other = (perfetto.protos.DisplayMetrics.AndroidDisplayMetrics) obj;

      if (hasTotalDuplicateFrames() != other.hasTotalDuplicateFrames()) return false;
      if (hasTotalDuplicateFrames()) {
        if (getTotalDuplicateFrames()
            != other.getTotalDuplicateFrames()) return false;
      }
      if (hasDuplicateFramesLogged() != other.hasDuplicateFramesLogged()) return false;
      if (hasDuplicateFramesLogged()) {
        if (getDuplicateFramesLogged()
            != other.getDuplicateFramesLogged()) return false;
      }
      if (hasTotalDpuUnderrunCount() != other.hasTotalDpuUnderrunCount()) return false;
      if (hasTotalDpuUnderrunCount()) {
        if (getTotalDpuUnderrunCount()
            != other.getTotalDpuUnderrunCount()) return false;
      }
      if (hasRefreshRateSwitches() != other.hasRefreshRateSwitches()) return false;
      if (hasRefreshRateSwitches()) {
        if (getRefreshRateSwitches()
            != other.getRefreshRateSwitches()) return false;
      }
      if (!getRefreshRateStatsList()
          .equals(other.getRefreshRateStatsList())) return false;
      if (hasUpdatePowerState() != other.hasUpdatePowerState()) return false;
      if (hasUpdatePowerState()) {
        if (!getUpdatePowerState()
            .equals(other.getUpdatePowerState())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTotalDuplicateFrames()) {
        hash = (37 * hash) + TOTAL_DUPLICATE_FRAMES_FIELD_NUMBER;
        hash = (53 * hash) + getTotalDuplicateFrames();
      }
      if (hasDuplicateFramesLogged()) {
        hash = (37 * hash) + DUPLICATE_FRAMES_LOGGED_FIELD_NUMBER;
        hash = (53 * hash) + getDuplicateFramesLogged();
      }
      if (hasTotalDpuUnderrunCount()) {
        hash = (37 * hash) + TOTAL_DPU_UNDERRUN_COUNT_FIELD_NUMBER;
        hash = (53 * hash) + getTotalDpuUnderrunCount();
      }
      if (hasRefreshRateSwitches()) {
        hash = (37 * hash) + REFRESH_RATE_SWITCHES_FIELD_NUMBER;
        hash = (53 * hash) + getRefreshRateSwitches();
      }
      if (getRefreshRateStatsCount() > 0) {
        hash = (37 * hash) + REFRESH_RATE_STATS_FIELD_NUMBER;
        hash = (53 * hash) + getRefreshRateStatsList().hashCode();
      }
      if (hasUpdatePowerState()) {
        hash = (37 * hash) + UPDATE_POWER_STATE_FIELD_NUMBER;
        hash = (53 * hash) + getUpdatePowerState().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static perfetto.protos.DisplayMetrics.AndroidDisplayMetrics parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.DisplayMetrics.AndroidDisplayMetrics parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.DisplayMetrics.AndroidDisplayMetrics parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.DisplayMetrics.AndroidDisplayMetrics parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.DisplayMetrics.AndroidDisplayMetrics parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.DisplayMetrics.AndroidDisplayMetrics parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.DisplayMetrics.AndroidDisplayMetrics parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.DisplayMetrics.AndroidDisplayMetrics parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.DisplayMetrics.AndroidDisplayMetrics parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static perfetto.protos.DisplayMetrics.AndroidDisplayMetrics parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.DisplayMetrics.AndroidDisplayMetrics parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.DisplayMetrics.AndroidDisplayMetrics parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(perfetto.protos.DisplayMetrics.AndroidDisplayMetrics prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code perfetto.protos.AndroidDisplayMetrics}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:perfetto.protos.AndroidDisplayMetrics)
        perfetto.protos.DisplayMetrics.AndroidDisplayMetricsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.DisplayMetrics.internal_static_perfetto_protos_AndroidDisplayMetrics_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.DisplayMetrics.internal_static_perfetto_protos_AndroidDisplayMetrics_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.class, perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.Builder.class);
      }

      // Construct using perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getRefreshRateStatsFieldBuilder();
          getUpdatePowerStateFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        totalDuplicateFrames_ = 0;
        duplicateFramesLogged_ = 0;
        totalDpuUnderrunCount_ = 0;
        refreshRateSwitches_ = 0;
        if (refreshRateStatsBuilder_ == null) {
          refreshRateStats_ = java.util.Collections.emptyList();
        } else {
          refreshRateStats_ = null;
          refreshRateStatsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        updatePowerState_ = null;
        if (updatePowerStateBuilder_ != null) {
          updatePowerStateBuilder_.dispose();
          updatePowerStateBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return perfetto.protos.DisplayMetrics.internal_static_perfetto_protos_AndroidDisplayMetrics_descriptor;
      }

      @java.lang.Override
      public perfetto.protos.DisplayMetrics.AndroidDisplayMetrics getDefaultInstanceForType() {
        return perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.getDefaultInstance();
      }

      @java.lang.Override
      public perfetto.protos.DisplayMetrics.AndroidDisplayMetrics build() {
        perfetto.protos.DisplayMetrics.AndroidDisplayMetrics result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public perfetto.protos.DisplayMetrics.AndroidDisplayMetrics buildPartial() {
        perfetto.protos.DisplayMetrics.AndroidDisplayMetrics result = new perfetto.protos.DisplayMetrics.AndroidDisplayMetrics(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(perfetto.protos.DisplayMetrics.AndroidDisplayMetrics result) {
        if (refreshRateStatsBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0)) {
            refreshRateStats_ = java.util.Collections.unmodifiableList(refreshRateStats_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.refreshRateStats_ = refreshRateStats_;
        } else {
          result.refreshRateStats_ = refreshRateStatsBuilder_.build();
        }
      }

      private void buildPartial0(perfetto.protos.DisplayMetrics.AndroidDisplayMetrics result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.totalDuplicateFrames_ = totalDuplicateFrames_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.duplicateFramesLogged_ = duplicateFramesLogged_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.totalDpuUnderrunCount_ = totalDpuUnderrunCount_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.refreshRateSwitches_ = refreshRateSwitches_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.updatePowerState_ = updatePowerStateBuilder_ == null
              ? updatePowerState_
              : updatePowerStateBuilder_.build();
          to_bitField0_ |= 0x00000010;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof perfetto.protos.DisplayMetrics.AndroidDisplayMetrics) {
          return mergeFrom((perfetto.protos.DisplayMetrics.AndroidDisplayMetrics)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(perfetto.protos.DisplayMetrics.AndroidDisplayMetrics other) {
        if (other == perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.getDefaultInstance()) return this;
        if (other.hasTotalDuplicateFrames()) {
          setTotalDuplicateFrames(other.getTotalDuplicateFrames());
        }
        if (other.hasDuplicateFramesLogged()) {
          setDuplicateFramesLogged(other.getDuplicateFramesLogged());
        }
        if (other.hasTotalDpuUnderrunCount()) {
          setTotalDpuUnderrunCount(other.getTotalDpuUnderrunCount());
        }
        if (other.hasRefreshRateSwitches()) {
          setRefreshRateSwitches(other.getRefreshRateSwitches());
        }
        if (refreshRateStatsBuilder_ == null) {
          if (!other.refreshRateStats_.isEmpty()) {
            if (refreshRateStats_.isEmpty()) {
              refreshRateStats_ = other.refreshRateStats_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureRefreshRateStatsIsMutable();
              refreshRateStats_.addAll(other.refreshRateStats_);
            }
            onChanged();
          }
        } else {
          if (!other.refreshRateStats_.isEmpty()) {
            if (refreshRateStatsBuilder_.isEmpty()) {
              refreshRateStatsBuilder_.dispose();
              refreshRateStatsBuilder_ = null;
              refreshRateStats_ = other.refreshRateStats_;
              bitField0_ = (bitField0_ & ~0x00000010);
              refreshRateStatsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRefreshRateStatsFieldBuilder() : null;
            } else {
              refreshRateStatsBuilder_.addAllMessages(other.refreshRateStats_);
            }
          }
        }
        if (other.hasUpdatePowerState()) {
          mergeUpdatePowerState(other.getUpdatePowerState());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                totalDuplicateFrames_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                duplicateFramesLogged_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                totalDpuUnderrunCount_ = input.readUInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                refreshRateSwitches_ = input.readUInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 42: {
                perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat m =
                    input.readMessage(
                        perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat.PARSER,
                        extensionRegistry);
                if (refreshRateStatsBuilder_ == null) {
                  ensureRefreshRateStatsIsMutable();
                  refreshRateStats_.add(m);
                } else {
                  refreshRateStatsBuilder_.addMessage(m);
                }
                break;
              } // case 42
              case 50: {
                input.readMessage(
                    getUpdatePowerStateFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000020;
                break;
              } // case 50
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int totalDuplicateFrames_ ;
      /**
       * <pre>
       * Stat that reports the number of duplicate frames submitted
       * to the display for rendering. That is frames that have the same
       * pixels values but where still submitted. It is tracked based on
       * comparing the MISR of the current frame vs previous frame.
       * </pre>
       *
       * <code>optional uint32 total_duplicate_frames = 1;</code>
       * @return Whether the totalDuplicateFrames field is set.
       */
      @java.lang.Override
      public boolean hasTotalDuplicateFrames() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Stat that reports the number of duplicate frames submitted
       * to the display for rendering. That is frames that have the same
       * pixels values but where still submitted. It is tracked based on
       * comparing the MISR of the current frame vs previous frame.
       * </pre>
       *
       * <code>optional uint32 total_duplicate_frames = 1;</code>
       * @return The totalDuplicateFrames.
       */
      @java.lang.Override
      public int getTotalDuplicateFrames() {
        return totalDuplicateFrames_;
      }
      /**
       * <pre>
       * Stat that reports the number of duplicate frames submitted
       * to the display for rendering. That is frames that have the same
       * pixels values but where still submitted. It is tracked based on
       * comparing the MISR of the current frame vs previous frame.
       * </pre>
       *
       * <code>optional uint32 total_duplicate_frames = 1;</code>
       * @param value The totalDuplicateFrames to set.
       * @return This builder for chaining.
       */
      public Builder setTotalDuplicateFrames(int value) {
        
        totalDuplicateFrames_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Stat that reports the number of duplicate frames submitted
       * to the display for rendering. That is frames that have the same
       * pixels values but where still submitted. It is tracked based on
       * comparing the MISR of the current frame vs previous frame.
       * </pre>
       *
       * <code>optional uint32 total_duplicate_frames = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalDuplicateFrames() {
        bitField0_ = (bitField0_ & ~0x00000001);
        totalDuplicateFrames_ = 0;
        onChanged();
        return this;
      }

      private int duplicateFramesLogged_ ;
      /**
       * <pre>
       * Stat reports whether there is any duplicate_frames tracked
       * </pre>
       *
       * <code>optional uint32 duplicate_frames_logged = 2;</code>
       * @return Whether the duplicateFramesLogged field is set.
       */
      @java.lang.Override
      public boolean hasDuplicateFramesLogged() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Stat reports whether there is any duplicate_frames tracked
       * </pre>
       *
       * <code>optional uint32 duplicate_frames_logged = 2;</code>
       * @return The duplicateFramesLogged.
       */
      @java.lang.Override
      public int getDuplicateFramesLogged() {
        return duplicateFramesLogged_;
      }
      /**
       * <pre>
       * Stat reports whether there is any duplicate_frames tracked
       * </pre>
       *
       * <code>optional uint32 duplicate_frames_logged = 2;</code>
       * @param value The duplicateFramesLogged to set.
       * @return This builder for chaining.
       */
      public Builder setDuplicateFramesLogged(int value) {
        
        duplicateFramesLogged_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Stat reports whether there is any duplicate_frames tracked
       * </pre>
       *
       * <code>optional uint32 duplicate_frames_logged = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearDuplicateFramesLogged() {
        bitField0_ = (bitField0_ & ~0x00000002);
        duplicateFramesLogged_ = 0;
        onChanged();
        return this;
      }

      private int totalDpuUnderrunCount_ ;
      /**
       * <pre>
       * Stat that reports the number of dpu underrrun occurs count.
       * </pre>
       *
       * <code>optional uint32 total_dpu_underrun_count = 3;</code>
       * @return Whether the totalDpuUnderrunCount field is set.
       */
      @java.lang.Override
      public boolean hasTotalDpuUnderrunCount() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Stat that reports the number of dpu underrrun occurs count.
       * </pre>
       *
       * <code>optional uint32 total_dpu_underrun_count = 3;</code>
       * @return The totalDpuUnderrunCount.
       */
      @java.lang.Override
      public int getTotalDpuUnderrunCount() {
        return totalDpuUnderrunCount_;
      }
      /**
       * <pre>
       * Stat that reports the number of dpu underrrun occurs count.
       * </pre>
       *
       * <code>optional uint32 total_dpu_underrun_count = 3;</code>
       * @param value The totalDpuUnderrunCount to set.
       * @return This builder for chaining.
       */
      public Builder setTotalDpuUnderrunCount(int value) {
        
        totalDpuUnderrunCount_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Stat that reports the number of dpu underrrun occurs count.
       * </pre>
       *
       * <code>optional uint32 total_dpu_underrun_count = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalDpuUnderrunCount() {
        bitField0_ = (bitField0_ & ~0x00000004);
        totalDpuUnderrunCount_ = 0;
        onChanged();
        return this;
      }

      private int refreshRateSwitches_ ;
      /**
       * <pre>
       * Calculate the total number of refresh rate changes
       * </pre>
       *
       * <code>optional uint32 refresh_rate_switches = 4;</code>
       * @return Whether the refreshRateSwitches field is set.
       */
      @java.lang.Override
      public boolean hasRefreshRateSwitches() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Calculate the total number of refresh rate changes
       * </pre>
       *
       * <code>optional uint32 refresh_rate_switches = 4;</code>
       * @return The refreshRateSwitches.
       */
      @java.lang.Override
      public int getRefreshRateSwitches() {
        return refreshRateSwitches_;
      }
      /**
       * <pre>
       * Calculate the total number of refresh rate changes
       * </pre>
       *
       * <code>optional uint32 refresh_rate_switches = 4;</code>
       * @param value The refreshRateSwitches to set.
       * @return This builder for chaining.
       */
      public Builder setRefreshRateSwitches(int value) {
        
        refreshRateSwitches_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Calculate the total number of refresh rate changes
       * </pre>
       *
       * <code>optional uint32 refresh_rate_switches = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearRefreshRateSwitches() {
        bitField0_ = (bitField0_ & ~0x00000008);
        refreshRateSwitches_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat> refreshRateStats_ =
        java.util.Collections.emptyList();
      private void ensureRefreshRateStatsIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          refreshRateStats_ = new java.util.ArrayList<perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat>(refreshRateStats_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat, perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat.Builder, perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStatOrBuilder> refreshRateStatsBuilder_;

      /**
       * <pre>
       * The statistics for each refresh rate value
       * </pre>
       *
       * <code>repeated .perfetto.protos.AndroidDisplayMetrics.RefreshRateStat refresh_rate_stats = 5;</code>
       */
      public java.util.List<perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat> getRefreshRateStatsList() {
        if (refreshRateStatsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(refreshRateStats_);
        } else {
          return refreshRateStatsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The statistics for each refresh rate value
       * </pre>
       *
       * <code>repeated .perfetto.protos.AndroidDisplayMetrics.RefreshRateStat refresh_rate_stats = 5;</code>
       */
      public int getRefreshRateStatsCount() {
        if (refreshRateStatsBuilder_ == null) {
          return refreshRateStats_.size();
        } else {
          return refreshRateStatsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The statistics for each refresh rate value
       * </pre>
       *
       * <code>repeated .perfetto.protos.AndroidDisplayMetrics.RefreshRateStat refresh_rate_stats = 5;</code>
       */
      public perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat getRefreshRateStats(int index) {
        if (refreshRateStatsBuilder_ == null) {
          return refreshRateStats_.get(index);
        } else {
          return refreshRateStatsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The statistics for each refresh rate value
       * </pre>
       *
       * <code>repeated .perfetto.protos.AndroidDisplayMetrics.RefreshRateStat refresh_rate_stats = 5;</code>
       */
      public Builder setRefreshRateStats(
          int index, perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat value) {
        if (refreshRateStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRefreshRateStatsIsMutable();
          refreshRateStats_.set(index, value);
          onChanged();
        } else {
          refreshRateStatsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The statistics for each refresh rate value
       * </pre>
       *
       * <code>repeated .perfetto.protos.AndroidDisplayMetrics.RefreshRateStat refresh_rate_stats = 5;</code>
       */
      public Builder setRefreshRateStats(
          int index, perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat.Builder builderForValue) {
        if (refreshRateStatsBuilder_ == null) {
          ensureRefreshRateStatsIsMutable();
          refreshRateStats_.set(index, builderForValue.build());
          onChanged();
        } else {
          refreshRateStatsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The statistics for each refresh rate value
       * </pre>
       *
       * <code>repeated .perfetto.protos.AndroidDisplayMetrics.RefreshRateStat refresh_rate_stats = 5;</code>
       */
      public Builder addRefreshRateStats(perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat value) {
        if (refreshRateStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRefreshRateStatsIsMutable();
          refreshRateStats_.add(value);
          onChanged();
        } else {
          refreshRateStatsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The statistics for each refresh rate value
       * </pre>
       *
       * <code>repeated .perfetto.protos.AndroidDisplayMetrics.RefreshRateStat refresh_rate_stats = 5;</code>
       */
      public Builder addRefreshRateStats(
          int index, perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat value) {
        if (refreshRateStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRefreshRateStatsIsMutable();
          refreshRateStats_.add(index, value);
          onChanged();
        } else {
          refreshRateStatsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The statistics for each refresh rate value
       * </pre>
       *
       * <code>repeated .perfetto.protos.AndroidDisplayMetrics.RefreshRateStat refresh_rate_stats = 5;</code>
       */
      public Builder addRefreshRateStats(
          perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat.Builder builderForValue) {
        if (refreshRateStatsBuilder_ == null) {
          ensureRefreshRateStatsIsMutable();
          refreshRateStats_.add(builderForValue.build());
          onChanged();
        } else {
          refreshRateStatsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The statistics for each refresh rate value
       * </pre>
       *
       * <code>repeated .perfetto.protos.AndroidDisplayMetrics.RefreshRateStat refresh_rate_stats = 5;</code>
       */
      public Builder addRefreshRateStats(
          int index, perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat.Builder builderForValue) {
        if (refreshRateStatsBuilder_ == null) {
          ensureRefreshRateStatsIsMutable();
          refreshRateStats_.add(index, builderForValue.build());
          onChanged();
        } else {
          refreshRateStatsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The statistics for each refresh rate value
       * </pre>
       *
       * <code>repeated .perfetto.protos.AndroidDisplayMetrics.RefreshRateStat refresh_rate_stats = 5;</code>
       */
      public Builder addAllRefreshRateStats(
          java.lang.Iterable<? extends perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat> values) {
        if (refreshRateStatsBuilder_ == null) {
          ensureRefreshRateStatsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, refreshRateStats_);
          onChanged();
        } else {
          refreshRateStatsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The statistics for each refresh rate value
       * </pre>
       *
       * <code>repeated .perfetto.protos.AndroidDisplayMetrics.RefreshRateStat refresh_rate_stats = 5;</code>
       */
      public Builder clearRefreshRateStats() {
        if (refreshRateStatsBuilder_ == null) {
          refreshRateStats_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          refreshRateStatsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The statistics for each refresh rate value
       * </pre>
       *
       * <code>repeated .perfetto.protos.AndroidDisplayMetrics.RefreshRateStat refresh_rate_stats = 5;</code>
       */
      public Builder removeRefreshRateStats(int index) {
        if (refreshRateStatsBuilder_ == null) {
          ensureRefreshRateStatsIsMutable();
          refreshRateStats_.remove(index);
          onChanged();
        } else {
          refreshRateStatsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The statistics for each refresh rate value
       * </pre>
       *
       * <code>repeated .perfetto.protos.AndroidDisplayMetrics.RefreshRateStat refresh_rate_stats = 5;</code>
       */
      public perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat.Builder getRefreshRateStatsBuilder(
          int index) {
        return getRefreshRateStatsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The statistics for each refresh rate value
       * </pre>
       *
       * <code>repeated .perfetto.protos.AndroidDisplayMetrics.RefreshRateStat refresh_rate_stats = 5;</code>
       */
      public perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStatOrBuilder getRefreshRateStatsOrBuilder(
          int index) {
        if (refreshRateStatsBuilder_ == null) {
          return refreshRateStats_.get(index);  } else {
          return refreshRateStatsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The statistics for each refresh rate value
       * </pre>
       *
       * <code>repeated .perfetto.protos.AndroidDisplayMetrics.RefreshRateStat refresh_rate_stats = 5;</code>
       */
      public java.util.List<? extends perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStatOrBuilder> 
           getRefreshRateStatsOrBuilderList() {
        if (refreshRateStatsBuilder_ != null) {
          return refreshRateStatsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(refreshRateStats_);
        }
      }
      /**
       * <pre>
       * The statistics for each refresh rate value
       * </pre>
       *
       * <code>repeated .perfetto.protos.AndroidDisplayMetrics.RefreshRateStat refresh_rate_stats = 5;</code>
       */
      public perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat.Builder addRefreshRateStatsBuilder() {
        return getRefreshRateStatsFieldBuilder().addBuilder(
            perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat.getDefaultInstance());
      }
      /**
       * <pre>
       * The statistics for each refresh rate value
       * </pre>
       *
       * <code>repeated .perfetto.protos.AndroidDisplayMetrics.RefreshRateStat refresh_rate_stats = 5;</code>
       */
      public perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat.Builder addRefreshRateStatsBuilder(
          int index) {
        return getRefreshRateStatsFieldBuilder().addBuilder(
            index, perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat.getDefaultInstance());
      }
      /**
       * <pre>
       * The statistics for each refresh rate value
       * </pre>
       *
       * <code>repeated .perfetto.protos.AndroidDisplayMetrics.RefreshRateStat refresh_rate_stats = 5;</code>
       */
      public java.util.List<perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat.Builder> 
           getRefreshRateStatsBuilderList() {
        return getRefreshRateStatsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat, perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat.Builder, perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStatOrBuilder> 
          getRefreshRateStatsFieldBuilder() {
        if (refreshRateStatsBuilder_ == null) {
          refreshRateStatsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat, perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStat.Builder, perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.RefreshRateStatOrBuilder>(
                  refreshRateStats_,
                  ((bitField0_ & 0x00000010) != 0),
                  getParentForChildren(),
                  isClean());
          refreshRateStats_ = null;
        }
        return refreshRateStatsBuilder_;
      }

      private perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerState updatePowerState_;
      private com.google.protobuf.SingleFieldBuilderV3<
          perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerState, perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerState.Builder, perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerStateOrBuilder> updatePowerStateBuilder_;
      /**
       * <code>optional .perfetto.protos.AndroidDisplayMetrics.UpdatePowerState update_power_state = 6;</code>
       * @return Whether the updatePowerState field is set.
       */
      public boolean hasUpdatePowerState() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional .perfetto.protos.AndroidDisplayMetrics.UpdatePowerState update_power_state = 6;</code>
       * @return The updatePowerState.
       */
      public perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerState getUpdatePowerState() {
        if (updatePowerStateBuilder_ == null) {
          return updatePowerState_ == null ? perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerState.getDefaultInstance() : updatePowerState_;
        } else {
          return updatePowerStateBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .perfetto.protos.AndroidDisplayMetrics.UpdatePowerState update_power_state = 6;</code>
       */
      public Builder setUpdatePowerState(perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerState value) {
        if (updatePowerStateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          updatePowerState_ = value;
        } else {
          updatePowerStateBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>optional .perfetto.protos.AndroidDisplayMetrics.UpdatePowerState update_power_state = 6;</code>
       */
      public Builder setUpdatePowerState(
          perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerState.Builder builderForValue) {
        if (updatePowerStateBuilder_ == null) {
          updatePowerState_ = builderForValue.build();
        } else {
          updatePowerStateBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>optional .perfetto.protos.AndroidDisplayMetrics.UpdatePowerState update_power_state = 6;</code>
       */
      public Builder mergeUpdatePowerState(perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerState value) {
        if (updatePowerStateBuilder_ == null) {
          if (((bitField0_ & 0x00000020) != 0) &&
            updatePowerState_ != null &&
            updatePowerState_ != perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerState.getDefaultInstance()) {
            getUpdatePowerStateBuilder().mergeFrom(value);
          } else {
            updatePowerState_ = value;
          }
        } else {
          updatePowerStateBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>optional .perfetto.protos.AndroidDisplayMetrics.UpdatePowerState update_power_state = 6;</code>
       */
      public Builder clearUpdatePowerState() {
        bitField0_ = (bitField0_ & ~0x00000020);
        updatePowerState_ = null;
        if (updatePowerStateBuilder_ != null) {
          updatePowerStateBuilder_.dispose();
          updatePowerStateBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional .perfetto.protos.AndroidDisplayMetrics.UpdatePowerState update_power_state = 6;</code>
       */
      public perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerState.Builder getUpdatePowerStateBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getUpdatePowerStateFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .perfetto.protos.AndroidDisplayMetrics.UpdatePowerState update_power_state = 6;</code>
       */
      public perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerStateOrBuilder getUpdatePowerStateOrBuilder() {
        if (updatePowerStateBuilder_ != null) {
          return updatePowerStateBuilder_.getMessageOrBuilder();
        } else {
          return updatePowerState_ == null ?
              perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerState.getDefaultInstance() : updatePowerState_;
        }
      }
      /**
       * <code>optional .perfetto.protos.AndroidDisplayMetrics.UpdatePowerState update_power_state = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerState, perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerState.Builder, perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerStateOrBuilder> 
          getUpdatePowerStateFieldBuilder() {
        if (updatePowerStateBuilder_ == null) {
          updatePowerStateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerState, perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerState.Builder, perfetto.protos.DisplayMetrics.AndroidDisplayMetrics.UpdatePowerStateOrBuilder>(
                  getUpdatePowerState(),
                  getParentForChildren(),
                  isClean());
          updatePowerState_ = null;
        }
        return updatePowerStateBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:perfetto.protos.AndroidDisplayMetrics)
    }

    // @@protoc_insertion_point(class_scope:perfetto.protos.AndroidDisplayMetrics)
    private static final perfetto.protos.DisplayMetrics.AndroidDisplayMetrics DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new perfetto.protos.DisplayMetrics.AndroidDisplayMetrics();
    }

    public static perfetto.protos.DisplayMetrics.AndroidDisplayMetrics getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<AndroidDisplayMetrics>
        PARSER = new com.google.protobuf.AbstractParser<AndroidDisplayMetrics>() {
      @java.lang.Override
      public AndroidDisplayMetrics parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<AndroidDisplayMetrics> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AndroidDisplayMetrics> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public perfetto.protos.DisplayMetrics.AndroidDisplayMetrics getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_AndroidDisplayMetrics_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_perfetto_protos_AndroidDisplayMetrics_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_AndroidDisplayMetrics_RefreshRateStat_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_perfetto_protos_AndroidDisplayMetrics_RefreshRateStat_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_AndroidDisplayMetrics_UpdatePowerState_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_perfetto_protos_AndroidDisplayMetrics_UpdatePowerState_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n5protos/perfetto/metrics/android/displa" +
      "y_metrics.proto\022\017perfetto.protos\"\342\003\n\025And" +
      "roidDisplayMetrics\022\036\n\026total_duplicate_fr" +
      "ames\030\001 \001(\r\022\037\n\027duplicate_frames_logged\030\002 " +
      "\001(\r\022 \n\030total_dpu_underrun_count\030\003 \001(\r\022\035\n" +
      "\025refresh_rate_switches\030\004 \001(\r\022R\n\022refresh_" +
      "rate_stats\030\005 \003(\01326.perfetto.protos.Andro" +
      "idDisplayMetrics.RefreshRateStat\022S\n\022upda" +
      "te_power_state\030\006 \001(\01327.perfetto.protos.A" +
      "ndroidDisplayMetrics.UpdatePowerState\032d\n" +
      "\017RefreshRateStat\022\030\n\020refresh_rate_fps\030\001 \001" +
      "(\r\022\r\n\005count\030\002 \001(\r\022\024\n\014total_dur_ms\030\003 \001(\001\022" +
      "\022\n\navg_dur_ms\030\004 \001(\001\0328\n\020UpdatePowerState\022" +
      "\036\n\026avg_runtime_micro_secs\030\002 \001(\rJ\004\010\001\020\002"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_perfetto_protos_AndroidDisplayMetrics_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_perfetto_protos_AndroidDisplayMetrics_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_perfetto_protos_AndroidDisplayMetrics_descriptor,
        new java.lang.String[] { "TotalDuplicateFrames", "DuplicateFramesLogged", "TotalDpuUnderrunCount", "RefreshRateSwitches", "RefreshRateStats", "UpdatePowerState", });
    internal_static_perfetto_protos_AndroidDisplayMetrics_RefreshRateStat_descriptor =
      internal_static_perfetto_protos_AndroidDisplayMetrics_descriptor.getNestedTypes().get(0);
    internal_static_perfetto_protos_AndroidDisplayMetrics_RefreshRateStat_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_perfetto_protos_AndroidDisplayMetrics_RefreshRateStat_descriptor,
        new java.lang.String[] { "RefreshRateFps", "Count", "TotalDurMs", "AvgDurMs", });
    internal_static_perfetto_protos_AndroidDisplayMetrics_UpdatePowerState_descriptor =
      internal_static_perfetto_protos_AndroidDisplayMetrics_descriptor.getNestedTypes().get(1);
    internal_static_perfetto_protos_AndroidDisplayMetrics_UpdatePowerState_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_perfetto_protos_AndroidDisplayMetrics_UpdatePowerState_descriptor,
        new java.lang.String[] { "AvgRuntimeMicroSecs", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
