// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/perfetto/config/inode_file/inode_file_config.proto

package perfetto.protos;

public final class InodeFileConfigOuterClass {
  private InodeFileConfigOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface InodeFileConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:perfetto.protos.InodeFileConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * How long to pause between batches.
     * </pre>
     *
     * <code>optional uint32 scan_interval_ms = 1;</code>
     * @return Whether the scanIntervalMs field is set.
     */
    boolean hasScanIntervalMs();
    /**
     * <pre>
     * How long to pause between batches.
     * </pre>
     *
     * <code>optional uint32 scan_interval_ms = 1;</code>
     * @return The scanIntervalMs.
     */
    int getScanIntervalMs();

    /**
     * <pre>
     * How long to wait before the first scan in order to accumulate inodes.
     * </pre>
     *
     * <code>optional uint32 scan_delay_ms = 2;</code>
     * @return Whether the scanDelayMs field is set.
     */
    boolean hasScanDelayMs();
    /**
     * <pre>
     * How long to wait before the first scan in order to accumulate inodes.
     * </pre>
     *
     * <code>optional uint32 scan_delay_ms = 2;</code>
     * @return The scanDelayMs.
     */
    int getScanDelayMs();

    /**
     * <pre>
     * How many inodes to scan in one batch.
     * </pre>
     *
     * <code>optional uint32 scan_batch_size = 3;</code>
     * @return Whether the scanBatchSize field is set.
     */
    boolean hasScanBatchSize();
    /**
     * <pre>
     * How many inodes to scan in one batch.
     * </pre>
     *
     * <code>optional uint32 scan_batch_size = 3;</code>
     * @return The scanBatchSize.
     */
    int getScanBatchSize();

    /**
     * <pre>
     * Do not scan for inodes not found in the static map.
     * </pre>
     *
     * <code>optional bool do_not_scan = 4;</code>
     * @return Whether the doNotScan field is set.
     */
    boolean hasDoNotScan();
    /**
     * <pre>
     * Do not scan for inodes not found in the static map.
     * </pre>
     *
     * <code>optional bool do_not_scan = 4;</code>
     * @return The doNotScan.
     */
    boolean getDoNotScan();

    /**
     * <pre>
     * If non-empty, only scan inodes corresponding to block devices named in
     * this list.
     * </pre>
     *
     * <code>repeated string scan_mount_points = 5;</code>
     * @return A list containing the scanMountPoints.
     */
    java.util.List<java.lang.String>
        getScanMountPointsList();
    /**
     * <pre>
     * If non-empty, only scan inodes corresponding to block devices named in
     * this list.
     * </pre>
     *
     * <code>repeated string scan_mount_points = 5;</code>
     * @return The count of scanMountPoints.
     */
    int getScanMountPointsCount();
    /**
     * <pre>
     * If non-empty, only scan inodes corresponding to block devices named in
     * this list.
     * </pre>
     *
     * <code>repeated string scan_mount_points = 5;</code>
     * @param index The index of the element to return.
     * @return The scanMountPoints at the given index.
     */
    java.lang.String getScanMountPoints(int index);
    /**
     * <pre>
     * If non-empty, only scan inodes corresponding to block devices named in
     * this list.
     * </pre>
     *
     * <code>repeated string scan_mount_points = 5;</code>
     * @param index The index of the value to return.
     * @return The bytes of the scanMountPoints at the given index.
     */
    com.google.protobuf.ByteString
        getScanMountPointsBytes(int index);

    /**
     * <pre>
     * When encountering an inode belonging to a block device corresponding
     * to one of the mount points in this map, scan its scan_roots instead.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InodeFileConfig.MountPointMappingEntry mount_point_mapping = 6;</code>
     */
    java.util.List<perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry> 
        getMountPointMappingList();
    /**
     * <pre>
     * When encountering an inode belonging to a block device corresponding
     * to one of the mount points in this map, scan its scan_roots instead.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InodeFileConfig.MountPointMappingEntry mount_point_mapping = 6;</code>
     */
    perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry getMountPointMapping(int index);
    /**
     * <pre>
     * When encountering an inode belonging to a block device corresponding
     * to one of the mount points in this map, scan its scan_roots instead.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InodeFileConfig.MountPointMappingEntry mount_point_mapping = 6;</code>
     */
    int getMountPointMappingCount();
    /**
     * <pre>
     * When encountering an inode belonging to a block device corresponding
     * to one of the mount points in this map, scan its scan_roots instead.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InodeFileConfig.MountPointMappingEntry mount_point_mapping = 6;</code>
     */
    java.util.List<? extends perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntryOrBuilder> 
        getMountPointMappingOrBuilderList();
    /**
     * <pre>
     * When encountering an inode belonging to a block device corresponding
     * to one of the mount points in this map, scan its scan_roots instead.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InodeFileConfig.MountPointMappingEntry mount_point_mapping = 6;</code>
     */
    perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntryOrBuilder getMountPointMappingOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code perfetto.protos.InodeFileConfig}
   */
  public static final class InodeFileConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:perfetto.protos.InodeFileConfig)
      InodeFileConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use InodeFileConfig.newBuilder() to construct.
    private InodeFileConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private InodeFileConfig() {
      scanMountPoints_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      mountPointMapping_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new InodeFileConfig();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return perfetto.protos.InodeFileConfigOuterClass.internal_static_perfetto_protos_InodeFileConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return perfetto.protos.InodeFileConfigOuterClass.internal_static_perfetto_protos_InodeFileConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.class, perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.Builder.class);
    }

    public interface MountPointMappingEntryOrBuilder extends
        // @@protoc_insertion_point(interface_extends:perfetto.protos.InodeFileConfig.MountPointMappingEntry)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional string mountpoint = 1;</code>
       * @return Whether the mountpoint field is set.
       */
      boolean hasMountpoint();
      /**
       * <code>optional string mountpoint = 1;</code>
       * @return The mountpoint.
       */
      java.lang.String getMountpoint();
      /**
       * <code>optional string mountpoint = 1;</code>
       * @return The bytes for mountpoint.
       */
      com.google.protobuf.ByteString
          getMountpointBytes();

      /**
       * <code>repeated string scan_roots = 2;</code>
       * @return A list containing the scanRoots.
       */
      java.util.List<java.lang.String>
          getScanRootsList();
      /**
       * <code>repeated string scan_roots = 2;</code>
       * @return The count of scanRoots.
       */
      int getScanRootsCount();
      /**
       * <code>repeated string scan_roots = 2;</code>
       * @param index The index of the element to return.
       * @return The scanRoots at the given index.
       */
      java.lang.String getScanRoots(int index);
      /**
       * <code>repeated string scan_roots = 2;</code>
       * @param index The index of the value to return.
       * @return The bytes of the scanRoots at the given index.
       */
      com.google.protobuf.ByteString
          getScanRootsBytes(int index);
    }
    /**
     * Protobuf type {@code perfetto.protos.InodeFileConfig.MountPointMappingEntry}
     */
    public static final class MountPointMappingEntry extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:perfetto.protos.InodeFileConfig.MountPointMappingEntry)
        MountPointMappingEntryOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use MountPointMappingEntry.newBuilder() to construct.
      private MountPointMappingEntry(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private MountPointMappingEntry() {
        mountpoint_ = "";
        scanRoots_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new MountPointMappingEntry();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.InodeFileConfigOuterClass.internal_static_perfetto_protos_InodeFileConfig_MountPointMappingEntry_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.InodeFileConfigOuterClass.internal_static_perfetto_protos_InodeFileConfig_MountPointMappingEntry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry.class, perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry.Builder.class);
      }

      private int bitField0_;
      public static final int MOUNTPOINT_FIELD_NUMBER = 1;
      @SuppressWarnings("serial")
      private volatile java.lang.Object mountpoint_ = "";
      /**
       * <code>optional string mountpoint = 1;</code>
       * @return Whether the mountpoint field is set.
       */
      @java.lang.Override
      public boolean hasMountpoint() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional string mountpoint = 1;</code>
       * @return The mountpoint.
       */
      @java.lang.Override
      public java.lang.String getMountpoint() {
        java.lang.Object ref = mountpoint_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            mountpoint_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string mountpoint = 1;</code>
       * @return The bytes for mountpoint.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getMountpointBytes() {
        java.lang.Object ref = mountpoint_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          mountpoint_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int SCAN_ROOTS_FIELD_NUMBER = 2;
      @SuppressWarnings("serial")
      private com.google.protobuf.LazyStringList scanRoots_;
      /**
       * <code>repeated string scan_roots = 2;</code>
       * @return A list containing the scanRoots.
       */
      public com.google.protobuf.ProtocolStringList
          getScanRootsList() {
        return scanRoots_;
      }
      /**
       * <code>repeated string scan_roots = 2;</code>
       * @return The count of scanRoots.
       */
      public int getScanRootsCount() {
        return scanRoots_.size();
      }
      /**
       * <code>repeated string scan_roots = 2;</code>
       * @param index The index of the element to return.
       * @return The scanRoots at the given index.
       */
      public java.lang.String getScanRoots(int index) {
        return scanRoots_.get(index);
      }
      /**
       * <code>repeated string scan_roots = 2;</code>
       * @param index The index of the value to return.
       * @return The bytes of the scanRoots at the given index.
       */
      public com.google.protobuf.ByteString
          getScanRootsBytes(int index) {
        return scanRoots_.getByteString(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, mountpoint_);
        }
        for (int i = 0; i < scanRoots_.size(); i++) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, scanRoots_.getRaw(i));
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, mountpoint_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < scanRoots_.size(); i++) {
            dataSize += computeStringSizeNoTag(scanRoots_.getRaw(i));
          }
          size += dataSize;
          size += 1 * getScanRootsList().size();
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry)) {
          return super.equals(obj);
        }
        perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry other = (perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry) obj;

        if (hasMountpoint() != other.hasMountpoint()) return false;
        if (hasMountpoint()) {
          if (!getMountpoint()
              .equals(other.getMountpoint())) return false;
        }
        if (!getScanRootsList()
            .equals(other.getScanRootsList())) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasMountpoint()) {
          hash = (37 * hash) + MOUNTPOINT_FIELD_NUMBER;
          hash = (53 * hash) + getMountpoint().hashCode();
        }
        if (getScanRootsCount() > 0) {
          hash = (37 * hash) + SCAN_ROOTS_FIELD_NUMBER;
          hash = (53 * hash) + getScanRootsList().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code perfetto.protos.InodeFileConfig.MountPointMappingEntry}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:perfetto.protos.InodeFileConfig.MountPointMappingEntry)
          perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntryOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return perfetto.protos.InodeFileConfigOuterClass.internal_static_perfetto_protos_InodeFileConfig_MountPointMappingEntry_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return perfetto.protos.InodeFileConfigOuterClass.internal_static_perfetto_protos_InodeFileConfig_MountPointMappingEntry_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry.class, perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry.Builder.class);
        }

        // Construct using perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          mountpoint_ = "";
          scanRoots_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return perfetto.protos.InodeFileConfigOuterClass.internal_static_perfetto_protos_InodeFileConfig_MountPointMappingEntry_descriptor;
        }

        @java.lang.Override
        public perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry getDefaultInstanceForType() {
          return perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry.getDefaultInstance();
        }

        @java.lang.Override
        public perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry build() {
          perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry buildPartial() {
          perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry result = new perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry(this);
          buildPartialRepeatedFields(result);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartialRepeatedFields(perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry result) {
          if (((bitField0_ & 0x00000002) != 0)) {
            scanRoots_ = scanRoots_.getUnmodifiableView();
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.scanRoots_ = scanRoots_;
        }

        private void buildPartial0(perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.mountpoint_ = mountpoint_;
            to_bitField0_ |= 0x00000001;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry) {
            return mergeFrom((perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry other) {
          if (other == perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry.getDefaultInstance()) return this;
          if (other.hasMountpoint()) {
            mountpoint_ = other.mountpoint_;
            bitField0_ |= 0x00000001;
            onChanged();
          }
          if (!other.scanRoots_.isEmpty()) {
            if (scanRoots_.isEmpty()) {
              scanRoots_ = other.scanRoots_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureScanRootsIsMutable();
              scanRoots_.addAll(other.scanRoots_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  mountpoint_ = input.readBytes();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
                case 18: {
                  com.google.protobuf.ByteString bs = input.readBytes();
                  ensureScanRootsIsMutable();
                  scanRoots_.add(bs);
                  break;
                } // case 18
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private java.lang.Object mountpoint_ = "";
        /**
         * <code>optional string mountpoint = 1;</code>
         * @return Whether the mountpoint field is set.
         */
        public boolean hasMountpoint() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional string mountpoint = 1;</code>
         * @return The mountpoint.
         */
        public java.lang.String getMountpoint() {
          java.lang.Object ref = mountpoint_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              mountpoint_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string mountpoint = 1;</code>
         * @return The bytes for mountpoint.
         */
        public com.google.protobuf.ByteString
            getMountpointBytes() {
          java.lang.Object ref = mountpoint_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            mountpoint_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string mountpoint = 1;</code>
         * @param value The mountpoint to set.
         * @return This builder for chaining.
         */
        public Builder setMountpoint(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          mountpoint_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional string mountpoint = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearMountpoint() {
          mountpoint_ = getDefaultInstance().getMountpoint();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }
        /**
         * <code>optional string mountpoint = 1;</code>
         * @param value The bytes for mountpoint to set.
         * @return This builder for chaining.
         */
        public Builder setMountpointBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          mountpoint_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }

        private com.google.protobuf.LazyStringList scanRoots_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        private void ensureScanRootsIsMutable() {
          if (!((bitField0_ & 0x00000002) != 0)) {
            scanRoots_ = new com.google.protobuf.LazyStringArrayList(scanRoots_);
            bitField0_ |= 0x00000002;
           }
        }
        /**
         * <code>repeated string scan_roots = 2;</code>
         * @return A list containing the scanRoots.
         */
        public com.google.protobuf.ProtocolStringList
            getScanRootsList() {
          return scanRoots_.getUnmodifiableView();
        }
        /**
         * <code>repeated string scan_roots = 2;</code>
         * @return The count of scanRoots.
         */
        public int getScanRootsCount() {
          return scanRoots_.size();
        }
        /**
         * <code>repeated string scan_roots = 2;</code>
         * @param index The index of the element to return.
         * @return The scanRoots at the given index.
         */
        public java.lang.String getScanRoots(int index) {
          return scanRoots_.get(index);
        }
        /**
         * <code>repeated string scan_roots = 2;</code>
         * @param index The index of the value to return.
         * @return The bytes of the scanRoots at the given index.
         */
        public com.google.protobuf.ByteString
            getScanRootsBytes(int index) {
          return scanRoots_.getByteString(index);
        }
        /**
         * <code>repeated string scan_roots = 2;</code>
         * @param index The index to set the value at.
         * @param value The scanRoots to set.
         * @return This builder for chaining.
         */
        public Builder setScanRoots(
            int index, java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          ensureScanRootsIsMutable();
          scanRoots_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string scan_roots = 2;</code>
         * @param value The scanRoots to add.
         * @return This builder for chaining.
         */
        public Builder addScanRoots(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          ensureScanRootsIsMutable();
          scanRoots_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string scan_roots = 2;</code>
         * @param values The scanRoots to add.
         * @return This builder for chaining.
         */
        public Builder addAllScanRoots(
            java.lang.Iterable<java.lang.String> values) {
          ensureScanRootsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, scanRoots_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string scan_roots = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearScanRoots() {
          scanRoots_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string scan_roots = 2;</code>
         * @param value The bytes of the scanRoots to add.
         * @return This builder for chaining.
         */
        public Builder addScanRootsBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          ensureScanRootsIsMutable();
          scanRoots_.add(value);
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:perfetto.protos.InodeFileConfig.MountPointMappingEntry)
      }

      // @@protoc_insertion_point(class_scope:perfetto.protos.InodeFileConfig.MountPointMappingEntry)
      private static final perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry();
      }

      public static perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<MountPointMappingEntry>
          PARSER = new com.google.protobuf.AbstractParser<MountPointMappingEntry>() {
        @java.lang.Override
        public MountPointMappingEntry parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<MountPointMappingEntry> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<MountPointMappingEntry> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int SCAN_INTERVAL_MS_FIELD_NUMBER = 1;
    private int scanIntervalMs_ = 0;
    /**
     * <pre>
     * How long to pause between batches.
     * </pre>
     *
     * <code>optional uint32 scan_interval_ms = 1;</code>
     * @return Whether the scanIntervalMs field is set.
     */
    @java.lang.Override
    public boolean hasScanIntervalMs() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * How long to pause between batches.
     * </pre>
     *
     * <code>optional uint32 scan_interval_ms = 1;</code>
     * @return The scanIntervalMs.
     */
    @java.lang.Override
    public int getScanIntervalMs() {
      return scanIntervalMs_;
    }

    public static final int SCAN_DELAY_MS_FIELD_NUMBER = 2;
    private int scanDelayMs_ = 0;
    /**
     * <pre>
     * How long to wait before the first scan in order to accumulate inodes.
     * </pre>
     *
     * <code>optional uint32 scan_delay_ms = 2;</code>
     * @return Whether the scanDelayMs field is set.
     */
    @java.lang.Override
    public boolean hasScanDelayMs() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * How long to wait before the first scan in order to accumulate inodes.
     * </pre>
     *
     * <code>optional uint32 scan_delay_ms = 2;</code>
     * @return The scanDelayMs.
     */
    @java.lang.Override
    public int getScanDelayMs() {
      return scanDelayMs_;
    }

    public static final int SCAN_BATCH_SIZE_FIELD_NUMBER = 3;
    private int scanBatchSize_ = 0;
    /**
     * <pre>
     * How many inodes to scan in one batch.
     * </pre>
     *
     * <code>optional uint32 scan_batch_size = 3;</code>
     * @return Whether the scanBatchSize field is set.
     */
    @java.lang.Override
    public boolean hasScanBatchSize() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * How many inodes to scan in one batch.
     * </pre>
     *
     * <code>optional uint32 scan_batch_size = 3;</code>
     * @return The scanBatchSize.
     */
    @java.lang.Override
    public int getScanBatchSize() {
      return scanBatchSize_;
    }

    public static final int DO_NOT_SCAN_FIELD_NUMBER = 4;
    private boolean doNotScan_ = false;
    /**
     * <pre>
     * Do not scan for inodes not found in the static map.
     * </pre>
     *
     * <code>optional bool do_not_scan = 4;</code>
     * @return Whether the doNotScan field is set.
     */
    @java.lang.Override
    public boolean hasDoNotScan() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Do not scan for inodes not found in the static map.
     * </pre>
     *
     * <code>optional bool do_not_scan = 4;</code>
     * @return The doNotScan.
     */
    @java.lang.Override
    public boolean getDoNotScan() {
      return doNotScan_;
    }

    public static final int SCAN_MOUNT_POINTS_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringList scanMountPoints_;
    /**
     * <pre>
     * If non-empty, only scan inodes corresponding to block devices named in
     * this list.
     * </pre>
     *
     * <code>repeated string scan_mount_points = 5;</code>
     * @return A list containing the scanMountPoints.
     */
    public com.google.protobuf.ProtocolStringList
        getScanMountPointsList() {
      return scanMountPoints_;
    }
    /**
     * <pre>
     * If non-empty, only scan inodes corresponding to block devices named in
     * this list.
     * </pre>
     *
     * <code>repeated string scan_mount_points = 5;</code>
     * @return The count of scanMountPoints.
     */
    public int getScanMountPointsCount() {
      return scanMountPoints_.size();
    }
    /**
     * <pre>
     * If non-empty, only scan inodes corresponding to block devices named in
     * this list.
     * </pre>
     *
     * <code>repeated string scan_mount_points = 5;</code>
     * @param index The index of the element to return.
     * @return The scanMountPoints at the given index.
     */
    public java.lang.String getScanMountPoints(int index) {
      return scanMountPoints_.get(index);
    }
    /**
     * <pre>
     * If non-empty, only scan inodes corresponding to block devices named in
     * this list.
     * </pre>
     *
     * <code>repeated string scan_mount_points = 5;</code>
     * @param index The index of the value to return.
     * @return The bytes of the scanMountPoints at the given index.
     */
    public com.google.protobuf.ByteString
        getScanMountPointsBytes(int index) {
      return scanMountPoints_.getByteString(index);
    }

    public static final int MOUNT_POINT_MAPPING_FIELD_NUMBER = 6;
    @SuppressWarnings("serial")
    private java.util.List<perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry> mountPointMapping_;
    /**
     * <pre>
     * When encountering an inode belonging to a block device corresponding
     * to one of the mount points in this map, scan its scan_roots instead.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InodeFileConfig.MountPointMappingEntry mount_point_mapping = 6;</code>
     */
    @java.lang.Override
    public java.util.List<perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry> getMountPointMappingList() {
      return mountPointMapping_;
    }
    /**
     * <pre>
     * When encountering an inode belonging to a block device corresponding
     * to one of the mount points in this map, scan its scan_roots instead.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InodeFileConfig.MountPointMappingEntry mount_point_mapping = 6;</code>
     */
    @java.lang.Override
    public java.util.List<? extends perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntryOrBuilder> 
        getMountPointMappingOrBuilderList() {
      return mountPointMapping_;
    }
    /**
     * <pre>
     * When encountering an inode belonging to a block device corresponding
     * to one of the mount points in this map, scan its scan_roots instead.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InodeFileConfig.MountPointMappingEntry mount_point_mapping = 6;</code>
     */
    @java.lang.Override
    public int getMountPointMappingCount() {
      return mountPointMapping_.size();
    }
    /**
     * <pre>
     * When encountering an inode belonging to a block device corresponding
     * to one of the mount points in this map, scan its scan_roots instead.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InodeFileConfig.MountPointMappingEntry mount_point_mapping = 6;</code>
     */
    @java.lang.Override
    public perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry getMountPointMapping(int index) {
      return mountPointMapping_.get(index);
    }
    /**
     * <pre>
     * When encountering an inode belonging to a block device corresponding
     * to one of the mount points in this map, scan its scan_roots instead.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InodeFileConfig.MountPointMappingEntry mount_point_mapping = 6;</code>
     */
    @java.lang.Override
    public perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntryOrBuilder getMountPointMappingOrBuilder(
        int index) {
      return mountPointMapping_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, scanIntervalMs_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt32(2, scanDelayMs_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeUInt32(3, scanBatchSize_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeBool(4, doNotScan_);
      }
      for (int i = 0; i < scanMountPoints_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, scanMountPoints_.getRaw(i));
      }
      for (int i = 0; i < mountPointMapping_.size(); i++) {
        output.writeMessage(6, mountPointMapping_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, scanIntervalMs_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, scanDelayMs_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, scanBatchSize_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, doNotScan_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < scanMountPoints_.size(); i++) {
          dataSize += computeStringSizeNoTag(scanMountPoints_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getScanMountPointsList().size();
      }
      for (int i = 0; i < mountPointMapping_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, mountPointMapping_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig)) {
        return super.equals(obj);
      }
      perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig other = (perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig) obj;

      if (hasScanIntervalMs() != other.hasScanIntervalMs()) return false;
      if (hasScanIntervalMs()) {
        if (getScanIntervalMs()
            != other.getScanIntervalMs()) return false;
      }
      if (hasScanDelayMs() != other.hasScanDelayMs()) return false;
      if (hasScanDelayMs()) {
        if (getScanDelayMs()
            != other.getScanDelayMs()) return false;
      }
      if (hasScanBatchSize() != other.hasScanBatchSize()) return false;
      if (hasScanBatchSize()) {
        if (getScanBatchSize()
            != other.getScanBatchSize()) return false;
      }
      if (hasDoNotScan() != other.hasDoNotScan()) return false;
      if (hasDoNotScan()) {
        if (getDoNotScan()
            != other.getDoNotScan()) return false;
      }
      if (!getScanMountPointsList()
          .equals(other.getScanMountPointsList())) return false;
      if (!getMountPointMappingList()
          .equals(other.getMountPointMappingList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasScanIntervalMs()) {
        hash = (37 * hash) + SCAN_INTERVAL_MS_FIELD_NUMBER;
        hash = (53 * hash) + getScanIntervalMs();
      }
      if (hasScanDelayMs()) {
        hash = (37 * hash) + SCAN_DELAY_MS_FIELD_NUMBER;
        hash = (53 * hash) + getScanDelayMs();
      }
      if (hasScanBatchSize()) {
        hash = (37 * hash) + SCAN_BATCH_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getScanBatchSize();
      }
      if (hasDoNotScan()) {
        hash = (37 * hash) + DO_NOT_SCAN_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getDoNotScan());
      }
      if (getScanMountPointsCount() > 0) {
        hash = (37 * hash) + SCAN_MOUNT_POINTS_FIELD_NUMBER;
        hash = (53 * hash) + getScanMountPointsList().hashCode();
      }
      if (getMountPointMappingCount() > 0) {
        hash = (37 * hash) + MOUNT_POINT_MAPPING_FIELD_NUMBER;
        hash = (53 * hash) + getMountPointMappingList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code perfetto.protos.InodeFileConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:perfetto.protos.InodeFileConfig)
        perfetto.protos.InodeFileConfigOuterClass.InodeFileConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.InodeFileConfigOuterClass.internal_static_perfetto_protos_InodeFileConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.InodeFileConfigOuterClass.internal_static_perfetto_protos_InodeFileConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.class, perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.Builder.class);
      }

      // Construct using perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        scanIntervalMs_ = 0;
        scanDelayMs_ = 0;
        scanBatchSize_ = 0;
        doNotScan_ = false;
        scanMountPoints_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        if (mountPointMappingBuilder_ == null) {
          mountPointMapping_ = java.util.Collections.emptyList();
        } else {
          mountPointMapping_ = null;
          mountPointMappingBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return perfetto.protos.InodeFileConfigOuterClass.internal_static_perfetto_protos_InodeFileConfig_descriptor;
      }

      @java.lang.Override
      public perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig getDefaultInstanceForType() {
        return perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.getDefaultInstance();
      }

      @java.lang.Override
      public perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig build() {
        perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig buildPartial() {
        perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig result = new perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig result) {
        if (((bitField0_ & 0x00000010) != 0)) {
          scanMountPoints_ = scanMountPoints_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.scanMountPoints_ = scanMountPoints_;
        if (mountPointMappingBuilder_ == null) {
          if (((bitField0_ & 0x00000020) != 0)) {
            mountPointMapping_ = java.util.Collections.unmodifiableList(mountPointMapping_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.mountPointMapping_ = mountPointMapping_;
        } else {
          result.mountPointMapping_ = mountPointMappingBuilder_.build();
        }
      }

      private void buildPartial0(perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.scanIntervalMs_ = scanIntervalMs_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.scanDelayMs_ = scanDelayMs_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.scanBatchSize_ = scanBatchSize_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.doNotScan_ = doNotScan_;
          to_bitField0_ |= 0x00000008;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig) {
          return mergeFrom((perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig other) {
        if (other == perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.getDefaultInstance()) return this;
        if (other.hasScanIntervalMs()) {
          setScanIntervalMs(other.getScanIntervalMs());
        }
        if (other.hasScanDelayMs()) {
          setScanDelayMs(other.getScanDelayMs());
        }
        if (other.hasScanBatchSize()) {
          setScanBatchSize(other.getScanBatchSize());
        }
        if (other.hasDoNotScan()) {
          setDoNotScan(other.getDoNotScan());
        }
        if (!other.scanMountPoints_.isEmpty()) {
          if (scanMountPoints_.isEmpty()) {
            scanMountPoints_ = other.scanMountPoints_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureScanMountPointsIsMutable();
            scanMountPoints_.addAll(other.scanMountPoints_);
          }
          onChanged();
        }
        if (mountPointMappingBuilder_ == null) {
          if (!other.mountPointMapping_.isEmpty()) {
            if (mountPointMapping_.isEmpty()) {
              mountPointMapping_ = other.mountPointMapping_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureMountPointMappingIsMutable();
              mountPointMapping_.addAll(other.mountPointMapping_);
            }
            onChanged();
          }
        } else {
          if (!other.mountPointMapping_.isEmpty()) {
            if (mountPointMappingBuilder_.isEmpty()) {
              mountPointMappingBuilder_.dispose();
              mountPointMappingBuilder_ = null;
              mountPointMapping_ = other.mountPointMapping_;
              bitField0_ = (bitField0_ & ~0x00000020);
              mountPointMappingBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMountPointMappingFieldBuilder() : null;
            } else {
              mountPointMappingBuilder_.addAllMessages(other.mountPointMapping_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                scanIntervalMs_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                scanDelayMs_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                scanBatchSize_ = input.readUInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                doNotScan_ = input.readBool();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 42: {
                com.google.protobuf.ByteString bs = input.readBytes();
                ensureScanMountPointsIsMutable();
                scanMountPoints_.add(bs);
                break;
              } // case 42
              case 50: {
                perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry m =
                    input.readMessage(
                        perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry.PARSER,
                        extensionRegistry);
                if (mountPointMappingBuilder_ == null) {
                  ensureMountPointMappingIsMutable();
                  mountPointMapping_.add(m);
                } else {
                  mountPointMappingBuilder_.addMessage(m);
                }
                break;
              } // case 50
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int scanIntervalMs_ ;
      /**
       * <pre>
       * How long to pause between batches.
       * </pre>
       *
       * <code>optional uint32 scan_interval_ms = 1;</code>
       * @return Whether the scanIntervalMs field is set.
       */
      @java.lang.Override
      public boolean hasScanIntervalMs() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * How long to pause between batches.
       * </pre>
       *
       * <code>optional uint32 scan_interval_ms = 1;</code>
       * @return The scanIntervalMs.
       */
      @java.lang.Override
      public int getScanIntervalMs() {
        return scanIntervalMs_;
      }
      /**
       * <pre>
       * How long to pause between batches.
       * </pre>
       *
       * <code>optional uint32 scan_interval_ms = 1;</code>
       * @param value The scanIntervalMs to set.
       * @return This builder for chaining.
       */
      public Builder setScanIntervalMs(int value) {
        
        scanIntervalMs_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * How long to pause between batches.
       * </pre>
       *
       * <code>optional uint32 scan_interval_ms = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearScanIntervalMs() {
        bitField0_ = (bitField0_ & ~0x00000001);
        scanIntervalMs_ = 0;
        onChanged();
        return this;
      }

      private int scanDelayMs_ ;
      /**
       * <pre>
       * How long to wait before the first scan in order to accumulate inodes.
       * </pre>
       *
       * <code>optional uint32 scan_delay_ms = 2;</code>
       * @return Whether the scanDelayMs field is set.
       */
      @java.lang.Override
      public boolean hasScanDelayMs() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * How long to wait before the first scan in order to accumulate inodes.
       * </pre>
       *
       * <code>optional uint32 scan_delay_ms = 2;</code>
       * @return The scanDelayMs.
       */
      @java.lang.Override
      public int getScanDelayMs() {
        return scanDelayMs_;
      }
      /**
       * <pre>
       * How long to wait before the first scan in order to accumulate inodes.
       * </pre>
       *
       * <code>optional uint32 scan_delay_ms = 2;</code>
       * @param value The scanDelayMs to set.
       * @return This builder for chaining.
       */
      public Builder setScanDelayMs(int value) {
        
        scanDelayMs_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * How long to wait before the first scan in order to accumulate inodes.
       * </pre>
       *
       * <code>optional uint32 scan_delay_ms = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearScanDelayMs() {
        bitField0_ = (bitField0_ & ~0x00000002);
        scanDelayMs_ = 0;
        onChanged();
        return this;
      }

      private int scanBatchSize_ ;
      /**
       * <pre>
       * How many inodes to scan in one batch.
       * </pre>
       *
       * <code>optional uint32 scan_batch_size = 3;</code>
       * @return Whether the scanBatchSize field is set.
       */
      @java.lang.Override
      public boolean hasScanBatchSize() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * How many inodes to scan in one batch.
       * </pre>
       *
       * <code>optional uint32 scan_batch_size = 3;</code>
       * @return The scanBatchSize.
       */
      @java.lang.Override
      public int getScanBatchSize() {
        return scanBatchSize_;
      }
      /**
       * <pre>
       * How many inodes to scan in one batch.
       * </pre>
       *
       * <code>optional uint32 scan_batch_size = 3;</code>
       * @param value The scanBatchSize to set.
       * @return This builder for chaining.
       */
      public Builder setScanBatchSize(int value) {
        
        scanBatchSize_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * How many inodes to scan in one batch.
       * </pre>
       *
       * <code>optional uint32 scan_batch_size = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearScanBatchSize() {
        bitField0_ = (bitField0_ & ~0x00000004);
        scanBatchSize_ = 0;
        onChanged();
        return this;
      }

      private boolean doNotScan_ ;
      /**
       * <pre>
       * Do not scan for inodes not found in the static map.
       * </pre>
       *
       * <code>optional bool do_not_scan = 4;</code>
       * @return Whether the doNotScan field is set.
       */
      @java.lang.Override
      public boolean hasDoNotScan() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Do not scan for inodes not found in the static map.
       * </pre>
       *
       * <code>optional bool do_not_scan = 4;</code>
       * @return The doNotScan.
       */
      @java.lang.Override
      public boolean getDoNotScan() {
        return doNotScan_;
      }
      /**
       * <pre>
       * Do not scan for inodes not found in the static map.
       * </pre>
       *
       * <code>optional bool do_not_scan = 4;</code>
       * @param value The doNotScan to set.
       * @return This builder for chaining.
       */
      public Builder setDoNotScan(boolean value) {
        
        doNotScan_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Do not scan for inodes not found in the static map.
       * </pre>
       *
       * <code>optional bool do_not_scan = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearDoNotScan() {
        bitField0_ = (bitField0_ & ~0x00000008);
        doNotScan_ = false;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList scanMountPoints_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureScanMountPointsIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          scanMountPoints_ = new com.google.protobuf.LazyStringArrayList(scanMountPoints_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <pre>
       * If non-empty, only scan inodes corresponding to block devices named in
       * this list.
       * </pre>
       *
       * <code>repeated string scan_mount_points = 5;</code>
       * @return A list containing the scanMountPoints.
       */
      public com.google.protobuf.ProtocolStringList
          getScanMountPointsList() {
        return scanMountPoints_.getUnmodifiableView();
      }
      /**
       * <pre>
       * If non-empty, only scan inodes corresponding to block devices named in
       * this list.
       * </pre>
       *
       * <code>repeated string scan_mount_points = 5;</code>
       * @return The count of scanMountPoints.
       */
      public int getScanMountPointsCount() {
        return scanMountPoints_.size();
      }
      /**
       * <pre>
       * If non-empty, only scan inodes corresponding to block devices named in
       * this list.
       * </pre>
       *
       * <code>repeated string scan_mount_points = 5;</code>
       * @param index The index of the element to return.
       * @return The scanMountPoints at the given index.
       */
      public java.lang.String getScanMountPoints(int index) {
        return scanMountPoints_.get(index);
      }
      /**
       * <pre>
       * If non-empty, only scan inodes corresponding to block devices named in
       * this list.
       * </pre>
       *
       * <code>repeated string scan_mount_points = 5;</code>
       * @param index The index of the value to return.
       * @return The bytes of the scanMountPoints at the given index.
       */
      public com.google.protobuf.ByteString
          getScanMountPointsBytes(int index) {
        return scanMountPoints_.getByteString(index);
      }
      /**
       * <pre>
       * If non-empty, only scan inodes corresponding to block devices named in
       * this list.
       * </pre>
       *
       * <code>repeated string scan_mount_points = 5;</code>
       * @param index The index to set the value at.
       * @param value The scanMountPoints to set.
       * @return This builder for chaining.
       */
      public Builder setScanMountPoints(
          int index, java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureScanMountPointsIsMutable();
        scanMountPoints_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If non-empty, only scan inodes corresponding to block devices named in
       * this list.
       * </pre>
       *
       * <code>repeated string scan_mount_points = 5;</code>
       * @param value The scanMountPoints to add.
       * @return This builder for chaining.
       */
      public Builder addScanMountPoints(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureScanMountPointsIsMutable();
        scanMountPoints_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If non-empty, only scan inodes corresponding to block devices named in
       * this list.
       * </pre>
       *
       * <code>repeated string scan_mount_points = 5;</code>
       * @param values The scanMountPoints to add.
       * @return This builder for chaining.
       */
      public Builder addAllScanMountPoints(
          java.lang.Iterable<java.lang.String> values) {
        ensureScanMountPointsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, scanMountPoints_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If non-empty, only scan inodes corresponding to block devices named in
       * this list.
       * </pre>
       *
       * <code>repeated string scan_mount_points = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearScanMountPoints() {
        scanMountPoints_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If non-empty, only scan inodes corresponding to block devices named in
       * this list.
       * </pre>
       *
       * <code>repeated string scan_mount_points = 5;</code>
       * @param value The bytes of the scanMountPoints to add.
       * @return This builder for chaining.
       */
      public Builder addScanMountPointsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        ensureScanMountPointsIsMutable();
        scanMountPoints_.add(value);
        onChanged();
        return this;
      }

      private java.util.List<perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry> mountPointMapping_ =
        java.util.Collections.emptyList();
      private void ensureMountPointMappingIsMutable() {
        if (!((bitField0_ & 0x00000020) != 0)) {
          mountPointMapping_ = new java.util.ArrayList<perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry>(mountPointMapping_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry, perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry.Builder, perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntryOrBuilder> mountPointMappingBuilder_;

      /**
       * <pre>
       * When encountering an inode belonging to a block device corresponding
       * to one of the mount points in this map, scan its scan_roots instead.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InodeFileConfig.MountPointMappingEntry mount_point_mapping = 6;</code>
       */
      public java.util.List<perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry> getMountPointMappingList() {
        if (mountPointMappingBuilder_ == null) {
          return java.util.Collections.unmodifiableList(mountPointMapping_);
        } else {
          return mountPointMappingBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * When encountering an inode belonging to a block device corresponding
       * to one of the mount points in this map, scan its scan_roots instead.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InodeFileConfig.MountPointMappingEntry mount_point_mapping = 6;</code>
       */
      public int getMountPointMappingCount() {
        if (mountPointMappingBuilder_ == null) {
          return mountPointMapping_.size();
        } else {
          return mountPointMappingBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * When encountering an inode belonging to a block device corresponding
       * to one of the mount points in this map, scan its scan_roots instead.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InodeFileConfig.MountPointMappingEntry mount_point_mapping = 6;</code>
       */
      public perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry getMountPointMapping(int index) {
        if (mountPointMappingBuilder_ == null) {
          return mountPointMapping_.get(index);
        } else {
          return mountPointMappingBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * When encountering an inode belonging to a block device corresponding
       * to one of the mount points in this map, scan its scan_roots instead.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InodeFileConfig.MountPointMappingEntry mount_point_mapping = 6;</code>
       */
      public Builder setMountPointMapping(
          int index, perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry value) {
        if (mountPointMappingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMountPointMappingIsMutable();
          mountPointMapping_.set(index, value);
          onChanged();
        } else {
          mountPointMappingBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * When encountering an inode belonging to a block device corresponding
       * to one of the mount points in this map, scan its scan_roots instead.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InodeFileConfig.MountPointMappingEntry mount_point_mapping = 6;</code>
       */
      public Builder setMountPointMapping(
          int index, perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry.Builder builderForValue) {
        if (mountPointMappingBuilder_ == null) {
          ensureMountPointMappingIsMutable();
          mountPointMapping_.set(index, builderForValue.build());
          onChanged();
        } else {
          mountPointMappingBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * When encountering an inode belonging to a block device corresponding
       * to one of the mount points in this map, scan its scan_roots instead.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InodeFileConfig.MountPointMappingEntry mount_point_mapping = 6;</code>
       */
      public Builder addMountPointMapping(perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry value) {
        if (mountPointMappingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMountPointMappingIsMutable();
          mountPointMapping_.add(value);
          onChanged();
        } else {
          mountPointMappingBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * When encountering an inode belonging to a block device corresponding
       * to one of the mount points in this map, scan its scan_roots instead.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InodeFileConfig.MountPointMappingEntry mount_point_mapping = 6;</code>
       */
      public Builder addMountPointMapping(
          int index, perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry value) {
        if (mountPointMappingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMountPointMappingIsMutable();
          mountPointMapping_.add(index, value);
          onChanged();
        } else {
          mountPointMappingBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * When encountering an inode belonging to a block device corresponding
       * to one of the mount points in this map, scan its scan_roots instead.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InodeFileConfig.MountPointMappingEntry mount_point_mapping = 6;</code>
       */
      public Builder addMountPointMapping(
          perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry.Builder builderForValue) {
        if (mountPointMappingBuilder_ == null) {
          ensureMountPointMappingIsMutable();
          mountPointMapping_.add(builderForValue.build());
          onChanged();
        } else {
          mountPointMappingBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * When encountering an inode belonging to a block device corresponding
       * to one of the mount points in this map, scan its scan_roots instead.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InodeFileConfig.MountPointMappingEntry mount_point_mapping = 6;</code>
       */
      public Builder addMountPointMapping(
          int index, perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry.Builder builderForValue) {
        if (mountPointMappingBuilder_ == null) {
          ensureMountPointMappingIsMutable();
          mountPointMapping_.add(index, builderForValue.build());
          onChanged();
        } else {
          mountPointMappingBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * When encountering an inode belonging to a block device corresponding
       * to one of the mount points in this map, scan its scan_roots instead.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InodeFileConfig.MountPointMappingEntry mount_point_mapping = 6;</code>
       */
      public Builder addAllMountPointMapping(
          java.lang.Iterable<? extends perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry> values) {
        if (mountPointMappingBuilder_ == null) {
          ensureMountPointMappingIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, mountPointMapping_);
          onChanged();
        } else {
          mountPointMappingBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * When encountering an inode belonging to a block device corresponding
       * to one of the mount points in this map, scan its scan_roots instead.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InodeFileConfig.MountPointMappingEntry mount_point_mapping = 6;</code>
       */
      public Builder clearMountPointMapping() {
        if (mountPointMappingBuilder_ == null) {
          mountPointMapping_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          mountPointMappingBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * When encountering an inode belonging to a block device corresponding
       * to one of the mount points in this map, scan its scan_roots instead.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InodeFileConfig.MountPointMappingEntry mount_point_mapping = 6;</code>
       */
      public Builder removeMountPointMapping(int index) {
        if (mountPointMappingBuilder_ == null) {
          ensureMountPointMappingIsMutable();
          mountPointMapping_.remove(index);
          onChanged();
        } else {
          mountPointMappingBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * When encountering an inode belonging to a block device corresponding
       * to one of the mount points in this map, scan its scan_roots instead.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InodeFileConfig.MountPointMappingEntry mount_point_mapping = 6;</code>
       */
      public perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry.Builder getMountPointMappingBuilder(
          int index) {
        return getMountPointMappingFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * When encountering an inode belonging to a block device corresponding
       * to one of the mount points in this map, scan its scan_roots instead.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InodeFileConfig.MountPointMappingEntry mount_point_mapping = 6;</code>
       */
      public perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntryOrBuilder getMountPointMappingOrBuilder(
          int index) {
        if (mountPointMappingBuilder_ == null) {
          return mountPointMapping_.get(index);  } else {
          return mountPointMappingBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * When encountering an inode belonging to a block device corresponding
       * to one of the mount points in this map, scan its scan_roots instead.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InodeFileConfig.MountPointMappingEntry mount_point_mapping = 6;</code>
       */
      public java.util.List<? extends perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntryOrBuilder> 
           getMountPointMappingOrBuilderList() {
        if (mountPointMappingBuilder_ != null) {
          return mountPointMappingBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(mountPointMapping_);
        }
      }
      /**
       * <pre>
       * When encountering an inode belonging to a block device corresponding
       * to one of the mount points in this map, scan its scan_roots instead.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InodeFileConfig.MountPointMappingEntry mount_point_mapping = 6;</code>
       */
      public perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry.Builder addMountPointMappingBuilder() {
        return getMountPointMappingFieldBuilder().addBuilder(
            perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry.getDefaultInstance());
      }
      /**
       * <pre>
       * When encountering an inode belonging to a block device corresponding
       * to one of the mount points in this map, scan its scan_roots instead.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InodeFileConfig.MountPointMappingEntry mount_point_mapping = 6;</code>
       */
      public perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry.Builder addMountPointMappingBuilder(
          int index) {
        return getMountPointMappingFieldBuilder().addBuilder(
            index, perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry.getDefaultInstance());
      }
      /**
       * <pre>
       * When encountering an inode belonging to a block device corresponding
       * to one of the mount points in this map, scan its scan_roots instead.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InodeFileConfig.MountPointMappingEntry mount_point_mapping = 6;</code>
       */
      public java.util.List<perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry.Builder> 
           getMountPointMappingBuilderList() {
        return getMountPointMappingFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry, perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry.Builder, perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntryOrBuilder> 
          getMountPointMappingFieldBuilder() {
        if (mountPointMappingBuilder_ == null) {
          mountPointMappingBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry, perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntry.Builder, perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig.MountPointMappingEntryOrBuilder>(
                  mountPointMapping_,
                  ((bitField0_ & 0x00000020) != 0),
                  getParentForChildren(),
                  isClean());
          mountPointMapping_ = null;
        }
        return mountPointMappingBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:perfetto.protos.InodeFileConfig)
    }

    // @@protoc_insertion_point(class_scope:perfetto.protos.InodeFileConfig)
    private static final perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig();
    }

    public static perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<InodeFileConfig>
        PARSER = new com.google.protobuf.AbstractParser<InodeFileConfig>() {
      @java.lang.Override
      public InodeFileConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<InodeFileConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<InodeFileConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public perfetto.protos.InodeFileConfigOuterClass.InodeFileConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_InodeFileConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_perfetto_protos_InodeFileConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_InodeFileConfig_MountPointMappingEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_perfetto_protos_InodeFileConfig_MountPointMappingEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n9protos/perfetto/config/inode_file/inod" +
      "e_file_config.proto\022\017perfetto.protos\"\243\002\n" +
      "\017InodeFileConfig\022\030\n\020scan_interval_ms\030\001 \001" +
      "(\r\022\025\n\rscan_delay_ms\030\002 \001(\r\022\027\n\017scan_batch_" +
      "size\030\003 \001(\r\022\023\n\013do_not_scan\030\004 \001(\010\022\031\n\021scan_" +
      "mount_points\030\005 \003(\t\022T\n\023mount_point_mappin" +
      "g\030\006 \003(\01327.perfetto.protos.InodeFileConfi" +
      "g.MountPointMappingEntry\032@\n\026MountPointMa" +
      "ppingEntry\022\022\n\nmountpoint\030\001 \001(\t\022\022\n\nscan_r" +
      "oots\030\002 \003(\t"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_perfetto_protos_InodeFileConfig_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_perfetto_protos_InodeFileConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_perfetto_protos_InodeFileConfig_descriptor,
        new java.lang.String[] { "ScanIntervalMs", "ScanDelayMs", "ScanBatchSize", "DoNotScan", "ScanMountPoints", "MountPointMapping", });
    internal_static_perfetto_protos_InodeFileConfig_MountPointMappingEntry_descriptor =
      internal_static_perfetto_protos_InodeFileConfig_descriptor.getNestedTypes().get(0);
    internal_static_perfetto_protos_InodeFileConfig_MountPointMappingEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_perfetto_protos_InodeFileConfig_MountPointMappingEntry_descriptor,
        new java.lang.String[] { "Mountpoint", "ScanRoots", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
