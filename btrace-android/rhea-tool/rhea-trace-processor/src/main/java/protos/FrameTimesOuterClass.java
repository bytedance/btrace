// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/perfetto/metrics/chrome/frame_times.proto

package perfetto.protos;

public final class FrameTimesOuterClass {
  private FrameTimesOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface FrameTimesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:perfetto.protos.FrameTimes)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated double frame_time = 1 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
     * @return A list containing the frameTime.
     */
    java.util.List<java.lang.Double> getFrameTimeList();
    /**
     * <code>repeated double frame_time = 1 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
     * @return The count of frameTime.
     */
    int getFrameTimeCount();
    /**
     * <code>repeated double frame_time = 1 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
     * @param index The index of the element to return.
     * @return The frameTime at the given index.
     */
    double getFrameTime(int index);

    /**
     * <code>repeated double exp_frame_time = 2 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
     * @return A list containing the expFrameTime.
     */
    java.util.List<java.lang.Double> getExpFrameTimeList();
    /**
     * <code>repeated double exp_frame_time = 2 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
     * @return The count of expFrameTime.
     */
    int getExpFrameTimeCount();
    /**
     * <code>repeated double exp_frame_time = 2 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
     * @param index The index of the element to return.
     * @return The expFrameTime at the given index.
     */
    double getExpFrameTime(int index);

    /**
     * <code>optional double avg_surface_fps = 3 [(.perfetto.protos.unit) = "unitless_biggerIsBetter"];</code>
     * @return Whether the avgSurfaceFps field is set.
     */
    boolean hasAvgSurfaceFps();
    /**
     * <code>optional double avg_surface_fps = 3 [(.perfetto.protos.unit) = "unitless_biggerIsBetter"];</code>
     * @return The avgSurfaceFps.
     */
    double getAvgSurfaceFps();

    /**
     * <code>optional double exp_avg_surface_fps = 4 [(.perfetto.protos.unit) = "unitless_biggerIsBetter"];</code>
     * @return Whether the expAvgSurfaceFps field is set.
     */
    boolean hasExpAvgSurfaceFps();
    /**
     * <code>optional double exp_avg_surface_fps = 4 [(.perfetto.protos.unit) = "unitless_biggerIsBetter"];</code>
     * @return The expAvgSurfaceFps.
     */
    double getExpAvgSurfaceFps();
  }
  /**
   * Protobuf type {@code perfetto.protos.FrameTimes}
   */
  public static final class FrameTimes extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:perfetto.protos.FrameTimes)
      FrameTimesOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FrameTimes.newBuilder() to construct.
    private FrameTimes(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FrameTimes() {
      frameTime_ = emptyDoubleList();
      expFrameTime_ = emptyDoubleList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new FrameTimes();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return perfetto.protos.FrameTimesOuterClass.internal_static_perfetto_protos_FrameTimes_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return perfetto.protos.FrameTimesOuterClass.internal_static_perfetto_protos_FrameTimes_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              perfetto.protos.FrameTimesOuterClass.FrameTimes.class, perfetto.protos.FrameTimesOuterClass.FrameTimes.Builder.class);
    }

    private int bitField0_;
    public static final int FRAME_TIME_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.DoubleList frameTime_;
    /**
     * <code>repeated double frame_time = 1 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
     * @return A list containing the frameTime.
     */
    @java.lang.Override
    public java.util.List<java.lang.Double>
        getFrameTimeList() {
      return frameTime_;
    }
    /**
     * <code>repeated double frame_time = 1 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
     * @return The count of frameTime.
     */
    public int getFrameTimeCount() {
      return frameTime_.size();
    }
    /**
     * <code>repeated double frame_time = 1 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
     * @param index The index of the element to return.
     * @return The frameTime at the given index.
     */
    public double getFrameTime(int index) {
      return frameTime_.getDouble(index);
    }

    public static final int EXP_FRAME_TIME_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.DoubleList expFrameTime_;
    /**
     * <code>repeated double exp_frame_time = 2 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
     * @return A list containing the expFrameTime.
     */
    @java.lang.Override
    public java.util.List<java.lang.Double>
        getExpFrameTimeList() {
      return expFrameTime_;
    }
    /**
     * <code>repeated double exp_frame_time = 2 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
     * @return The count of expFrameTime.
     */
    public int getExpFrameTimeCount() {
      return expFrameTime_.size();
    }
    /**
     * <code>repeated double exp_frame_time = 2 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
     * @param index The index of the element to return.
     * @return The expFrameTime at the given index.
     */
    public double getExpFrameTime(int index) {
      return expFrameTime_.getDouble(index);
    }

    public static final int AVG_SURFACE_FPS_FIELD_NUMBER = 3;
    private double avgSurfaceFps_ = 0D;
    /**
     * <code>optional double avg_surface_fps = 3 [(.perfetto.protos.unit) = "unitless_biggerIsBetter"];</code>
     * @return Whether the avgSurfaceFps field is set.
     */
    @java.lang.Override
    public boolean hasAvgSurfaceFps() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional double avg_surface_fps = 3 [(.perfetto.protos.unit) = "unitless_biggerIsBetter"];</code>
     * @return The avgSurfaceFps.
     */
    @java.lang.Override
    public double getAvgSurfaceFps() {
      return avgSurfaceFps_;
    }

    public static final int EXP_AVG_SURFACE_FPS_FIELD_NUMBER = 4;
    private double expAvgSurfaceFps_ = 0D;
    /**
     * <code>optional double exp_avg_surface_fps = 4 [(.perfetto.protos.unit) = "unitless_biggerIsBetter"];</code>
     * @return Whether the expAvgSurfaceFps field is set.
     */
    @java.lang.Override
    public boolean hasExpAvgSurfaceFps() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional double exp_avg_surface_fps = 4 [(.perfetto.protos.unit) = "unitless_biggerIsBetter"];</code>
     * @return The expAvgSurfaceFps.
     */
    @java.lang.Override
    public double getExpAvgSurfaceFps() {
      return expAvgSurfaceFps_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < frameTime_.size(); i++) {
        output.writeDouble(1, frameTime_.getDouble(i));
      }
      for (int i = 0; i < expFrameTime_.size(); i++) {
        output.writeDouble(2, expFrameTime_.getDouble(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeDouble(3, avgSurfaceFps_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeDouble(4, expAvgSurfaceFps_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        dataSize = 8 * getFrameTimeList().size();
        size += dataSize;
        size += 1 * getFrameTimeList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getExpFrameTimeList().size();
        size += dataSize;
        size += 1 * getExpFrameTimeList().size();
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, avgSurfaceFps_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, expAvgSurfaceFps_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof perfetto.protos.FrameTimesOuterClass.FrameTimes)) {
        return super.equals(obj);
      }
      perfetto.protos.FrameTimesOuterClass.FrameTimes other = (perfetto.protos.FrameTimesOuterClass.FrameTimes) obj;

      if (!getFrameTimeList()
          .equals(other.getFrameTimeList())) return false;
      if (!getExpFrameTimeList()
          .equals(other.getExpFrameTimeList())) return false;
      if (hasAvgSurfaceFps() != other.hasAvgSurfaceFps()) return false;
      if (hasAvgSurfaceFps()) {
        if (java.lang.Double.doubleToLongBits(getAvgSurfaceFps())
            != java.lang.Double.doubleToLongBits(
                other.getAvgSurfaceFps())) return false;
      }
      if (hasExpAvgSurfaceFps() != other.hasExpAvgSurfaceFps()) return false;
      if (hasExpAvgSurfaceFps()) {
        if (java.lang.Double.doubleToLongBits(getExpAvgSurfaceFps())
            != java.lang.Double.doubleToLongBits(
                other.getExpAvgSurfaceFps())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getFrameTimeCount() > 0) {
        hash = (37 * hash) + FRAME_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getFrameTimeList().hashCode();
      }
      if (getExpFrameTimeCount() > 0) {
        hash = (37 * hash) + EXP_FRAME_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getExpFrameTimeList().hashCode();
      }
      if (hasAvgSurfaceFps()) {
        hash = (37 * hash) + AVG_SURFACE_FPS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getAvgSurfaceFps()));
      }
      if (hasExpAvgSurfaceFps()) {
        hash = (37 * hash) + EXP_AVG_SURFACE_FPS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getExpAvgSurfaceFps()));
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static perfetto.protos.FrameTimesOuterClass.FrameTimes parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.FrameTimesOuterClass.FrameTimes parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.FrameTimesOuterClass.FrameTimes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.FrameTimesOuterClass.FrameTimes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.FrameTimesOuterClass.FrameTimes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.FrameTimesOuterClass.FrameTimes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.FrameTimesOuterClass.FrameTimes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.FrameTimesOuterClass.FrameTimes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.FrameTimesOuterClass.FrameTimes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static perfetto.protos.FrameTimesOuterClass.FrameTimes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.FrameTimesOuterClass.FrameTimes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.FrameTimesOuterClass.FrameTimes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(perfetto.protos.FrameTimesOuterClass.FrameTimes prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code perfetto.protos.FrameTimes}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:perfetto.protos.FrameTimes)
        perfetto.protos.FrameTimesOuterClass.FrameTimesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.FrameTimesOuterClass.internal_static_perfetto_protos_FrameTimes_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.FrameTimesOuterClass.internal_static_perfetto_protos_FrameTimes_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.FrameTimesOuterClass.FrameTimes.class, perfetto.protos.FrameTimesOuterClass.FrameTimes.Builder.class);
      }

      // Construct using perfetto.protos.FrameTimesOuterClass.FrameTimes.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        frameTime_ = emptyDoubleList();
        expFrameTime_ = emptyDoubleList();
        avgSurfaceFps_ = 0D;
        expAvgSurfaceFps_ = 0D;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return perfetto.protos.FrameTimesOuterClass.internal_static_perfetto_protos_FrameTimes_descriptor;
      }

      @java.lang.Override
      public perfetto.protos.FrameTimesOuterClass.FrameTimes getDefaultInstanceForType() {
        return perfetto.protos.FrameTimesOuterClass.FrameTimes.getDefaultInstance();
      }

      @java.lang.Override
      public perfetto.protos.FrameTimesOuterClass.FrameTimes build() {
        perfetto.protos.FrameTimesOuterClass.FrameTimes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public perfetto.protos.FrameTimesOuterClass.FrameTimes buildPartial() {
        perfetto.protos.FrameTimesOuterClass.FrameTimes result = new perfetto.protos.FrameTimesOuterClass.FrameTimes(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(perfetto.protos.FrameTimesOuterClass.FrameTimes result) {
        if (((bitField0_ & 0x00000001) != 0)) {
          frameTime_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.frameTime_ = frameTime_;
        if (((bitField0_ & 0x00000002) != 0)) {
          expFrameTime_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.expFrameTime_ = expFrameTime_;
      }

      private void buildPartial0(perfetto.protos.FrameTimesOuterClass.FrameTimes result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.avgSurfaceFps_ = avgSurfaceFps_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.expAvgSurfaceFps_ = expAvgSurfaceFps_;
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof perfetto.protos.FrameTimesOuterClass.FrameTimes) {
          return mergeFrom((perfetto.protos.FrameTimesOuterClass.FrameTimes)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(perfetto.protos.FrameTimesOuterClass.FrameTimes other) {
        if (other == perfetto.protos.FrameTimesOuterClass.FrameTimes.getDefaultInstance()) return this;
        if (!other.frameTime_.isEmpty()) {
          if (frameTime_.isEmpty()) {
            frameTime_ = other.frameTime_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureFrameTimeIsMutable();
            frameTime_.addAll(other.frameTime_);
          }
          onChanged();
        }
        if (!other.expFrameTime_.isEmpty()) {
          if (expFrameTime_.isEmpty()) {
            expFrameTime_ = other.expFrameTime_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureExpFrameTimeIsMutable();
            expFrameTime_.addAll(other.expFrameTime_);
          }
          onChanged();
        }
        if (other.hasAvgSurfaceFps()) {
          setAvgSurfaceFps(other.getAvgSurfaceFps());
        }
        if (other.hasExpAvgSurfaceFps()) {
          setExpAvgSurfaceFps(other.getExpAvgSurfaceFps());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 9: {
                double v = input.readDouble();
                ensureFrameTimeIsMutable();
                frameTime_.addDouble(v);
                break;
              } // case 9
              case 10: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureFrameTimeIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  frameTime_.addDouble(input.readDouble());
                }
                input.popLimit(limit);
                break;
              } // case 10
              case 17: {
                double v = input.readDouble();
                ensureExpFrameTimeIsMutable();
                expFrameTime_.addDouble(v);
                break;
              } // case 17
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureExpFrameTimeIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  expFrameTime_.addDouble(input.readDouble());
                }
                input.popLimit(limit);
                break;
              } // case 18
              case 25: {
                avgSurfaceFps_ = input.readDouble();
                bitField0_ |= 0x00000004;
                break;
              } // case 25
              case 33: {
                expAvgSurfaceFps_ = input.readDouble();
                bitField0_ |= 0x00000008;
                break;
              } // case 33
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.DoubleList frameTime_ = emptyDoubleList();
      private void ensureFrameTimeIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          frameTime_ = mutableCopy(frameTime_);
          bitField0_ |= 0x00000001;
        }
      }
      /**
       * <code>repeated double frame_time = 1 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
       * @return A list containing the frameTime.
       */
      public java.util.List<java.lang.Double>
          getFrameTimeList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(frameTime_) : frameTime_;
      }
      /**
       * <code>repeated double frame_time = 1 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
       * @return The count of frameTime.
       */
      public int getFrameTimeCount() {
        return frameTime_.size();
      }
      /**
       * <code>repeated double frame_time = 1 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
       * @param index The index of the element to return.
       * @return The frameTime at the given index.
       */
      public double getFrameTime(int index) {
        return frameTime_.getDouble(index);
      }
      /**
       * <code>repeated double frame_time = 1 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
       * @param index The index to set the value at.
       * @param value The frameTime to set.
       * @return This builder for chaining.
       */
      public Builder setFrameTime(
          int index, double value) {
        
        ensureFrameTimeIsMutable();
        frameTime_.setDouble(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double frame_time = 1 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
       * @param value The frameTime to add.
       * @return This builder for chaining.
       */
      public Builder addFrameTime(double value) {
        
        ensureFrameTimeIsMutable();
        frameTime_.addDouble(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double frame_time = 1 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
       * @param values The frameTime to add.
       * @return This builder for chaining.
       */
      public Builder addAllFrameTime(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureFrameTimeIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, frameTime_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double frame_time = 1 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
       * @return This builder for chaining.
       */
      public Builder clearFrameTime() {
        frameTime_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.DoubleList expFrameTime_ = emptyDoubleList();
      private void ensureExpFrameTimeIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          expFrameTime_ = mutableCopy(expFrameTime_);
          bitField0_ |= 0x00000002;
        }
      }
      /**
       * <code>repeated double exp_frame_time = 2 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
       * @return A list containing the expFrameTime.
       */
      public java.util.List<java.lang.Double>
          getExpFrameTimeList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(expFrameTime_) : expFrameTime_;
      }
      /**
       * <code>repeated double exp_frame_time = 2 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
       * @return The count of expFrameTime.
       */
      public int getExpFrameTimeCount() {
        return expFrameTime_.size();
      }
      /**
       * <code>repeated double exp_frame_time = 2 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
       * @param index The index of the element to return.
       * @return The expFrameTime at the given index.
       */
      public double getExpFrameTime(int index) {
        return expFrameTime_.getDouble(index);
      }
      /**
       * <code>repeated double exp_frame_time = 2 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
       * @param index The index to set the value at.
       * @param value The expFrameTime to set.
       * @return This builder for chaining.
       */
      public Builder setExpFrameTime(
          int index, double value) {
        
        ensureExpFrameTimeIsMutable();
        expFrameTime_.setDouble(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double exp_frame_time = 2 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
       * @param value The expFrameTime to add.
       * @return This builder for chaining.
       */
      public Builder addExpFrameTime(double value) {
        
        ensureExpFrameTimeIsMutable();
        expFrameTime_.addDouble(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double exp_frame_time = 2 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
       * @param values The expFrameTime to add.
       * @return This builder for chaining.
       */
      public Builder addAllExpFrameTime(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureExpFrameTimeIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, expFrameTime_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double exp_frame_time = 2 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
       * @return This builder for chaining.
       */
      public Builder clearExpFrameTime() {
        expFrameTime_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private double avgSurfaceFps_ ;
      /**
       * <code>optional double avg_surface_fps = 3 [(.perfetto.protos.unit) = "unitless_biggerIsBetter"];</code>
       * @return Whether the avgSurfaceFps field is set.
       */
      @java.lang.Override
      public boolean hasAvgSurfaceFps() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional double avg_surface_fps = 3 [(.perfetto.protos.unit) = "unitless_biggerIsBetter"];</code>
       * @return The avgSurfaceFps.
       */
      @java.lang.Override
      public double getAvgSurfaceFps() {
        return avgSurfaceFps_;
      }
      /**
       * <code>optional double avg_surface_fps = 3 [(.perfetto.protos.unit) = "unitless_biggerIsBetter"];</code>
       * @param value The avgSurfaceFps to set.
       * @return This builder for chaining.
       */
      public Builder setAvgSurfaceFps(double value) {
        
        avgSurfaceFps_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional double avg_surface_fps = 3 [(.perfetto.protos.unit) = "unitless_biggerIsBetter"];</code>
       * @return This builder for chaining.
       */
      public Builder clearAvgSurfaceFps() {
        bitField0_ = (bitField0_ & ~0x00000004);
        avgSurfaceFps_ = 0D;
        onChanged();
        return this;
      }

      private double expAvgSurfaceFps_ ;
      /**
       * <code>optional double exp_avg_surface_fps = 4 [(.perfetto.protos.unit) = "unitless_biggerIsBetter"];</code>
       * @return Whether the expAvgSurfaceFps field is set.
       */
      @java.lang.Override
      public boolean hasExpAvgSurfaceFps() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional double exp_avg_surface_fps = 4 [(.perfetto.protos.unit) = "unitless_biggerIsBetter"];</code>
       * @return The expAvgSurfaceFps.
       */
      @java.lang.Override
      public double getExpAvgSurfaceFps() {
        return expAvgSurfaceFps_;
      }
      /**
       * <code>optional double exp_avg_surface_fps = 4 [(.perfetto.protos.unit) = "unitless_biggerIsBetter"];</code>
       * @param value The expAvgSurfaceFps to set.
       * @return This builder for chaining.
       */
      public Builder setExpAvgSurfaceFps(double value) {
        
        expAvgSurfaceFps_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional double exp_avg_surface_fps = 4 [(.perfetto.protos.unit) = "unitless_biggerIsBetter"];</code>
       * @return This builder for chaining.
       */
      public Builder clearExpAvgSurfaceFps() {
        bitField0_ = (bitField0_ & ~0x00000008);
        expAvgSurfaceFps_ = 0D;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:perfetto.protos.FrameTimes)
    }

    // @@protoc_insertion_point(class_scope:perfetto.protos.FrameTimes)
    private static final perfetto.protos.FrameTimesOuterClass.FrameTimes DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new perfetto.protos.FrameTimesOuterClass.FrameTimes();
    }

    public static perfetto.protos.FrameTimesOuterClass.FrameTimes getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<FrameTimes>
        PARSER = new com.google.protobuf.AbstractParser<FrameTimes>() {
      @java.lang.Override
      public FrameTimes parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<FrameTimes> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FrameTimes> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public perfetto.protos.FrameTimesOuterClass.FrameTimes getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_FrameTimes_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_perfetto_protos_FrameTimes_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n0protos/perfetto/metrics/chrome/frame_t" +
      "imes.proto\022\017perfetto.protos\032,protos/perf" +
      "etto/metrics/custom_options.proto\"\330\001\n\nFr" +
      "ameTimes\022*\n\nframe_time\030\001 \003(\001B\026\212\265\030\022ms_sma" +
      "llerIsBetter\022.\n\016exp_frame_time\030\002 \003(\001B\026\212\265" +
      "\030\022ms_smallerIsBetter\0224\n\017avg_surface_fps\030" +
      "\003 \001(\001B\033\212\265\030\027unitless_biggerIsBetter\0228\n\023ex" +
      "p_avg_surface_fps\030\004 \001(\001B\033\212\265\030\027unitless_bi" +
      "ggerIsBetter"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          perfetto.protos.CustomOptions.getDescriptor(),
        });
    internal_static_perfetto_protos_FrameTimes_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_perfetto_protos_FrameTimes_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_perfetto_protos_FrameTimes_descriptor,
        new java.lang.String[] { "FrameTime", "ExpFrameTime", "AvgSurfaceFps", "ExpAvgSurfaceFps", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(perfetto.protos.CustomOptions.unit);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    perfetto.protos.CustomOptions.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
