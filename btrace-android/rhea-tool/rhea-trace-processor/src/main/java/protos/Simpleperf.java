// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/perfetto/metrics/android/simpleperf.proto

package perfetto.protos;

public final class Simpleperf {
  private Simpleperf() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface AndroidSimpleperfMetricOrBuilder extends
      // @@protoc_insertion_point(interface_extends:perfetto.protos.AndroidSimpleperfMetric)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional double urgent_ratio = 1;</code>
     * @return Whether the urgentRatio field is set.
     */
    boolean hasUrgentRatio();
    /**
     * <code>optional double urgent_ratio = 1;</code>
     * @return The urgentRatio.
     */
    double getUrgentRatio();

    /**
     * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric events = 2;</code>
     */
    java.util.List<perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric> 
        getEventsList();
    /**
     * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric events = 2;</code>
     */
    perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric getEvents(int index);
    /**
     * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric events = 2;</code>
     */
    int getEventsCount();
    /**
     * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric events = 2;</code>
     */
    java.util.List<? extends perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetricOrBuilder> 
        getEventsOrBuilderList();
    /**
     * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric events = 2;</code>
     */
    perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetricOrBuilder getEventsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Metric that stores information related to atrace events generated by
   * simpleperf tool
   * </pre>
   *
   * Protobuf type {@code perfetto.protos.AndroidSimpleperfMetric}
   */
  public static final class AndroidSimpleperfMetric extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:perfetto.protos.AndroidSimpleperfMetric)
      AndroidSimpleperfMetricOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use AndroidSimpleperfMetric.newBuilder() to construct.
    private AndroidSimpleperfMetric(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private AndroidSimpleperfMetric() {
      events_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new AndroidSimpleperfMetric();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return perfetto.protos.Simpleperf.internal_static_perfetto_protos_AndroidSimpleperfMetric_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return perfetto.protos.Simpleperf.internal_static_perfetto_protos_AndroidSimpleperfMetric_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              perfetto.protos.Simpleperf.AndroidSimpleperfMetric.class, perfetto.protos.Simpleperf.AndroidSimpleperfMetric.Builder.class);
    }

    public interface PerfEventMetricOrBuilder extends
        // @@protoc_insertion_point(interface_extends:perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Simpleperf event name
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return Whether the name field is set.
       */
      boolean hasName();
      /**
       * <pre>
       * Simpleperf event name
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return The name.
       */
      java.lang.String getName();
      /**
       * <pre>
       * Simpleperf event name
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return The bytes for name.
       */
      com.google.protobuf.ByteString
          getNameBytes();

      /**
       * <pre>
       * Metrics for each process
       * </pre>
       *
       * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Process processes = 2;</code>
       */
      java.util.List<perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process> 
          getProcessesList();
      /**
       * <pre>
       * Metrics for each process
       * </pre>
       *
       * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Process processes = 2;</code>
       */
      perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process getProcesses(int index);
      /**
       * <pre>
       * Metrics for each process
       * </pre>
       *
       * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Process processes = 2;</code>
       */
      int getProcessesCount();
      /**
       * <pre>
       * Metrics for each process
       * </pre>
       *
       * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Process processes = 2;</code>
       */
      java.util.List<? extends perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.ProcessOrBuilder> 
          getProcessesOrBuilderList();
      /**
       * <pre>
       * Metrics for each process
       * </pre>
       *
       * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Process processes = 2;</code>
       */
      perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.ProcessOrBuilder getProcessesOrBuilder(
          int index);

      /**
       * <pre>
       * Total counter value over all processes and threads
       * </pre>
       *
       * <code>optional double total = 3;</code>
       * @return Whether the total field is set.
       */
      boolean hasTotal();
      /**
       * <pre>
       * Total counter value over all processes and threads
       * </pre>
       *
       * <code>optional double total = 3;</code>
       * @return The total.
       */
      double getTotal();
    }
    /**
     * Protobuf type {@code perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric}
     */
    public static final class PerfEventMetric extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric)
        PerfEventMetricOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use PerfEventMetric.newBuilder() to construct.
      private PerfEventMetric(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private PerfEventMetric() {
        name_ = "";
        processes_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new PerfEventMetric();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.Simpleperf.internal_static_perfetto_protos_AndroidSimpleperfMetric_PerfEventMetric_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.Simpleperf.internal_static_perfetto_protos_AndroidSimpleperfMetric_PerfEventMetric_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.class, perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Builder.class);
      }

      public interface ThreadOrBuilder extends
          // @@protoc_insertion_point(interface_extends:perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Thread)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Thread ID
         * </pre>
         *
         * <code>optional int32 tid = 1;</code>
         * @return Whether the tid field is set.
         */
        boolean hasTid();
        /**
         * <pre>
         * Thread ID
         * </pre>
         *
         * <code>optional int32 tid = 1;</code>
         * @return The tid.
         */
        int getTid();

        /**
         * <pre>
         * Thread name
         * </pre>
         *
         * <code>optional string name = 2;</code>
         * @return Whether the name field is set.
         */
        boolean hasName();
        /**
         * <pre>
         * Thread name
         * </pre>
         *
         * <code>optional string name = 2;</code>
         * @return The name.
         */
        java.lang.String getName();
        /**
         * <pre>
         * Thread name
         * </pre>
         *
         * <code>optional string name = 2;</code>
         * @return The bytes for name.
         */
        com.google.protobuf.ByteString
            getNameBytes();

        /**
         * <pre>
         * CPU ID
         * </pre>
         *
         * <code>optional int32 cpu = 3;</code>
         * @return Whether the cpu field is set.
         */
        boolean hasCpu();
        /**
         * <pre>
         * CPU ID
         * </pre>
         *
         * <code>optional int32 cpu = 3;</code>
         * @return The cpu.
         */
        int getCpu();

        /**
         * <pre>
         * Total counter value
         * </pre>
         *
         * <code>optional double total = 4;</code>
         * @return Whether the total field is set.
         */
        boolean hasTotal();
        /**
         * <pre>
         * Total counter value
         * </pre>
         *
         * <code>optional double total = 4;</code>
         * @return The total.
         */
        double getTotal();
      }
      /**
       * Protobuf type {@code perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Thread}
       */
      public static final class Thread extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Thread)
          ThreadOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use Thread.newBuilder() to construct.
        private Thread(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private Thread() {
          name_ = "";
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new Thread();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return perfetto.protos.Simpleperf.internal_static_perfetto_protos_AndroidSimpleperfMetric_PerfEventMetric_Thread_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return perfetto.protos.Simpleperf.internal_static_perfetto_protos_AndroidSimpleperfMetric_PerfEventMetric_Thread_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread.class, perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread.Builder.class);
        }

        private int bitField0_;
        public static final int TID_FIELD_NUMBER = 1;
        private int tid_ = 0;
        /**
         * <pre>
         * Thread ID
         * </pre>
         *
         * <code>optional int32 tid = 1;</code>
         * @return Whether the tid field is set.
         */
        @java.lang.Override
        public boolean hasTid() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * Thread ID
         * </pre>
         *
         * <code>optional int32 tid = 1;</code>
         * @return The tid.
         */
        @java.lang.Override
        public int getTid() {
          return tid_;
        }

        public static final int NAME_FIELD_NUMBER = 2;
        @SuppressWarnings("serial")
        private volatile java.lang.Object name_ = "";
        /**
         * <pre>
         * Thread name
         * </pre>
         *
         * <code>optional string name = 2;</code>
         * @return Whether the name field is set.
         */
        @java.lang.Override
        public boolean hasName() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * Thread name
         * </pre>
         *
         * <code>optional string name = 2;</code>
         * @return The name.
         */
        @java.lang.Override
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              name_ = s;
            }
            return s;
          }
        }
        /**
         * <pre>
         * Thread name
         * </pre>
         *
         * <code>optional string name = 2;</code>
         * @return The bytes for name.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int CPU_FIELD_NUMBER = 3;
        private int cpu_ = 0;
        /**
         * <pre>
         * CPU ID
         * </pre>
         *
         * <code>optional int32 cpu = 3;</code>
         * @return Whether the cpu field is set.
         */
        @java.lang.Override
        public boolean hasCpu() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         * CPU ID
         * </pre>
         *
         * <code>optional int32 cpu = 3;</code>
         * @return The cpu.
         */
        @java.lang.Override
        public int getCpu() {
          return cpu_;
        }

        public static final int TOTAL_FIELD_NUMBER = 4;
        private double total_ = 0D;
        /**
         * <pre>
         * Total counter value
         * </pre>
         *
         * <code>optional double total = 4;</code>
         * @return Whether the total field is set.
         */
        @java.lang.Override
        public boolean hasTotal() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <pre>
         * Total counter value
         * </pre>
         *
         * <code>optional double total = 4;</code>
         * @return The total.
         */
        @java.lang.Override
        public double getTotal() {
          return total_;
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (((bitField0_ & 0x00000001) != 0)) {
            output.writeInt32(1, tid_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            output.writeInt32(3, cpu_);
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            output.writeDouble(4, total_);
          }
          getUnknownFields().writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(1, tid_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(3, cpu_);
          }
          if (((bitField0_ & 0x00000008) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeDoubleSize(4, total_);
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread)) {
            return super.equals(obj);
          }
          perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread other = (perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread) obj;

          if (hasTid() != other.hasTid()) return false;
          if (hasTid()) {
            if (getTid()
                != other.getTid()) return false;
          }
          if (hasName() != other.hasName()) return false;
          if (hasName()) {
            if (!getName()
                .equals(other.getName())) return false;
          }
          if (hasCpu() != other.hasCpu()) return false;
          if (hasCpu()) {
            if (getCpu()
                != other.getCpu()) return false;
          }
          if (hasTotal() != other.hasTotal()) return false;
          if (hasTotal()) {
            if (java.lang.Double.doubleToLongBits(getTotal())
                != java.lang.Double.doubleToLongBits(
                    other.getTotal())) return false;
          }
          if (!getUnknownFields().equals(other.getUnknownFields())) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasTid()) {
            hash = (37 * hash) + TID_FIELD_NUMBER;
            hash = (53 * hash) + getTid();
          }
          if (hasName()) {
            hash = (37 * hash) + NAME_FIELD_NUMBER;
            hash = (53 * hash) + getName().hashCode();
          }
          if (hasCpu()) {
            hash = (37 * hash) + CPU_FIELD_NUMBER;
            hash = (53 * hash) + getCpu();
          }
          if (hasTotal()) {
            hash = (37 * hash) + TOTAL_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                java.lang.Double.doubleToLongBits(getTotal()));
          }
          hash = (29 * hash) + getUnknownFields().hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Thread}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Thread)
            perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.ThreadOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return perfetto.protos.Simpleperf.internal_static_perfetto_protos_AndroidSimpleperfMetric_PerfEventMetric_Thread_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return perfetto.protos.Simpleperf.internal_static_perfetto_protos_AndroidSimpleperfMetric_PerfEventMetric_Thread_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread.class, perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread.Builder.class);
          }

          // Construct using perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread.newBuilder()
          private Builder() {

          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);

          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            bitField0_ = 0;
            tid_ = 0;
            name_ = "";
            cpu_ = 0;
            total_ = 0D;
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return perfetto.protos.Simpleperf.internal_static_perfetto_protos_AndroidSimpleperfMetric_PerfEventMetric_Thread_descriptor;
          }

          @java.lang.Override
          public perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread getDefaultInstanceForType() {
            return perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread.getDefaultInstance();
          }

          @java.lang.Override
          public perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread build() {
            perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread buildPartial() {
            perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread result = new perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread(this);
            if (bitField0_ != 0) { buildPartial0(result); }
            onBuilt();
            return result;
          }

          private void buildPartial0(perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread result) {
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) != 0)) {
              result.tid_ = tid_;
              to_bitField0_ |= 0x00000001;
            }
            if (((from_bitField0_ & 0x00000002) != 0)) {
              result.name_ = name_;
              to_bitField0_ |= 0x00000002;
            }
            if (((from_bitField0_ & 0x00000004) != 0)) {
              result.cpu_ = cpu_;
              to_bitField0_ |= 0x00000004;
            }
            if (((from_bitField0_ & 0x00000008) != 0)) {
              result.total_ = total_;
              to_bitField0_ |= 0x00000008;
            }
            result.bitField0_ |= to_bitField0_;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread) {
              return mergeFrom((perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread other) {
            if (other == perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread.getDefaultInstance()) return this;
            if (other.hasTid()) {
              setTid(other.getTid());
            }
            if (other.hasName()) {
              name_ = other.name_;
              bitField0_ |= 0x00000002;
              onChanged();
            }
            if (other.hasCpu()) {
              setCpu(other.getCpu());
            }
            if (other.hasTotal()) {
              setTotal(other.getTotal());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            if (extensionRegistry == null) {
              throw new java.lang.NullPointerException();
            }
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  case 8: {
                    tid_ = input.readInt32();
                    bitField0_ |= 0x00000001;
                    break;
                  } // case 8
                  case 18: {
                    name_ = input.readBytes();
                    bitField0_ |= 0x00000002;
                    break;
                  } // case 18
                  case 24: {
                    cpu_ = input.readInt32();
                    bitField0_ |= 0x00000004;
                    break;
                  } // case 24
                  case 33: {
                    total_ = input.readDouble();
                    bitField0_ |= 0x00000008;
                    break;
                  } // case 33
                  default: {
                    if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                      done = true; // was an endgroup tag
                    }
                    break;
                  } // default:
                } // switch (tag)
              } // while (!done)
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.unwrapIOException();
            } finally {
              onChanged();
            } // finally
            return this;
          }
          private int bitField0_;

          private int tid_ ;
          /**
           * <pre>
           * Thread ID
           * </pre>
           *
           * <code>optional int32 tid = 1;</code>
           * @return Whether the tid field is set.
           */
          @java.lang.Override
          public boolean hasTid() {
            return ((bitField0_ & 0x00000001) != 0);
          }
          /**
           * <pre>
           * Thread ID
           * </pre>
           *
           * <code>optional int32 tid = 1;</code>
           * @return The tid.
           */
          @java.lang.Override
          public int getTid() {
            return tid_;
          }
          /**
           * <pre>
           * Thread ID
           * </pre>
           *
           * <code>optional int32 tid = 1;</code>
           * @param value The tid to set.
           * @return This builder for chaining.
           */
          public Builder setTid(int value) {
            
            tid_ = value;
            bitField0_ |= 0x00000001;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Thread ID
           * </pre>
           *
           * <code>optional int32 tid = 1;</code>
           * @return This builder for chaining.
           */
          public Builder clearTid() {
            bitField0_ = (bitField0_ & ~0x00000001);
            tid_ = 0;
            onChanged();
            return this;
          }

          private java.lang.Object name_ = "";
          /**
           * <pre>
           * Thread name
           * </pre>
           *
           * <code>optional string name = 2;</code>
           * @return Whether the name field is set.
           */
          public boolean hasName() {
            return ((bitField0_ & 0x00000002) != 0);
          }
          /**
           * <pre>
           * Thread name
           * </pre>
           *
           * <code>optional string name = 2;</code>
           * @return The name.
           */
          public java.lang.String getName() {
            java.lang.Object ref = name_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                name_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * Thread name
           * </pre>
           *
           * <code>optional string name = 2;</code>
           * @return The bytes for name.
           */
          public com.google.protobuf.ByteString
              getNameBytes() {
            java.lang.Object ref = name_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              name_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * Thread name
           * </pre>
           *
           * <code>optional string name = 2;</code>
           * @param value The name to set.
           * @return This builder for chaining.
           */
          public Builder setName(
              java.lang.String value) {
            if (value == null) { throw new NullPointerException(); }
            name_ = value;
            bitField0_ |= 0x00000002;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Thread name
           * </pre>
           *
           * <code>optional string name = 2;</code>
           * @return This builder for chaining.
           */
          public Builder clearName() {
            name_ = getDefaultInstance().getName();
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Thread name
           * </pre>
           *
           * <code>optional string name = 2;</code>
           * @param value The bytes for name to set.
           * @return This builder for chaining.
           */
          public Builder setNameBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) { throw new NullPointerException(); }
            name_ = value;
            bitField0_ |= 0x00000002;
            onChanged();
            return this;
          }

          private int cpu_ ;
          /**
           * <pre>
           * CPU ID
           * </pre>
           *
           * <code>optional int32 cpu = 3;</code>
           * @return Whether the cpu field is set.
           */
          @java.lang.Override
          public boolean hasCpu() {
            return ((bitField0_ & 0x00000004) != 0);
          }
          /**
           * <pre>
           * CPU ID
           * </pre>
           *
           * <code>optional int32 cpu = 3;</code>
           * @return The cpu.
           */
          @java.lang.Override
          public int getCpu() {
            return cpu_;
          }
          /**
           * <pre>
           * CPU ID
           * </pre>
           *
           * <code>optional int32 cpu = 3;</code>
           * @param value The cpu to set.
           * @return This builder for chaining.
           */
          public Builder setCpu(int value) {
            
            cpu_ = value;
            bitField0_ |= 0x00000004;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * CPU ID
           * </pre>
           *
           * <code>optional int32 cpu = 3;</code>
           * @return This builder for chaining.
           */
          public Builder clearCpu() {
            bitField0_ = (bitField0_ & ~0x00000004);
            cpu_ = 0;
            onChanged();
            return this;
          }

          private double total_ ;
          /**
           * <pre>
           * Total counter value
           * </pre>
           *
           * <code>optional double total = 4;</code>
           * @return Whether the total field is set.
           */
          @java.lang.Override
          public boolean hasTotal() {
            return ((bitField0_ & 0x00000008) != 0);
          }
          /**
           * <pre>
           * Total counter value
           * </pre>
           *
           * <code>optional double total = 4;</code>
           * @return The total.
           */
          @java.lang.Override
          public double getTotal() {
            return total_;
          }
          /**
           * <pre>
           * Total counter value
           * </pre>
           *
           * <code>optional double total = 4;</code>
           * @param value The total to set.
           * @return This builder for chaining.
           */
          public Builder setTotal(double value) {
            
            total_ = value;
            bitField0_ |= 0x00000008;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Total counter value
           * </pre>
           *
           * <code>optional double total = 4;</code>
           * @return This builder for chaining.
           */
          public Builder clearTotal() {
            bitField0_ = (bitField0_ & ~0x00000008);
            total_ = 0D;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Thread)
        }

        // @@protoc_insertion_point(class_scope:perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Thread)
        private static final perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread();
        }

        public static perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated public static final com.google.protobuf.Parser<Thread>
            PARSER = new com.google.protobuf.AbstractParser<Thread>() {
          @java.lang.Override
          public Thread parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

        public static com.google.protobuf.Parser<Thread> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<Thread> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface ProcessOrBuilder extends
          // @@protoc_insertion_point(interface_extends:perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Process)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * Process ID
         * </pre>
         *
         * <code>optional int32 pid = 1;</code>
         * @return Whether the pid field is set.
         */
        boolean hasPid();
        /**
         * <pre>
         * Process ID
         * </pre>
         *
         * <code>optional int32 pid = 1;</code>
         * @return The pid.
         */
        int getPid();

        /**
         * <pre>
         * Process name
         * </pre>
         *
         * <code>optional string name = 2;</code>
         * @return Whether the name field is set.
         */
        boolean hasName();
        /**
         * <pre>
         * Process name
         * </pre>
         *
         * <code>optional string name = 2;</code>
         * @return The name.
         */
        java.lang.String getName();
        /**
         * <pre>
         * Process name
         * </pre>
         *
         * <code>optional string name = 2;</code>
         * @return The bytes for name.
         */
        com.google.protobuf.ByteString
            getNameBytes();

        /**
         * <pre>
         * Metrics for each thread in this process.
         * </pre>
         *
         * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Thread threads = 3;</code>
         */
        java.util.List<perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread> 
            getThreadsList();
        /**
         * <pre>
         * Metrics for each thread in this process.
         * </pre>
         *
         * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Thread threads = 3;</code>
         */
        perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread getThreads(int index);
        /**
         * <pre>
         * Metrics for each thread in this process.
         * </pre>
         *
         * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Thread threads = 3;</code>
         */
        int getThreadsCount();
        /**
         * <pre>
         * Metrics for each thread in this process.
         * </pre>
         *
         * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Thread threads = 3;</code>
         */
        java.util.List<? extends perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.ThreadOrBuilder> 
            getThreadsOrBuilderList();
        /**
         * <pre>
         * Metrics for each thread in this process.
         * </pre>
         *
         * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Thread threads = 3;</code>
         */
        perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.ThreadOrBuilder getThreadsOrBuilder(
            int index);

        /**
         * <pre>
         * Total counter value over all threads in this process
         * </pre>
         *
         * <code>optional double total = 4;</code>
         * @return Whether the total field is set.
         */
        boolean hasTotal();
        /**
         * <pre>
         * Total counter value over all threads in this process
         * </pre>
         *
         * <code>optional double total = 4;</code>
         * @return The total.
         */
        double getTotal();
      }
      /**
       * Protobuf type {@code perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Process}
       */
      public static final class Process extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Process)
          ProcessOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use Process.newBuilder() to construct.
        private Process(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private Process() {
          name_ = "";
          threads_ = java.util.Collections.emptyList();
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new Process();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return perfetto.protos.Simpleperf.internal_static_perfetto_protos_AndroidSimpleperfMetric_PerfEventMetric_Process_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return perfetto.protos.Simpleperf.internal_static_perfetto_protos_AndroidSimpleperfMetric_PerfEventMetric_Process_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process.class, perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process.Builder.class);
        }

        private int bitField0_;
        public static final int PID_FIELD_NUMBER = 1;
        private int pid_ = 0;
        /**
         * <pre>
         * Process ID
         * </pre>
         *
         * <code>optional int32 pid = 1;</code>
         * @return Whether the pid field is set.
         */
        @java.lang.Override
        public boolean hasPid() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * Process ID
         * </pre>
         *
         * <code>optional int32 pid = 1;</code>
         * @return The pid.
         */
        @java.lang.Override
        public int getPid() {
          return pid_;
        }

        public static final int NAME_FIELD_NUMBER = 2;
        @SuppressWarnings("serial")
        private volatile java.lang.Object name_ = "";
        /**
         * <pre>
         * Process name
         * </pre>
         *
         * <code>optional string name = 2;</code>
         * @return Whether the name field is set.
         */
        @java.lang.Override
        public boolean hasName() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * Process name
         * </pre>
         *
         * <code>optional string name = 2;</code>
         * @return The name.
         */
        @java.lang.Override
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              name_ = s;
            }
            return s;
          }
        }
        /**
         * <pre>
         * Process name
         * </pre>
         *
         * <code>optional string name = 2;</code>
         * @return The bytes for name.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        public static final int THREADS_FIELD_NUMBER = 3;
        @SuppressWarnings("serial")
        private java.util.List<perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread> threads_;
        /**
         * <pre>
         * Metrics for each thread in this process.
         * </pre>
         *
         * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Thread threads = 3;</code>
         */
        @java.lang.Override
        public java.util.List<perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread> getThreadsList() {
          return threads_;
        }
        /**
         * <pre>
         * Metrics for each thread in this process.
         * </pre>
         *
         * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Thread threads = 3;</code>
         */
        @java.lang.Override
        public java.util.List<? extends perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.ThreadOrBuilder> 
            getThreadsOrBuilderList() {
          return threads_;
        }
        /**
         * <pre>
         * Metrics for each thread in this process.
         * </pre>
         *
         * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Thread threads = 3;</code>
         */
        @java.lang.Override
        public int getThreadsCount() {
          return threads_.size();
        }
        /**
         * <pre>
         * Metrics for each thread in this process.
         * </pre>
         *
         * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Thread threads = 3;</code>
         */
        @java.lang.Override
        public perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread getThreads(int index) {
          return threads_.get(index);
        }
        /**
         * <pre>
         * Metrics for each thread in this process.
         * </pre>
         *
         * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Thread threads = 3;</code>
         */
        @java.lang.Override
        public perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.ThreadOrBuilder getThreadsOrBuilder(
            int index) {
          return threads_.get(index);
        }

        public static final int TOTAL_FIELD_NUMBER = 4;
        private double total_ = 0D;
        /**
         * <pre>
         * Total counter value over all threads in this process
         * </pre>
         *
         * <code>optional double total = 4;</code>
         * @return Whether the total field is set.
         */
        @java.lang.Override
        public boolean hasTotal() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         * Total counter value over all threads in this process
         * </pre>
         *
         * <code>optional double total = 4;</code>
         * @return The total.
         */
        @java.lang.Override
        public double getTotal() {
          return total_;
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (((bitField0_ & 0x00000001) != 0)) {
            output.writeInt32(1, pid_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            com.google.protobuf.GeneratedMessageV3.writeString(output, 2, name_);
          }
          for (int i = 0; i < threads_.size(); i++) {
            output.writeMessage(3, threads_.get(i));
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            output.writeDouble(4, total_);
          }
          getUnknownFields().writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeInt32Size(1, pid_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, name_);
          }
          for (int i = 0; i < threads_.size(); i++) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(3, threads_.get(i));
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeDoubleSize(4, total_);
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process)) {
            return super.equals(obj);
          }
          perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process other = (perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process) obj;

          if (hasPid() != other.hasPid()) return false;
          if (hasPid()) {
            if (getPid()
                != other.getPid()) return false;
          }
          if (hasName() != other.hasName()) return false;
          if (hasName()) {
            if (!getName()
                .equals(other.getName())) return false;
          }
          if (!getThreadsList()
              .equals(other.getThreadsList())) return false;
          if (hasTotal() != other.hasTotal()) return false;
          if (hasTotal()) {
            if (java.lang.Double.doubleToLongBits(getTotal())
                != java.lang.Double.doubleToLongBits(
                    other.getTotal())) return false;
          }
          if (!getUnknownFields().equals(other.getUnknownFields())) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasPid()) {
            hash = (37 * hash) + PID_FIELD_NUMBER;
            hash = (53 * hash) + getPid();
          }
          if (hasName()) {
            hash = (37 * hash) + NAME_FIELD_NUMBER;
            hash = (53 * hash) + getName().hashCode();
          }
          if (getThreadsCount() > 0) {
            hash = (37 * hash) + THREADS_FIELD_NUMBER;
            hash = (53 * hash) + getThreadsList().hashCode();
          }
          if (hasTotal()) {
            hash = (37 * hash) + TOTAL_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                java.lang.Double.doubleToLongBits(getTotal()));
          }
          hash = (29 * hash) + getUnknownFields().hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Process}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Process)
            perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.ProcessOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return perfetto.protos.Simpleperf.internal_static_perfetto_protos_AndroidSimpleperfMetric_PerfEventMetric_Process_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return perfetto.protos.Simpleperf.internal_static_perfetto_protos_AndroidSimpleperfMetric_PerfEventMetric_Process_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process.class, perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process.Builder.class);
          }

          // Construct using perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process.newBuilder()
          private Builder() {

          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);

          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            bitField0_ = 0;
            pid_ = 0;
            name_ = "";
            if (threadsBuilder_ == null) {
              threads_ = java.util.Collections.emptyList();
            } else {
              threads_ = null;
              threadsBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00000004);
            total_ = 0D;
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return perfetto.protos.Simpleperf.internal_static_perfetto_protos_AndroidSimpleperfMetric_PerfEventMetric_Process_descriptor;
          }

          @java.lang.Override
          public perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process getDefaultInstanceForType() {
            return perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process.getDefaultInstance();
          }

          @java.lang.Override
          public perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process build() {
            perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process buildPartial() {
            perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process result = new perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process(this);
            buildPartialRepeatedFields(result);
            if (bitField0_ != 0) { buildPartial0(result); }
            onBuilt();
            return result;
          }

          private void buildPartialRepeatedFields(perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process result) {
            if (threadsBuilder_ == null) {
              if (((bitField0_ & 0x00000004) != 0)) {
                threads_ = java.util.Collections.unmodifiableList(threads_);
                bitField0_ = (bitField0_ & ~0x00000004);
              }
              result.threads_ = threads_;
            } else {
              result.threads_ = threadsBuilder_.build();
            }
          }

          private void buildPartial0(perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process result) {
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) != 0)) {
              result.pid_ = pid_;
              to_bitField0_ |= 0x00000001;
            }
            if (((from_bitField0_ & 0x00000002) != 0)) {
              result.name_ = name_;
              to_bitField0_ |= 0x00000002;
            }
            if (((from_bitField0_ & 0x00000008) != 0)) {
              result.total_ = total_;
              to_bitField0_ |= 0x00000004;
            }
            result.bitField0_ |= to_bitField0_;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process) {
              return mergeFrom((perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process other) {
            if (other == perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process.getDefaultInstance()) return this;
            if (other.hasPid()) {
              setPid(other.getPid());
            }
            if (other.hasName()) {
              name_ = other.name_;
              bitField0_ |= 0x00000002;
              onChanged();
            }
            if (threadsBuilder_ == null) {
              if (!other.threads_.isEmpty()) {
                if (threads_.isEmpty()) {
                  threads_ = other.threads_;
                  bitField0_ = (bitField0_ & ~0x00000004);
                } else {
                  ensureThreadsIsMutable();
                  threads_.addAll(other.threads_);
                }
                onChanged();
              }
            } else {
              if (!other.threads_.isEmpty()) {
                if (threadsBuilder_.isEmpty()) {
                  threadsBuilder_.dispose();
                  threadsBuilder_ = null;
                  threads_ = other.threads_;
                  bitField0_ = (bitField0_ & ~0x00000004);
                  threadsBuilder_ = 
                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                       getThreadsFieldBuilder() : null;
                } else {
                  threadsBuilder_.addAllMessages(other.threads_);
                }
              }
            }
            if (other.hasTotal()) {
              setTotal(other.getTotal());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            if (extensionRegistry == null) {
              throw new java.lang.NullPointerException();
            }
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  case 8: {
                    pid_ = input.readInt32();
                    bitField0_ |= 0x00000001;
                    break;
                  } // case 8
                  case 18: {
                    name_ = input.readBytes();
                    bitField0_ |= 0x00000002;
                    break;
                  } // case 18
                  case 26: {
                    perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread m =
                        input.readMessage(
                            perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread.PARSER,
                            extensionRegistry);
                    if (threadsBuilder_ == null) {
                      ensureThreadsIsMutable();
                      threads_.add(m);
                    } else {
                      threadsBuilder_.addMessage(m);
                    }
                    break;
                  } // case 26
                  case 33: {
                    total_ = input.readDouble();
                    bitField0_ |= 0x00000008;
                    break;
                  } // case 33
                  default: {
                    if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                      done = true; // was an endgroup tag
                    }
                    break;
                  } // default:
                } // switch (tag)
              } // while (!done)
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.unwrapIOException();
            } finally {
              onChanged();
            } // finally
            return this;
          }
          private int bitField0_;

          private int pid_ ;
          /**
           * <pre>
           * Process ID
           * </pre>
           *
           * <code>optional int32 pid = 1;</code>
           * @return Whether the pid field is set.
           */
          @java.lang.Override
          public boolean hasPid() {
            return ((bitField0_ & 0x00000001) != 0);
          }
          /**
           * <pre>
           * Process ID
           * </pre>
           *
           * <code>optional int32 pid = 1;</code>
           * @return The pid.
           */
          @java.lang.Override
          public int getPid() {
            return pid_;
          }
          /**
           * <pre>
           * Process ID
           * </pre>
           *
           * <code>optional int32 pid = 1;</code>
           * @param value The pid to set.
           * @return This builder for chaining.
           */
          public Builder setPid(int value) {
            
            pid_ = value;
            bitField0_ |= 0x00000001;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Process ID
           * </pre>
           *
           * <code>optional int32 pid = 1;</code>
           * @return This builder for chaining.
           */
          public Builder clearPid() {
            bitField0_ = (bitField0_ & ~0x00000001);
            pid_ = 0;
            onChanged();
            return this;
          }

          private java.lang.Object name_ = "";
          /**
           * <pre>
           * Process name
           * </pre>
           *
           * <code>optional string name = 2;</code>
           * @return Whether the name field is set.
           */
          public boolean hasName() {
            return ((bitField0_ & 0x00000002) != 0);
          }
          /**
           * <pre>
           * Process name
           * </pre>
           *
           * <code>optional string name = 2;</code>
           * @return The name.
           */
          public java.lang.String getName() {
            java.lang.Object ref = name_;
            if (!(ref instanceof java.lang.String)) {
              com.google.protobuf.ByteString bs =
                  (com.google.protobuf.ByteString) ref;
              java.lang.String s = bs.toStringUtf8();
              if (bs.isValidUtf8()) {
                name_ = s;
              }
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <pre>
           * Process name
           * </pre>
           *
           * <code>optional string name = 2;</code>
           * @return The bytes for name.
           */
          public com.google.protobuf.ByteString
              getNameBytes() {
            java.lang.Object ref = name_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              name_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <pre>
           * Process name
           * </pre>
           *
           * <code>optional string name = 2;</code>
           * @param value The name to set.
           * @return This builder for chaining.
           */
          public Builder setName(
              java.lang.String value) {
            if (value == null) { throw new NullPointerException(); }
            name_ = value;
            bitField0_ |= 0x00000002;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Process name
           * </pre>
           *
           * <code>optional string name = 2;</code>
           * @return This builder for chaining.
           */
          public Builder clearName() {
            name_ = getDefaultInstance().getName();
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Process name
           * </pre>
           *
           * <code>optional string name = 2;</code>
           * @param value The bytes for name to set.
           * @return This builder for chaining.
           */
          public Builder setNameBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) { throw new NullPointerException(); }
            name_ = value;
            bitField0_ |= 0x00000002;
            onChanged();
            return this;
          }

          private java.util.List<perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread> threads_ =
            java.util.Collections.emptyList();
          private void ensureThreadsIsMutable() {
            if (!((bitField0_ & 0x00000004) != 0)) {
              threads_ = new java.util.ArrayList<perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread>(threads_);
              bitField0_ |= 0x00000004;
             }
          }

          private com.google.protobuf.RepeatedFieldBuilderV3<
              perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread, perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread.Builder, perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.ThreadOrBuilder> threadsBuilder_;

          /**
           * <pre>
           * Metrics for each thread in this process.
           * </pre>
           *
           * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Thread threads = 3;</code>
           */
          public java.util.List<perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread> getThreadsList() {
            if (threadsBuilder_ == null) {
              return java.util.Collections.unmodifiableList(threads_);
            } else {
              return threadsBuilder_.getMessageList();
            }
          }
          /**
           * <pre>
           * Metrics for each thread in this process.
           * </pre>
           *
           * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Thread threads = 3;</code>
           */
          public int getThreadsCount() {
            if (threadsBuilder_ == null) {
              return threads_.size();
            } else {
              return threadsBuilder_.getCount();
            }
          }
          /**
           * <pre>
           * Metrics for each thread in this process.
           * </pre>
           *
           * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Thread threads = 3;</code>
           */
          public perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread getThreads(int index) {
            if (threadsBuilder_ == null) {
              return threads_.get(index);
            } else {
              return threadsBuilder_.getMessage(index);
            }
          }
          /**
           * <pre>
           * Metrics for each thread in this process.
           * </pre>
           *
           * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Thread threads = 3;</code>
           */
          public Builder setThreads(
              int index, perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread value) {
            if (threadsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureThreadsIsMutable();
              threads_.set(index, value);
              onChanged();
            } else {
              threadsBuilder_.setMessage(index, value);
            }
            return this;
          }
          /**
           * <pre>
           * Metrics for each thread in this process.
           * </pre>
           *
           * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Thread threads = 3;</code>
           */
          public Builder setThreads(
              int index, perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread.Builder builderForValue) {
            if (threadsBuilder_ == null) {
              ensureThreadsIsMutable();
              threads_.set(index, builderForValue.build());
              onChanged();
            } else {
              threadsBuilder_.setMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <pre>
           * Metrics for each thread in this process.
           * </pre>
           *
           * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Thread threads = 3;</code>
           */
          public Builder addThreads(perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread value) {
            if (threadsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureThreadsIsMutable();
              threads_.add(value);
              onChanged();
            } else {
              threadsBuilder_.addMessage(value);
            }
            return this;
          }
          /**
           * <pre>
           * Metrics for each thread in this process.
           * </pre>
           *
           * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Thread threads = 3;</code>
           */
          public Builder addThreads(
              int index, perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread value) {
            if (threadsBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureThreadsIsMutable();
              threads_.add(index, value);
              onChanged();
            } else {
              threadsBuilder_.addMessage(index, value);
            }
            return this;
          }
          /**
           * <pre>
           * Metrics for each thread in this process.
           * </pre>
           *
           * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Thread threads = 3;</code>
           */
          public Builder addThreads(
              perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread.Builder builderForValue) {
            if (threadsBuilder_ == null) {
              ensureThreadsIsMutable();
              threads_.add(builderForValue.build());
              onChanged();
            } else {
              threadsBuilder_.addMessage(builderForValue.build());
            }
            return this;
          }
          /**
           * <pre>
           * Metrics for each thread in this process.
           * </pre>
           *
           * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Thread threads = 3;</code>
           */
          public Builder addThreads(
              int index, perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread.Builder builderForValue) {
            if (threadsBuilder_ == null) {
              ensureThreadsIsMutable();
              threads_.add(index, builderForValue.build());
              onChanged();
            } else {
              threadsBuilder_.addMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <pre>
           * Metrics for each thread in this process.
           * </pre>
           *
           * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Thread threads = 3;</code>
           */
          public Builder addAllThreads(
              java.lang.Iterable<? extends perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread> values) {
            if (threadsBuilder_ == null) {
              ensureThreadsIsMutable();
              com.google.protobuf.AbstractMessageLite.Builder.addAll(
                  values, threads_);
              onChanged();
            } else {
              threadsBuilder_.addAllMessages(values);
            }
            return this;
          }
          /**
           * <pre>
           * Metrics for each thread in this process.
           * </pre>
           *
           * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Thread threads = 3;</code>
           */
          public Builder clearThreads() {
            if (threadsBuilder_ == null) {
              threads_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000004);
              onChanged();
            } else {
              threadsBuilder_.clear();
            }
            return this;
          }
          /**
           * <pre>
           * Metrics for each thread in this process.
           * </pre>
           *
           * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Thread threads = 3;</code>
           */
          public Builder removeThreads(int index) {
            if (threadsBuilder_ == null) {
              ensureThreadsIsMutable();
              threads_.remove(index);
              onChanged();
            } else {
              threadsBuilder_.remove(index);
            }
            return this;
          }
          /**
           * <pre>
           * Metrics for each thread in this process.
           * </pre>
           *
           * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Thread threads = 3;</code>
           */
          public perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread.Builder getThreadsBuilder(
              int index) {
            return getThreadsFieldBuilder().getBuilder(index);
          }
          /**
           * <pre>
           * Metrics for each thread in this process.
           * </pre>
           *
           * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Thread threads = 3;</code>
           */
          public perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.ThreadOrBuilder getThreadsOrBuilder(
              int index) {
            if (threadsBuilder_ == null) {
              return threads_.get(index);  } else {
              return threadsBuilder_.getMessageOrBuilder(index);
            }
          }
          /**
           * <pre>
           * Metrics for each thread in this process.
           * </pre>
           *
           * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Thread threads = 3;</code>
           */
          public java.util.List<? extends perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.ThreadOrBuilder> 
               getThreadsOrBuilderList() {
            if (threadsBuilder_ != null) {
              return threadsBuilder_.getMessageOrBuilderList();
            } else {
              return java.util.Collections.unmodifiableList(threads_);
            }
          }
          /**
           * <pre>
           * Metrics for each thread in this process.
           * </pre>
           *
           * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Thread threads = 3;</code>
           */
          public perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread.Builder addThreadsBuilder() {
            return getThreadsFieldBuilder().addBuilder(
                perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread.getDefaultInstance());
          }
          /**
           * <pre>
           * Metrics for each thread in this process.
           * </pre>
           *
           * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Thread threads = 3;</code>
           */
          public perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread.Builder addThreadsBuilder(
              int index) {
            return getThreadsFieldBuilder().addBuilder(
                index, perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread.getDefaultInstance());
          }
          /**
           * <pre>
           * Metrics for each thread in this process.
           * </pre>
           *
           * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Thread threads = 3;</code>
           */
          public java.util.List<perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread.Builder> 
               getThreadsBuilderList() {
            return getThreadsFieldBuilder().getBuilderList();
          }
          private com.google.protobuf.RepeatedFieldBuilderV3<
              perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread, perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread.Builder, perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.ThreadOrBuilder> 
              getThreadsFieldBuilder() {
            if (threadsBuilder_ == null) {
              threadsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                  perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread, perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Thread.Builder, perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.ThreadOrBuilder>(
                      threads_,
                      ((bitField0_ & 0x00000004) != 0),
                      getParentForChildren(),
                      isClean());
              threads_ = null;
            }
            return threadsBuilder_;
          }

          private double total_ ;
          /**
           * <pre>
           * Total counter value over all threads in this process
           * </pre>
           *
           * <code>optional double total = 4;</code>
           * @return Whether the total field is set.
           */
          @java.lang.Override
          public boolean hasTotal() {
            return ((bitField0_ & 0x00000008) != 0);
          }
          /**
           * <pre>
           * Total counter value over all threads in this process
           * </pre>
           *
           * <code>optional double total = 4;</code>
           * @return The total.
           */
          @java.lang.Override
          public double getTotal() {
            return total_;
          }
          /**
           * <pre>
           * Total counter value over all threads in this process
           * </pre>
           *
           * <code>optional double total = 4;</code>
           * @param value The total to set.
           * @return This builder for chaining.
           */
          public Builder setTotal(double value) {
            
            total_ = value;
            bitField0_ |= 0x00000008;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Total counter value over all threads in this process
           * </pre>
           *
           * <code>optional double total = 4;</code>
           * @return This builder for chaining.
           */
          public Builder clearTotal() {
            bitField0_ = (bitField0_ & ~0x00000008);
            total_ = 0D;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Process)
        }

        // @@protoc_insertion_point(class_scope:perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Process)
        private static final perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process();
        }

        public static perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated public static final com.google.protobuf.Parser<Process>
            PARSER = new com.google.protobuf.AbstractParser<Process>() {
          @java.lang.Override
          public Process parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

        public static com.google.protobuf.Parser<Process> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<Process> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      private int bitField0_;
      public static final int NAME_FIELD_NUMBER = 1;
      @SuppressWarnings("serial")
      private volatile java.lang.Object name_ = "";
      /**
       * <pre>
       * Simpleperf event name
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return Whether the name field is set.
       */
      @java.lang.Override
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Simpleperf event name
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return The name.
       */
      @java.lang.Override
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * Simpleperf event name
       * </pre>
       *
       * <code>optional string name = 1;</code>
       * @return The bytes for name.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int PROCESSES_FIELD_NUMBER = 2;
      @SuppressWarnings("serial")
      private java.util.List<perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process> processes_;
      /**
       * <pre>
       * Metrics for each process
       * </pre>
       *
       * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Process processes = 2;</code>
       */
      @java.lang.Override
      public java.util.List<perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process> getProcessesList() {
        return processes_;
      }
      /**
       * <pre>
       * Metrics for each process
       * </pre>
       *
       * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Process processes = 2;</code>
       */
      @java.lang.Override
      public java.util.List<? extends perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.ProcessOrBuilder> 
          getProcessesOrBuilderList() {
        return processes_;
      }
      /**
       * <pre>
       * Metrics for each process
       * </pre>
       *
       * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Process processes = 2;</code>
       */
      @java.lang.Override
      public int getProcessesCount() {
        return processes_.size();
      }
      /**
       * <pre>
       * Metrics for each process
       * </pre>
       *
       * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Process processes = 2;</code>
       */
      @java.lang.Override
      public perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process getProcesses(int index) {
        return processes_.get(index);
      }
      /**
       * <pre>
       * Metrics for each process
       * </pre>
       *
       * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Process processes = 2;</code>
       */
      @java.lang.Override
      public perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.ProcessOrBuilder getProcessesOrBuilder(
          int index) {
        return processes_.get(index);
      }

      public static final int TOTAL_FIELD_NUMBER = 3;
      private double total_ = 0D;
      /**
       * <pre>
       * Total counter value over all processes and threads
       * </pre>
       *
       * <code>optional double total = 3;</code>
       * @return Whether the total field is set.
       */
      @java.lang.Override
      public boolean hasTotal() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Total counter value over all processes and threads
       * </pre>
       *
       * <code>optional double total = 3;</code>
       * @return The total.
       */
      @java.lang.Override
      public double getTotal() {
        return total_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
        }
        for (int i = 0; i < processes_.size(); i++) {
          output.writeMessage(2, processes_.get(i));
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeDouble(3, total_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
        }
        for (int i = 0; i < processes_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, processes_.get(i));
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(3, total_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric)) {
          return super.equals(obj);
        }
        perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric other = (perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric) obj;

        if (hasName() != other.hasName()) return false;
        if (hasName()) {
          if (!getName()
              .equals(other.getName())) return false;
        }
        if (!getProcessesList()
            .equals(other.getProcessesList())) return false;
        if (hasTotal() != other.hasTotal()) return false;
        if (hasTotal()) {
          if (java.lang.Double.doubleToLongBits(getTotal())
              != java.lang.Double.doubleToLongBits(
                  other.getTotal())) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasName()) {
          hash = (37 * hash) + NAME_FIELD_NUMBER;
          hash = (53 * hash) + getName().hashCode();
        }
        if (getProcessesCount() > 0) {
          hash = (37 * hash) + PROCESSES_FIELD_NUMBER;
          hash = (53 * hash) + getProcessesList().hashCode();
        }
        if (hasTotal()) {
          hash = (37 * hash) + TOTAL_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              java.lang.Double.doubleToLongBits(getTotal()));
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric)
          perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetricOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return perfetto.protos.Simpleperf.internal_static_perfetto_protos_AndroidSimpleperfMetric_PerfEventMetric_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return perfetto.protos.Simpleperf.internal_static_perfetto_protos_AndroidSimpleperfMetric_PerfEventMetric_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.class, perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Builder.class);
        }

        // Construct using perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          name_ = "";
          if (processesBuilder_ == null) {
            processes_ = java.util.Collections.emptyList();
          } else {
            processes_ = null;
            processesBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000002);
          total_ = 0D;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return perfetto.protos.Simpleperf.internal_static_perfetto_protos_AndroidSimpleperfMetric_PerfEventMetric_descriptor;
        }

        @java.lang.Override
        public perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric getDefaultInstanceForType() {
          return perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.getDefaultInstance();
        }

        @java.lang.Override
        public perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric build() {
          perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric buildPartial() {
          perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric result = new perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric(this);
          buildPartialRepeatedFields(result);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartialRepeatedFields(perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric result) {
          if (processesBuilder_ == null) {
            if (((bitField0_ & 0x00000002) != 0)) {
              processes_ = java.util.Collections.unmodifiableList(processes_);
              bitField0_ = (bitField0_ & ~0x00000002);
            }
            result.processes_ = processes_;
          } else {
            result.processes_ = processesBuilder_.build();
          }
        }

        private void buildPartial0(perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.name_ = name_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.total_ = total_;
            to_bitField0_ |= 0x00000002;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric) {
            return mergeFrom((perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric other) {
          if (other == perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.getDefaultInstance()) return this;
          if (other.hasName()) {
            name_ = other.name_;
            bitField0_ |= 0x00000001;
            onChanged();
          }
          if (processesBuilder_ == null) {
            if (!other.processes_.isEmpty()) {
              if (processes_.isEmpty()) {
                processes_ = other.processes_;
                bitField0_ = (bitField0_ & ~0x00000002);
              } else {
                ensureProcessesIsMutable();
                processes_.addAll(other.processes_);
              }
              onChanged();
            }
          } else {
            if (!other.processes_.isEmpty()) {
              if (processesBuilder_.isEmpty()) {
                processesBuilder_.dispose();
                processesBuilder_ = null;
                processes_ = other.processes_;
                bitField0_ = (bitField0_ & ~0x00000002);
                processesBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getProcessesFieldBuilder() : null;
              } else {
                processesBuilder_.addAllMessages(other.processes_);
              }
            }
          }
          if (other.hasTotal()) {
            setTotal(other.getTotal());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  name_ = input.readBytes();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
                case 18: {
                  perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process m =
                      input.readMessage(
                          perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process.PARSER,
                          extensionRegistry);
                  if (processesBuilder_ == null) {
                    ensureProcessesIsMutable();
                    processes_.add(m);
                  } else {
                    processesBuilder_.addMessage(m);
                  }
                  break;
                } // case 18
                case 25: {
                  total_ = input.readDouble();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 25
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private java.lang.Object name_ = "";
        /**
         * <pre>
         * Simpleperf event name
         * </pre>
         *
         * <code>optional string name = 1;</code>
         * @return Whether the name field is set.
         */
        public boolean hasName() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * Simpleperf event name
         * </pre>
         *
         * <code>optional string name = 1;</code>
         * @return The name.
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              name_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Simpleperf event name
         * </pre>
         *
         * <code>optional string name = 1;</code>
         * @return The bytes for name.
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Simpleperf event name
         * </pre>
         *
         * <code>optional string name = 1;</code>
         * @param value The name to set.
         * @return This builder for chaining.
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          name_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Simpleperf event name
         * </pre>
         *
         * <code>optional string name = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearName() {
          name_ = getDefaultInstance().getName();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Simpleperf event name
         * </pre>
         *
         * <code>optional string name = 1;</code>
         * @param value The bytes for name to set.
         * @return This builder for chaining.
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          name_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }

        private java.util.List<perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process> processes_ =
          java.util.Collections.emptyList();
        private void ensureProcessesIsMutable() {
          if (!((bitField0_ & 0x00000002) != 0)) {
            processes_ = new java.util.ArrayList<perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process>(processes_);
            bitField0_ |= 0x00000002;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process, perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process.Builder, perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.ProcessOrBuilder> processesBuilder_;

        /**
         * <pre>
         * Metrics for each process
         * </pre>
         *
         * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Process processes = 2;</code>
         */
        public java.util.List<perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process> getProcessesList() {
          if (processesBuilder_ == null) {
            return java.util.Collections.unmodifiableList(processes_);
          } else {
            return processesBuilder_.getMessageList();
          }
        }
        /**
         * <pre>
         * Metrics for each process
         * </pre>
         *
         * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Process processes = 2;</code>
         */
        public int getProcessesCount() {
          if (processesBuilder_ == null) {
            return processes_.size();
          } else {
            return processesBuilder_.getCount();
          }
        }
        /**
         * <pre>
         * Metrics for each process
         * </pre>
         *
         * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Process processes = 2;</code>
         */
        public perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process getProcesses(int index) {
          if (processesBuilder_ == null) {
            return processes_.get(index);
          } else {
            return processesBuilder_.getMessage(index);
          }
        }
        /**
         * <pre>
         * Metrics for each process
         * </pre>
         *
         * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Process processes = 2;</code>
         */
        public Builder setProcesses(
            int index, perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process value) {
          if (processesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureProcessesIsMutable();
            processes_.set(index, value);
            onChanged();
          } else {
            processesBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * Metrics for each process
         * </pre>
         *
         * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Process processes = 2;</code>
         */
        public Builder setProcesses(
            int index, perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process.Builder builderForValue) {
          if (processesBuilder_ == null) {
            ensureProcessesIsMutable();
            processes_.set(index, builderForValue.build());
            onChanged();
          } else {
            processesBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Metrics for each process
         * </pre>
         *
         * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Process processes = 2;</code>
         */
        public Builder addProcesses(perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process value) {
          if (processesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureProcessesIsMutable();
            processes_.add(value);
            onChanged();
          } else {
            processesBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <pre>
         * Metrics for each process
         * </pre>
         *
         * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Process processes = 2;</code>
         */
        public Builder addProcesses(
            int index, perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process value) {
          if (processesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureProcessesIsMutable();
            processes_.add(index, value);
            onChanged();
          } else {
            processesBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * Metrics for each process
         * </pre>
         *
         * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Process processes = 2;</code>
         */
        public Builder addProcesses(
            perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process.Builder builderForValue) {
          if (processesBuilder_ == null) {
            ensureProcessesIsMutable();
            processes_.add(builderForValue.build());
            onChanged();
          } else {
            processesBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Metrics for each process
         * </pre>
         *
         * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Process processes = 2;</code>
         */
        public Builder addProcesses(
            int index, perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process.Builder builderForValue) {
          if (processesBuilder_ == null) {
            ensureProcessesIsMutable();
            processes_.add(index, builderForValue.build());
            onChanged();
          } else {
            processesBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Metrics for each process
         * </pre>
         *
         * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Process processes = 2;</code>
         */
        public Builder addAllProcesses(
            java.lang.Iterable<? extends perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process> values) {
          if (processesBuilder_ == null) {
            ensureProcessesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, processes_);
            onChanged();
          } else {
            processesBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <pre>
         * Metrics for each process
         * </pre>
         *
         * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Process processes = 2;</code>
         */
        public Builder clearProcesses() {
          if (processesBuilder_ == null) {
            processes_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
          } else {
            processesBuilder_.clear();
          }
          return this;
        }
        /**
         * <pre>
         * Metrics for each process
         * </pre>
         *
         * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Process processes = 2;</code>
         */
        public Builder removeProcesses(int index) {
          if (processesBuilder_ == null) {
            ensureProcessesIsMutable();
            processes_.remove(index);
            onChanged();
          } else {
            processesBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <pre>
         * Metrics for each process
         * </pre>
         *
         * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Process processes = 2;</code>
         */
        public perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process.Builder getProcessesBuilder(
            int index) {
          return getProcessesFieldBuilder().getBuilder(index);
        }
        /**
         * <pre>
         * Metrics for each process
         * </pre>
         *
         * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Process processes = 2;</code>
         */
        public perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.ProcessOrBuilder getProcessesOrBuilder(
            int index) {
          if (processesBuilder_ == null) {
            return processes_.get(index);  } else {
            return processesBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <pre>
         * Metrics for each process
         * </pre>
         *
         * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Process processes = 2;</code>
         */
        public java.util.List<? extends perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.ProcessOrBuilder> 
             getProcessesOrBuilderList() {
          if (processesBuilder_ != null) {
            return processesBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(processes_);
          }
        }
        /**
         * <pre>
         * Metrics for each process
         * </pre>
         *
         * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Process processes = 2;</code>
         */
        public perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process.Builder addProcessesBuilder() {
          return getProcessesFieldBuilder().addBuilder(
              perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process.getDefaultInstance());
        }
        /**
         * <pre>
         * Metrics for each process
         * </pre>
         *
         * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Process processes = 2;</code>
         */
        public perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process.Builder addProcessesBuilder(
            int index) {
          return getProcessesFieldBuilder().addBuilder(
              index, perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process.getDefaultInstance());
        }
        /**
         * <pre>
         * Metrics for each process
         * </pre>
         *
         * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric.Process processes = 2;</code>
         */
        public java.util.List<perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process.Builder> 
             getProcessesBuilderList() {
          return getProcessesFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process, perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process.Builder, perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.ProcessOrBuilder> 
            getProcessesFieldBuilder() {
          if (processesBuilder_ == null) {
            processesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process, perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Process.Builder, perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.ProcessOrBuilder>(
                    processes_,
                    ((bitField0_ & 0x00000002) != 0),
                    getParentForChildren(),
                    isClean());
            processes_ = null;
          }
          return processesBuilder_;
        }

        private double total_ ;
        /**
         * <pre>
         * Total counter value over all processes and threads
         * </pre>
         *
         * <code>optional double total = 3;</code>
         * @return Whether the total field is set.
         */
        @java.lang.Override
        public boolean hasTotal() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         * Total counter value over all processes and threads
         * </pre>
         *
         * <code>optional double total = 3;</code>
         * @return The total.
         */
        @java.lang.Override
        public double getTotal() {
          return total_;
        }
        /**
         * <pre>
         * Total counter value over all processes and threads
         * </pre>
         *
         * <code>optional double total = 3;</code>
         * @param value The total to set.
         * @return This builder for chaining.
         */
        public Builder setTotal(double value) {
          
          total_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Total counter value over all processes and threads
         * </pre>
         *
         * <code>optional double total = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearTotal() {
          bitField0_ = (bitField0_ & ~0x00000004);
          total_ = 0D;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric)
      }

      // @@protoc_insertion_point(class_scope:perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric)
      private static final perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric();
      }

      public static perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<PerfEventMetric>
          PARSER = new com.google.protobuf.AbstractParser<PerfEventMetric>() {
        @java.lang.Override
        public PerfEventMetric parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<PerfEventMetric> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<PerfEventMetric> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int URGENT_RATIO_FIELD_NUMBER = 1;
    private double urgentRatio_ = 0D;
    /**
     * <code>optional double urgent_ratio = 1;</code>
     * @return Whether the urgentRatio field is set.
     */
    @java.lang.Override
    public boolean hasUrgentRatio() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional double urgent_ratio = 1;</code>
     * @return The urgentRatio.
     */
    @java.lang.Override
    public double getUrgentRatio() {
      return urgentRatio_;
    }

    public static final int EVENTS_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private java.util.List<perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric> events_;
    /**
     * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric events = 2;</code>
     */
    @java.lang.Override
    public java.util.List<perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric> getEventsList() {
      return events_;
    }
    /**
     * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric events = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetricOrBuilder> 
        getEventsOrBuilderList() {
      return events_;
    }
    /**
     * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric events = 2;</code>
     */
    @java.lang.Override
    public int getEventsCount() {
      return events_.size();
    }
    /**
     * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric events = 2;</code>
     */
    @java.lang.Override
    public perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric getEvents(int index) {
      return events_.get(index);
    }
    /**
     * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric events = 2;</code>
     */
    @java.lang.Override
    public perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetricOrBuilder getEventsOrBuilder(
        int index) {
      return events_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeDouble(1, urgentRatio_);
      }
      for (int i = 0; i < events_.size(); i++) {
        output.writeMessage(2, events_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, urgentRatio_);
      }
      for (int i = 0; i < events_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, events_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof perfetto.protos.Simpleperf.AndroidSimpleperfMetric)) {
        return super.equals(obj);
      }
      perfetto.protos.Simpleperf.AndroidSimpleperfMetric other = (perfetto.protos.Simpleperf.AndroidSimpleperfMetric) obj;

      if (hasUrgentRatio() != other.hasUrgentRatio()) return false;
      if (hasUrgentRatio()) {
        if (java.lang.Double.doubleToLongBits(getUrgentRatio())
            != java.lang.Double.doubleToLongBits(
                other.getUrgentRatio())) return false;
      }
      if (!getEventsList()
          .equals(other.getEventsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasUrgentRatio()) {
        hash = (37 * hash) + URGENT_RATIO_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getUrgentRatio()));
      }
      if (getEventsCount() > 0) {
        hash = (37 * hash) + EVENTS_FIELD_NUMBER;
        hash = (53 * hash) + getEventsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static perfetto.protos.Simpleperf.AndroidSimpleperfMetric parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.Simpleperf.AndroidSimpleperfMetric parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.Simpleperf.AndroidSimpleperfMetric parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.Simpleperf.AndroidSimpleperfMetric parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.Simpleperf.AndroidSimpleperfMetric parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.Simpleperf.AndroidSimpleperfMetric parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.Simpleperf.AndroidSimpleperfMetric parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.Simpleperf.AndroidSimpleperfMetric parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.Simpleperf.AndroidSimpleperfMetric parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static perfetto.protos.Simpleperf.AndroidSimpleperfMetric parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.Simpleperf.AndroidSimpleperfMetric parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.Simpleperf.AndroidSimpleperfMetric parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(perfetto.protos.Simpleperf.AndroidSimpleperfMetric prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Metric that stores information related to atrace events generated by
     * simpleperf tool
     * </pre>
     *
     * Protobuf type {@code perfetto.protos.AndroidSimpleperfMetric}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:perfetto.protos.AndroidSimpleperfMetric)
        perfetto.protos.Simpleperf.AndroidSimpleperfMetricOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.Simpleperf.internal_static_perfetto_protos_AndroidSimpleperfMetric_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.Simpleperf.internal_static_perfetto_protos_AndroidSimpleperfMetric_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.Simpleperf.AndroidSimpleperfMetric.class, perfetto.protos.Simpleperf.AndroidSimpleperfMetric.Builder.class);
      }

      // Construct using perfetto.protos.Simpleperf.AndroidSimpleperfMetric.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        urgentRatio_ = 0D;
        if (eventsBuilder_ == null) {
          events_ = java.util.Collections.emptyList();
        } else {
          events_ = null;
          eventsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return perfetto.protos.Simpleperf.internal_static_perfetto_protos_AndroidSimpleperfMetric_descriptor;
      }

      @java.lang.Override
      public perfetto.protos.Simpleperf.AndroidSimpleperfMetric getDefaultInstanceForType() {
        return perfetto.protos.Simpleperf.AndroidSimpleperfMetric.getDefaultInstance();
      }

      @java.lang.Override
      public perfetto.protos.Simpleperf.AndroidSimpleperfMetric build() {
        perfetto.protos.Simpleperf.AndroidSimpleperfMetric result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public perfetto.protos.Simpleperf.AndroidSimpleperfMetric buildPartial() {
        perfetto.protos.Simpleperf.AndroidSimpleperfMetric result = new perfetto.protos.Simpleperf.AndroidSimpleperfMetric(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(perfetto.protos.Simpleperf.AndroidSimpleperfMetric result) {
        if (eventsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            events_ = java.util.Collections.unmodifiableList(events_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.events_ = events_;
        } else {
          result.events_ = eventsBuilder_.build();
        }
      }

      private void buildPartial0(perfetto.protos.Simpleperf.AndroidSimpleperfMetric result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.urgentRatio_ = urgentRatio_;
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof perfetto.protos.Simpleperf.AndroidSimpleperfMetric) {
          return mergeFrom((perfetto.protos.Simpleperf.AndroidSimpleperfMetric)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(perfetto.protos.Simpleperf.AndroidSimpleperfMetric other) {
        if (other == perfetto.protos.Simpleperf.AndroidSimpleperfMetric.getDefaultInstance()) return this;
        if (other.hasUrgentRatio()) {
          setUrgentRatio(other.getUrgentRatio());
        }
        if (eventsBuilder_ == null) {
          if (!other.events_.isEmpty()) {
            if (events_.isEmpty()) {
              events_ = other.events_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureEventsIsMutable();
              events_.addAll(other.events_);
            }
            onChanged();
          }
        } else {
          if (!other.events_.isEmpty()) {
            if (eventsBuilder_.isEmpty()) {
              eventsBuilder_.dispose();
              eventsBuilder_ = null;
              events_ = other.events_;
              bitField0_ = (bitField0_ & ~0x00000002);
              eventsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getEventsFieldBuilder() : null;
            } else {
              eventsBuilder_.addAllMessages(other.events_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 9: {
                urgentRatio_ = input.readDouble();
                bitField0_ |= 0x00000001;
                break;
              } // case 9
              case 18: {
                perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric m =
                    input.readMessage(
                        perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.PARSER,
                        extensionRegistry);
                if (eventsBuilder_ == null) {
                  ensureEventsIsMutable();
                  events_.add(m);
                } else {
                  eventsBuilder_.addMessage(m);
                }
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private double urgentRatio_ ;
      /**
       * <code>optional double urgent_ratio = 1;</code>
       * @return Whether the urgentRatio field is set.
       */
      @java.lang.Override
      public boolean hasUrgentRatio() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional double urgent_ratio = 1;</code>
       * @return The urgentRatio.
       */
      @java.lang.Override
      public double getUrgentRatio() {
        return urgentRatio_;
      }
      /**
       * <code>optional double urgent_ratio = 1;</code>
       * @param value The urgentRatio to set.
       * @return This builder for chaining.
       */
      public Builder setUrgentRatio(double value) {
        
        urgentRatio_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional double urgent_ratio = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearUrgentRatio() {
        bitField0_ = (bitField0_ & ~0x00000001);
        urgentRatio_ = 0D;
        onChanged();
        return this;
      }

      private java.util.List<perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric> events_ =
        java.util.Collections.emptyList();
      private void ensureEventsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          events_ = new java.util.ArrayList<perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric>(events_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric, perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Builder, perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetricOrBuilder> eventsBuilder_;

      /**
       * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric events = 2;</code>
       */
      public java.util.List<perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric> getEventsList() {
        if (eventsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(events_);
        } else {
          return eventsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric events = 2;</code>
       */
      public int getEventsCount() {
        if (eventsBuilder_ == null) {
          return events_.size();
        } else {
          return eventsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric events = 2;</code>
       */
      public perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric getEvents(int index) {
        if (eventsBuilder_ == null) {
          return events_.get(index);
        } else {
          return eventsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric events = 2;</code>
       */
      public Builder setEvents(
          int index, perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric value) {
        if (eventsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEventsIsMutable();
          events_.set(index, value);
          onChanged();
        } else {
          eventsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric events = 2;</code>
       */
      public Builder setEvents(
          int index, perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Builder builderForValue) {
        if (eventsBuilder_ == null) {
          ensureEventsIsMutable();
          events_.set(index, builderForValue.build());
          onChanged();
        } else {
          eventsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric events = 2;</code>
       */
      public Builder addEvents(perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric value) {
        if (eventsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEventsIsMutable();
          events_.add(value);
          onChanged();
        } else {
          eventsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric events = 2;</code>
       */
      public Builder addEvents(
          int index, perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric value) {
        if (eventsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEventsIsMutable();
          events_.add(index, value);
          onChanged();
        } else {
          eventsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric events = 2;</code>
       */
      public Builder addEvents(
          perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Builder builderForValue) {
        if (eventsBuilder_ == null) {
          ensureEventsIsMutable();
          events_.add(builderForValue.build());
          onChanged();
        } else {
          eventsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric events = 2;</code>
       */
      public Builder addEvents(
          int index, perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Builder builderForValue) {
        if (eventsBuilder_ == null) {
          ensureEventsIsMutable();
          events_.add(index, builderForValue.build());
          onChanged();
        } else {
          eventsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric events = 2;</code>
       */
      public Builder addAllEvents(
          java.lang.Iterable<? extends perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric> values) {
        if (eventsBuilder_ == null) {
          ensureEventsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, events_);
          onChanged();
        } else {
          eventsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric events = 2;</code>
       */
      public Builder clearEvents() {
        if (eventsBuilder_ == null) {
          events_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          eventsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric events = 2;</code>
       */
      public Builder removeEvents(int index) {
        if (eventsBuilder_ == null) {
          ensureEventsIsMutable();
          events_.remove(index);
          onChanged();
        } else {
          eventsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric events = 2;</code>
       */
      public perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Builder getEventsBuilder(
          int index) {
        return getEventsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric events = 2;</code>
       */
      public perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetricOrBuilder getEventsOrBuilder(
          int index) {
        if (eventsBuilder_ == null) {
          return events_.get(index);  } else {
          return eventsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric events = 2;</code>
       */
      public java.util.List<? extends perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetricOrBuilder> 
           getEventsOrBuilderList() {
        if (eventsBuilder_ != null) {
          return eventsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(events_);
        }
      }
      /**
       * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric events = 2;</code>
       */
      public perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Builder addEventsBuilder() {
        return getEventsFieldBuilder().addBuilder(
            perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.getDefaultInstance());
      }
      /**
       * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric events = 2;</code>
       */
      public perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Builder addEventsBuilder(
          int index) {
        return getEventsFieldBuilder().addBuilder(
            index, perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.getDefaultInstance());
      }
      /**
       * <code>repeated .perfetto.protos.AndroidSimpleperfMetric.PerfEventMetric events = 2;</code>
       */
      public java.util.List<perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Builder> 
           getEventsBuilderList() {
        return getEventsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric, perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Builder, perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetricOrBuilder> 
          getEventsFieldBuilder() {
        if (eventsBuilder_ == null) {
          eventsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric, perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetric.Builder, perfetto.protos.Simpleperf.AndroidSimpleperfMetric.PerfEventMetricOrBuilder>(
                  events_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          events_ = null;
        }
        return eventsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:perfetto.protos.AndroidSimpleperfMetric)
    }

    // @@protoc_insertion_point(class_scope:perfetto.protos.AndroidSimpleperfMetric)
    private static final perfetto.protos.Simpleperf.AndroidSimpleperfMetric DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new perfetto.protos.Simpleperf.AndroidSimpleperfMetric();
    }

    public static perfetto.protos.Simpleperf.AndroidSimpleperfMetric getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<AndroidSimpleperfMetric>
        PARSER = new com.google.protobuf.AbstractParser<AndroidSimpleperfMetric>() {
      @java.lang.Override
      public AndroidSimpleperfMetric parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<AndroidSimpleperfMetric> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<AndroidSimpleperfMetric> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public perfetto.protos.Simpleperf.AndroidSimpleperfMetric getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_AndroidSimpleperfMetric_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_perfetto_protos_AndroidSimpleperfMetric_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_AndroidSimpleperfMetric_PerfEventMetric_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_perfetto_protos_AndroidSimpleperfMetric_PerfEventMetric_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_AndroidSimpleperfMetric_PerfEventMetric_Thread_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_perfetto_protos_AndroidSimpleperfMetric_PerfEventMetric_Thread_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_AndroidSimpleperfMetric_PerfEventMetric_Process_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_perfetto_protos_AndroidSimpleperfMetric_PerfEventMetric_Process_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n0protos/perfetto/metrics/android/simple" +
      "perf.proto\022\017perfetto.protos\"\310\003\n\027AndroidS" +
      "impleperfMetric\022\024\n\014urgent_ratio\030\001 \001(\001\022H\n" +
      "\006events\030\002 \003(\01328.perfetto.protos.AndroidS" +
      "impleperfMetric.PerfEventMetric\032\314\002\n\017Perf" +
      "EventMetric\022\014\n\004name\030\001 \001(\t\022S\n\tprocesses\030\002" +
      " \003(\0132@.perfetto.protos.AndroidSimpleperf" +
      "Metric.PerfEventMetric.Process\022\r\n\005total\030" +
      "\003 \001(\001\032?\n\006Thread\022\013\n\003tid\030\001 \001(\005\022\014\n\004name\030\002 \001" +
      "(\t\022\013\n\003cpu\030\003 \001(\005\022\r\n\005total\030\004 \001(\001\032\205\001\n\007Proce" +
      "ss\022\013\n\003pid\030\001 \001(\005\022\014\n\004name\030\002 \001(\t\022P\n\007threads" +
      "\030\003 \003(\0132?.perfetto.protos.AndroidSimplepe" +
      "rfMetric.PerfEventMetric.Thread\022\r\n\005total" +
      "\030\004 \001(\001"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_perfetto_protos_AndroidSimpleperfMetric_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_perfetto_protos_AndroidSimpleperfMetric_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_perfetto_protos_AndroidSimpleperfMetric_descriptor,
        new java.lang.String[] { "UrgentRatio", "Events", });
    internal_static_perfetto_protos_AndroidSimpleperfMetric_PerfEventMetric_descriptor =
      internal_static_perfetto_protos_AndroidSimpleperfMetric_descriptor.getNestedTypes().get(0);
    internal_static_perfetto_protos_AndroidSimpleperfMetric_PerfEventMetric_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_perfetto_protos_AndroidSimpleperfMetric_PerfEventMetric_descriptor,
        new java.lang.String[] { "Name", "Processes", "Total", });
    internal_static_perfetto_protos_AndroidSimpleperfMetric_PerfEventMetric_Thread_descriptor =
      internal_static_perfetto_protos_AndroidSimpleperfMetric_PerfEventMetric_descriptor.getNestedTypes().get(0);
    internal_static_perfetto_protos_AndroidSimpleperfMetric_PerfEventMetric_Thread_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_perfetto_protos_AndroidSimpleperfMetric_PerfEventMetric_Thread_descriptor,
        new java.lang.String[] { "Tid", "Name", "Cpu", "Total", });
    internal_static_perfetto_protos_AndroidSimpleperfMetric_PerfEventMetric_Process_descriptor =
      internal_static_perfetto_protos_AndroidSimpleperfMetric_PerfEventMetric_descriptor.getNestedTypes().get(1);
    internal_static_perfetto_protos_AndroidSimpleperfMetric_PerfEventMetric_Process_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_perfetto_protos_AndroidSimpleperfMetric_PerfEventMetric_Process_descriptor,
        new java.lang.String[] { "Pid", "Name", "Threads", "Total", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
