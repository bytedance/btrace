// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/perfetto/trace/track_event/process_descriptor.proto

package perfetto.protos;

public final class ProcessDescriptorOuterClass {
  private ProcessDescriptorOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ProcessDescriptorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:perfetto.protos.ProcessDescriptor)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 pid = 1;</code>
     * @return Whether the pid field is set.
     */
    boolean hasPid();
    /**
     * <code>optional int32 pid = 1;</code>
     * @return The pid.
     */
    int getPid();

    /**
     * <code>repeated string cmdline = 2;</code>
     * @return A list containing the cmdline.
     */
    java.util.List<java.lang.String>
        getCmdlineList();
    /**
     * <code>repeated string cmdline = 2;</code>
     * @return The count of cmdline.
     */
    int getCmdlineCount();
    /**
     * <code>repeated string cmdline = 2;</code>
     * @param index The index of the element to return.
     * @return The cmdline at the given index.
     */
    java.lang.String getCmdline(int index);
    /**
     * <code>repeated string cmdline = 2;</code>
     * @param index The index of the value to return.
     * @return The bytes of the cmdline at the given index.
     */
    com.google.protobuf.ByteString
        getCmdlineBytes(int index);

    /**
     * <code>optional string process_name = 6;</code>
     * @return Whether the processName field is set.
     */
    boolean hasProcessName();
    /**
     * <code>optional string process_name = 6;</code>
     * @return The processName.
     */
    java.lang.String getProcessName();
    /**
     * <code>optional string process_name = 6;</code>
     * @return The bytes for processName.
     */
    com.google.protobuf.ByteString
        getProcessNameBytes();

    /**
     * <code>optional int32 process_priority = 5;</code>
     * @return Whether the processPriority field is set.
     */
    boolean hasProcessPriority();
    /**
     * <code>optional int32 process_priority = 5;</code>
     * @return The processPriority.
     */
    int getProcessPriority();

    /**
     * <pre>
     * Process start time in nanoseconds.
     * The timestamp refers to the trace clock by default. Other clock IDs
     * provided in TracePacket are not supported.
     * </pre>
     *
     * <code>optional int64 start_timestamp_ns = 7;</code>
     * @return Whether the startTimestampNs field is set.
     */
    boolean hasStartTimestampNs();
    /**
     * <pre>
     * Process start time in nanoseconds.
     * The timestamp refers to the trace clock by default. Other clock IDs
     * provided in TracePacket are not supported.
     * </pre>
     *
     * <code>optional int64 start_timestamp_ns = 7;</code>
     * @return The startTimestampNs.
     */
    long getStartTimestampNs();

    /**
     * <code>optional .perfetto.protos.ProcessDescriptor.ChromeProcessType chrome_process_type = 4;</code>
     * @return Whether the chromeProcessType field is set.
     */
    boolean hasChromeProcessType();
    /**
     * <code>optional .perfetto.protos.ProcessDescriptor.ChromeProcessType chrome_process_type = 4;</code>
     * @return The chromeProcessType.
     */
    perfetto.protos.ProcessDescriptorOuterClass.ProcessDescriptor.ChromeProcessType getChromeProcessType();

    /**
     * <pre>
     * To support old UI. New UI should determine default sorting by process_type.
     * </pre>
     *
     * <code>optional int32 legacy_sort_index = 3;</code>
     * @return Whether the legacySortIndex field is set.
     */
    boolean hasLegacySortIndex();
    /**
     * <pre>
     * To support old UI. New UI should determine default sorting by process_type.
     * </pre>
     *
     * <code>optional int32 legacy_sort_index = 3;</code>
     * @return The legacySortIndex.
     */
    int getLegacySortIndex();

    /**
     * <pre>
     * Labels can be used to further describe properties of the work performed by
     * the process. For example, these can be used by Chrome renderer process to
     * provide titles of frames being rendered.
     * </pre>
     *
     * <code>repeated string process_labels = 8;</code>
     * @return A list containing the processLabels.
     */
    java.util.List<java.lang.String>
        getProcessLabelsList();
    /**
     * <pre>
     * Labels can be used to further describe properties of the work performed by
     * the process. For example, these can be used by Chrome renderer process to
     * provide titles of frames being rendered.
     * </pre>
     *
     * <code>repeated string process_labels = 8;</code>
     * @return The count of processLabels.
     */
    int getProcessLabelsCount();
    /**
     * <pre>
     * Labels can be used to further describe properties of the work performed by
     * the process. For example, these can be used by Chrome renderer process to
     * provide titles of frames being rendered.
     * </pre>
     *
     * <code>repeated string process_labels = 8;</code>
     * @param index The index of the element to return.
     * @return The processLabels at the given index.
     */
    java.lang.String getProcessLabels(int index);
    /**
     * <pre>
     * Labels can be used to further describe properties of the work performed by
     * the process. For example, these can be used by Chrome renderer process to
     * provide titles of frames being rendered.
     * </pre>
     *
     * <code>repeated string process_labels = 8;</code>
     * @param index The index of the value to return.
     * @return The bytes of the processLabels at the given index.
     */
    com.google.protobuf.ByteString
        getProcessLabelsBytes(int index);
  }
  /**
   * <pre>
   * Describes a process's attributes. Emitted as part of a TrackDescriptor,
   * usually by the process's main thread.
   * Next id: 9.
   * </pre>
   *
   * Protobuf type {@code perfetto.protos.ProcessDescriptor}
   */
  public static final class ProcessDescriptor extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:perfetto.protos.ProcessDescriptor)
      ProcessDescriptorOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ProcessDescriptor.newBuilder() to construct.
    private ProcessDescriptor(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ProcessDescriptor() {
      cmdline_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      processName_ = "";
      chromeProcessType_ = 0;
      processLabels_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ProcessDescriptor();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return perfetto.protos.ProcessDescriptorOuterClass.internal_static_perfetto_protos_ProcessDescriptor_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return perfetto.protos.ProcessDescriptorOuterClass.internal_static_perfetto_protos_ProcessDescriptor_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              perfetto.protos.ProcessDescriptorOuterClass.ProcessDescriptor.class, perfetto.protos.ProcessDescriptorOuterClass.ProcessDescriptor.Builder.class);
    }

    /**
     * <pre>
     * See chromium's content::ProcessType.
     * </pre>
     *
     * Protobuf enum {@code perfetto.protos.ProcessDescriptor.ChromeProcessType}
     */
    public enum ChromeProcessType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>PROCESS_UNSPECIFIED = 0;</code>
       */
      PROCESS_UNSPECIFIED(0),
      /**
       * <code>PROCESS_BROWSER = 1;</code>
       */
      PROCESS_BROWSER(1),
      /**
       * <code>PROCESS_RENDERER = 2;</code>
       */
      PROCESS_RENDERER(2),
      /**
       * <code>PROCESS_UTILITY = 3;</code>
       */
      PROCESS_UTILITY(3),
      /**
       * <code>PROCESS_ZYGOTE = 4;</code>
       */
      PROCESS_ZYGOTE(4),
      /**
       * <code>PROCESS_SANDBOX_HELPER = 5;</code>
       */
      PROCESS_SANDBOX_HELPER(5),
      /**
       * <code>PROCESS_GPU = 6;</code>
       */
      PROCESS_GPU(6),
      /**
       * <code>PROCESS_PPAPI_PLUGIN = 7;</code>
       */
      PROCESS_PPAPI_PLUGIN(7),
      /**
       * <code>PROCESS_PPAPI_BROKER = 8;</code>
       */
      PROCESS_PPAPI_BROKER(8),
      ;

      /**
       * <code>PROCESS_UNSPECIFIED = 0;</code>
       */
      public static final int PROCESS_UNSPECIFIED_VALUE = 0;
      /**
       * <code>PROCESS_BROWSER = 1;</code>
       */
      public static final int PROCESS_BROWSER_VALUE = 1;
      /**
       * <code>PROCESS_RENDERER = 2;</code>
       */
      public static final int PROCESS_RENDERER_VALUE = 2;
      /**
       * <code>PROCESS_UTILITY = 3;</code>
       */
      public static final int PROCESS_UTILITY_VALUE = 3;
      /**
       * <code>PROCESS_ZYGOTE = 4;</code>
       */
      public static final int PROCESS_ZYGOTE_VALUE = 4;
      /**
       * <code>PROCESS_SANDBOX_HELPER = 5;</code>
       */
      public static final int PROCESS_SANDBOX_HELPER_VALUE = 5;
      /**
       * <code>PROCESS_GPU = 6;</code>
       */
      public static final int PROCESS_GPU_VALUE = 6;
      /**
       * <code>PROCESS_PPAPI_PLUGIN = 7;</code>
       */
      public static final int PROCESS_PPAPI_PLUGIN_VALUE = 7;
      /**
       * <code>PROCESS_PPAPI_BROKER = 8;</code>
       */
      public static final int PROCESS_PPAPI_BROKER_VALUE = 8;


      public final int getNumber() {
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ChromeProcessType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static ChromeProcessType forNumber(int value) {
        switch (value) {
          case 0: return PROCESS_UNSPECIFIED;
          case 1: return PROCESS_BROWSER;
          case 2: return PROCESS_RENDERER;
          case 3: return PROCESS_UTILITY;
          case 4: return PROCESS_ZYGOTE;
          case 5: return PROCESS_SANDBOX_HELPER;
          case 6: return PROCESS_GPU;
          case 7: return PROCESS_PPAPI_PLUGIN;
          case 8: return PROCESS_PPAPI_BROKER;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ChromeProcessType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          ChromeProcessType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ChromeProcessType>() {
              public ChromeProcessType findValueByNumber(int number) {
                return ChromeProcessType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return perfetto.protos.ProcessDescriptorOuterClass.ProcessDescriptor.getDescriptor().getEnumTypes().get(0);
      }

      private static final ChromeProcessType[] VALUES = values();

      public static ChromeProcessType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private ChromeProcessType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:perfetto.protos.ProcessDescriptor.ChromeProcessType)
    }

    private int bitField0_;
    public static final int PID_FIELD_NUMBER = 1;
    private int pid_ = 0;
    /**
     * <code>optional int32 pid = 1;</code>
     * @return Whether the pid field is set.
     */
    @java.lang.Override
    public boolean hasPid() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional int32 pid = 1;</code>
     * @return The pid.
     */
    @java.lang.Override
    public int getPid() {
      return pid_;
    }

    public static final int CMDLINE_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringList cmdline_;
    /**
     * <code>repeated string cmdline = 2;</code>
     * @return A list containing the cmdline.
     */
    public com.google.protobuf.ProtocolStringList
        getCmdlineList() {
      return cmdline_;
    }
    /**
     * <code>repeated string cmdline = 2;</code>
     * @return The count of cmdline.
     */
    public int getCmdlineCount() {
      return cmdline_.size();
    }
    /**
     * <code>repeated string cmdline = 2;</code>
     * @param index The index of the element to return.
     * @return The cmdline at the given index.
     */
    public java.lang.String getCmdline(int index) {
      return cmdline_.get(index);
    }
    /**
     * <code>repeated string cmdline = 2;</code>
     * @param index The index of the value to return.
     * @return The bytes of the cmdline at the given index.
     */
    public com.google.protobuf.ByteString
        getCmdlineBytes(int index) {
      return cmdline_.getByteString(index);
    }

    public static final int PROCESS_NAME_FIELD_NUMBER = 6;
    @SuppressWarnings("serial")
    private volatile java.lang.Object processName_ = "";
    /**
     * <code>optional string process_name = 6;</code>
     * @return Whether the processName field is set.
     */
    @java.lang.Override
    public boolean hasProcessName() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional string process_name = 6;</code>
     * @return The processName.
     */
    @java.lang.Override
    public java.lang.String getProcessName() {
      java.lang.Object ref = processName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          processName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string process_name = 6;</code>
     * @return The bytes for processName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getProcessNameBytes() {
      java.lang.Object ref = processName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        processName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PROCESS_PRIORITY_FIELD_NUMBER = 5;
    private int processPriority_ = 0;
    /**
     * <code>optional int32 process_priority = 5;</code>
     * @return Whether the processPriority field is set.
     */
    @java.lang.Override
    public boolean hasProcessPriority() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional int32 process_priority = 5;</code>
     * @return The processPriority.
     */
    @java.lang.Override
    public int getProcessPriority() {
      return processPriority_;
    }

    public static final int START_TIMESTAMP_NS_FIELD_NUMBER = 7;
    private long startTimestampNs_ = 0L;
    /**
     * <pre>
     * Process start time in nanoseconds.
     * The timestamp refers to the trace clock by default. Other clock IDs
     * provided in TracePacket are not supported.
     * </pre>
     *
     * <code>optional int64 start_timestamp_ns = 7;</code>
     * @return Whether the startTimestampNs field is set.
     */
    @java.lang.Override
    public boolean hasStartTimestampNs() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Process start time in nanoseconds.
     * The timestamp refers to the trace clock by default. Other clock IDs
     * provided in TracePacket are not supported.
     * </pre>
     *
     * <code>optional int64 start_timestamp_ns = 7;</code>
     * @return The startTimestampNs.
     */
    @java.lang.Override
    public long getStartTimestampNs() {
      return startTimestampNs_;
    }

    public static final int CHROME_PROCESS_TYPE_FIELD_NUMBER = 4;
    private int chromeProcessType_ = 0;
    /**
     * <code>optional .perfetto.protos.ProcessDescriptor.ChromeProcessType chrome_process_type = 4;</code>
     * @return Whether the chromeProcessType field is set.
     */
    @java.lang.Override public boolean hasChromeProcessType() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional .perfetto.protos.ProcessDescriptor.ChromeProcessType chrome_process_type = 4;</code>
     * @return The chromeProcessType.
     */
    @java.lang.Override public perfetto.protos.ProcessDescriptorOuterClass.ProcessDescriptor.ChromeProcessType getChromeProcessType() {
      perfetto.protos.ProcessDescriptorOuterClass.ProcessDescriptor.ChromeProcessType result = perfetto.protos.ProcessDescriptorOuterClass.ProcessDescriptor.ChromeProcessType.forNumber(chromeProcessType_);
      return result == null ? perfetto.protos.ProcessDescriptorOuterClass.ProcessDescriptor.ChromeProcessType.PROCESS_UNSPECIFIED : result;
    }

    public static final int LEGACY_SORT_INDEX_FIELD_NUMBER = 3;
    private int legacySortIndex_ = 0;
    /**
     * <pre>
     * To support old UI. New UI should determine default sorting by process_type.
     * </pre>
     *
     * <code>optional int32 legacy_sort_index = 3;</code>
     * @return Whether the legacySortIndex field is set.
     */
    @java.lang.Override
    public boolean hasLegacySortIndex() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * To support old UI. New UI should determine default sorting by process_type.
     * </pre>
     *
     * <code>optional int32 legacy_sort_index = 3;</code>
     * @return The legacySortIndex.
     */
    @java.lang.Override
    public int getLegacySortIndex() {
      return legacySortIndex_;
    }

    public static final int PROCESS_LABELS_FIELD_NUMBER = 8;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringList processLabels_;
    /**
     * <pre>
     * Labels can be used to further describe properties of the work performed by
     * the process. For example, these can be used by Chrome renderer process to
     * provide titles of frames being rendered.
     * </pre>
     *
     * <code>repeated string process_labels = 8;</code>
     * @return A list containing the processLabels.
     */
    public com.google.protobuf.ProtocolStringList
        getProcessLabelsList() {
      return processLabels_;
    }
    /**
     * <pre>
     * Labels can be used to further describe properties of the work performed by
     * the process. For example, these can be used by Chrome renderer process to
     * provide titles of frames being rendered.
     * </pre>
     *
     * <code>repeated string process_labels = 8;</code>
     * @return The count of processLabels.
     */
    public int getProcessLabelsCount() {
      return processLabels_.size();
    }
    /**
     * <pre>
     * Labels can be used to further describe properties of the work performed by
     * the process. For example, these can be used by Chrome renderer process to
     * provide titles of frames being rendered.
     * </pre>
     *
     * <code>repeated string process_labels = 8;</code>
     * @param index The index of the element to return.
     * @return The processLabels at the given index.
     */
    public java.lang.String getProcessLabels(int index) {
      return processLabels_.get(index);
    }
    /**
     * <pre>
     * Labels can be used to further describe properties of the work performed by
     * the process. For example, these can be used by Chrome renderer process to
     * provide titles of frames being rendered.
     * </pre>
     *
     * <code>repeated string process_labels = 8;</code>
     * @param index The index of the value to return.
     * @return The bytes of the processLabels at the given index.
     */
    public com.google.protobuf.ByteString
        getProcessLabelsBytes(int index) {
      return processLabels_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, pid_);
      }
      for (int i = 0; i < cmdline_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, cmdline_.getRaw(i));
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeInt32(3, legacySortIndex_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeEnum(4, chromeProcessType_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeInt32(5, processPriority_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, processName_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeInt64(7, startTimestampNs_);
      }
      for (int i = 0; i < processLabels_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 8, processLabels_.getRaw(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, pid_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cmdline_.size(); i++) {
          dataSize += computeStringSizeNoTag(cmdline_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getCmdlineList().size();
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, legacySortIndex_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, chromeProcessType_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, processPriority_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, processName_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, startTimestampNs_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < processLabels_.size(); i++) {
          dataSize += computeStringSizeNoTag(processLabels_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getProcessLabelsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof perfetto.protos.ProcessDescriptorOuterClass.ProcessDescriptor)) {
        return super.equals(obj);
      }
      perfetto.protos.ProcessDescriptorOuterClass.ProcessDescriptor other = (perfetto.protos.ProcessDescriptorOuterClass.ProcessDescriptor) obj;

      if (hasPid() != other.hasPid()) return false;
      if (hasPid()) {
        if (getPid()
            != other.getPid()) return false;
      }
      if (!getCmdlineList()
          .equals(other.getCmdlineList())) return false;
      if (hasProcessName() != other.hasProcessName()) return false;
      if (hasProcessName()) {
        if (!getProcessName()
            .equals(other.getProcessName())) return false;
      }
      if (hasProcessPriority() != other.hasProcessPriority()) return false;
      if (hasProcessPriority()) {
        if (getProcessPriority()
            != other.getProcessPriority()) return false;
      }
      if (hasStartTimestampNs() != other.hasStartTimestampNs()) return false;
      if (hasStartTimestampNs()) {
        if (getStartTimestampNs()
            != other.getStartTimestampNs()) return false;
      }
      if (hasChromeProcessType() != other.hasChromeProcessType()) return false;
      if (hasChromeProcessType()) {
        if (chromeProcessType_ != other.chromeProcessType_) return false;
      }
      if (hasLegacySortIndex() != other.hasLegacySortIndex()) return false;
      if (hasLegacySortIndex()) {
        if (getLegacySortIndex()
            != other.getLegacySortIndex()) return false;
      }
      if (!getProcessLabelsList()
          .equals(other.getProcessLabelsList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPid()) {
        hash = (37 * hash) + PID_FIELD_NUMBER;
        hash = (53 * hash) + getPid();
      }
      if (getCmdlineCount() > 0) {
        hash = (37 * hash) + CMDLINE_FIELD_NUMBER;
        hash = (53 * hash) + getCmdlineList().hashCode();
      }
      if (hasProcessName()) {
        hash = (37 * hash) + PROCESS_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getProcessName().hashCode();
      }
      if (hasProcessPriority()) {
        hash = (37 * hash) + PROCESS_PRIORITY_FIELD_NUMBER;
        hash = (53 * hash) + getProcessPriority();
      }
      if (hasStartTimestampNs()) {
        hash = (37 * hash) + START_TIMESTAMP_NS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getStartTimestampNs());
      }
      if (hasChromeProcessType()) {
        hash = (37 * hash) + CHROME_PROCESS_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + chromeProcessType_;
      }
      if (hasLegacySortIndex()) {
        hash = (37 * hash) + LEGACY_SORT_INDEX_FIELD_NUMBER;
        hash = (53 * hash) + getLegacySortIndex();
      }
      if (getProcessLabelsCount() > 0) {
        hash = (37 * hash) + PROCESS_LABELS_FIELD_NUMBER;
        hash = (53 * hash) + getProcessLabelsList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static perfetto.protos.ProcessDescriptorOuterClass.ProcessDescriptor parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.ProcessDescriptorOuterClass.ProcessDescriptor parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.ProcessDescriptorOuterClass.ProcessDescriptor parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.ProcessDescriptorOuterClass.ProcessDescriptor parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.ProcessDescriptorOuterClass.ProcessDescriptor parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.ProcessDescriptorOuterClass.ProcessDescriptor parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.ProcessDescriptorOuterClass.ProcessDescriptor parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.ProcessDescriptorOuterClass.ProcessDescriptor parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.ProcessDescriptorOuterClass.ProcessDescriptor parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static perfetto.protos.ProcessDescriptorOuterClass.ProcessDescriptor parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.ProcessDescriptorOuterClass.ProcessDescriptor parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.ProcessDescriptorOuterClass.ProcessDescriptor parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(perfetto.protos.ProcessDescriptorOuterClass.ProcessDescriptor prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Describes a process's attributes. Emitted as part of a TrackDescriptor,
     * usually by the process's main thread.
     * Next id: 9.
     * </pre>
     *
     * Protobuf type {@code perfetto.protos.ProcessDescriptor}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:perfetto.protos.ProcessDescriptor)
        perfetto.protos.ProcessDescriptorOuterClass.ProcessDescriptorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.ProcessDescriptorOuterClass.internal_static_perfetto_protos_ProcessDescriptor_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.ProcessDescriptorOuterClass.internal_static_perfetto_protos_ProcessDescriptor_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.ProcessDescriptorOuterClass.ProcessDescriptor.class, perfetto.protos.ProcessDescriptorOuterClass.ProcessDescriptor.Builder.class);
      }

      // Construct using perfetto.protos.ProcessDescriptorOuterClass.ProcessDescriptor.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        pid_ = 0;
        cmdline_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        processName_ = "";
        processPriority_ = 0;
        startTimestampNs_ = 0L;
        chromeProcessType_ = 0;
        legacySortIndex_ = 0;
        processLabels_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return perfetto.protos.ProcessDescriptorOuterClass.internal_static_perfetto_protos_ProcessDescriptor_descriptor;
      }

      @java.lang.Override
      public perfetto.protos.ProcessDescriptorOuterClass.ProcessDescriptor getDefaultInstanceForType() {
        return perfetto.protos.ProcessDescriptorOuterClass.ProcessDescriptor.getDefaultInstance();
      }

      @java.lang.Override
      public perfetto.protos.ProcessDescriptorOuterClass.ProcessDescriptor build() {
        perfetto.protos.ProcessDescriptorOuterClass.ProcessDescriptor result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public perfetto.protos.ProcessDescriptorOuterClass.ProcessDescriptor buildPartial() {
        perfetto.protos.ProcessDescriptorOuterClass.ProcessDescriptor result = new perfetto.protos.ProcessDescriptorOuterClass.ProcessDescriptor(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(perfetto.protos.ProcessDescriptorOuterClass.ProcessDescriptor result) {
        if (((bitField0_ & 0x00000002) != 0)) {
          cmdline_ = cmdline_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.cmdline_ = cmdline_;
        if (((bitField0_ & 0x00000080) != 0)) {
          processLabels_ = processLabels_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.processLabels_ = processLabels_;
      }

      private void buildPartial0(perfetto.protos.ProcessDescriptorOuterClass.ProcessDescriptor result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.pid_ = pid_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.processName_ = processName_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.processPriority_ = processPriority_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.startTimestampNs_ = startTimestampNs_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.chromeProcessType_ = chromeProcessType_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.legacySortIndex_ = legacySortIndex_;
          to_bitField0_ |= 0x00000020;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof perfetto.protos.ProcessDescriptorOuterClass.ProcessDescriptor) {
          return mergeFrom((perfetto.protos.ProcessDescriptorOuterClass.ProcessDescriptor)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(perfetto.protos.ProcessDescriptorOuterClass.ProcessDescriptor other) {
        if (other == perfetto.protos.ProcessDescriptorOuterClass.ProcessDescriptor.getDefaultInstance()) return this;
        if (other.hasPid()) {
          setPid(other.getPid());
        }
        if (!other.cmdline_.isEmpty()) {
          if (cmdline_.isEmpty()) {
            cmdline_ = other.cmdline_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureCmdlineIsMutable();
            cmdline_.addAll(other.cmdline_);
          }
          onChanged();
        }
        if (other.hasProcessName()) {
          processName_ = other.processName_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        if (other.hasProcessPriority()) {
          setProcessPriority(other.getProcessPriority());
        }
        if (other.hasStartTimestampNs()) {
          setStartTimestampNs(other.getStartTimestampNs());
        }
        if (other.hasChromeProcessType()) {
          setChromeProcessType(other.getChromeProcessType());
        }
        if (other.hasLegacySortIndex()) {
          setLegacySortIndex(other.getLegacySortIndex());
        }
        if (!other.processLabels_.isEmpty()) {
          if (processLabels_.isEmpty()) {
            processLabels_ = other.processLabels_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureProcessLabelsIsMutable();
            processLabels_.addAll(other.processLabels_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                pid_ = input.readInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                ensureCmdlineIsMutable();
                cmdline_.add(bs);
                break;
              } // case 18
              case 24: {
                legacySortIndex_ = input.readInt32();
                bitField0_ |= 0x00000040;
                break;
              } // case 24
              case 32: {
                int tmpRaw = input.readEnum();
                perfetto.protos.ProcessDescriptorOuterClass.ProcessDescriptor.ChromeProcessType tmpValue =
                    perfetto.protos.ProcessDescriptorOuterClass.ProcessDescriptor.ChromeProcessType.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(4, tmpRaw);
                } else {
                  chromeProcessType_ = tmpRaw;
                  bitField0_ |= 0x00000020;
                }
                break;
              } // case 32
              case 40: {
                processPriority_ = input.readInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 40
              case 50: {
                processName_ = input.readBytes();
                bitField0_ |= 0x00000004;
                break;
              } // case 50
              case 56: {
                startTimestampNs_ = input.readInt64();
                bitField0_ |= 0x00000010;
                break;
              } // case 56
              case 66: {
                com.google.protobuf.ByteString bs = input.readBytes();
                ensureProcessLabelsIsMutable();
                processLabels_.add(bs);
                break;
              } // case 66
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int pid_ ;
      /**
       * <code>optional int32 pid = 1;</code>
       * @return Whether the pid field is set.
       */
      @java.lang.Override
      public boolean hasPid() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional int32 pid = 1;</code>
       * @return The pid.
       */
      @java.lang.Override
      public int getPid() {
        return pid_;
      }
      /**
       * <code>optional int32 pid = 1;</code>
       * @param value The pid to set.
       * @return This builder for chaining.
       */
      public Builder setPid(int value) {
        
        pid_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pid = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearPid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        pid_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList cmdline_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureCmdlineIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          cmdline_ = new com.google.protobuf.LazyStringArrayList(cmdline_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated string cmdline = 2;</code>
       * @return A list containing the cmdline.
       */
      public com.google.protobuf.ProtocolStringList
          getCmdlineList() {
        return cmdline_.getUnmodifiableView();
      }
      /**
       * <code>repeated string cmdline = 2;</code>
       * @return The count of cmdline.
       */
      public int getCmdlineCount() {
        return cmdline_.size();
      }
      /**
       * <code>repeated string cmdline = 2;</code>
       * @param index The index of the element to return.
       * @return The cmdline at the given index.
       */
      public java.lang.String getCmdline(int index) {
        return cmdline_.get(index);
      }
      /**
       * <code>repeated string cmdline = 2;</code>
       * @param index The index of the value to return.
       * @return The bytes of the cmdline at the given index.
       */
      public com.google.protobuf.ByteString
          getCmdlineBytes(int index) {
        return cmdline_.getByteString(index);
      }
      /**
       * <code>repeated string cmdline = 2;</code>
       * @param index The index to set the value at.
       * @param value The cmdline to set.
       * @return This builder for chaining.
       */
      public Builder setCmdline(
          int index, java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureCmdlineIsMutable();
        cmdline_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string cmdline = 2;</code>
       * @param value The cmdline to add.
       * @return This builder for chaining.
       */
      public Builder addCmdline(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureCmdlineIsMutable();
        cmdline_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string cmdline = 2;</code>
       * @param values The cmdline to add.
       * @return This builder for chaining.
       */
      public Builder addAllCmdline(
          java.lang.Iterable<java.lang.String> values) {
        ensureCmdlineIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, cmdline_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string cmdline = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearCmdline() {
        cmdline_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string cmdline = 2;</code>
       * @param value The bytes of the cmdline to add.
       * @return This builder for chaining.
       */
      public Builder addCmdlineBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        ensureCmdlineIsMutable();
        cmdline_.add(value);
        onChanged();
        return this;
      }

      private java.lang.Object processName_ = "";
      /**
       * <code>optional string process_name = 6;</code>
       * @return Whether the processName field is set.
       */
      public boolean hasProcessName() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional string process_name = 6;</code>
       * @return The processName.
       */
      public java.lang.String getProcessName() {
        java.lang.Object ref = processName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            processName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string process_name = 6;</code>
       * @return The bytes for processName.
       */
      public com.google.protobuf.ByteString
          getProcessNameBytes() {
        java.lang.Object ref = processName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          processName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string process_name = 6;</code>
       * @param value The processName to set.
       * @return This builder for chaining.
       */
      public Builder setProcessName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        processName_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional string process_name = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearProcessName() {
        processName_ = getDefaultInstance().getProcessName();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <code>optional string process_name = 6;</code>
       * @param value The bytes for processName to set.
       * @return This builder for chaining.
       */
      public Builder setProcessNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        processName_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      private int processPriority_ ;
      /**
       * <code>optional int32 process_priority = 5;</code>
       * @return Whether the processPriority field is set.
       */
      @java.lang.Override
      public boolean hasProcessPriority() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional int32 process_priority = 5;</code>
       * @return The processPriority.
       */
      @java.lang.Override
      public int getProcessPriority() {
        return processPriority_;
      }
      /**
       * <code>optional int32 process_priority = 5;</code>
       * @param value The processPriority to set.
       * @return This builder for chaining.
       */
      public Builder setProcessPriority(int value) {
        
        processPriority_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 process_priority = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearProcessPriority() {
        bitField0_ = (bitField0_ & ~0x00000008);
        processPriority_ = 0;
        onChanged();
        return this;
      }

      private long startTimestampNs_ ;
      /**
       * <pre>
       * Process start time in nanoseconds.
       * The timestamp refers to the trace clock by default. Other clock IDs
       * provided in TracePacket are not supported.
       * </pre>
       *
       * <code>optional int64 start_timestamp_ns = 7;</code>
       * @return Whether the startTimestampNs field is set.
       */
      @java.lang.Override
      public boolean hasStartTimestampNs() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * Process start time in nanoseconds.
       * The timestamp refers to the trace clock by default. Other clock IDs
       * provided in TracePacket are not supported.
       * </pre>
       *
       * <code>optional int64 start_timestamp_ns = 7;</code>
       * @return The startTimestampNs.
       */
      @java.lang.Override
      public long getStartTimestampNs() {
        return startTimestampNs_;
      }
      /**
       * <pre>
       * Process start time in nanoseconds.
       * The timestamp refers to the trace clock by default. Other clock IDs
       * provided in TracePacket are not supported.
       * </pre>
       *
       * <code>optional int64 start_timestamp_ns = 7;</code>
       * @param value The startTimestampNs to set.
       * @return This builder for chaining.
       */
      public Builder setStartTimestampNs(long value) {
        
        startTimestampNs_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Process start time in nanoseconds.
       * The timestamp refers to the trace clock by default. Other clock IDs
       * provided in TracePacket are not supported.
       * </pre>
       *
       * <code>optional int64 start_timestamp_ns = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearStartTimestampNs() {
        bitField0_ = (bitField0_ & ~0x00000010);
        startTimestampNs_ = 0L;
        onChanged();
        return this;
      }

      private int chromeProcessType_ = 0;
      /**
       * <code>optional .perfetto.protos.ProcessDescriptor.ChromeProcessType chrome_process_type = 4;</code>
       * @return Whether the chromeProcessType field is set.
       */
      @java.lang.Override public boolean hasChromeProcessType() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional .perfetto.protos.ProcessDescriptor.ChromeProcessType chrome_process_type = 4;</code>
       * @return The chromeProcessType.
       */
      @java.lang.Override
      public perfetto.protos.ProcessDescriptorOuterClass.ProcessDescriptor.ChromeProcessType getChromeProcessType() {
        perfetto.protos.ProcessDescriptorOuterClass.ProcessDescriptor.ChromeProcessType result = perfetto.protos.ProcessDescriptorOuterClass.ProcessDescriptor.ChromeProcessType.forNumber(chromeProcessType_);
        return result == null ? perfetto.protos.ProcessDescriptorOuterClass.ProcessDescriptor.ChromeProcessType.PROCESS_UNSPECIFIED : result;
      }
      /**
       * <code>optional .perfetto.protos.ProcessDescriptor.ChromeProcessType chrome_process_type = 4;</code>
       * @param value The chromeProcessType to set.
       * @return This builder for chaining.
       */
      public Builder setChromeProcessType(perfetto.protos.ProcessDescriptorOuterClass.ProcessDescriptor.ChromeProcessType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000020;
        chromeProcessType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .perfetto.protos.ProcessDescriptor.ChromeProcessType chrome_process_type = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearChromeProcessType() {
        bitField0_ = (bitField0_ & ~0x00000020);
        chromeProcessType_ = 0;
        onChanged();
        return this;
      }

      private int legacySortIndex_ ;
      /**
       * <pre>
       * To support old UI. New UI should determine default sorting by process_type.
       * </pre>
       *
       * <code>optional int32 legacy_sort_index = 3;</code>
       * @return Whether the legacySortIndex field is set.
       */
      @java.lang.Override
      public boolean hasLegacySortIndex() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       * To support old UI. New UI should determine default sorting by process_type.
       * </pre>
       *
       * <code>optional int32 legacy_sort_index = 3;</code>
       * @return The legacySortIndex.
       */
      @java.lang.Override
      public int getLegacySortIndex() {
        return legacySortIndex_;
      }
      /**
       * <pre>
       * To support old UI. New UI should determine default sorting by process_type.
       * </pre>
       *
       * <code>optional int32 legacy_sort_index = 3;</code>
       * @param value The legacySortIndex to set.
       * @return This builder for chaining.
       */
      public Builder setLegacySortIndex(int value) {
        
        legacySortIndex_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * To support old UI. New UI should determine default sorting by process_type.
       * </pre>
       *
       * <code>optional int32 legacy_sort_index = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearLegacySortIndex() {
        bitField0_ = (bitField0_ & ~0x00000040);
        legacySortIndex_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList processLabels_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureProcessLabelsIsMutable() {
        if (!((bitField0_ & 0x00000080) != 0)) {
          processLabels_ = new com.google.protobuf.LazyStringArrayList(processLabels_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <pre>
       * Labels can be used to further describe properties of the work performed by
       * the process. For example, these can be used by Chrome renderer process to
       * provide titles of frames being rendered.
       * </pre>
       *
       * <code>repeated string process_labels = 8;</code>
       * @return A list containing the processLabels.
       */
      public com.google.protobuf.ProtocolStringList
          getProcessLabelsList() {
        return processLabels_.getUnmodifiableView();
      }
      /**
       * <pre>
       * Labels can be used to further describe properties of the work performed by
       * the process. For example, these can be used by Chrome renderer process to
       * provide titles of frames being rendered.
       * </pre>
       *
       * <code>repeated string process_labels = 8;</code>
       * @return The count of processLabels.
       */
      public int getProcessLabelsCount() {
        return processLabels_.size();
      }
      /**
       * <pre>
       * Labels can be used to further describe properties of the work performed by
       * the process. For example, these can be used by Chrome renderer process to
       * provide titles of frames being rendered.
       * </pre>
       *
       * <code>repeated string process_labels = 8;</code>
       * @param index The index of the element to return.
       * @return The processLabels at the given index.
       */
      public java.lang.String getProcessLabels(int index) {
        return processLabels_.get(index);
      }
      /**
       * <pre>
       * Labels can be used to further describe properties of the work performed by
       * the process. For example, these can be used by Chrome renderer process to
       * provide titles of frames being rendered.
       * </pre>
       *
       * <code>repeated string process_labels = 8;</code>
       * @param index The index of the value to return.
       * @return The bytes of the processLabels at the given index.
       */
      public com.google.protobuf.ByteString
          getProcessLabelsBytes(int index) {
        return processLabels_.getByteString(index);
      }
      /**
       * <pre>
       * Labels can be used to further describe properties of the work performed by
       * the process. For example, these can be used by Chrome renderer process to
       * provide titles of frames being rendered.
       * </pre>
       *
       * <code>repeated string process_labels = 8;</code>
       * @param index The index to set the value at.
       * @param value The processLabels to set.
       * @return This builder for chaining.
       */
      public Builder setProcessLabels(
          int index, java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureProcessLabelsIsMutable();
        processLabels_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Labels can be used to further describe properties of the work performed by
       * the process. For example, these can be used by Chrome renderer process to
       * provide titles of frames being rendered.
       * </pre>
       *
       * <code>repeated string process_labels = 8;</code>
       * @param value The processLabels to add.
       * @return This builder for chaining.
       */
      public Builder addProcessLabels(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureProcessLabelsIsMutable();
        processLabels_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Labels can be used to further describe properties of the work performed by
       * the process. For example, these can be used by Chrome renderer process to
       * provide titles of frames being rendered.
       * </pre>
       *
       * <code>repeated string process_labels = 8;</code>
       * @param values The processLabels to add.
       * @return This builder for chaining.
       */
      public Builder addAllProcessLabels(
          java.lang.Iterable<java.lang.String> values) {
        ensureProcessLabelsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, processLabels_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Labels can be used to further describe properties of the work performed by
       * the process. For example, these can be used by Chrome renderer process to
       * provide titles of frames being rendered.
       * </pre>
       *
       * <code>repeated string process_labels = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearProcessLabels() {
        processLabels_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Labels can be used to further describe properties of the work performed by
       * the process. For example, these can be used by Chrome renderer process to
       * provide titles of frames being rendered.
       * </pre>
       *
       * <code>repeated string process_labels = 8;</code>
       * @param value The bytes of the processLabels to add.
       * @return This builder for chaining.
       */
      public Builder addProcessLabelsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        ensureProcessLabelsIsMutable();
        processLabels_.add(value);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:perfetto.protos.ProcessDescriptor)
    }

    // @@protoc_insertion_point(class_scope:perfetto.protos.ProcessDescriptor)
    private static final perfetto.protos.ProcessDescriptorOuterClass.ProcessDescriptor DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new perfetto.protos.ProcessDescriptorOuterClass.ProcessDescriptor();
    }

    public static perfetto.protos.ProcessDescriptorOuterClass.ProcessDescriptor getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ProcessDescriptor>
        PARSER = new com.google.protobuf.AbstractParser<ProcessDescriptor>() {
      @java.lang.Override
      public ProcessDescriptor parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ProcessDescriptor> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ProcessDescriptor> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public perfetto.protos.ProcessDescriptorOuterClass.ProcessDescriptor getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_ProcessDescriptor_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_perfetto_protos_ProcessDescriptor_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n:protos/perfetto/trace/track_event/proc" +
      "ess_descriptor.proto\022\017perfetto.protos\"\347\003" +
      "\n\021ProcessDescriptor\022\013\n\003pid\030\001 \001(\005\022\017\n\007cmdl" +
      "ine\030\002 \003(\t\022\024\n\014process_name\030\006 \001(\t\022\030\n\020proce" +
      "ss_priority\030\005 \001(\005\022\032\n\022start_timestamp_ns\030" +
      "\007 \001(\003\022Q\n\023chrome_process_type\030\004 \001(\01624.per" +
      "fetto.protos.ProcessDescriptor.ChromePro" +
      "cessType\022\031\n\021legacy_sort_index\030\003 \001(\005\022\026\n\016p" +
      "rocess_labels\030\010 \003(\t\"\341\001\n\021ChromeProcessTyp" +
      "e\022\027\n\023PROCESS_UNSPECIFIED\020\000\022\023\n\017PROCESS_BR" +
      "OWSER\020\001\022\024\n\020PROCESS_RENDERER\020\002\022\023\n\017PROCESS" +
      "_UTILITY\020\003\022\022\n\016PROCESS_ZYGOTE\020\004\022\032\n\026PROCES" +
      "S_SANDBOX_HELPER\020\005\022\017\n\013PROCESS_GPU\020\006\022\030\n\024P" +
      "ROCESS_PPAPI_PLUGIN\020\007\022\030\n\024PROCESS_PPAPI_B" +
      "ROKER\020\010"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_perfetto_protos_ProcessDescriptor_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_perfetto_protos_ProcessDescriptor_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_perfetto_protos_ProcessDescriptor_descriptor,
        new java.lang.String[] { "Pid", "Cmdline", "ProcessName", "ProcessPriority", "StartTimestampNs", "ChromeProcessType", "LegacySortIndex", "ProcessLabels", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
