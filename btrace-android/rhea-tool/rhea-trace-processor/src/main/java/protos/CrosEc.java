// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/perfetto/trace/ftrace/cros_ec.proto

package perfetto.protos;

public final class CrosEc {
  private CrosEc() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface CrosEcSensorhubDataFtraceEventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:perfetto.protos.CrosEcSensorhubDataFtraceEvent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int64 current_time = 1;</code>
     * @return Whether the currentTime field is set.
     */
    boolean hasCurrentTime();
    /**
     * <code>optional int64 current_time = 1;</code>
     * @return The currentTime.
     */
    long getCurrentTime();

    /**
     * <code>optional int64 current_timestamp = 2;</code>
     * @return Whether the currentTimestamp field is set.
     */
    boolean hasCurrentTimestamp();
    /**
     * <code>optional int64 current_timestamp = 2;</code>
     * @return The currentTimestamp.
     */
    long getCurrentTimestamp();

    /**
     * <code>optional int64 delta = 3;</code>
     * @return Whether the delta field is set.
     */
    boolean hasDelta();
    /**
     * <code>optional int64 delta = 3;</code>
     * @return The delta.
     */
    long getDelta();

    /**
     * <code>optional uint32 ec_fifo_timestamp = 4;</code>
     * @return Whether the ecFifoTimestamp field is set.
     */
    boolean hasEcFifoTimestamp();
    /**
     * <code>optional uint32 ec_fifo_timestamp = 4;</code>
     * @return The ecFifoTimestamp.
     */
    int getEcFifoTimestamp();

    /**
     * <code>optional uint32 ec_sensor_num = 5;</code>
     * @return Whether the ecSensorNum field is set.
     */
    boolean hasEcSensorNum();
    /**
     * <code>optional uint32 ec_sensor_num = 5;</code>
     * @return The ecSensorNum.
     */
    int getEcSensorNum();

    /**
     * <code>optional int64 fifo_timestamp = 6;</code>
     * @return Whether the fifoTimestamp field is set.
     */
    boolean hasFifoTimestamp();
    /**
     * <code>optional int64 fifo_timestamp = 6;</code>
     * @return The fifoTimestamp.
     */
    long getFifoTimestamp();
  }
  /**
   * Protobuf type {@code perfetto.protos.CrosEcSensorhubDataFtraceEvent}
   */
  public static final class CrosEcSensorhubDataFtraceEvent extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:perfetto.protos.CrosEcSensorhubDataFtraceEvent)
      CrosEcSensorhubDataFtraceEventOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CrosEcSensorhubDataFtraceEvent.newBuilder() to construct.
    private CrosEcSensorhubDataFtraceEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CrosEcSensorhubDataFtraceEvent() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CrosEcSensorhubDataFtraceEvent();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return perfetto.protos.CrosEc.internal_static_perfetto_protos_CrosEcSensorhubDataFtraceEvent_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return perfetto.protos.CrosEc.internal_static_perfetto_protos_CrosEcSensorhubDataFtraceEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              perfetto.protos.CrosEc.CrosEcSensorhubDataFtraceEvent.class, perfetto.protos.CrosEc.CrosEcSensorhubDataFtraceEvent.Builder.class);
    }

    private int bitField0_;
    public static final int CURRENT_TIME_FIELD_NUMBER = 1;
    private long currentTime_ = 0L;
    /**
     * <code>optional int64 current_time = 1;</code>
     * @return Whether the currentTime field is set.
     */
    @java.lang.Override
    public boolean hasCurrentTime() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional int64 current_time = 1;</code>
     * @return The currentTime.
     */
    @java.lang.Override
    public long getCurrentTime() {
      return currentTime_;
    }

    public static final int CURRENT_TIMESTAMP_FIELD_NUMBER = 2;
    private long currentTimestamp_ = 0L;
    /**
     * <code>optional int64 current_timestamp = 2;</code>
     * @return Whether the currentTimestamp field is set.
     */
    @java.lang.Override
    public boolean hasCurrentTimestamp() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional int64 current_timestamp = 2;</code>
     * @return The currentTimestamp.
     */
    @java.lang.Override
    public long getCurrentTimestamp() {
      return currentTimestamp_;
    }

    public static final int DELTA_FIELD_NUMBER = 3;
    private long delta_ = 0L;
    /**
     * <code>optional int64 delta = 3;</code>
     * @return Whether the delta field is set.
     */
    @java.lang.Override
    public boolean hasDelta() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional int64 delta = 3;</code>
     * @return The delta.
     */
    @java.lang.Override
    public long getDelta() {
      return delta_;
    }

    public static final int EC_FIFO_TIMESTAMP_FIELD_NUMBER = 4;
    private int ecFifoTimestamp_ = 0;
    /**
     * <code>optional uint32 ec_fifo_timestamp = 4;</code>
     * @return Whether the ecFifoTimestamp field is set.
     */
    @java.lang.Override
    public boolean hasEcFifoTimestamp() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional uint32 ec_fifo_timestamp = 4;</code>
     * @return The ecFifoTimestamp.
     */
    @java.lang.Override
    public int getEcFifoTimestamp() {
      return ecFifoTimestamp_;
    }

    public static final int EC_SENSOR_NUM_FIELD_NUMBER = 5;
    private int ecSensorNum_ = 0;
    /**
     * <code>optional uint32 ec_sensor_num = 5;</code>
     * @return Whether the ecSensorNum field is set.
     */
    @java.lang.Override
    public boolean hasEcSensorNum() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional uint32 ec_sensor_num = 5;</code>
     * @return The ecSensorNum.
     */
    @java.lang.Override
    public int getEcSensorNum() {
      return ecSensorNum_;
    }

    public static final int FIFO_TIMESTAMP_FIELD_NUMBER = 6;
    private long fifoTimestamp_ = 0L;
    /**
     * <code>optional int64 fifo_timestamp = 6;</code>
     * @return Whether the fifoTimestamp field is set.
     */
    @java.lang.Override
    public boolean hasFifoTimestamp() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>optional int64 fifo_timestamp = 6;</code>
     * @return The fifoTimestamp.
     */
    @java.lang.Override
    public long getFifoTimestamp() {
      return fifoTimestamp_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt64(1, currentTime_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt64(2, currentTimestamp_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeInt64(3, delta_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeUInt32(4, ecFifoTimestamp_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeUInt32(5, ecSensorNum_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeInt64(6, fifoTimestamp_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, currentTime_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, currentTimestamp_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, delta_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, ecFifoTimestamp_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, ecSensorNum_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, fifoTimestamp_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof perfetto.protos.CrosEc.CrosEcSensorhubDataFtraceEvent)) {
        return super.equals(obj);
      }
      perfetto.protos.CrosEc.CrosEcSensorhubDataFtraceEvent other = (perfetto.protos.CrosEc.CrosEcSensorhubDataFtraceEvent) obj;

      if (hasCurrentTime() != other.hasCurrentTime()) return false;
      if (hasCurrentTime()) {
        if (getCurrentTime()
            != other.getCurrentTime()) return false;
      }
      if (hasCurrentTimestamp() != other.hasCurrentTimestamp()) return false;
      if (hasCurrentTimestamp()) {
        if (getCurrentTimestamp()
            != other.getCurrentTimestamp()) return false;
      }
      if (hasDelta() != other.hasDelta()) return false;
      if (hasDelta()) {
        if (getDelta()
            != other.getDelta()) return false;
      }
      if (hasEcFifoTimestamp() != other.hasEcFifoTimestamp()) return false;
      if (hasEcFifoTimestamp()) {
        if (getEcFifoTimestamp()
            != other.getEcFifoTimestamp()) return false;
      }
      if (hasEcSensorNum() != other.hasEcSensorNum()) return false;
      if (hasEcSensorNum()) {
        if (getEcSensorNum()
            != other.getEcSensorNum()) return false;
      }
      if (hasFifoTimestamp() != other.hasFifoTimestamp()) return false;
      if (hasFifoTimestamp()) {
        if (getFifoTimestamp()
            != other.getFifoTimestamp()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasCurrentTime()) {
        hash = (37 * hash) + CURRENT_TIME_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getCurrentTime());
      }
      if (hasCurrentTimestamp()) {
        hash = (37 * hash) + CURRENT_TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getCurrentTimestamp());
      }
      if (hasDelta()) {
        hash = (37 * hash) + DELTA_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getDelta());
      }
      if (hasEcFifoTimestamp()) {
        hash = (37 * hash) + EC_FIFO_TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + getEcFifoTimestamp();
      }
      if (hasEcSensorNum()) {
        hash = (37 * hash) + EC_SENSOR_NUM_FIELD_NUMBER;
        hash = (53 * hash) + getEcSensorNum();
      }
      if (hasFifoTimestamp()) {
        hash = (37 * hash) + FIFO_TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getFifoTimestamp());
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static perfetto.protos.CrosEc.CrosEcSensorhubDataFtraceEvent parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.CrosEc.CrosEcSensorhubDataFtraceEvent parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.CrosEc.CrosEcSensorhubDataFtraceEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.CrosEc.CrosEcSensorhubDataFtraceEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.CrosEc.CrosEcSensorhubDataFtraceEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.CrosEc.CrosEcSensorhubDataFtraceEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.CrosEc.CrosEcSensorhubDataFtraceEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.CrosEc.CrosEcSensorhubDataFtraceEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.CrosEc.CrosEcSensorhubDataFtraceEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static perfetto.protos.CrosEc.CrosEcSensorhubDataFtraceEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.CrosEc.CrosEcSensorhubDataFtraceEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.CrosEc.CrosEcSensorhubDataFtraceEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(perfetto.protos.CrosEc.CrosEcSensorhubDataFtraceEvent prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code perfetto.protos.CrosEcSensorhubDataFtraceEvent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:perfetto.protos.CrosEcSensorhubDataFtraceEvent)
        perfetto.protos.CrosEc.CrosEcSensorhubDataFtraceEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.CrosEc.internal_static_perfetto_protos_CrosEcSensorhubDataFtraceEvent_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.CrosEc.internal_static_perfetto_protos_CrosEcSensorhubDataFtraceEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.CrosEc.CrosEcSensorhubDataFtraceEvent.class, perfetto.protos.CrosEc.CrosEcSensorhubDataFtraceEvent.Builder.class);
      }

      // Construct using perfetto.protos.CrosEc.CrosEcSensorhubDataFtraceEvent.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        currentTime_ = 0L;
        currentTimestamp_ = 0L;
        delta_ = 0L;
        ecFifoTimestamp_ = 0;
        ecSensorNum_ = 0;
        fifoTimestamp_ = 0L;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return perfetto.protos.CrosEc.internal_static_perfetto_protos_CrosEcSensorhubDataFtraceEvent_descriptor;
      }

      @java.lang.Override
      public perfetto.protos.CrosEc.CrosEcSensorhubDataFtraceEvent getDefaultInstanceForType() {
        return perfetto.protos.CrosEc.CrosEcSensorhubDataFtraceEvent.getDefaultInstance();
      }

      @java.lang.Override
      public perfetto.protos.CrosEc.CrosEcSensorhubDataFtraceEvent build() {
        perfetto.protos.CrosEc.CrosEcSensorhubDataFtraceEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public perfetto.protos.CrosEc.CrosEcSensorhubDataFtraceEvent buildPartial() {
        perfetto.protos.CrosEc.CrosEcSensorhubDataFtraceEvent result = new perfetto.protos.CrosEc.CrosEcSensorhubDataFtraceEvent(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(perfetto.protos.CrosEc.CrosEcSensorhubDataFtraceEvent result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.currentTime_ = currentTime_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.currentTimestamp_ = currentTimestamp_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.delta_ = delta_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.ecFifoTimestamp_ = ecFifoTimestamp_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.ecSensorNum_ = ecSensorNum_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.fifoTimestamp_ = fifoTimestamp_;
          to_bitField0_ |= 0x00000020;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof perfetto.protos.CrosEc.CrosEcSensorhubDataFtraceEvent) {
          return mergeFrom((perfetto.protos.CrosEc.CrosEcSensorhubDataFtraceEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(perfetto.protos.CrosEc.CrosEcSensorhubDataFtraceEvent other) {
        if (other == perfetto.protos.CrosEc.CrosEcSensorhubDataFtraceEvent.getDefaultInstance()) return this;
        if (other.hasCurrentTime()) {
          setCurrentTime(other.getCurrentTime());
        }
        if (other.hasCurrentTimestamp()) {
          setCurrentTimestamp(other.getCurrentTimestamp());
        }
        if (other.hasDelta()) {
          setDelta(other.getDelta());
        }
        if (other.hasEcFifoTimestamp()) {
          setEcFifoTimestamp(other.getEcFifoTimestamp());
        }
        if (other.hasEcSensorNum()) {
          setEcSensorNum(other.getEcSensorNum());
        }
        if (other.hasFifoTimestamp()) {
          setFifoTimestamp(other.getFifoTimestamp());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                currentTime_ = input.readInt64();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                currentTimestamp_ = input.readInt64();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                delta_ = input.readInt64();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                ecFifoTimestamp_ = input.readUInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                ecSensorNum_ = input.readUInt32();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                fifoTimestamp_ = input.readInt64();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private long currentTime_ ;
      /**
       * <code>optional int64 current_time = 1;</code>
       * @return Whether the currentTime field is set.
       */
      @java.lang.Override
      public boolean hasCurrentTime() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional int64 current_time = 1;</code>
       * @return The currentTime.
       */
      @java.lang.Override
      public long getCurrentTime() {
        return currentTime_;
      }
      /**
       * <code>optional int64 current_time = 1;</code>
       * @param value The currentTime to set.
       * @return This builder for chaining.
       */
      public Builder setCurrentTime(long value) {
        
        currentTime_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 current_time = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearCurrentTime() {
        bitField0_ = (bitField0_ & ~0x00000001);
        currentTime_ = 0L;
        onChanged();
        return this;
      }

      private long currentTimestamp_ ;
      /**
       * <code>optional int64 current_timestamp = 2;</code>
       * @return Whether the currentTimestamp field is set.
       */
      @java.lang.Override
      public boolean hasCurrentTimestamp() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional int64 current_timestamp = 2;</code>
       * @return The currentTimestamp.
       */
      @java.lang.Override
      public long getCurrentTimestamp() {
        return currentTimestamp_;
      }
      /**
       * <code>optional int64 current_timestamp = 2;</code>
       * @param value The currentTimestamp to set.
       * @return This builder for chaining.
       */
      public Builder setCurrentTimestamp(long value) {
        
        currentTimestamp_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 current_timestamp = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearCurrentTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        currentTimestamp_ = 0L;
        onChanged();
        return this;
      }

      private long delta_ ;
      /**
       * <code>optional int64 delta = 3;</code>
       * @return Whether the delta field is set.
       */
      @java.lang.Override
      public boolean hasDelta() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional int64 delta = 3;</code>
       * @return The delta.
       */
      @java.lang.Override
      public long getDelta() {
        return delta_;
      }
      /**
       * <code>optional int64 delta = 3;</code>
       * @param value The delta to set.
       * @return This builder for chaining.
       */
      public Builder setDelta(long value) {
        
        delta_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 delta = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearDelta() {
        bitField0_ = (bitField0_ & ~0x00000004);
        delta_ = 0L;
        onChanged();
        return this;
      }

      private int ecFifoTimestamp_ ;
      /**
       * <code>optional uint32 ec_fifo_timestamp = 4;</code>
       * @return Whether the ecFifoTimestamp field is set.
       */
      @java.lang.Override
      public boolean hasEcFifoTimestamp() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional uint32 ec_fifo_timestamp = 4;</code>
       * @return The ecFifoTimestamp.
       */
      @java.lang.Override
      public int getEcFifoTimestamp() {
        return ecFifoTimestamp_;
      }
      /**
       * <code>optional uint32 ec_fifo_timestamp = 4;</code>
       * @param value The ecFifoTimestamp to set.
       * @return This builder for chaining.
       */
      public Builder setEcFifoTimestamp(int value) {
        
        ecFifoTimestamp_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ec_fifo_timestamp = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearEcFifoTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000008);
        ecFifoTimestamp_ = 0;
        onChanged();
        return this;
      }

      private int ecSensorNum_ ;
      /**
       * <code>optional uint32 ec_sensor_num = 5;</code>
       * @return Whether the ecSensorNum field is set.
       */
      @java.lang.Override
      public boolean hasEcSensorNum() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional uint32 ec_sensor_num = 5;</code>
       * @return The ecSensorNum.
       */
      @java.lang.Override
      public int getEcSensorNum() {
        return ecSensorNum_;
      }
      /**
       * <code>optional uint32 ec_sensor_num = 5;</code>
       * @param value The ecSensorNum to set.
       * @return This builder for chaining.
       */
      public Builder setEcSensorNum(int value) {
        
        ecSensorNum_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ec_sensor_num = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearEcSensorNum() {
        bitField0_ = (bitField0_ & ~0x00000010);
        ecSensorNum_ = 0;
        onChanged();
        return this;
      }

      private long fifoTimestamp_ ;
      /**
       * <code>optional int64 fifo_timestamp = 6;</code>
       * @return Whether the fifoTimestamp field is set.
       */
      @java.lang.Override
      public boolean hasFifoTimestamp() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional int64 fifo_timestamp = 6;</code>
       * @return The fifoTimestamp.
       */
      @java.lang.Override
      public long getFifoTimestamp() {
        return fifoTimestamp_;
      }
      /**
       * <code>optional int64 fifo_timestamp = 6;</code>
       * @param value The fifoTimestamp to set.
       * @return This builder for chaining.
       */
      public Builder setFifoTimestamp(long value) {
        
        fifoTimestamp_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 fifo_timestamp = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearFifoTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000020);
        fifoTimestamp_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:perfetto.protos.CrosEcSensorhubDataFtraceEvent)
    }

    // @@protoc_insertion_point(class_scope:perfetto.protos.CrosEcSensorhubDataFtraceEvent)
    private static final perfetto.protos.CrosEc.CrosEcSensorhubDataFtraceEvent DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new perfetto.protos.CrosEc.CrosEcSensorhubDataFtraceEvent();
    }

    public static perfetto.protos.CrosEc.CrosEcSensorhubDataFtraceEvent getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<CrosEcSensorhubDataFtraceEvent>
        PARSER = new com.google.protobuf.AbstractParser<CrosEcSensorhubDataFtraceEvent>() {
      @java.lang.Override
      public CrosEcSensorhubDataFtraceEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CrosEcSensorhubDataFtraceEvent> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CrosEcSensorhubDataFtraceEvent> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public perfetto.protos.CrosEc.CrosEcSensorhubDataFtraceEvent getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_CrosEcSensorhubDataFtraceEvent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_perfetto_protos_CrosEcSensorhubDataFtraceEvent_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n*protos/perfetto/trace/ftrace/cros_ec.p" +
      "roto\022\017perfetto.protos\"\252\001\n\036CrosEcSensorhu" +
      "bDataFtraceEvent\022\024\n\014current_time\030\001 \001(\003\022\031" +
      "\n\021current_timestamp\030\002 \001(\003\022\r\n\005delta\030\003 \001(\003" +
      "\022\031\n\021ec_fifo_timestamp\030\004 \001(\r\022\025\n\rec_sensor" +
      "_num\030\005 \001(\r\022\026\n\016fifo_timestamp\030\006 \001(\003"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_perfetto_protos_CrosEcSensorhubDataFtraceEvent_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_perfetto_protos_CrosEcSensorhubDataFtraceEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_perfetto_protos_CrosEcSensorhubDataFtraceEvent_descriptor,
        new java.lang.String[] { "CurrentTime", "CurrentTimestamp", "Delta", "EcFifoTimestamp", "EcSensorNum", "FifoTimestamp", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
