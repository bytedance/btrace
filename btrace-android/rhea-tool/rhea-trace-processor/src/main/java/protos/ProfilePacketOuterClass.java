// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/perfetto/trace/profiling/profile_packet.proto

package perfetto.protos;

public final class ProfilePacketOuterClass {
  private ProfilePacketOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ProfilePacketOrBuilder extends
      // @@protoc_insertion_point(interface_extends:perfetto.protos.ProfilePacket)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The following interning tables are only used in Android version Q.
     * In newer versions, these tables are in InternedData
     * (see protos/perfetto/trace/interned_data) and are shared across
     * multiple ProfilePackets.
     * For backwards compatibility, consumers need to first look up interned
     * data in the tables within the ProfilePacket, and then, if they are empty,
     * look up in the InternedData instead.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString strings = 1;</code>
     */
    java.util.List<perfetto.protos.ProfileCommon.InternedString> 
        getStringsList();
    /**
     * <pre>
     * The following interning tables are only used in Android version Q.
     * In newer versions, these tables are in InternedData
     * (see protos/perfetto/trace/interned_data) and are shared across
     * multiple ProfilePackets.
     * For backwards compatibility, consumers need to first look up interned
     * data in the tables within the ProfilePacket, and then, if they are empty,
     * look up in the InternedData instead.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString strings = 1;</code>
     */
    perfetto.protos.ProfileCommon.InternedString getStrings(int index);
    /**
     * <pre>
     * The following interning tables are only used in Android version Q.
     * In newer versions, these tables are in InternedData
     * (see protos/perfetto/trace/interned_data) and are shared across
     * multiple ProfilePackets.
     * For backwards compatibility, consumers need to first look up interned
     * data in the tables within the ProfilePacket, and then, if they are empty,
     * look up in the InternedData instead.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString strings = 1;</code>
     */
    int getStringsCount();
    /**
     * <pre>
     * The following interning tables are only used in Android version Q.
     * In newer versions, these tables are in InternedData
     * (see protos/perfetto/trace/interned_data) and are shared across
     * multiple ProfilePackets.
     * For backwards compatibility, consumers need to first look up interned
     * data in the tables within the ProfilePacket, and then, if they are empty,
     * look up in the InternedData instead.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString strings = 1;</code>
     */
    java.util.List<? extends perfetto.protos.ProfileCommon.InternedStringOrBuilder> 
        getStringsOrBuilderList();
    /**
     * <pre>
     * The following interning tables are only used in Android version Q.
     * In newer versions, these tables are in InternedData
     * (see protos/perfetto/trace/interned_data) and are shared across
     * multiple ProfilePackets.
     * For backwards compatibility, consumers need to first look up interned
     * data in the tables within the ProfilePacket, and then, if they are empty,
     * look up in the InternedData instead.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString strings = 1;</code>
     */
    perfetto.protos.ProfileCommon.InternedStringOrBuilder getStringsOrBuilder(
        int index);

    /**
     * <code>repeated .perfetto.protos.Mapping mappings = 4;</code>
     */
    java.util.List<perfetto.protos.ProfileCommon.Mapping> 
        getMappingsList();
    /**
     * <code>repeated .perfetto.protos.Mapping mappings = 4;</code>
     */
    perfetto.protos.ProfileCommon.Mapping getMappings(int index);
    /**
     * <code>repeated .perfetto.protos.Mapping mappings = 4;</code>
     */
    int getMappingsCount();
    /**
     * <code>repeated .perfetto.protos.Mapping mappings = 4;</code>
     */
    java.util.List<? extends perfetto.protos.ProfileCommon.MappingOrBuilder> 
        getMappingsOrBuilderList();
    /**
     * <code>repeated .perfetto.protos.Mapping mappings = 4;</code>
     */
    perfetto.protos.ProfileCommon.MappingOrBuilder getMappingsOrBuilder(
        int index);

    /**
     * <code>repeated .perfetto.protos.Frame frames = 2;</code>
     */
    java.util.List<perfetto.protos.ProfileCommon.Frame> 
        getFramesList();
    /**
     * <code>repeated .perfetto.protos.Frame frames = 2;</code>
     */
    perfetto.protos.ProfileCommon.Frame getFrames(int index);
    /**
     * <code>repeated .perfetto.protos.Frame frames = 2;</code>
     */
    int getFramesCount();
    /**
     * <code>repeated .perfetto.protos.Frame frames = 2;</code>
     */
    java.util.List<? extends perfetto.protos.ProfileCommon.FrameOrBuilder> 
        getFramesOrBuilderList();
    /**
     * <code>repeated .perfetto.protos.Frame frames = 2;</code>
     */
    perfetto.protos.ProfileCommon.FrameOrBuilder getFramesOrBuilder(
        int index);

    /**
     * <code>repeated .perfetto.protos.Callstack callstacks = 3;</code>
     */
    java.util.List<perfetto.protos.ProfileCommon.Callstack> 
        getCallstacksList();
    /**
     * <code>repeated .perfetto.protos.Callstack callstacks = 3;</code>
     */
    perfetto.protos.ProfileCommon.Callstack getCallstacks(int index);
    /**
     * <code>repeated .perfetto.protos.Callstack callstacks = 3;</code>
     */
    int getCallstacksCount();
    /**
     * <code>repeated .perfetto.protos.Callstack callstacks = 3;</code>
     */
    java.util.List<? extends perfetto.protos.ProfileCommon.CallstackOrBuilder> 
        getCallstacksOrBuilderList();
    /**
     * <code>repeated .perfetto.protos.Callstack callstacks = 3;</code>
     */
    perfetto.protos.ProfileCommon.CallstackOrBuilder getCallstacksOrBuilder(
        int index);

    /**
     * <code>repeated .perfetto.protos.ProfilePacket.ProcessHeapSamples process_dumps = 5;</code>
     */
    java.util.List<perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples> 
        getProcessDumpsList();
    /**
     * <code>repeated .perfetto.protos.ProfilePacket.ProcessHeapSamples process_dumps = 5;</code>
     */
    perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples getProcessDumps(int index);
    /**
     * <code>repeated .perfetto.protos.ProfilePacket.ProcessHeapSamples process_dumps = 5;</code>
     */
    int getProcessDumpsCount();
    /**
     * <code>repeated .perfetto.protos.ProfilePacket.ProcessHeapSamples process_dumps = 5;</code>
     */
    java.util.List<? extends perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamplesOrBuilder> 
        getProcessDumpsOrBuilderList();
    /**
     * <code>repeated .perfetto.protos.ProfilePacket.ProcessHeapSamples process_dumps = 5;</code>
     */
    perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamplesOrBuilder getProcessDumpsOrBuilder(
        int index);

    /**
     * <pre>
     * If this is true, the next ProfilePacket in this package_sequence_id is a
     * continuation of this one.
     * To get all samples for a process, accummulate its
     * ProcessHeapSamples.samples until you see continued=false.
     * </pre>
     *
     * <code>optional bool continued = 6;</code>
     * @return Whether the continued field is set.
     */
    boolean hasContinued();
    /**
     * <pre>
     * If this is true, the next ProfilePacket in this package_sequence_id is a
     * continuation of this one.
     * To get all samples for a process, accummulate its
     * ProcessHeapSamples.samples until you see continued=false.
     * </pre>
     *
     * <code>optional bool continued = 6;</code>
     * @return The continued.
     */
    boolean getContinued();

    /**
     * <pre>
     * Index of this ProfilePacket on its package_sequence_id. Can be used
     * to detect dropped data.
     * Verify these are consecutive.
     * </pre>
     *
     * <code>optional uint64 index = 7;</code>
     * @return Whether the index field is set.
     */
    boolean hasIndex();
    /**
     * <pre>
     * Index of this ProfilePacket on its package_sequence_id. Can be used
     * to detect dropped data.
     * Verify these are consecutive.
     * </pre>
     *
     * <code>optional uint64 index = 7;</code>
     * @return The index.
     */
    long getIndex();
  }
  /**
   * <pre>
   * The packet emitted by heapprofd for each heap snapshot. A snapshot can
   * involve more than one ProfilePacket if the snapshot is big (when |continued|
   * is true). The cardinality and grouping is as follows:
   * A ProfilePacket contains:
   *  - 1+ per-process heap snapshots (ProcessHeapSamples). Normally there is only
   *    one heap per process (the main malloc/free heap), but there can be more if
   *    the process is using the heapprofd API to profile custom allocators.
   *  - Globally interned strings, mappings and frames (to allow de-duplicating
   *    frames/mapping in common between different processes).
   * A ProcessHeapSamples contains:
   *  - The process and heap identifier.
   *  - A number of HeapSample, one for each callsite that had some alloc/frees.
   *  - Statistics about heapprofd internals (e.g., sampling/unwinding timings).
   * A HeapSample contains statistics about callsites:
   *  - Total number of bytes allocated and freed from that callsite.
   *  - Total number of alloc/free calls sampled.
   *  - Stats at the local maximum when dump_at_max = true.
   * See https://perfetto.dev/docs/data-sources/native-heap-profiler for more.
   * </pre>
   *
   * Protobuf type {@code perfetto.protos.ProfilePacket}
   */
  public static final class ProfilePacket extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:perfetto.protos.ProfilePacket)
      ProfilePacketOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ProfilePacket.newBuilder() to construct.
    private ProfilePacket(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ProfilePacket() {
      strings_ = java.util.Collections.emptyList();
      mappings_ = java.util.Collections.emptyList();
      frames_ = java.util.Collections.emptyList();
      callstacks_ = java.util.Collections.emptyList();
      processDumps_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ProfilePacket();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_ProfilePacket_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_ProfilePacket_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              perfetto.protos.ProfilePacketOuterClass.ProfilePacket.class, perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Builder.class);
    }

    public interface HeapSampleOrBuilder extends
        // @@protoc_insertion_point(interface_extends:perfetto.protos.ProfilePacket.HeapSample)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint64 callstack_id = 1;</code>
       * @return Whether the callstackId field is set.
       */
      boolean hasCallstackId();
      /**
       * <code>optional uint64 callstack_id = 1;</code>
       * @return The callstackId.
       */
      long getCallstackId();

      /**
       * <pre>
       * bytes allocated at this callstack.
       * </pre>
       *
       * <code>optional uint64 self_allocated = 2;</code>
       * @return Whether the selfAllocated field is set.
       */
      boolean hasSelfAllocated();
      /**
       * <pre>
       * bytes allocated at this callstack.
       * </pre>
       *
       * <code>optional uint64 self_allocated = 2;</code>
       * @return The selfAllocated.
       */
      long getSelfAllocated();

      /**
       * <pre>
       * bytes allocated at this callstack that have been freed.
       * </pre>
       *
       * <code>optional uint64 self_freed = 3;</code>
       * @return Whether the selfFreed field is set.
       */
      boolean hasSelfFreed();
      /**
       * <pre>
       * bytes allocated at this callstack that have been freed.
       * </pre>
       *
       * <code>optional uint64 self_freed = 3;</code>
       * @return The selfFreed.
       */
      long getSelfFreed();

      /**
       * <pre>
       * Bytes allocated by this callstack but not freed at the time the malloc
       * heap usage of this process was maximal. This is only set if dump_at_max
       * is true in HeapprofdConfig. In that case, self_allocated, self_freed and
       * self_idle will not be set.
       * </pre>
       *
       * <code>optional uint64 self_max = 8;</code>
       * @return Whether the selfMax field is set.
       */
      boolean hasSelfMax();
      /**
       * <pre>
       * Bytes allocated by this callstack but not freed at the time the malloc
       * heap usage of this process was maximal. This is only set if dump_at_max
       * is true in HeapprofdConfig. In that case, self_allocated, self_freed and
       * self_idle will not be set.
       * </pre>
       *
       * <code>optional uint64 self_max = 8;</code>
       * @return The selfMax.
       */
      long getSelfMax();

      /**
       * <pre>
       * Number of allocations that were sampled at this callstack but not freed
       * at the time the malloc heap usage of this process was maximal. This is
       * only set if dump_at_max is true in HeapprofdConfig. In that case,
       * self_allocated, self_freed and self_idle will not be set.
       * </pre>
       *
       * <code>optional uint64 self_max_count = 9;</code>
       * @return Whether the selfMaxCount field is set.
       */
      boolean hasSelfMaxCount();
      /**
       * <pre>
       * Number of allocations that were sampled at this callstack but not freed
       * at the time the malloc heap usage of this process was maximal. This is
       * only set if dump_at_max is true in HeapprofdConfig. In that case,
       * self_allocated, self_freed and self_idle will not be set.
       * </pre>
       *
       * <code>optional uint64 self_max_count = 9;</code>
       * @return The selfMaxCount.
       */
      long getSelfMaxCount();

      /**
       * <pre>
       * timestamp [opt]
       * </pre>
       *
       * <code>optional uint64 timestamp = 4;</code>
       * @return Whether the timestamp field is set.
       */
      boolean hasTimestamp();
      /**
       * <pre>
       * timestamp [opt]
       * </pre>
       *
       * <code>optional uint64 timestamp = 4;</code>
       * @return The timestamp.
       */
      long getTimestamp();

      /**
       * <pre>
       * Number of allocations that were sampled at this callstack.
       * </pre>
       *
       * <code>optional uint64 alloc_count = 5;</code>
       * @return Whether the allocCount field is set.
       */
      boolean hasAllocCount();
      /**
       * <pre>
       * Number of allocations that were sampled at this callstack.
       * </pre>
       *
       * <code>optional uint64 alloc_count = 5;</code>
       * @return The allocCount.
       */
      long getAllocCount();

      /**
       * <pre>
       * Number of allocations that were sampled at this callstack that have been
       * freed.
       * </pre>
       *
       * <code>optional uint64 free_count = 6;</code>
       * @return Whether the freeCount field is set.
       */
      boolean hasFreeCount();
      /**
       * <pre>
       * Number of allocations that were sampled at this callstack that have been
       * freed.
       * </pre>
       *
       * <code>optional uint64 free_count = 6;</code>
       * @return The freeCount.
       */
      long getFreeCount();
    }
    /**
     * <pre>
     * Next ID: 9
     * </pre>
     *
     * Protobuf type {@code perfetto.protos.ProfilePacket.HeapSample}
     */
    public static final class HeapSample extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:perfetto.protos.ProfilePacket.HeapSample)
        HeapSampleOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use HeapSample.newBuilder() to construct.
      private HeapSample(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private HeapSample() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new HeapSample();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_ProfilePacket_HeapSample_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_ProfilePacket_HeapSample_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample.class, perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample.Builder.class);
      }

      private int bitField0_;
      public static final int CALLSTACK_ID_FIELD_NUMBER = 1;
      private long callstackId_ = 0L;
      /**
       * <code>optional uint64 callstack_id = 1;</code>
       * @return Whether the callstackId field is set.
       */
      @java.lang.Override
      public boolean hasCallstackId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint64 callstack_id = 1;</code>
       * @return The callstackId.
       */
      @java.lang.Override
      public long getCallstackId() {
        return callstackId_;
      }

      public static final int SELF_ALLOCATED_FIELD_NUMBER = 2;
      private long selfAllocated_ = 0L;
      /**
       * <pre>
       * bytes allocated at this callstack.
       * </pre>
       *
       * <code>optional uint64 self_allocated = 2;</code>
       * @return Whether the selfAllocated field is set.
       */
      @java.lang.Override
      public boolean hasSelfAllocated() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * bytes allocated at this callstack.
       * </pre>
       *
       * <code>optional uint64 self_allocated = 2;</code>
       * @return The selfAllocated.
       */
      @java.lang.Override
      public long getSelfAllocated() {
        return selfAllocated_;
      }

      public static final int SELF_FREED_FIELD_NUMBER = 3;
      private long selfFreed_ = 0L;
      /**
       * <pre>
       * bytes allocated at this callstack that have been freed.
       * </pre>
       *
       * <code>optional uint64 self_freed = 3;</code>
       * @return Whether the selfFreed field is set.
       */
      @java.lang.Override
      public boolean hasSelfFreed() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * bytes allocated at this callstack that have been freed.
       * </pre>
       *
       * <code>optional uint64 self_freed = 3;</code>
       * @return The selfFreed.
       */
      @java.lang.Override
      public long getSelfFreed() {
        return selfFreed_;
      }

      public static final int SELF_MAX_FIELD_NUMBER = 8;
      private long selfMax_ = 0L;
      /**
       * <pre>
       * Bytes allocated by this callstack but not freed at the time the malloc
       * heap usage of this process was maximal. This is only set if dump_at_max
       * is true in HeapprofdConfig. In that case, self_allocated, self_freed and
       * self_idle will not be set.
       * </pre>
       *
       * <code>optional uint64 self_max = 8;</code>
       * @return Whether the selfMax field is set.
       */
      @java.lang.Override
      public boolean hasSelfMax() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Bytes allocated by this callstack but not freed at the time the malloc
       * heap usage of this process was maximal. This is only set if dump_at_max
       * is true in HeapprofdConfig. In that case, self_allocated, self_freed and
       * self_idle will not be set.
       * </pre>
       *
       * <code>optional uint64 self_max = 8;</code>
       * @return The selfMax.
       */
      @java.lang.Override
      public long getSelfMax() {
        return selfMax_;
      }

      public static final int SELF_MAX_COUNT_FIELD_NUMBER = 9;
      private long selfMaxCount_ = 0L;
      /**
       * <pre>
       * Number of allocations that were sampled at this callstack but not freed
       * at the time the malloc heap usage of this process was maximal. This is
       * only set if dump_at_max is true in HeapprofdConfig. In that case,
       * self_allocated, self_freed and self_idle will not be set.
       * </pre>
       *
       * <code>optional uint64 self_max_count = 9;</code>
       * @return Whether the selfMaxCount field is set.
       */
      @java.lang.Override
      public boolean hasSelfMaxCount() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * Number of allocations that were sampled at this callstack but not freed
       * at the time the malloc heap usage of this process was maximal. This is
       * only set if dump_at_max is true in HeapprofdConfig. In that case,
       * self_allocated, self_freed and self_idle will not be set.
       * </pre>
       *
       * <code>optional uint64 self_max_count = 9;</code>
       * @return The selfMaxCount.
       */
      @java.lang.Override
      public long getSelfMaxCount() {
        return selfMaxCount_;
      }

      public static final int TIMESTAMP_FIELD_NUMBER = 4;
      private long timestamp_ = 0L;
      /**
       * <pre>
       * timestamp [opt]
       * </pre>
       *
       * <code>optional uint64 timestamp = 4;</code>
       * @return Whether the timestamp field is set.
       */
      @java.lang.Override
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * timestamp [opt]
       * </pre>
       *
       * <code>optional uint64 timestamp = 4;</code>
       * @return The timestamp.
       */
      @java.lang.Override
      public long getTimestamp() {
        return timestamp_;
      }

      public static final int ALLOC_COUNT_FIELD_NUMBER = 5;
      private long allocCount_ = 0L;
      /**
       * <pre>
       * Number of allocations that were sampled at this callstack.
       * </pre>
       *
       * <code>optional uint64 alloc_count = 5;</code>
       * @return Whether the allocCount field is set.
       */
      @java.lang.Override
      public boolean hasAllocCount() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       * Number of allocations that were sampled at this callstack.
       * </pre>
       *
       * <code>optional uint64 alloc_count = 5;</code>
       * @return The allocCount.
       */
      @java.lang.Override
      public long getAllocCount() {
        return allocCount_;
      }

      public static final int FREE_COUNT_FIELD_NUMBER = 6;
      private long freeCount_ = 0L;
      /**
       * <pre>
       * Number of allocations that were sampled at this callstack that have been
       * freed.
       * </pre>
       *
       * <code>optional uint64 free_count = 6;</code>
       * @return Whether the freeCount field is set.
       */
      @java.lang.Override
      public boolean hasFreeCount() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <pre>
       * Number of allocations that were sampled at this callstack that have been
       * freed.
       * </pre>
       *
       * <code>optional uint64 free_count = 6;</code>
       * @return The freeCount.
       */
      @java.lang.Override
      public long getFreeCount() {
        return freeCount_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeUInt64(1, callstackId_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeUInt64(2, selfAllocated_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeUInt64(3, selfFreed_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          output.writeUInt64(4, timestamp_);
        }
        if (((bitField0_ & 0x00000040) != 0)) {
          output.writeUInt64(5, allocCount_);
        }
        if (((bitField0_ & 0x00000080) != 0)) {
          output.writeUInt64(6, freeCount_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          output.writeUInt64(8, selfMax_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          output.writeUInt64(9, selfMaxCount_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(1, callstackId_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(2, selfAllocated_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(3, selfFreed_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(4, timestamp_);
        }
        if (((bitField0_ & 0x00000040) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(5, allocCount_);
        }
        if (((bitField0_ & 0x00000080) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(6, freeCount_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(8, selfMax_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(9, selfMaxCount_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample)) {
          return super.equals(obj);
        }
        perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample other = (perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample) obj;

        if (hasCallstackId() != other.hasCallstackId()) return false;
        if (hasCallstackId()) {
          if (getCallstackId()
              != other.getCallstackId()) return false;
        }
        if (hasSelfAllocated() != other.hasSelfAllocated()) return false;
        if (hasSelfAllocated()) {
          if (getSelfAllocated()
              != other.getSelfAllocated()) return false;
        }
        if (hasSelfFreed() != other.hasSelfFreed()) return false;
        if (hasSelfFreed()) {
          if (getSelfFreed()
              != other.getSelfFreed()) return false;
        }
        if (hasSelfMax() != other.hasSelfMax()) return false;
        if (hasSelfMax()) {
          if (getSelfMax()
              != other.getSelfMax()) return false;
        }
        if (hasSelfMaxCount() != other.hasSelfMaxCount()) return false;
        if (hasSelfMaxCount()) {
          if (getSelfMaxCount()
              != other.getSelfMaxCount()) return false;
        }
        if (hasTimestamp() != other.hasTimestamp()) return false;
        if (hasTimestamp()) {
          if (getTimestamp()
              != other.getTimestamp()) return false;
        }
        if (hasAllocCount() != other.hasAllocCount()) return false;
        if (hasAllocCount()) {
          if (getAllocCount()
              != other.getAllocCount()) return false;
        }
        if (hasFreeCount() != other.hasFreeCount()) return false;
        if (hasFreeCount()) {
          if (getFreeCount()
              != other.getFreeCount()) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasCallstackId()) {
          hash = (37 * hash) + CALLSTACK_ID_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getCallstackId());
        }
        if (hasSelfAllocated()) {
          hash = (37 * hash) + SELF_ALLOCATED_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getSelfAllocated());
        }
        if (hasSelfFreed()) {
          hash = (37 * hash) + SELF_FREED_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getSelfFreed());
        }
        if (hasSelfMax()) {
          hash = (37 * hash) + SELF_MAX_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getSelfMax());
        }
        if (hasSelfMaxCount()) {
          hash = (37 * hash) + SELF_MAX_COUNT_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getSelfMaxCount());
        }
        if (hasTimestamp()) {
          hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getTimestamp());
        }
        if (hasAllocCount()) {
          hash = (37 * hash) + ALLOC_COUNT_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getAllocCount());
        }
        if (hasFreeCount()) {
          hash = (37 * hash) + FREE_COUNT_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getFreeCount());
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Next ID: 9
       * </pre>
       *
       * Protobuf type {@code perfetto.protos.ProfilePacket.HeapSample}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:perfetto.protos.ProfilePacket.HeapSample)
          perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSampleOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_ProfilePacket_HeapSample_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_ProfilePacket_HeapSample_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample.class, perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample.Builder.class);
        }

        // Construct using perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          callstackId_ = 0L;
          selfAllocated_ = 0L;
          selfFreed_ = 0L;
          selfMax_ = 0L;
          selfMaxCount_ = 0L;
          timestamp_ = 0L;
          allocCount_ = 0L;
          freeCount_ = 0L;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_ProfilePacket_HeapSample_descriptor;
        }

        @java.lang.Override
        public perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample getDefaultInstanceForType() {
          return perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample.getDefaultInstance();
        }

        @java.lang.Override
        public perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample build() {
          perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample buildPartial() {
          perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample result = new perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.callstackId_ = callstackId_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.selfAllocated_ = selfAllocated_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.selfFreed_ = selfFreed_;
            to_bitField0_ |= 0x00000004;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.selfMax_ = selfMax_;
            to_bitField0_ |= 0x00000008;
          }
          if (((from_bitField0_ & 0x00000010) != 0)) {
            result.selfMaxCount_ = selfMaxCount_;
            to_bitField0_ |= 0x00000010;
          }
          if (((from_bitField0_ & 0x00000020) != 0)) {
            result.timestamp_ = timestamp_;
            to_bitField0_ |= 0x00000020;
          }
          if (((from_bitField0_ & 0x00000040) != 0)) {
            result.allocCount_ = allocCount_;
            to_bitField0_ |= 0x00000040;
          }
          if (((from_bitField0_ & 0x00000080) != 0)) {
            result.freeCount_ = freeCount_;
            to_bitField0_ |= 0x00000080;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample) {
            return mergeFrom((perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample other) {
          if (other == perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample.getDefaultInstance()) return this;
          if (other.hasCallstackId()) {
            setCallstackId(other.getCallstackId());
          }
          if (other.hasSelfAllocated()) {
            setSelfAllocated(other.getSelfAllocated());
          }
          if (other.hasSelfFreed()) {
            setSelfFreed(other.getSelfFreed());
          }
          if (other.hasSelfMax()) {
            setSelfMax(other.getSelfMax());
          }
          if (other.hasSelfMaxCount()) {
            setSelfMaxCount(other.getSelfMaxCount());
          }
          if (other.hasTimestamp()) {
            setTimestamp(other.getTimestamp());
          }
          if (other.hasAllocCount()) {
            setAllocCount(other.getAllocCount());
          }
          if (other.hasFreeCount()) {
            setFreeCount(other.getFreeCount());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  callstackId_ = input.readUInt64();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 16: {
                  selfAllocated_ = input.readUInt64();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                case 24: {
                  selfFreed_ = input.readUInt64();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 24
                case 32: {
                  timestamp_ = input.readUInt64();
                  bitField0_ |= 0x00000020;
                  break;
                } // case 32
                case 40: {
                  allocCount_ = input.readUInt64();
                  bitField0_ |= 0x00000040;
                  break;
                } // case 40
                case 48: {
                  freeCount_ = input.readUInt64();
                  bitField0_ |= 0x00000080;
                  break;
                } // case 48
                case 64: {
                  selfMax_ = input.readUInt64();
                  bitField0_ |= 0x00000008;
                  break;
                } // case 64
                case 72: {
                  selfMaxCount_ = input.readUInt64();
                  bitField0_ |= 0x00000010;
                  break;
                } // case 72
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private long callstackId_ ;
        /**
         * <code>optional uint64 callstack_id = 1;</code>
         * @return Whether the callstackId field is set.
         */
        @java.lang.Override
        public boolean hasCallstackId() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional uint64 callstack_id = 1;</code>
         * @return The callstackId.
         */
        @java.lang.Override
        public long getCallstackId() {
          return callstackId_;
        }
        /**
         * <code>optional uint64 callstack_id = 1;</code>
         * @param value The callstackId to set.
         * @return This builder for chaining.
         */
        public Builder setCallstackId(long value) {
          
          callstackId_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 callstack_id = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearCallstackId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          callstackId_ = 0L;
          onChanged();
          return this;
        }

        private long selfAllocated_ ;
        /**
         * <pre>
         * bytes allocated at this callstack.
         * </pre>
         *
         * <code>optional uint64 self_allocated = 2;</code>
         * @return Whether the selfAllocated field is set.
         */
        @java.lang.Override
        public boolean hasSelfAllocated() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * bytes allocated at this callstack.
         * </pre>
         *
         * <code>optional uint64 self_allocated = 2;</code>
         * @return The selfAllocated.
         */
        @java.lang.Override
        public long getSelfAllocated() {
          return selfAllocated_;
        }
        /**
         * <pre>
         * bytes allocated at this callstack.
         * </pre>
         *
         * <code>optional uint64 self_allocated = 2;</code>
         * @param value The selfAllocated to set.
         * @return This builder for chaining.
         */
        public Builder setSelfAllocated(long value) {
          
          selfAllocated_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * bytes allocated at this callstack.
         * </pre>
         *
         * <code>optional uint64 self_allocated = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearSelfAllocated() {
          bitField0_ = (bitField0_ & ~0x00000002);
          selfAllocated_ = 0L;
          onChanged();
          return this;
        }

        private long selfFreed_ ;
        /**
         * <pre>
         * bytes allocated at this callstack that have been freed.
         * </pre>
         *
         * <code>optional uint64 self_freed = 3;</code>
         * @return Whether the selfFreed field is set.
         */
        @java.lang.Override
        public boolean hasSelfFreed() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         * bytes allocated at this callstack that have been freed.
         * </pre>
         *
         * <code>optional uint64 self_freed = 3;</code>
         * @return The selfFreed.
         */
        @java.lang.Override
        public long getSelfFreed() {
          return selfFreed_;
        }
        /**
         * <pre>
         * bytes allocated at this callstack that have been freed.
         * </pre>
         *
         * <code>optional uint64 self_freed = 3;</code>
         * @param value The selfFreed to set.
         * @return This builder for chaining.
         */
        public Builder setSelfFreed(long value) {
          
          selfFreed_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * bytes allocated at this callstack that have been freed.
         * </pre>
         *
         * <code>optional uint64 self_freed = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearSelfFreed() {
          bitField0_ = (bitField0_ & ~0x00000004);
          selfFreed_ = 0L;
          onChanged();
          return this;
        }

        private long selfMax_ ;
        /**
         * <pre>
         * Bytes allocated by this callstack but not freed at the time the malloc
         * heap usage of this process was maximal. This is only set if dump_at_max
         * is true in HeapprofdConfig. In that case, self_allocated, self_freed and
         * self_idle will not be set.
         * </pre>
         *
         * <code>optional uint64 self_max = 8;</code>
         * @return Whether the selfMax field is set.
         */
        @java.lang.Override
        public boolean hasSelfMax() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <pre>
         * Bytes allocated by this callstack but not freed at the time the malloc
         * heap usage of this process was maximal. This is only set if dump_at_max
         * is true in HeapprofdConfig. In that case, self_allocated, self_freed and
         * self_idle will not be set.
         * </pre>
         *
         * <code>optional uint64 self_max = 8;</code>
         * @return The selfMax.
         */
        @java.lang.Override
        public long getSelfMax() {
          return selfMax_;
        }
        /**
         * <pre>
         * Bytes allocated by this callstack but not freed at the time the malloc
         * heap usage of this process was maximal. This is only set if dump_at_max
         * is true in HeapprofdConfig. In that case, self_allocated, self_freed and
         * self_idle will not be set.
         * </pre>
         *
         * <code>optional uint64 self_max = 8;</code>
         * @param value The selfMax to set.
         * @return This builder for chaining.
         */
        public Builder setSelfMax(long value) {
          
          selfMax_ = value;
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Bytes allocated by this callstack but not freed at the time the malloc
         * heap usage of this process was maximal. This is only set if dump_at_max
         * is true in HeapprofdConfig. In that case, self_allocated, self_freed and
         * self_idle will not be set.
         * </pre>
         *
         * <code>optional uint64 self_max = 8;</code>
         * @return This builder for chaining.
         */
        public Builder clearSelfMax() {
          bitField0_ = (bitField0_ & ~0x00000008);
          selfMax_ = 0L;
          onChanged();
          return this;
        }

        private long selfMaxCount_ ;
        /**
         * <pre>
         * Number of allocations that were sampled at this callstack but not freed
         * at the time the malloc heap usage of this process was maximal. This is
         * only set if dump_at_max is true in HeapprofdConfig. In that case,
         * self_allocated, self_freed and self_idle will not be set.
         * </pre>
         *
         * <code>optional uint64 self_max_count = 9;</code>
         * @return Whether the selfMaxCount field is set.
         */
        @java.lang.Override
        public boolean hasSelfMaxCount() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <pre>
         * Number of allocations that were sampled at this callstack but not freed
         * at the time the malloc heap usage of this process was maximal. This is
         * only set if dump_at_max is true in HeapprofdConfig. In that case,
         * self_allocated, self_freed and self_idle will not be set.
         * </pre>
         *
         * <code>optional uint64 self_max_count = 9;</code>
         * @return The selfMaxCount.
         */
        @java.lang.Override
        public long getSelfMaxCount() {
          return selfMaxCount_;
        }
        /**
         * <pre>
         * Number of allocations that were sampled at this callstack but not freed
         * at the time the malloc heap usage of this process was maximal. This is
         * only set if dump_at_max is true in HeapprofdConfig. In that case,
         * self_allocated, self_freed and self_idle will not be set.
         * </pre>
         *
         * <code>optional uint64 self_max_count = 9;</code>
         * @param value The selfMaxCount to set.
         * @return This builder for chaining.
         */
        public Builder setSelfMaxCount(long value) {
          
          selfMaxCount_ = value;
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Number of allocations that were sampled at this callstack but not freed
         * at the time the malloc heap usage of this process was maximal. This is
         * only set if dump_at_max is true in HeapprofdConfig. In that case,
         * self_allocated, self_freed and self_idle will not be set.
         * </pre>
         *
         * <code>optional uint64 self_max_count = 9;</code>
         * @return This builder for chaining.
         */
        public Builder clearSelfMaxCount() {
          bitField0_ = (bitField0_ & ~0x00000010);
          selfMaxCount_ = 0L;
          onChanged();
          return this;
        }

        private long timestamp_ ;
        /**
         * <pre>
         * timestamp [opt]
         * </pre>
         *
         * <code>optional uint64 timestamp = 4;</code>
         * @return Whether the timestamp field is set.
         */
        @java.lang.Override
        public boolean hasTimestamp() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        /**
         * <pre>
         * timestamp [opt]
         * </pre>
         *
         * <code>optional uint64 timestamp = 4;</code>
         * @return The timestamp.
         */
        @java.lang.Override
        public long getTimestamp() {
          return timestamp_;
        }
        /**
         * <pre>
         * timestamp [opt]
         * </pre>
         *
         * <code>optional uint64 timestamp = 4;</code>
         * @param value The timestamp to set.
         * @return This builder for chaining.
         */
        public Builder setTimestamp(long value) {
          
          timestamp_ = value;
          bitField0_ |= 0x00000020;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * timestamp [opt]
         * </pre>
         *
         * <code>optional uint64 timestamp = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearTimestamp() {
          bitField0_ = (bitField0_ & ~0x00000020);
          timestamp_ = 0L;
          onChanged();
          return this;
        }

        private long allocCount_ ;
        /**
         * <pre>
         * Number of allocations that were sampled at this callstack.
         * </pre>
         *
         * <code>optional uint64 alloc_count = 5;</code>
         * @return Whether the allocCount field is set.
         */
        @java.lang.Override
        public boolean hasAllocCount() {
          return ((bitField0_ & 0x00000040) != 0);
        }
        /**
         * <pre>
         * Number of allocations that were sampled at this callstack.
         * </pre>
         *
         * <code>optional uint64 alloc_count = 5;</code>
         * @return The allocCount.
         */
        @java.lang.Override
        public long getAllocCount() {
          return allocCount_;
        }
        /**
         * <pre>
         * Number of allocations that were sampled at this callstack.
         * </pre>
         *
         * <code>optional uint64 alloc_count = 5;</code>
         * @param value The allocCount to set.
         * @return This builder for chaining.
         */
        public Builder setAllocCount(long value) {
          
          allocCount_ = value;
          bitField0_ |= 0x00000040;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Number of allocations that were sampled at this callstack.
         * </pre>
         *
         * <code>optional uint64 alloc_count = 5;</code>
         * @return This builder for chaining.
         */
        public Builder clearAllocCount() {
          bitField0_ = (bitField0_ & ~0x00000040);
          allocCount_ = 0L;
          onChanged();
          return this;
        }

        private long freeCount_ ;
        /**
         * <pre>
         * Number of allocations that were sampled at this callstack that have been
         * freed.
         * </pre>
         *
         * <code>optional uint64 free_count = 6;</code>
         * @return Whether the freeCount field is set.
         */
        @java.lang.Override
        public boolean hasFreeCount() {
          return ((bitField0_ & 0x00000080) != 0);
        }
        /**
         * <pre>
         * Number of allocations that were sampled at this callstack that have been
         * freed.
         * </pre>
         *
         * <code>optional uint64 free_count = 6;</code>
         * @return The freeCount.
         */
        @java.lang.Override
        public long getFreeCount() {
          return freeCount_;
        }
        /**
         * <pre>
         * Number of allocations that were sampled at this callstack that have been
         * freed.
         * </pre>
         *
         * <code>optional uint64 free_count = 6;</code>
         * @param value The freeCount to set.
         * @return This builder for chaining.
         */
        public Builder setFreeCount(long value) {
          
          freeCount_ = value;
          bitField0_ |= 0x00000080;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Number of allocations that were sampled at this callstack that have been
         * freed.
         * </pre>
         *
         * <code>optional uint64 free_count = 6;</code>
         * @return This builder for chaining.
         */
        public Builder clearFreeCount() {
          bitField0_ = (bitField0_ & ~0x00000080);
          freeCount_ = 0L;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:perfetto.protos.ProfilePacket.HeapSample)
      }

      // @@protoc_insertion_point(class_scope:perfetto.protos.ProfilePacket.HeapSample)
      private static final perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample();
      }

      public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<HeapSample>
          PARSER = new com.google.protobuf.AbstractParser<HeapSample>() {
        @java.lang.Override
        public HeapSample parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<HeapSample> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<HeapSample> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface HistogramOrBuilder extends
        // @@protoc_insertion_point(interface_extends:perfetto.protos.ProfilePacket.Histogram)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>repeated .perfetto.protos.ProfilePacket.Histogram.Bucket buckets = 1;</code>
       */
      java.util.List<perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket> 
          getBucketsList();
      /**
       * <code>repeated .perfetto.protos.ProfilePacket.Histogram.Bucket buckets = 1;</code>
       */
      perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket getBuckets(int index);
      /**
       * <code>repeated .perfetto.protos.ProfilePacket.Histogram.Bucket buckets = 1;</code>
       */
      int getBucketsCount();
      /**
       * <code>repeated .perfetto.protos.ProfilePacket.Histogram.Bucket buckets = 1;</code>
       */
      java.util.List<? extends perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.BucketOrBuilder> 
          getBucketsOrBuilderList();
      /**
       * <code>repeated .perfetto.protos.ProfilePacket.Histogram.Bucket buckets = 1;</code>
       */
      perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.BucketOrBuilder getBucketsOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code perfetto.protos.ProfilePacket.Histogram}
     */
    public static final class Histogram extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:perfetto.protos.ProfilePacket.Histogram)
        HistogramOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Histogram.newBuilder() to construct.
      private Histogram(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Histogram() {
        buckets_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Histogram();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_ProfilePacket_Histogram_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_ProfilePacket_Histogram_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.class, perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Builder.class);
      }

      public interface BucketOrBuilder extends
          // @@protoc_insertion_point(interface_extends:perfetto.protos.ProfilePacket.Histogram.Bucket)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * This bucket counts values from the previous bucket's (or -infinity if
         * this is the first bucket) upper_limit (inclusive) to this upper_limit
         * (exclusive).
         * </pre>
         *
         * <code>optional uint64 upper_limit = 1;</code>
         * @return Whether the upperLimit field is set.
         */
        boolean hasUpperLimit();
        /**
         * <pre>
         * This bucket counts values from the previous bucket's (or -infinity if
         * this is the first bucket) upper_limit (inclusive) to this upper_limit
         * (exclusive).
         * </pre>
         *
         * <code>optional uint64 upper_limit = 1;</code>
         * @return The upperLimit.
         */
        long getUpperLimit();

        /**
         * <pre>
         * This is the highest bucket. This is set instead of the upper_limit. Any
         * values larger or equal to the previous bucket's upper_limit are counted
         * in this bucket.
         * </pre>
         *
         * <code>optional bool max_bucket = 2;</code>
         * @return Whether the maxBucket field is set.
         */
        boolean hasMaxBucket();
        /**
         * <pre>
         * This is the highest bucket. This is set instead of the upper_limit. Any
         * values larger or equal to the previous bucket's upper_limit are counted
         * in this bucket.
         * </pre>
         *
         * <code>optional bool max_bucket = 2;</code>
         * @return The maxBucket.
         */
        boolean getMaxBucket();

        /**
         * <pre>
         * Number of values that fall into this range.
         * </pre>
         *
         * <code>optional uint64 count = 3;</code>
         * @return Whether the count field is set.
         */
        boolean hasCount();
        /**
         * <pre>
         * Number of values that fall into this range.
         * </pre>
         *
         * <code>optional uint64 count = 3;</code>
         * @return The count.
         */
        long getCount();
      }
      /**
       * Protobuf type {@code perfetto.protos.ProfilePacket.Histogram.Bucket}
       */
      public static final class Bucket extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:perfetto.protos.ProfilePacket.Histogram.Bucket)
          BucketOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use Bucket.newBuilder() to construct.
        private Bucket(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private Bucket() {
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
            UnusedPrivateParameter unused) {
          return new Bucket();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_ProfilePacket_Histogram_Bucket_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_ProfilePacket_Histogram_Bucket_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket.class, perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket.Builder.class);
        }

        private int bitField0_;
        public static final int UPPER_LIMIT_FIELD_NUMBER = 1;
        private long upperLimit_ = 0L;
        /**
         * <pre>
         * This bucket counts values from the previous bucket's (or -infinity if
         * this is the first bucket) upper_limit (inclusive) to this upper_limit
         * (exclusive).
         * </pre>
         *
         * <code>optional uint64 upper_limit = 1;</code>
         * @return Whether the upperLimit field is set.
         */
        @java.lang.Override
        public boolean hasUpperLimit() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * This bucket counts values from the previous bucket's (or -infinity if
         * this is the first bucket) upper_limit (inclusive) to this upper_limit
         * (exclusive).
         * </pre>
         *
         * <code>optional uint64 upper_limit = 1;</code>
         * @return The upperLimit.
         */
        @java.lang.Override
        public long getUpperLimit() {
          return upperLimit_;
        }

        public static final int MAX_BUCKET_FIELD_NUMBER = 2;
        private boolean maxBucket_ = false;
        /**
         * <pre>
         * This is the highest bucket. This is set instead of the upper_limit. Any
         * values larger or equal to the previous bucket's upper_limit are counted
         * in this bucket.
         * </pre>
         *
         * <code>optional bool max_bucket = 2;</code>
         * @return Whether the maxBucket field is set.
         */
        @java.lang.Override
        public boolean hasMaxBucket() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * This is the highest bucket. This is set instead of the upper_limit. Any
         * values larger or equal to the previous bucket's upper_limit are counted
         * in this bucket.
         * </pre>
         *
         * <code>optional bool max_bucket = 2;</code>
         * @return The maxBucket.
         */
        @java.lang.Override
        public boolean getMaxBucket() {
          return maxBucket_;
        }

        public static final int COUNT_FIELD_NUMBER = 3;
        private long count_ = 0L;
        /**
         * <pre>
         * Number of values that fall into this range.
         * </pre>
         *
         * <code>optional uint64 count = 3;</code>
         * @return Whether the count field is set.
         */
        @java.lang.Override
        public boolean hasCount() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         * Number of values that fall into this range.
         * </pre>
         *
         * <code>optional uint64 count = 3;</code>
         * @return The count.
         */
        @java.lang.Override
        public long getCount() {
          return count_;
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (((bitField0_ & 0x00000001) != 0)) {
            output.writeUInt64(1, upperLimit_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            output.writeBool(2, maxBucket_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            output.writeUInt64(3, count_);
          }
          getUnknownFields().writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt64Size(1, upperLimit_);
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBoolSize(2, maxBucket_);
          }
          if (((bitField0_ & 0x00000004) != 0)) {
            size += com.google.protobuf.CodedOutputStream
              .computeUInt64Size(3, count_);
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket)) {
            return super.equals(obj);
          }
          perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket other = (perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket) obj;

          if (hasUpperLimit() != other.hasUpperLimit()) return false;
          if (hasUpperLimit()) {
            if (getUpperLimit()
                != other.getUpperLimit()) return false;
          }
          if (hasMaxBucket() != other.hasMaxBucket()) return false;
          if (hasMaxBucket()) {
            if (getMaxBucket()
                != other.getMaxBucket()) return false;
          }
          if (hasCount() != other.hasCount()) return false;
          if (hasCount()) {
            if (getCount()
                != other.getCount()) return false;
          }
          if (!getUnknownFields().equals(other.getUnknownFields())) return false;
          return true;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasUpperLimit()) {
            hash = (37 * hash) + UPPER_LIMIT_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                getUpperLimit());
          }
          if (hasMaxBucket()) {
            hash = (37 * hash) + MAX_BUCKET_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
                getMaxBucket());
          }
          if (hasCount()) {
            hash = (37 * hash) + COUNT_FIELD_NUMBER;
            hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                getCount());
          }
          hash = (29 * hash) + getUnknownFields().hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code perfetto.protos.ProfilePacket.Histogram.Bucket}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:perfetto.protos.ProfilePacket.Histogram.Bucket)
            perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.BucketOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_ProfilePacket_Histogram_Bucket_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_ProfilePacket_Histogram_Bucket_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket.class, perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket.Builder.class);
          }

          // Construct using perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket.newBuilder()
          private Builder() {

          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);

          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            bitField0_ = 0;
            upperLimit_ = 0L;
            maxBucket_ = false;
            count_ = 0L;
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_ProfilePacket_Histogram_Bucket_descriptor;
          }

          @java.lang.Override
          public perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket getDefaultInstanceForType() {
            return perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket.getDefaultInstance();
          }

          @java.lang.Override
          public perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket build() {
            perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket buildPartial() {
            perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket result = new perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket(this);
            if (bitField0_ != 0) { buildPartial0(result); }
            onBuilt();
            return result;
          }

          private void buildPartial0(perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket result) {
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) != 0)) {
              result.upperLimit_ = upperLimit_;
              to_bitField0_ |= 0x00000001;
            }
            if (((from_bitField0_ & 0x00000002) != 0)) {
              result.maxBucket_ = maxBucket_;
              to_bitField0_ |= 0x00000002;
            }
            if (((from_bitField0_ & 0x00000004) != 0)) {
              result.count_ = count_;
              to_bitField0_ |= 0x00000004;
            }
            result.bitField0_ |= to_bitField0_;
          }

          @java.lang.Override
          public Builder clone() {
            return super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket) {
              return mergeFrom((perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket other) {
            if (other == perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket.getDefaultInstance()) return this;
            if (other.hasUpperLimit()) {
              setUpperLimit(other.getUpperLimit());
            }
            if (other.hasMaxBucket()) {
              setMaxBucket(other.getMaxBucket());
            }
            if (other.hasCount()) {
              setCount(other.getCount());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            if (extensionRegistry == null) {
              throw new java.lang.NullPointerException();
            }
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  case 8: {
                    upperLimit_ = input.readUInt64();
                    bitField0_ |= 0x00000001;
                    break;
                  } // case 8
                  case 16: {
                    maxBucket_ = input.readBool();
                    bitField0_ |= 0x00000002;
                    break;
                  } // case 16
                  case 24: {
                    count_ = input.readUInt64();
                    bitField0_ |= 0x00000004;
                    break;
                  } // case 24
                  default: {
                    if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                      done = true; // was an endgroup tag
                    }
                    break;
                  } // default:
                } // switch (tag)
              } // while (!done)
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.unwrapIOException();
            } finally {
              onChanged();
            } // finally
            return this;
          }
          private int bitField0_;

          private long upperLimit_ ;
          /**
           * <pre>
           * This bucket counts values from the previous bucket's (or -infinity if
           * this is the first bucket) upper_limit (inclusive) to this upper_limit
           * (exclusive).
           * </pre>
           *
           * <code>optional uint64 upper_limit = 1;</code>
           * @return Whether the upperLimit field is set.
           */
          @java.lang.Override
          public boolean hasUpperLimit() {
            return ((bitField0_ & 0x00000001) != 0);
          }
          /**
           * <pre>
           * This bucket counts values from the previous bucket's (or -infinity if
           * this is the first bucket) upper_limit (inclusive) to this upper_limit
           * (exclusive).
           * </pre>
           *
           * <code>optional uint64 upper_limit = 1;</code>
           * @return The upperLimit.
           */
          @java.lang.Override
          public long getUpperLimit() {
            return upperLimit_;
          }
          /**
           * <pre>
           * This bucket counts values from the previous bucket's (or -infinity if
           * this is the first bucket) upper_limit (inclusive) to this upper_limit
           * (exclusive).
           * </pre>
           *
           * <code>optional uint64 upper_limit = 1;</code>
           * @param value The upperLimit to set.
           * @return This builder for chaining.
           */
          public Builder setUpperLimit(long value) {
            
            upperLimit_ = value;
            bitField0_ |= 0x00000001;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * This bucket counts values from the previous bucket's (or -infinity if
           * this is the first bucket) upper_limit (inclusive) to this upper_limit
           * (exclusive).
           * </pre>
           *
           * <code>optional uint64 upper_limit = 1;</code>
           * @return This builder for chaining.
           */
          public Builder clearUpperLimit() {
            bitField0_ = (bitField0_ & ~0x00000001);
            upperLimit_ = 0L;
            onChanged();
            return this;
          }

          private boolean maxBucket_ ;
          /**
           * <pre>
           * This is the highest bucket. This is set instead of the upper_limit. Any
           * values larger or equal to the previous bucket's upper_limit are counted
           * in this bucket.
           * </pre>
           *
           * <code>optional bool max_bucket = 2;</code>
           * @return Whether the maxBucket field is set.
           */
          @java.lang.Override
          public boolean hasMaxBucket() {
            return ((bitField0_ & 0x00000002) != 0);
          }
          /**
           * <pre>
           * This is the highest bucket. This is set instead of the upper_limit. Any
           * values larger or equal to the previous bucket's upper_limit are counted
           * in this bucket.
           * </pre>
           *
           * <code>optional bool max_bucket = 2;</code>
           * @return The maxBucket.
           */
          @java.lang.Override
          public boolean getMaxBucket() {
            return maxBucket_;
          }
          /**
           * <pre>
           * This is the highest bucket. This is set instead of the upper_limit. Any
           * values larger or equal to the previous bucket's upper_limit are counted
           * in this bucket.
           * </pre>
           *
           * <code>optional bool max_bucket = 2;</code>
           * @param value The maxBucket to set.
           * @return This builder for chaining.
           */
          public Builder setMaxBucket(boolean value) {
            
            maxBucket_ = value;
            bitField0_ |= 0x00000002;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * This is the highest bucket. This is set instead of the upper_limit. Any
           * values larger or equal to the previous bucket's upper_limit are counted
           * in this bucket.
           * </pre>
           *
           * <code>optional bool max_bucket = 2;</code>
           * @return This builder for chaining.
           */
          public Builder clearMaxBucket() {
            bitField0_ = (bitField0_ & ~0x00000002);
            maxBucket_ = false;
            onChanged();
            return this;
          }

          private long count_ ;
          /**
           * <pre>
           * Number of values that fall into this range.
           * </pre>
           *
           * <code>optional uint64 count = 3;</code>
           * @return Whether the count field is set.
           */
          @java.lang.Override
          public boolean hasCount() {
            return ((bitField0_ & 0x00000004) != 0);
          }
          /**
           * <pre>
           * Number of values that fall into this range.
           * </pre>
           *
           * <code>optional uint64 count = 3;</code>
           * @return The count.
           */
          @java.lang.Override
          public long getCount() {
            return count_;
          }
          /**
           * <pre>
           * Number of values that fall into this range.
           * </pre>
           *
           * <code>optional uint64 count = 3;</code>
           * @param value The count to set.
           * @return This builder for chaining.
           */
          public Builder setCount(long value) {
            
            count_ = value;
            bitField0_ |= 0x00000004;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * Number of values that fall into this range.
           * </pre>
           *
           * <code>optional uint64 count = 3;</code>
           * @return This builder for chaining.
           */
          public Builder clearCount() {
            bitField0_ = (bitField0_ & ~0x00000004);
            count_ = 0L;
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFields(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:perfetto.protos.ProfilePacket.Histogram.Bucket)
        }

        // @@protoc_insertion_point(class_scope:perfetto.protos.ProfilePacket.Histogram.Bucket)
        private static final perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket();
        }

        public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated public static final com.google.protobuf.Parser<Bucket>
            PARSER = new com.google.protobuf.AbstractParser<Bucket>() {
          @java.lang.Override
          public Bucket parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
              builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
              throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
              throw new com.google.protobuf.InvalidProtocolBufferException(e)
                  .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
          }
        };

        public static com.google.protobuf.Parser<Bucket> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<Bucket> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public static final int BUCKETS_FIELD_NUMBER = 1;
      @SuppressWarnings("serial")
      private java.util.List<perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket> buckets_;
      /**
       * <code>repeated .perfetto.protos.ProfilePacket.Histogram.Bucket buckets = 1;</code>
       */
      @java.lang.Override
      public java.util.List<perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket> getBucketsList() {
        return buckets_;
      }
      /**
       * <code>repeated .perfetto.protos.ProfilePacket.Histogram.Bucket buckets = 1;</code>
       */
      @java.lang.Override
      public java.util.List<? extends perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.BucketOrBuilder> 
          getBucketsOrBuilderList() {
        return buckets_;
      }
      /**
       * <code>repeated .perfetto.protos.ProfilePacket.Histogram.Bucket buckets = 1;</code>
       */
      @java.lang.Override
      public int getBucketsCount() {
        return buckets_.size();
      }
      /**
       * <code>repeated .perfetto.protos.ProfilePacket.Histogram.Bucket buckets = 1;</code>
       */
      @java.lang.Override
      public perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket getBuckets(int index) {
        return buckets_.get(index);
      }
      /**
       * <code>repeated .perfetto.protos.ProfilePacket.Histogram.Bucket buckets = 1;</code>
       */
      @java.lang.Override
      public perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.BucketOrBuilder getBucketsOrBuilder(
          int index) {
        return buckets_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        for (int i = 0; i < buckets_.size(); i++) {
          output.writeMessage(1, buckets_.get(i));
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        for (int i = 0; i < buckets_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, buckets_.get(i));
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram)) {
          return super.equals(obj);
        }
        perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram other = (perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram) obj;

        if (!getBucketsList()
            .equals(other.getBucketsList())) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (getBucketsCount() > 0) {
          hash = (37 * hash) + BUCKETS_FIELD_NUMBER;
          hash = (53 * hash) + getBucketsList().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code perfetto.protos.ProfilePacket.Histogram}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:perfetto.protos.ProfilePacket.Histogram)
          perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HistogramOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_ProfilePacket_Histogram_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_ProfilePacket_Histogram_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.class, perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Builder.class);
        }

        // Construct using perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          if (bucketsBuilder_ == null) {
            buckets_ = java.util.Collections.emptyList();
          } else {
            buckets_ = null;
            bucketsBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000001);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_ProfilePacket_Histogram_descriptor;
        }

        @java.lang.Override
        public perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram getDefaultInstanceForType() {
          return perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.getDefaultInstance();
        }

        @java.lang.Override
        public perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram build() {
          perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram buildPartial() {
          perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram result = new perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram(this);
          buildPartialRepeatedFields(result);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartialRepeatedFields(perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram result) {
          if (bucketsBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0)) {
              buckets_ = java.util.Collections.unmodifiableList(buckets_);
              bitField0_ = (bitField0_ & ~0x00000001);
            }
            result.buckets_ = buckets_;
          } else {
            result.buckets_ = bucketsBuilder_.build();
          }
        }

        private void buildPartial0(perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram result) {
          int from_bitField0_ = bitField0_;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram) {
            return mergeFrom((perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram other) {
          if (other == perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.getDefaultInstance()) return this;
          if (bucketsBuilder_ == null) {
            if (!other.buckets_.isEmpty()) {
              if (buckets_.isEmpty()) {
                buckets_ = other.buckets_;
                bitField0_ = (bitField0_ & ~0x00000001);
              } else {
                ensureBucketsIsMutable();
                buckets_.addAll(other.buckets_);
              }
              onChanged();
            }
          } else {
            if (!other.buckets_.isEmpty()) {
              if (bucketsBuilder_.isEmpty()) {
                bucketsBuilder_.dispose();
                bucketsBuilder_ = null;
                buckets_ = other.buckets_;
                bitField0_ = (bitField0_ & ~0x00000001);
                bucketsBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getBucketsFieldBuilder() : null;
              } else {
                bucketsBuilder_.addAllMessages(other.buckets_);
              }
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket m =
                      input.readMessage(
                          perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket.PARSER,
                          extensionRegistry);
                  if (bucketsBuilder_ == null) {
                    ensureBucketsIsMutable();
                    buckets_.add(m);
                  } else {
                    bucketsBuilder_.addMessage(m);
                  }
                  break;
                } // case 10
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private java.util.List<perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket> buckets_ =
          java.util.Collections.emptyList();
        private void ensureBucketsIsMutable() {
          if (!((bitField0_ & 0x00000001) != 0)) {
            buckets_ = new java.util.ArrayList<perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket>(buckets_);
            bitField0_ |= 0x00000001;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket, perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket.Builder, perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.BucketOrBuilder> bucketsBuilder_;

        /**
         * <code>repeated .perfetto.protos.ProfilePacket.Histogram.Bucket buckets = 1;</code>
         */
        public java.util.List<perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket> getBucketsList() {
          if (bucketsBuilder_ == null) {
            return java.util.Collections.unmodifiableList(buckets_);
          } else {
            return bucketsBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .perfetto.protos.ProfilePacket.Histogram.Bucket buckets = 1;</code>
         */
        public int getBucketsCount() {
          if (bucketsBuilder_ == null) {
            return buckets_.size();
          } else {
            return bucketsBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .perfetto.protos.ProfilePacket.Histogram.Bucket buckets = 1;</code>
         */
        public perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket getBuckets(int index) {
          if (bucketsBuilder_ == null) {
            return buckets_.get(index);
          } else {
            return bucketsBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .perfetto.protos.ProfilePacket.Histogram.Bucket buckets = 1;</code>
         */
        public Builder setBuckets(
            int index, perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket value) {
          if (bucketsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureBucketsIsMutable();
            buckets_.set(index, value);
            onChanged();
          } else {
            bucketsBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .perfetto.protos.ProfilePacket.Histogram.Bucket buckets = 1;</code>
         */
        public Builder setBuckets(
            int index, perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket.Builder builderForValue) {
          if (bucketsBuilder_ == null) {
            ensureBucketsIsMutable();
            buckets_.set(index, builderForValue.build());
            onChanged();
          } else {
            bucketsBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .perfetto.protos.ProfilePacket.Histogram.Bucket buckets = 1;</code>
         */
        public Builder addBuckets(perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket value) {
          if (bucketsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureBucketsIsMutable();
            buckets_.add(value);
            onChanged();
          } else {
            bucketsBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .perfetto.protos.ProfilePacket.Histogram.Bucket buckets = 1;</code>
         */
        public Builder addBuckets(
            int index, perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket value) {
          if (bucketsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureBucketsIsMutable();
            buckets_.add(index, value);
            onChanged();
          } else {
            bucketsBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .perfetto.protos.ProfilePacket.Histogram.Bucket buckets = 1;</code>
         */
        public Builder addBuckets(
            perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket.Builder builderForValue) {
          if (bucketsBuilder_ == null) {
            ensureBucketsIsMutable();
            buckets_.add(builderForValue.build());
            onChanged();
          } else {
            bucketsBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .perfetto.protos.ProfilePacket.Histogram.Bucket buckets = 1;</code>
         */
        public Builder addBuckets(
            int index, perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket.Builder builderForValue) {
          if (bucketsBuilder_ == null) {
            ensureBucketsIsMutable();
            buckets_.add(index, builderForValue.build());
            onChanged();
          } else {
            bucketsBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .perfetto.protos.ProfilePacket.Histogram.Bucket buckets = 1;</code>
         */
        public Builder addAllBuckets(
            java.lang.Iterable<? extends perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket> values) {
          if (bucketsBuilder_ == null) {
            ensureBucketsIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, buckets_);
            onChanged();
          } else {
            bucketsBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .perfetto.protos.ProfilePacket.Histogram.Bucket buckets = 1;</code>
         */
        public Builder clearBuckets() {
          if (bucketsBuilder_ == null) {
            buckets_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000001);
            onChanged();
          } else {
            bucketsBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .perfetto.protos.ProfilePacket.Histogram.Bucket buckets = 1;</code>
         */
        public Builder removeBuckets(int index) {
          if (bucketsBuilder_ == null) {
            ensureBucketsIsMutable();
            buckets_.remove(index);
            onChanged();
          } else {
            bucketsBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .perfetto.protos.ProfilePacket.Histogram.Bucket buckets = 1;</code>
         */
        public perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket.Builder getBucketsBuilder(
            int index) {
          return getBucketsFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .perfetto.protos.ProfilePacket.Histogram.Bucket buckets = 1;</code>
         */
        public perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.BucketOrBuilder getBucketsOrBuilder(
            int index) {
          if (bucketsBuilder_ == null) {
            return buckets_.get(index);  } else {
            return bucketsBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .perfetto.protos.ProfilePacket.Histogram.Bucket buckets = 1;</code>
         */
        public java.util.List<? extends perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.BucketOrBuilder> 
             getBucketsOrBuilderList() {
          if (bucketsBuilder_ != null) {
            return bucketsBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(buckets_);
          }
        }
        /**
         * <code>repeated .perfetto.protos.ProfilePacket.Histogram.Bucket buckets = 1;</code>
         */
        public perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket.Builder addBucketsBuilder() {
          return getBucketsFieldBuilder().addBuilder(
              perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket.getDefaultInstance());
        }
        /**
         * <code>repeated .perfetto.protos.ProfilePacket.Histogram.Bucket buckets = 1;</code>
         */
        public perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket.Builder addBucketsBuilder(
            int index) {
          return getBucketsFieldBuilder().addBuilder(
              index, perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket.getDefaultInstance());
        }
        /**
         * <code>repeated .perfetto.protos.ProfilePacket.Histogram.Bucket buckets = 1;</code>
         */
        public java.util.List<perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket.Builder> 
             getBucketsBuilderList() {
          return getBucketsFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket, perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket.Builder, perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.BucketOrBuilder> 
            getBucketsFieldBuilder() {
          if (bucketsBuilder_ == null) {
            bucketsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket, perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Bucket.Builder, perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.BucketOrBuilder>(
                    buckets_,
                    ((bitField0_ & 0x00000001) != 0),
                    getParentForChildren(),
                    isClean());
            buckets_ = null;
          }
          return bucketsBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:perfetto.protos.ProfilePacket.Histogram)
      }

      // @@protoc_insertion_point(class_scope:perfetto.protos.ProfilePacket.Histogram)
      private static final perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram();
      }

      public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<Histogram>
          PARSER = new com.google.protobuf.AbstractParser<Histogram>() {
        @java.lang.Override
        public Histogram parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<Histogram> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Histogram> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface ProcessStatsOrBuilder extends
        // @@protoc_insertion_point(interface_extends:perfetto.protos.ProfilePacket.ProcessStats)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint64 unwinding_errors = 1;</code>
       * @return Whether the unwindingErrors field is set.
       */
      boolean hasUnwindingErrors();
      /**
       * <code>optional uint64 unwinding_errors = 1;</code>
       * @return The unwindingErrors.
       */
      long getUnwindingErrors();

      /**
       * <code>optional uint64 heap_samples = 2;</code>
       * @return Whether the heapSamples field is set.
       */
      boolean hasHeapSamples();
      /**
       * <code>optional uint64 heap_samples = 2;</code>
       * @return The heapSamples.
       */
      long getHeapSamples();

      /**
       * <code>optional uint64 map_reparses = 3;</code>
       * @return Whether the mapReparses field is set.
       */
      boolean hasMapReparses();
      /**
       * <code>optional uint64 map_reparses = 3;</code>
       * @return The mapReparses.
       */
      long getMapReparses();

      /**
       * <code>optional .perfetto.protos.ProfilePacket.Histogram unwinding_time_us = 4;</code>
       * @return Whether the unwindingTimeUs field is set.
       */
      boolean hasUnwindingTimeUs();
      /**
       * <code>optional .perfetto.protos.ProfilePacket.Histogram unwinding_time_us = 4;</code>
       * @return The unwindingTimeUs.
       */
      perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram getUnwindingTimeUs();
      /**
       * <code>optional .perfetto.protos.ProfilePacket.Histogram unwinding_time_us = 4;</code>
       */
      perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HistogramOrBuilder getUnwindingTimeUsOrBuilder();

      /**
       * <code>optional uint64 total_unwinding_time_us = 5;</code>
       * @return Whether the totalUnwindingTimeUs field is set.
       */
      boolean hasTotalUnwindingTimeUs();
      /**
       * <code>optional uint64 total_unwinding_time_us = 5;</code>
       * @return The totalUnwindingTimeUs.
       */
      long getTotalUnwindingTimeUs();

      /**
       * <code>optional uint64 client_spinlock_blocked_us = 6;</code>
       * @return Whether the clientSpinlockBlockedUs field is set.
       */
      boolean hasClientSpinlockBlockedUs();
      /**
       * <code>optional uint64 client_spinlock_blocked_us = 6;</code>
       * @return The clientSpinlockBlockedUs.
       */
      long getClientSpinlockBlockedUs();
    }
    /**
     * Protobuf type {@code perfetto.protos.ProfilePacket.ProcessStats}
     */
    public static final class ProcessStats extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:perfetto.protos.ProfilePacket.ProcessStats)
        ProcessStatsOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use ProcessStats.newBuilder() to construct.
      private ProcessStats(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private ProcessStats() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new ProcessStats();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_ProfilePacket_ProcessStats_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_ProfilePacket_ProcessStats_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStats.class, perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStats.Builder.class);
      }

      private int bitField0_;
      public static final int UNWINDING_ERRORS_FIELD_NUMBER = 1;
      private long unwindingErrors_ = 0L;
      /**
       * <code>optional uint64 unwinding_errors = 1;</code>
       * @return Whether the unwindingErrors field is set.
       */
      @java.lang.Override
      public boolean hasUnwindingErrors() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint64 unwinding_errors = 1;</code>
       * @return The unwindingErrors.
       */
      @java.lang.Override
      public long getUnwindingErrors() {
        return unwindingErrors_;
      }

      public static final int HEAP_SAMPLES_FIELD_NUMBER = 2;
      private long heapSamples_ = 0L;
      /**
       * <code>optional uint64 heap_samples = 2;</code>
       * @return Whether the heapSamples field is set.
       */
      @java.lang.Override
      public boolean hasHeapSamples() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint64 heap_samples = 2;</code>
       * @return The heapSamples.
       */
      @java.lang.Override
      public long getHeapSamples() {
        return heapSamples_;
      }

      public static final int MAP_REPARSES_FIELD_NUMBER = 3;
      private long mapReparses_ = 0L;
      /**
       * <code>optional uint64 map_reparses = 3;</code>
       * @return Whether the mapReparses field is set.
       */
      @java.lang.Override
      public boolean hasMapReparses() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional uint64 map_reparses = 3;</code>
       * @return The mapReparses.
       */
      @java.lang.Override
      public long getMapReparses() {
        return mapReparses_;
      }

      public static final int UNWINDING_TIME_US_FIELD_NUMBER = 4;
      private perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram unwindingTimeUs_;
      /**
       * <code>optional .perfetto.protos.ProfilePacket.Histogram unwinding_time_us = 4;</code>
       * @return Whether the unwindingTimeUs field is set.
       */
      @java.lang.Override
      public boolean hasUnwindingTimeUs() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional .perfetto.protos.ProfilePacket.Histogram unwinding_time_us = 4;</code>
       * @return The unwindingTimeUs.
       */
      @java.lang.Override
      public perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram getUnwindingTimeUs() {
        return unwindingTimeUs_ == null ? perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.getDefaultInstance() : unwindingTimeUs_;
      }
      /**
       * <code>optional .perfetto.protos.ProfilePacket.Histogram unwinding_time_us = 4;</code>
       */
      @java.lang.Override
      public perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HistogramOrBuilder getUnwindingTimeUsOrBuilder() {
        return unwindingTimeUs_ == null ? perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.getDefaultInstance() : unwindingTimeUs_;
      }

      public static final int TOTAL_UNWINDING_TIME_US_FIELD_NUMBER = 5;
      private long totalUnwindingTimeUs_ = 0L;
      /**
       * <code>optional uint64 total_unwinding_time_us = 5;</code>
       * @return Whether the totalUnwindingTimeUs field is set.
       */
      @java.lang.Override
      public boolean hasTotalUnwindingTimeUs() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional uint64 total_unwinding_time_us = 5;</code>
       * @return The totalUnwindingTimeUs.
       */
      @java.lang.Override
      public long getTotalUnwindingTimeUs() {
        return totalUnwindingTimeUs_;
      }

      public static final int CLIENT_SPINLOCK_BLOCKED_US_FIELD_NUMBER = 6;
      private long clientSpinlockBlockedUs_ = 0L;
      /**
       * <code>optional uint64 client_spinlock_blocked_us = 6;</code>
       * @return Whether the clientSpinlockBlockedUs field is set.
       */
      @java.lang.Override
      public boolean hasClientSpinlockBlockedUs() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional uint64 client_spinlock_blocked_us = 6;</code>
       * @return The clientSpinlockBlockedUs.
       */
      @java.lang.Override
      public long getClientSpinlockBlockedUs() {
        return clientSpinlockBlockedUs_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeUInt64(1, unwindingErrors_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeUInt64(2, heapSamples_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeUInt64(3, mapReparses_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          output.writeMessage(4, getUnwindingTimeUs());
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          output.writeUInt64(5, totalUnwindingTimeUs_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          output.writeUInt64(6, clientSpinlockBlockedUs_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(1, unwindingErrors_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(2, heapSamples_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(3, mapReparses_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, getUnwindingTimeUs());
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(5, totalUnwindingTimeUs_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(6, clientSpinlockBlockedUs_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStats)) {
          return super.equals(obj);
        }
        perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStats other = (perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStats) obj;

        if (hasUnwindingErrors() != other.hasUnwindingErrors()) return false;
        if (hasUnwindingErrors()) {
          if (getUnwindingErrors()
              != other.getUnwindingErrors()) return false;
        }
        if (hasHeapSamples() != other.hasHeapSamples()) return false;
        if (hasHeapSamples()) {
          if (getHeapSamples()
              != other.getHeapSamples()) return false;
        }
        if (hasMapReparses() != other.hasMapReparses()) return false;
        if (hasMapReparses()) {
          if (getMapReparses()
              != other.getMapReparses()) return false;
        }
        if (hasUnwindingTimeUs() != other.hasUnwindingTimeUs()) return false;
        if (hasUnwindingTimeUs()) {
          if (!getUnwindingTimeUs()
              .equals(other.getUnwindingTimeUs())) return false;
        }
        if (hasTotalUnwindingTimeUs() != other.hasTotalUnwindingTimeUs()) return false;
        if (hasTotalUnwindingTimeUs()) {
          if (getTotalUnwindingTimeUs()
              != other.getTotalUnwindingTimeUs()) return false;
        }
        if (hasClientSpinlockBlockedUs() != other.hasClientSpinlockBlockedUs()) return false;
        if (hasClientSpinlockBlockedUs()) {
          if (getClientSpinlockBlockedUs()
              != other.getClientSpinlockBlockedUs()) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasUnwindingErrors()) {
          hash = (37 * hash) + UNWINDING_ERRORS_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getUnwindingErrors());
        }
        if (hasHeapSamples()) {
          hash = (37 * hash) + HEAP_SAMPLES_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getHeapSamples());
        }
        if (hasMapReparses()) {
          hash = (37 * hash) + MAP_REPARSES_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getMapReparses());
        }
        if (hasUnwindingTimeUs()) {
          hash = (37 * hash) + UNWINDING_TIME_US_FIELD_NUMBER;
          hash = (53 * hash) + getUnwindingTimeUs().hashCode();
        }
        if (hasTotalUnwindingTimeUs()) {
          hash = (37 * hash) + TOTAL_UNWINDING_TIME_US_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getTotalUnwindingTimeUs());
        }
        if (hasClientSpinlockBlockedUs()) {
          hash = (37 * hash) + CLIENT_SPINLOCK_BLOCKED_US_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getClientSpinlockBlockedUs());
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStats parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStats parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStats parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStats parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStats parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStats parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStats parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStats parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStats parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStats parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStats parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStats parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStats prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code perfetto.protos.ProfilePacket.ProcessStats}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:perfetto.protos.ProfilePacket.ProcessStats)
          perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStatsOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_ProfilePacket_ProcessStats_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_ProfilePacket_ProcessStats_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStats.class, perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStats.Builder.class);
        }

        // Construct using perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStats.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getUnwindingTimeUsFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          unwindingErrors_ = 0L;
          heapSamples_ = 0L;
          mapReparses_ = 0L;
          unwindingTimeUs_ = null;
          if (unwindingTimeUsBuilder_ != null) {
            unwindingTimeUsBuilder_.dispose();
            unwindingTimeUsBuilder_ = null;
          }
          totalUnwindingTimeUs_ = 0L;
          clientSpinlockBlockedUs_ = 0L;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_ProfilePacket_ProcessStats_descriptor;
        }

        @java.lang.Override
        public perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStats getDefaultInstanceForType() {
          return perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStats.getDefaultInstance();
        }

        @java.lang.Override
        public perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStats build() {
          perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStats result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStats buildPartial() {
          perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStats result = new perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStats(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStats result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.unwindingErrors_ = unwindingErrors_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.heapSamples_ = heapSamples_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.mapReparses_ = mapReparses_;
            to_bitField0_ |= 0x00000004;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.unwindingTimeUs_ = unwindingTimeUsBuilder_ == null
                ? unwindingTimeUs_
                : unwindingTimeUsBuilder_.build();
            to_bitField0_ |= 0x00000008;
          }
          if (((from_bitField0_ & 0x00000010) != 0)) {
            result.totalUnwindingTimeUs_ = totalUnwindingTimeUs_;
            to_bitField0_ |= 0x00000010;
          }
          if (((from_bitField0_ & 0x00000020) != 0)) {
            result.clientSpinlockBlockedUs_ = clientSpinlockBlockedUs_;
            to_bitField0_ |= 0x00000020;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStats) {
            return mergeFrom((perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStats)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStats other) {
          if (other == perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStats.getDefaultInstance()) return this;
          if (other.hasUnwindingErrors()) {
            setUnwindingErrors(other.getUnwindingErrors());
          }
          if (other.hasHeapSamples()) {
            setHeapSamples(other.getHeapSamples());
          }
          if (other.hasMapReparses()) {
            setMapReparses(other.getMapReparses());
          }
          if (other.hasUnwindingTimeUs()) {
            mergeUnwindingTimeUs(other.getUnwindingTimeUs());
          }
          if (other.hasTotalUnwindingTimeUs()) {
            setTotalUnwindingTimeUs(other.getTotalUnwindingTimeUs());
          }
          if (other.hasClientSpinlockBlockedUs()) {
            setClientSpinlockBlockedUs(other.getClientSpinlockBlockedUs());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  unwindingErrors_ = input.readUInt64();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 16: {
                  heapSamples_ = input.readUInt64();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                case 24: {
                  mapReparses_ = input.readUInt64();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 24
                case 34: {
                  input.readMessage(
                      getUnwindingTimeUsFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000008;
                  break;
                } // case 34
                case 40: {
                  totalUnwindingTimeUs_ = input.readUInt64();
                  bitField0_ |= 0x00000010;
                  break;
                } // case 40
                case 48: {
                  clientSpinlockBlockedUs_ = input.readUInt64();
                  bitField0_ |= 0x00000020;
                  break;
                } // case 48
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private long unwindingErrors_ ;
        /**
         * <code>optional uint64 unwinding_errors = 1;</code>
         * @return Whether the unwindingErrors field is set.
         */
        @java.lang.Override
        public boolean hasUnwindingErrors() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional uint64 unwinding_errors = 1;</code>
         * @return The unwindingErrors.
         */
        @java.lang.Override
        public long getUnwindingErrors() {
          return unwindingErrors_;
        }
        /**
         * <code>optional uint64 unwinding_errors = 1;</code>
         * @param value The unwindingErrors to set.
         * @return This builder for chaining.
         */
        public Builder setUnwindingErrors(long value) {
          
          unwindingErrors_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 unwinding_errors = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearUnwindingErrors() {
          bitField0_ = (bitField0_ & ~0x00000001);
          unwindingErrors_ = 0L;
          onChanged();
          return this;
        }

        private long heapSamples_ ;
        /**
         * <code>optional uint64 heap_samples = 2;</code>
         * @return Whether the heapSamples field is set.
         */
        @java.lang.Override
        public boolean hasHeapSamples() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional uint64 heap_samples = 2;</code>
         * @return The heapSamples.
         */
        @java.lang.Override
        public long getHeapSamples() {
          return heapSamples_;
        }
        /**
         * <code>optional uint64 heap_samples = 2;</code>
         * @param value The heapSamples to set.
         * @return This builder for chaining.
         */
        public Builder setHeapSamples(long value) {
          
          heapSamples_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 heap_samples = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearHeapSamples() {
          bitField0_ = (bitField0_ & ~0x00000002);
          heapSamples_ = 0L;
          onChanged();
          return this;
        }

        private long mapReparses_ ;
        /**
         * <code>optional uint64 map_reparses = 3;</code>
         * @return Whether the mapReparses field is set.
         */
        @java.lang.Override
        public boolean hasMapReparses() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <code>optional uint64 map_reparses = 3;</code>
         * @return The mapReparses.
         */
        @java.lang.Override
        public long getMapReparses() {
          return mapReparses_;
        }
        /**
         * <code>optional uint64 map_reparses = 3;</code>
         * @param value The mapReparses to set.
         * @return This builder for chaining.
         */
        public Builder setMapReparses(long value) {
          
          mapReparses_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 map_reparses = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearMapReparses() {
          bitField0_ = (bitField0_ & ~0x00000004);
          mapReparses_ = 0L;
          onChanged();
          return this;
        }

        private perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram unwindingTimeUs_;
        private com.google.protobuf.SingleFieldBuilderV3<
            perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram, perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Builder, perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HistogramOrBuilder> unwindingTimeUsBuilder_;
        /**
         * <code>optional .perfetto.protos.ProfilePacket.Histogram unwinding_time_us = 4;</code>
         * @return Whether the unwindingTimeUs field is set.
         */
        public boolean hasUnwindingTimeUs() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <code>optional .perfetto.protos.ProfilePacket.Histogram unwinding_time_us = 4;</code>
         * @return The unwindingTimeUs.
         */
        public perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram getUnwindingTimeUs() {
          if (unwindingTimeUsBuilder_ == null) {
            return unwindingTimeUs_ == null ? perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.getDefaultInstance() : unwindingTimeUs_;
          } else {
            return unwindingTimeUsBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .perfetto.protos.ProfilePacket.Histogram unwinding_time_us = 4;</code>
         */
        public Builder setUnwindingTimeUs(perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram value) {
          if (unwindingTimeUsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            unwindingTimeUs_ = value;
          } else {
            unwindingTimeUsBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <code>optional .perfetto.protos.ProfilePacket.Histogram unwinding_time_us = 4;</code>
         */
        public Builder setUnwindingTimeUs(
            perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Builder builderForValue) {
          if (unwindingTimeUsBuilder_ == null) {
            unwindingTimeUs_ = builderForValue.build();
          } else {
            unwindingTimeUsBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <code>optional .perfetto.protos.ProfilePacket.Histogram unwinding_time_us = 4;</code>
         */
        public Builder mergeUnwindingTimeUs(perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram value) {
          if (unwindingTimeUsBuilder_ == null) {
            if (((bitField0_ & 0x00000008) != 0) &&
              unwindingTimeUs_ != null &&
              unwindingTimeUs_ != perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.getDefaultInstance()) {
              getUnwindingTimeUsBuilder().mergeFrom(value);
            } else {
              unwindingTimeUs_ = value;
            }
          } else {
            unwindingTimeUsBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <code>optional .perfetto.protos.ProfilePacket.Histogram unwinding_time_us = 4;</code>
         */
        public Builder clearUnwindingTimeUs() {
          bitField0_ = (bitField0_ & ~0x00000008);
          unwindingTimeUs_ = null;
          if (unwindingTimeUsBuilder_ != null) {
            unwindingTimeUsBuilder_.dispose();
            unwindingTimeUsBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <code>optional .perfetto.protos.ProfilePacket.Histogram unwinding_time_us = 4;</code>
         */
        public perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Builder getUnwindingTimeUsBuilder() {
          bitField0_ |= 0x00000008;
          onChanged();
          return getUnwindingTimeUsFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .perfetto.protos.ProfilePacket.Histogram unwinding_time_us = 4;</code>
         */
        public perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HistogramOrBuilder getUnwindingTimeUsOrBuilder() {
          if (unwindingTimeUsBuilder_ != null) {
            return unwindingTimeUsBuilder_.getMessageOrBuilder();
          } else {
            return unwindingTimeUs_ == null ?
                perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.getDefaultInstance() : unwindingTimeUs_;
          }
        }
        /**
         * <code>optional .perfetto.protos.ProfilePacket.Histogram unwinding_time_us = 4;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram, perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Builder, perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HistogramOrBuilder> 
            getUnwindingTimeUsFieldBuilder() {
          if (unwindingTimeUsBuilder_ == null) {
            unwindingTimeUsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram, perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Histogram.Builder, perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HistogramOrBuilder>(
                    getUnwindingTimeUs(),
                    getParentForChildren(),
                    isClean());
            unwindingTimeUs_ = null;
          }
          return unwindingTimeUsBuilder_;
        }

        private long totalUnwindingTimeUs_ ;
        /**
         * <code>optional uint64 total_unwinding_time_us = 5;</code>
         * @return Whether the totalUnwindingTimeUs field is set.
         */
        @java.lang.Override
        public boolean hasTotalUnwindingTimeUs() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <code>optional uint64 total_unwinding_time_us = 5;</code>
         * @return The totalUnwindingTimeUs.
         */
        @java.lang.Override
        public long getTotalUnwindingTimeUs() {
          return totalUnwindingTimeUs_;
        }
        /**
         * <code>optional uint64 total_unwinding_time_us = 5;</code>
         * @param value The totalUnwindingTimeUs to set.
         * @return This builder for chaining.
         */
        public Builder setTotalUnwindingTimeUs(long value) {
          
          totalUnwindingTimeUs_ = value;
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 total_unwinding_time_us = 5;</code>
         * @return This builder for chaining.
         */
        public Builder clearTotalUnwindingTimeUs() {
          bitField0_ = (bitField0_ & ~0x00000010);
          totalUnwindingTimeUs_ = 0L;
          onChanged();
          return this;
        }

        private long clientSpinlockBlockedUs_ ;
        /**
         * <code>optional uint64 client_spinlock_blocked_us = 6;</code>
         * @return Whether the clientSpinlockBlockedUs field is set.
         */
        @java.lang.Override
        public boolean hasClientSpinlockBlockedUs() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        /**
         * <code>optional uint64 client_spinlock_blocked_us = 6;</code>
         * @return The clientSpinlockBlockedUs.
         */
        @java.lang.Override
        public long getClientSpinlockBlockedUs() {
          return clientSpinlockBlockedUs_;
        }
        /**
         * <code>optional uint64 client_spinlock_blocked_us = 6;</code>
         * @param value The clientSpinlockBlockedUs to set.
         * @return This builder for chaining.
         */
        public Builder setClientSpinlockBlockedUs(long value) {
          
          clientSpinlockBlockedUs_ = value;
          bitField0_ |= 0x00000020;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 client_spinlock_blocked_us = 6;</code>
         * @return This builder for chaining.
         */
        public Builder clearClientSpinlockBlockedUs() {
          bitField0_ = (bitField0_ & ~0x00000020);
          clientSpinlockBlockedUs_ = 0L;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:perfetto.protos.ProfilePacket.ProcessStats)
      }

      // @@protoc_insertion_point(class_scope:perfetto.protos.ProfilePacket.ProcessStats)
      private static final perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStats DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStats();
      }

      public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStats getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<ProcessStats>
          PARSER = new com.google.protobuf.AbstractParser<ProcessStats>() {
        @java.lang.Override
        public ProcessStats parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<ProcessStats> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<ProcessStats> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStats getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface ProcessHeapSamplesOrBuilder extends
        // @@protoc_insertion_point(interface_extends:perfetto.protos.ProfilePacket.ProcessHeapSamples)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional uint64 pid = 1;</code>
       * @return Whether the pid field is set.
       */
      boolean hasPid();
      /**
       * <code>optional uint64 pid = 1;</code>
       * @return The pid.
       */
      long getPid();

      /**
       * <pre>
       * This process was profiled from startup.
       * If false, this process was already running when profiling started.
       * </pre>
       *
       * <code>optional bool from_startup = 3;</code>
       * @return Whether the fromStartup field is set.
       */
      boolean hasFromStartup();
      /**
       * <pre>
       * This process was profiled from startup.
       * If false, this process was already running when profiling started.
       * </pre>
       *
       * <code>optional bool from_startup = 3;</code>
       * @return The fromStartup.
       */
      boolean getFromStartup();

      /**
       * <pre>
       * This process was not profiled because a concurrent session was active.
       * If this is true, samples will be empty.
       * </pre>
       *
       * <code>optional bool rejected_concurrent = 4;</code>
       * @return Whether the rejectedConcurrent field is set.
       */
      boolean hasRejectedConcurrent();
      /**
       * <pre>
       * This process was not profiled because a concurrent session was active.
       * If this is true, samples will be empty.
       * </pre>
       *
       * <code>optional bool rejected_concurrent = 4;</code>
       * @return The rejectedConcurrent.
       */
      boolean getRejectedConcurrent();

      /**
       * <pre>
       * This process disconnected while it was profiled.
       * If false, the process outlived the profiling session.
       * </pre>
       *
       * <code>optional bool disconnected = 6;</code>
       * @return Whether the disconnected field is set.
       */
      boolean hasDisconnected();
      /**
       * <pre>
       * This process disconnected while it was profiled.
       * If false, the process outlived the profiling session.
       * </pre>
       *
       * <code>optional bool disconnected = 6;</code>
       * @return The disconnected.
       */
      boolean getDisconnected();

      /**
       * <pre>
       * If disconnected, this disconnect was caused by the client overrunning
       * the buffer.
       * Equivalent to client_error == CLIENT_ERROR_HIT_TIMEOUT
       * on new S builds.
       * </pre>
       *
       * <code>optional bool buffer_overran = 7;</code>
       * @return Whether the bufferOverran field is set.
       */
      boolean hasBufferOverran();
      /**
       * <pre>
       * If disconnected, this disconnect was caused by the client overrunning
       * the buffer.
       * Equivalent to client_error == CLIENT_ERROR_HIT_TIMEOUT
       * on new S builds.
       * </pre>
       *
       * <code>optional bool buffer_overran = 7;</code>
       * @return The bufferOverran.
       */
      boolean getBufferOverran();

      /**
       * <code>optional .perfetto.protos.ProfilePacket.ProcessHeapSamples.ClientError client_error = 14;</code>
       * @return Whether the clientError field is set.
       */
      boolean hasClientError();
      /**
       * <code>optional .perfetto.protos.ProfilePacket.ProcessHeapSamples.ClientError client_error = 14;</code>
       * @return The clientError.
       */
      perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples.ClientError getClientError();

      /**
       * <pre>
       * If disconnected, this disconnected was caused by the shared memory
       * buffer being corrupted. THIS IS ALWAYS A BUG IN HEAPPROFD OR CLIENT
       * MEMORY CORRUPTION.
       * </pre>
       *
       * <code>optional bool buffer_corrupted = 8;</code>
       * @return Whether the bufferCorrupted field is set.
       */
      boolean hasBufferCorrupted();
      /**
       * <pre>
       * If disconnected, this disconnected was caused by the shared memory
       * buffer being corrupted. THIS IS ALWAYS A BUG IN HEAPPROFD OR CLIENT
       * MEMORY CORRUPTION.
       * </pre>
       *
       * <code>optional bool buffer_corrupted = 8;</code>
       * @return The bufferCorrupted.
       */
      boolean getBufferCorrupted();

      /**
       * <pre>
       * If disconnected, this disconnect was caused by heapprofd exceeding
       * guardrails during this profiling session.
       * </pre>
       *
       * <code>optional bool hit_guardrail = 10;</code>
       * @return Whether the hitGuardrail field is set.
       */
      boolean hasHitGuardrail();
      /**
       * <pre>
       * If disconnected, this disconnect was caused by heapprofd exceeding
       * guardrails during this profiling session.
       * </pre>
       *
       * <code>optional bool hit_guardrail = 10;</code>
       * @return The hitGuardrail.
       */
      boolean getHitGuardrail();

      /**
       * <code>optional string heap_name = 11;</code>
       * @return Whether the heapName field is set.
       */
      boolean hasHeapName();
      /**
       * <code>optional string heap_name = 11;</code>
       * @return The heapName.
       */
      java.lang.String getHeapName();
      /**
       * <code>optional string heap_name = 11;</code>
       * @return The bytes for heapName.
       */
      com.google.protobuf.ByteString
          getHeapNameBytes();

      /**
       * <code>optional uint64 sampling_interval_bytes = 12;</code>
       * @return Whether the samplingIntervalBytes field is set.
       */
      boolean hasSamplingIntervalBytes();
      /**
       * <code>optional uint64 sampling_interval_bytes = 12;</code>
       * @return The samplingIntervalBytes.
       */
      long getSamplingIntervalBytes();

      /**
       * <code>optional uint64 orig_sampling_interval_bytes = 13;</code>
       * @return Whether the origSamplingIntervalBytes field is set.
       */
      boolean hasOrigSamplingIntervalBytes();
      /**
       * <code>optional uint64 orig_sampling_interval_bytes = 13;</code>
       * @return The origSamplingIntervalBytes.
       */
      long getOrigSamplingIntervalBytes();

      /**
       * <pre>
       * Timestamp of the state of the target process that this dump represents.
       * This can be different to the timestamp of the TracePackets for various
       * reasons:
       * * If disconnected is set above, this is the timestamp of last state
       *   heapprofd had of the process before it disconnected.
       * * Otherwise, if the rate of events produced by the process is high,
       *   heapprofd might be behind.
       * TODO(fmayer): This is MONOTONIC_COARSE. Refactor ClockSnapshot::Clock
       *               to have a type enum that we can reuse here.
       * </pre>
       *
       * <code>optional uint64 timestamp = 9;</code>
       * @return Whether the timestamp field is set.
       */
      boolean hasTimestamp();
      /**
       * <pre>
       * Timestamp of the state of the target process that this dump represents.
       * This can be different to the timestamp of the TracePackets for various
       * reasons:
       * * If disconnected is set above, this is the timestamp of last state
       *   heapprofd had of the process before it disconnected.
       * * Otherwise, if the rate of events produced by the process is high,
       *   heapprofd might be behind.
       * TODO(fmayer): This is MONOTONIC_COARSE. Refactor ClockSnapshot::Clock
       *               to have a type enum that we can reuse here.
       * </pre>
       *
       * <code>optional uint64 timestamp = 9;</code>
       * @return The timestamp.
       */
      long getTimestamp();

      /**
       * <pre>
       * Metadata about heapprofd.
       * </pre>
       *
       * <code>optional .perfetto.protos.ProfilePacket.ProcessStats stats = 5;</code>
       * @return Whether the stats field is set.
       */
      boolean hasStats();
      /**
       * <pre>
       * Metadata about heapprofd.
       * </pre>
       *
       * <code>optional .perfetto.protos.ProfilePacket.ProcessStats stats = 5;</code>
       * @return The stats.
       */
      perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStats getStats();
      /**
       * <pre>
       * Metadata about heapprofd.
       * </pre>
       *
       * <code>optional .perfetto.protos.ProfilePacket.ProcessStats stats = 5;</code>
       */
      perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStatsOrBuilder getStatsOrBuilder();

      /**
       * <code>repeated .perfetto.protos.ProfilePacket.HeapSample samples = 2;</code>
       */
      java.util.List<perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample> 
          getSamplesList();
      /**
       * <code>repeated .perfetto.protos.ProfilePacket.HeapSample samples = 2;</code>
       */
      perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample getSamples(int index);
      /**
       * <code>repeated .perfetto.protos.ProfilePacket.HeapSample samples = 2;</code>
       */
      int getSamplesCount();
      /**
       * <code>repeated .perfetto.protos.ProfilePacket.HeapSample samples = 2;</code>
       */
      java.util.List<? extends perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSampleOrBuilder> 
          getSamplesOrBuilderList();
      /**
       * <code>repeated .perfetto.protos.ProfilePacket.HeapSample samples = 2;</code>
       */
      perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSampleOrBuilder getSamplesOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code perfetto.protos.ProfilePacket.ProcessHeapSamples}
     */
    public static final class ProcessHeapSamples extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:perfetto.protos.ProfilePacket.ProcessHeapSamples)
        ProcessHeapSamplesOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use ProcessHeapSamples.newBuilder() to construct.
      private ProcessHeapSamples(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private ProcessHeapSamples() {
        clientError_ = 0;
        heapName_ = "";
        samples_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new ProcessHeapSamples();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_ProfilePacket_ProcessHeapSamples_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_ProfilePacket_ProcessHeapSamples_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples.class, perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples.Builder.class);
      }

      /**
       * Protobuf enum {@code perfetto.protos.ProfilePacket.ProcessHeapSamples.ClientError}
       */
      public enum ClientError
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>CLIENT_ERROR_NONE = 0;</code>
         */
        CLIENT_ERROR_NONE(0),
        /**
         * <code>CLIENT_ERROR_HIT_TIMEOUT = 1;</code>
         */
        CLIENT_ERROR_HIT_TIMEOUT(1),
        /**
         * <code>CLIENT_ERROR_INVALID_STACK_BOUNDS = 2;</code>
         */
        CLIENT_ERROR_INVALID_STACK_BOUNDS(2),
        ;

        /**
         * <code>CLIENT_ERROR_NONE = 0;</code>
         */
        public static final int CLIENT_ERROR_NONE_VALUE = 0;
        /**
         * <code>CLIENT_ERROR_HIT_TIMEOUT = 1;</code>
         */
        public static final int CLIENT_ERROR_HIT_TIMEOUT_VALUE = 1;
        /**
         * <code>CLIENT_ERROR_INVALID_STACK_BOUNDS = 2;</code>
         */
        public static final int CLIENT_ERROR_INVALID_STACK_BOUNDS_VALUE = 2;


        public final int getNumber() {
          return value;
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static ClientError valueOf(int value) {
          return forNumber(value);
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         */
        public static ClientError forNumber(int value) {
          switch (value) {
            case 0: return CLIENT_ERROR_NONE;
            case 1: return CLIENT_ERROR_HIT_TIMEOUT;
            case 2: return CLIENT_ERROR_INVALID_STACK_BOUNDS;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<ClientError>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            ClientError> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<ClientError>() {
                public ClientError findValueByNumber(int number) {
                  return ClientError.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples.getDescriptor().getEnumTypes().get(0);
        }

        private static final ClientError[] VALUES = values();

        public static ClientError valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private ClientError(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:perfetto.protos.ProfilePacket.ProcessHeapSamples.ClientError)
      }

      private int bitField0_;
      public static final int PID_FIELD_NUMBER = 1;
      private long pid_ = 0L;
      /**
       * <code>optional uint64 pid = 1;</code>
       * @return Whether the pid field is set.
       */
      @java.lang.Override
      public boolean hasPid() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint64 pid = 1;</code>
       * @return The pid.
       */
      @java.lang.Override
      public long getPid() {
        return pid_;
      }

      public static final int FROM_STARTUP_FIELD_NUMBER = 3;
      private boolean fromStartup_ = false;
      /**
       * <pre>
       * This process was profiled from startup.
       * If false, this process was already running when profiling started.
       * </pre>
       *
       * <code>optional bool from_startup = 3;</code>
       * @return Whether the fromStartup field is set.
       */
      @java.lang.Override
      public boolean hasFromStartup() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * This process was profiled from startup.
       * If false, this process was already running when profiling started.
       * </pre>
       *
       * <code>optional bool from_startup = 3;</code>
       * @return The fromStartup.
       */
      @java.lang.Override
      public boolean getFromStartup() {
        return fromStartup_;
      }

      public static final int REJECTED_CONCURRENT_FIELD_NUMBER = 4;
      private boolean rejectedConcurrent_ = false;
      /**
       * <pre>
       * This process was not profiled because a concurrent session was active.
       * If this is true, samples will be empty.
       * </pre>
       *
       * <code>optional bool rejected_concurrent = 4;</code>
       * @return Whether the rejectedConcurrent field is set.
       */
      @java.lang.Override
      public boolean hasRejectedConcurrent() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * This process was not profiled because a concurrent session was active.
       * If this is true, samples will be empty.
       * </pre>
       *
       * <code>optional bool rejected_concurrent = 4;</code>
       * @return The rejectedConcurrent.
       */
      @java.lang.Override
      public boolean getRejectedConcurrent() {
        return rejectedConcurrent_;
      }

      public static final int DISCONNECTED_FIELD_NUMBER = 6;
      private boolean disconnected_ = false;
      /**
       * <pre>
       * This process disconnected while it was profiled.
       * If false, the process outlived the profiling session.
       * </pre>
       *
       * <code>optional bool disconnected = 6;</code>
       * @return Whether the disconnected field is set.
       */
      @java.lang.Override
      public boolean hasDisconnected() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * This process disconnected while it was profiled.
       * If false, the process outlived the profiling session.
       * </pre>
       *
       * <code>optional bool disconnected = 6;</code>
       * @return The disconnected.
       */
      @java.lang.Override
      public boolean getDisconnected() {
        return disconnected_;
      }

      public static final int BUFFER_OVERRAN_FIELD_NUMBER = 7;
      private boolean bufferOverran_ = false;
      /**
       * <pre>
       * If disconnected, this disconnect was caused by the client overrunning
       * the buffer.
       * Equivalent to client_error == CLIENT_ERROR_HIT_TIMEOUT
       * on new S builds.
       * </pre>
       *
       * <code>optional bool buffer_overran = 7;</code>
       * @return Whether the bufferOverran field is set.
       */
      @java.lang.Override
      public boolean hasBufferOverran() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * If disconnected, this disconnect was caused by the client overrunning
       * the buffer.
       * Equivalent to client_error == CLIENT_ERROR_HIT_TIMEOUT
       * on new S builds.
       * </pre>
       *
       * <code>optional bool buffer_overran = 7;</code>
       * @return The bufferOverran.
       */
      @java.lang.Override
      public boolean getBufferOverran() {
        return bufferOverran_;
      }

      public static final int CLIENT_ERROR_FIELD_NUMBER = 14;
      private int clientError_ = 0;
      /**
       * <code>optional .perfetto.protos.ProfilePacket.ProcessHeapSamples.ClientError client_error = 14;</code>
       * @return Whether the clientError field is set.
       */
      @java.lang.Override public boolean hasClientError() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional .perfetto.protos.ProfilePacket.ProcessHeapSamples.ClientError client_error = 14;</code>
       * @return The clientError.
       */
      @java.lang.Override public perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples.ClientError getClientError() {
        perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples.ClientError result = perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples.ClientError.forNumber(clientError_);
        return result == null ? perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples.ClientError.CLIENT_ERROR_NONE : result;
      }

      public static final int BUFFER_CORRUPTED_FIELD_NUMBER = 8;
      private boolean bufferCorrupted_ = false;
      /**
       * <pre>
       * If disconnected, this disconnected was caused by the shared memory
       * buffer being corrupted. THIS IS ALWAYS A BUG IN HEAPPROFD OR CLIENT
       * MEMORY CORRUPTION.
       * </pre>
       *
       * <code>optional bool buffer_corrupted = 8;</code>
       * @return Whether the bufferCorrupted field is set.
       */
      @java.lang.Override
      public boolean hasBufferCorrupted() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       * If disconnected, this disconnected was caused by the shared memory
       * buffer being corrupted. THIS IS ALWAYS A BUG IN HEAPPROFD OR CLIENT
       * MEMORY CORRUPTION.
       * </pre>
       *
       * <code>optional bool buffer_corrupted = 8;</code>
       * @return The bufferCorrupted.
       */
      @java.lang.Override
      public boolean getBufferCorrupted() {
        return bufferCorrupted_;
      }

      public static final int HIT_GUARDRAIL_FIELD_NUMBER = 10;
      private boolean hitGuardrail_ = false;
      /**
       * <pre>
       * If disconnected, this disconnect was caused by heapprofd exceeding
       * guardrails during this profiling session.
       * </pre>
       *
       * <code>optional bool hit_guardrail = 10;</code>
       * @return Whether the hitGuardrail field is set.
       */
      @java.lang.Override
      public boolean hasHitGuardrail() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <pre>
       * If disconnected, this disconnect was caused by heapprofd exceeding
       * guardrails during this profiling session.
       * </pre>
       *
       * <code>optional bool hit_guardrail = 10;</code>
       * @return The hitGuardrail.
       */
      @java.lang.Override
      public boolean getHitGuardrail() {
        return hitGuardrail_;
      }

      public static final int HEAP_NAME_FIELD_NUMBER = 11;
      @SuppressWarnings("serial")
      private volatile java.lang.Object heapName_ = "";
      /**
       * <code>optional string heap_name = 11;</code>
       * @return Whether the heapName field is set.
       */
      @java.lang.Override
      public boolean hasHeapName() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <code>optional string heap_name = 11;</code>
       * @return The heapName.
       */
      @java.lang.Override
      public java.lang.String getHeapName() {
        java.lang.Object ref = heapName_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            heapName_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string heap_name = 11;</code>
       * @return The bytes for heapName.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getHeapNameBytes() {
        java.lang.Object ref = heapName_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          heapName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int SAMPLING_INTERVAL_BYTES_FIELD_NUMBER = 12;
      private long samplingIntervalBytes_ = 0L;
      /**
       * <code>optional uint64 sampling_interval_bytes = 12;</code>
       * @return Whether the samplingIntervalBytes field is set.
       */
      @java.lang.Override
      public boolean hasSamplingIntervalBytes() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <code>optional uint64 sampling_interval_bytes = 12;</code>
       * @return The samplingIntervalBytes.
       */
      @java.lang.Override
      public long getSamplingIntervalBytes() {
        return samplingIntervalBytes_;
      }

      public static final int ORIG_SAMPLING_INTERVAL_BYTES_FIELD_NUMBER = 13;
      private long origSamplingIntervalBytes_ = 0L;
      /**
       * <code>optional uint64 orig_sampling_interval_bytes = 13;</code>
       * @return Whether the origSamplingIntervalBytes field is set.
       */
      @java.lang.Override
      public boolean hasOrigSamplingIntervalBytes() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <code>optional uint64 orig_sampling_interval_bytes = 13;</code>
       * @return The origSamplingIntervalBytes.
       */
      @java.lang.Override
      public long getOrigSamplingIntervalBytes() {
        return origSamplingIntervalBytes_;
      }

      public static final int TIMESTAMP_FIELD_NUMBER = 9;
      private long timestamp_ = 0L;
      /**
       * <pre>
       * Timestamp of the state of the target process that this dump represents.
       * This can be different to the timestamp of the TracePackets for various
       * reasons:
       * * If disconnected is set above, this is the timestamp of last state
       *   heapprofd had of the process before it disconnected.
       * * Otherwise, if the rate of events produced by the process is high,
       *   heapprofd might be behind.
       * TODO(fmayer): This is MONOTONIC_COARSE. Refactor ClockSnapshot::Clock
       *               to have a type enum that we can reuse here.
       * </pre>
       *
       * <code>optional uint64 timestamp = 9;</code>
       * @return Whether the timestamp field is set.
       */
      @java.lang.Override
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000800) != 0);
      }
      /**
       * <pre>
       * Timestamp of the state of the target process that this dump represents.
       * This can be different to the timestamp of the TracePackets for various
       * reasons:
       * * If disconnected is set above, this is the timestamp of last state
       *   heapprofd had of the process before it disconnected.
       * * Otherwise, if the rate of events produced by the process is high,
       *   heapprofd might be behind.
       * TODO(fmayer): This is MONOTONIC_COARSE. Refactor ClockSnapshot::Clock
       *               to have a type enum that we can reuse here.
       * </pre>
       *
       * <code>optional uint64 timestamp = 9;</code>
       * @return The timestamp.
       */
      @java.lang.Override
      public long getTimestamp() {
        return timestamp_;
      }

      public static final int STATS_FIELD_NUMBER = 5;
      private perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStats stats_;
      /**
       * <pre>
       * Metadata about heapprofd.
       * </pre>
       *
       * <code>optional .perfetto.protos.ProfilePacket.ProcessStats stats = 5;</code>
       * @return Whether the stats field is set.
       */
      @java.lang.Override
      public boolean hasStats() {
        return ((bitField0_ & 0x00001000) != 0);
      }
      /**
       * <pre>
       * Metadata about heapprofd.
       * </pre>
       *
       * <code>optional .perfetto.protos.ProfilePacket.ProcessStats stats = 5;</code>
       * @return The stats.
       */
      @java.lang.Override
      public perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStats getStats() {
        return stats_ == null ? perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStats.getDefaultInstance() : stats_;
      }
      /**
       * <pre>
       * Metadata about heapprofd.
       * </pre>
       *
       * <code>optional .perfetto.protos.ProfilePacket.ProcessStats stats = 5;</code>
       */
      @java.lang.Override
      public perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStatsOrBuilder getStatsOrBuilder() {
        return stats_ == null ? perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStats.getDefaultInstance() : stats_;
      }

      public static final int SAMPLES_FIELD_NUMBER = 2;
      @SuppressWarnings("serial")
      private java.util.List<perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample> samples_;
      /**
       * <code>repeated .perfetto.protos.ProfilePacket.HeapSample samples = 2;</code>
       */
      @java.lang.Override
      public java.util.List<perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample> getSamplesList() {
        return samples_;
      }
      /**
       * <code>repeated .perfetto.protos.ProfilePacket.HeapSample samples = 2;</code>
       */
      @java.lang.Override
      public java.util.List<? extends perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSampleOrBuilder> 
          getSamplesOrBuilderList() {
        return samples_;
      }
      /**
       * <code>repeated .perfetto.protos.ProfilePacket.HeapSample samples = 2;</code>
       */
      @java.lang.Override
      public int getSamplesCount() {
        return samples_.size();
      }
      /**
       * <code>repeated .perfetto.protos.ProfilePacket.HeapSample samples = 2;</code>
       */
      @java.lang.Override
      public perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample getSamples(int index) {
        return samples_.get(index);
      }
      /**
       * <code>repeated .perfetto.protos.ProfilePacket.HeapSample samples = 2;</code>
       */
      @java.lang.Override
      public perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSampleOrBuilder getSamplesOrBuilder(
          int index) {
        return samples_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeUInt64(1, pid_);
        }
        for (int i = 0; i < samples_.size(); i++) {
          output.writeMessage(2, samples_.get(i));
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeBool(3, fromStartup_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeBool(4, rejectedConcurrent_);
        }
        if (((bitField0_ & 0x00001000) != 0)) {
          output.writeMessage(5, getStats());
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          output.writeBool(6, disconnected_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          output.writeBool(7, bufferOverran_);
        }
        if (((bitField0_ & 0x00000040) != 0)) {
          output.writeBool(8, bufferCorrupted_);
        }
        if (((bitField0_ & 0x00000800) != 0)) {
          output.writeUInt64(9, timestamp_);
        }
        if (((bitField0_ & 0x00000080) != 0)) {
          output.writeBool(10, hitGuardrail_);
        }
        if (((bitField0_ & 0x00000100) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 11, heapName_);
        }
        if (((bitField0_ & 0x00000200) != 0)) {
          output.writeUInt64(12, samplingIntervalBytes_);
        }
        if (((bitField0_ & 0x00000400) != 0)) {
          output.writeUInt64(13, origSamplingIntervalBytes_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          output.writeEnum(14, clientError_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(1, pid_);
        }
        for (int i = 0; i < samples_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, samples_.get(i));
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(3, fromStartup_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(4, rejectedConcurrent_);
        }
        if (((bitField0_ & 0x00001000) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, getStats());
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(6, disconnected_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(7, bufferOverran_);
        }
        if (((bitField0_ & 0x00000040) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(8, bufferCorrupted_);
        }
        if (((bitField0_ & 0x00000800) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(9, timestamp_);
        }
        if (((bitField0_ & 0x00000080) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(10, hitGuardrail_);
        }
        if (((bitField0_ & 0x00000100) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, heapName_);
        }
        if (((bitField0_ & 0x00000200) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(12, samplingIntervalBytes_);
        }
        if (((bitField0_ & 0x00000400) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(13, origSamplingIntervalBytes_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(14, clientError_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples)) {
          return super.equals(obj);
        }
        perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples other = (perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples) obj;

        if (hasPid() != other.hasPid()) return false;
        if (hasPid()) {
          if (getPid()
              != other.getPid()) return false;
        }
        if (hasFromStartup() != other.hasFromStartup()) return false;
        if (hasFromStartup()) {
          if (getFromStartup()
              != other.getFromStartup()) return false;
        }
        if (hasRejectedConcurrent() != other.hasRejectedConcurrent()) return false;
        if (hasRejectedConcurrent()) {
          if (getRejectedConcurrent()
              != other.getRejectedConcurrent()) return false;
        }
        if (hasDisconnected() != other.hasDisconnected()) return false;
        if (hasDisconnected()) {
          if (getDisconnected()
              != other.getDisconnected()) return false;
        }
        if (hasBufferOverran() != other.hasBufferOverran()) return false;
        if (hasBufferOverran()) {
          if (getBufferOverran()
              != other.getBufferOverran()) return false;
        }
        if (hasClientError() != other.hasClientError()) return false;
        if (hasClientError()) {
          if (clientError_ != other.clientError_) return false;
        }
        if (hasBufferCorrupted() != other.hasBufferCorrupted()) return false;
        if (hasBufferCorrupted()) {
          if (getBufferCorrupted()
              != other.getBufferCorrupted()) return false;
        }
        if (hasHitGuardrail() != other.hasHitGuardrail()) return false;
        if (hasHitGuardrail()) {
          if (getHitGuardrail()
              != other.getHitGuardrail()) return false;
        }
        if (hasHeapName() != other.hasHeapName()) return false;
        if (hasHeapName()) {
          if (!getHeapName()
              .equals(other.getHeapName())) return false;
        }
        if (hasSamplingIntervalBytes() != other.hasSamplingIntervalBytes()) return false;
        if (hasSamplingIntervalBytes()) {
          if (getSamplingIntervalBytes()
              != other.getSamplingIntervalBytes()) return false;
        }
        if (hasOrigSamplingIntervalBytes() != other.hasOrigSamplingIntervalBytes()) return false;
        if (hasOrigSamplingIntervalBytes()) {
          if (getOrigSamplingIntervalBytes()
              != other.getOrigSamplingIntervalBytes()) return false;
        }
        if (hasTimestamp() != other.hasTimestamp()) return false;
        if (hasTimestamp()) {
          if (getTimestamp()
              != other.getTimestamp()) return false;
        }
        if (hasStats() != other.hasStats()) return false;
        if (hasStats()) {
          if (!getStats()
              .equals(other.getStats())) return false;
        }
        if (!getSamplesList()
            .equals(other.getSamplesList())) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasPid()) {
          hash = (37 * hash) + PID_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getPid());
        }
        if (hasFromStartup()) {
          hash = (37 * hash) + FROM_STARTUP_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getFromStartup());
        }
        if (hasRejectedConcurrent()) {
          hash = (37 * hash) + REJECTED_CONCURRENT_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getRejectedConcurrent());
        }
        if (hasDisconnected()) {
          hash = (37 * hash) + DISCONNECTED_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getDisconnected());
        }
        if (hasBufferOverran()) {
          hash = (37 * hash) + BUFFER_OVERRAN_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getBufferOverran());
        }
        if (hasClientError()) {
          hash = (37 * hash) + CLIENT_ERROR_FIELD_NUMBER;
          hash = (53 * hash) + clientError_;
        }
        if (hasBufferCorrupted()) {
          hash = (37 * hash) + BUFFER_CORRUPTED_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getBufferCorrupted());
        }
        if (hasHitGuardrail()) {
          hash = (37 * hash) + HIT_GUARDRAIL_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getHitGuardrail());
        }
        if (hasHeapName()) {
          hash = (37 * hash) + HEAP_NAME_FIELD_NUMBER;
          hash = (53 * hash) + getHeapName().hashCode();
        }
        if (hasSamplingIntervalBytes()) {
          hash = (37 * hash) + SAMPLING_INTERVAL_BYTES_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getSamplingIntervalBytes());
        }
        if (hasOrigSamplingIntervalBytes()) {
          hash = (37 * hash) + ORIG_SAMPLING_INTERVAL_BYTES_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getOrigSamplingIntervalBytes());
        }
        if (hasTimestamp()) {
          hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getTimestamp());
        }
        if (hasStats()) {
          hash = (37 * hash) + STATS_FIELD_NUMBER;
          hash = (53 * hash) + getStats().hashCode();
        }
        if (getSamplesCount() > 0) {
          hash = (37 * hash) + SAMPLES_FIELD_NUMBER;
          hash = (53 * hash) + getSamplesList().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code perfetto.protos.ProfilePacket.ProcessHeapSamples}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:perfetto.protos.ProfilePacket.ProcessHeapSamples)
          perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamplesOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_ProfilePacket_ProcessHeapSamples_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_ProfilePacket_ProcessHeapSamples_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples.class, perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples.Builder.class);
        }

        // Construct using perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getStatsFieldBuilder();
            getSamplesFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          pid_ = 0L;
          fromStartup_ = false;
          rejectedConcurrent_ = false;
          disconnected_ = false;
          bufferOverran_ = false;
          clientError_ = 0;
          bufferCorrupted_ = false;
          hitGuardrail_ = false;
          heapName_ = "";
          samplingIntervalBytes_ = 0L;
          origSamplingIntervalBytes_ = 0L;
          timestamp_ = 0L;
          stats_ = null;
          if (statsBuilder_ != null) {
            statsBuilder_.dispose();
            statsBuilder_ = null;
          }
          if (samplesBuilder_ == null) {
            samples_ = java.util.Collections.emptyList();
          } else {
            samples_ = null;
            samplesBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00002000);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_ProfilePacket_ProcessHeapSamples_descriptor;
        }

        @java.lang.Override
        public perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples getDefaultInstanceForType() {
          return perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples.getDefaultInstance();
        }

        @java.lang.Override
        public perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples build() {
          perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples buildPartial() {
          perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples result = new perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples(this);
          buildPartialRepeatedFields(result);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartialRepeatedFields(perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples result) {
          if (samplesBuilder_ == null) {
            if (((bitField0_ & 0x00002000) != 0)) {
              samples_ = java.util.Collections.unmodifiableList(samples_);
              bitField0_ = (bitField0_ & ~0x00002000);
            }
            result.samples_ = samples_;
          } else {
            result.samples_ = samplesBuilder_.build();
          }
        }

        private void buildPartial0(perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.pid_ = pid_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.fromStartup_ = fromStartup_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.rejectedConcurrent_ = rejectedConcurrent_;
            to_bitField0_ |= 0x00000004;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.disconnected_ = disconnected_;
            to_bitField0_ |= 0x00000008;
          }
          if (((from_bitField0_ & 0x00000010) != 0)) {
            result.bufferOverran_ = bufferOverran_;
            to_bitField0_ |= 0x00000010;
          }
          if (((from_bitField0_ & 0x00000020) != 0)) {
            result.clientError_ = clientError_;
            to_bitField0_ |= 0x00000020;
          }
          if (((from_bitField0_ & 0x00000040) != 0)) {
            result.bufferCorrupted_ = bufferCorrupted_;
            to_bitField0_ |= 0x00000040;
          }
          if (((from_bitField0_ & 0x00000080) != 0)) {
            result.hitGuardrail_ = hitGuardrail_;
            to_bitField0_ |= 0x00000080;
          }
          if (((from_bitField0_ & 0x00000100) != 0)) {
            result.heapName_ = heapName_;
            to_bitField0_ |= 0x00000100;
          }
          if (((from_bitField0_ & 0x00000200) != 0)) {
            result.samplingIntervalBytes_ = samplingIntervalBytes_;
            to_bitField0_ |= 0x00000200;
          }
          if (((from_bitField0_ & 0x00000400) != 0)) {
            result.origSamplingIntervalBytes_ = origSamplingIntervalBytes_;
            to_bitField0_ |= 0x00000400;
          }
          if (((from_bitField0_ & 0x00000800) != 0)) {
            result.timestamp_ = timestamp_;
            to_bitField0_ |= 0x00000800;
          }
          if (((from_bitField0_ & 0x00001000) != 0)) {
            result.stats_ = statsBuilder_ == null
                ? stats_
                : statsBuilder_.build();
            to_bitField0_ |= 0x00001000;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples) {
            return mergeFrom((perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples other) {
          if (other == perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples.getDefaultInstance()) return this;
          if (other.hasPid()) {
            setPid(other.getPid());
          }
          if (other.hasFromStartup()) {
            setFromStartup(other.getFromStartup());
          }
          if (other.hasRejectedConcurrent()) {
            setRejectedConcurrent(other.getRejectedConcurrent());
          }
          if (other.hasDisconnected()) {
            setDisconnected(other.getDisconnected());
          }
          if (other.hasBufferOverran()) {
            setBufferOverran(other.getBufferOverran());
          }
          if (other.hasClientError()) {
            setClientError(other.getClientError());
          }
          if (other.hasBufferCorrupted()) {
            setBufferCorrupted(other.getBufferCorrupted());
          }
          if (other.hasHitGuardrail()) {
            setHitGuardrail(other.getHitGuardrail());
          }
          if (other.hasHeapName()) {
            heapName_ = other.heapName_;
            bitField0_ |= 0x00000100;
            onChanged();
          }
          if (other.hasSamplingIntervalBytes()) {
            setSamplingIntervalBytes(other.getSamplingIntervalBytes());
          }
          if (other.hasOrigSamplingIntervalBytes()) {
            setOrigSamplingIntervalBytes(other.getOrigSamplingIntervalBytes());
          }
          if (other.hasTimestamp()) {
            setTimestamp(other.getTimestamp());
          }
          if (other.hasStats()) {
            mergeStats(other.getStats());
          }
          if (samplesBuilder_ == null) {
            if (!other.samples_.isEmpty()) {
              if (samples_.isEmpty()) {
                samples_ = other.samples_;
                bitField0_ = (bitField0_ & ~0x00002000);
              } else {
                ensureSamplesIsMutable();
                samples_.addAll(other.samples_);
              }
              onChanged();
            }
          } else {
            if (!other.samples_.isEmpty()) {
              if (samplesBuilder_.isEmpty()) {
                samplesBuilder_.dispose();
                samplesBuilder_ = null;
                samples_ = other.samples_;
                bitField0_ = (bitField0_ & ~0x00002000);
                samplesBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getSamplesFieldBuilder() : null;
              } else {
                samplesBuilder_.addAllMessages(other.samples_);
              }
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  pid_ = input.readUInt64();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 18: {
                  perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample m =
                      input.readMessage(
                          perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample.PARSER,
                          extensionRegistry);
                  if (samplesBuilder_ == null) {
                    ensureSamplesIsMutable();
                    samples_.add(m);
                  } else {
                    samplesBuilder_.addMessage(m);
                  }
                  break;
                } // case 18
                case 24: {
                  fromStartup_ = input.readBool();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 24
                case 32: {
                  rejectedConcurrent_ = input.readBool();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 32
                case 42: {
                  input.readMessage(
                      getStatsFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00001000;
                  break;
                } // case 42
                case 48: {
                  disconnected_ = input.readBool();
                  bitField0_ |= 0x00000008;
                  break;
                } // case 48
                case 56: {
                  bufferOverran_ = input.readBool();
                  bitField0_ |= 0x00000010;
                  break;
                } // case 56
                case 64: {
                  bufferCorrupted_ = input.readBool();
                  bitField0_ |= 0x00000040;
                  break;
                } // case 64
                case 72: {
                  timestamp_ = input.readUInt64();
                  bitField0_ |= 0x00000800;
                  break;
                } // case 72
                case 80: {
                  hitGuardrail_ = input.readBool();
                  bitField0_ |= 0x00000080;
                  break;
                } // case 80
                case 90: {
                  heapName_ = input.readBytes();
                  bitField0_ |= 0x00000100;
                  break;
                } // case 90
                case 96: {
                  samplingIntervalBytes_ = input.readUInt64();
                  bitField0_ |= 0x00000200;
                  break;
                } // case 96
                case 104: {
                  origSamplingIntervalBytes_ = input.readUInt64();
                  bitField0_ |= 0x00000400;
                  break;
                } // case 104
                case 112: {
                  int tmpRaw = input.readEnum();
                  perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples.ClientError tmpValue =
                      perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples.ClientError.forNumber(tmpRaw);
                  if (tmpValue == null) {
                    mergeUnknownVarintField(14, tmpRaw);
                  } else {
                    clientError_ = tmpRaw;
                    bitField0_ |= 0x00000020;
                  }
                  break;
                } // case 112
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private long pid_ ;
        /**
         * <code>optional uint64 pid = 1;</code>
         * @return Whether the pid field is set.
         */
        @java.lang.Override
        public boolean hasPid() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional uint64 pid = 1;</code>
         * @return The pid.
         */
        @java.lang.Override
        public long getPid() {
          return pid_;
        }
        /**
         * <code>optional uint64 pid = 1;</code>
         * @param value The pid to set.
         * @return This builder for chaining.
         */
        public Builder setPid(long value) {
          
          pid_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 pid = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearPid() {
          bitField0_ = (bitField0_ & ~0x00000001);
          pid_ = 0L;
          onChanged();
          return this;
        }

        private boolean fromStartup_ ;
        /**
         * <pre>
         * This process was profiled from startup.
         * If false, this process was already running when profiling started.
         * </pre>
         *
         * <code>optional bool from_startup = 3;</code>
         * @return Whether the fromStartup field is set.
         */
        @java.lang.Override
        public boolean hasFromStartup() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * This process was profiled from startup.
         * If false, this process was already running when profiling started.
         * </pre>
         *
         * <code>optional bool from_startup = 3;</code>
         * @return The fromStartup.
         */
        @java.lang.Override
        public boolean getFromStartup() {
          return fromStartup_;
        }
        /**
         * <pre>
         * This process was profiled from startup.
         * If false, this process was already running when profiling started.
         * </pre>
         *
         * <code>optional bool from_startup = 3;</code>
         * @param value The fromStartup to set.
         * @return This builder for chaining.
         */
        public Builder setFromStartup(boolean value) {
          
          fromStartup_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * This process was profiled from startup.
         * If false, this process was already running when profiling started.
         * </pre>
         *
         * <code>optional bool from_startup = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearFromStartup() {
          bitField0_ = (bitField0_ & ~0x00000002);
          fromStartup_ = false;
          onChanged();
          return this;
        }

        private boolean rejectedConcurrent_ ;
        /**
         * <pre>
         * This process was not profiled because a concurrent session was active.
         * If this is true, samples will be empty.
         * </pre>
         *
         * <code>optional bool rejected_concurrent = 4;</code>
         * @return Whether the rejectedConcurrent field is set.
         */
        @java.lang.Override
        public boolean hasRejectedConcurrent() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         * This process was not profiled because a concurrent session was active.
         * If this is true, samples will be empty.
         * </pre>
         *
         * <code>optional bool rejected_concurrent = 4;</code>
         * @return The rejectedConcurrent.
         */
        @java.lang.Override
        public boolean getRejectedConcurrent() {
          return rejectedConcurrent_;
        }
        /**
         * <pre>
         * This process was not profiled because a concurrent session was active.
         * If this is true, samples will be empty.
         * </pre>
         *
         * <code>optional bool rejected_concurrent = 4;</code>
         * @param value The rejectedConcurrent to set.
         * @return This builder for chaining.
         */
        public Builder setRejectedConcurrent(boolean value) {
          
          rejectedConcurrent_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * This process was not profiled because a concurrent session was active.
         * If this is true, samples will be empty.
         * </pre>
         *
         * <code>optional bool rejected_concurrent = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearRejectedConcurrent() {
          bitField0_ = (bitField0_ & ~0x00000004);
          rejectedConcurrent_ = false;
          onChanged();
          return this;
        }

        private boolean disconnected_ ;
        /**
         * <pre>
         * This process disconnected while it was profiled.
         * If false, the process outlived the profiling session.
         * </pre>
         *
         * <code>optional bool disconnected = 6;</code>
         * @return Whether the disconnected field is set.
         */
        @java.lang.Override
        public boolean hasDisconnected() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <pre>
         * This process disconnected while it was profiled.
         * If false, the process outlived the profiling session.
         * </pre>
         *
         * <code>optional bool disconnected = 6;</code>
         * @return The disconnected.
         */
        @java.lang.Override
        public boolean getDisconnected() {
          return disconnected_;
        }
        /**
         * <pre>
         * This process disconnected while it was profiled.
         * If false, the process outlived the profiling session.
         * </pre>
         *
         * <code>optional bool disconnected = 6;</code>
         * @param value The disconnected to set.
         * @return This builder for chaining.
         */
        public Builder setDisconnected(boolean value) {
          
          disconnected_ = value;
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * This process disconnected while it was profiled.
         * If false, the process outlived the profiling session.
         * </pre>
         *
         * <code>optional bool disconnected = 6;</code>
         * @return This builder for chaining.
         */
        public Builder clearDisconnected() {
          bitField0_ = (bitField0_ & ~0x00000008);
          disconnected_ = false;
          onChanged();
          return this;
        }

        private boolean bufferOverran_ ;
        /**
         * <pre>
         * If disconnected, this disconnect was caused by the client overrunning
         * the buffer.
         * Equivalent to client_error == CLIENT_ERROR_HIT_TIMEOUT
         * on new S builds.
         * </pre>
         *
         * <code>optional bool buffer_overran = 7;</code>
         * @return Whether the bufferOverran field is set.
         */
        @java.lang.Override
        public boolean hasBufferOverran() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <pre>
         * If disconnected, this disconnect was caused by the client overrunning
         * the buffer.
         * Equivalent to client_error == CLIENT_ERROR_HIT_TIMEOUT
         * on new S builds.
         * </pre>
         *
         * <code>optional bool buffer_overran = 7;</code>
         * @return The bufferOverran.
         */
        @java.lang.Override
        public boolean getBufferOverran() {
          return bufferOverran_;
        }
        /**
         * <pre>
         * If disconnected, this disconnect was caused by the client overrunning
         * the buffer.
         * Equivalent to client_error == CLIENT_ERROR_HIT_TIMEOUT
         * on new S builds.
         * </pre>
         *
         * <code>optional bool buffer_overran = 7;</code>
         * @param value The bufferOverran to set.
         * @return This builder for chaining.
         */
        public Builder setBufferOverran(boolean value) {
          
          bufferOverran_ = value;
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * If disconnected, this disconnect was caused by the client overrunning
         * the buffer.
         * Equivalent to client_error == CLIENT_ERROR_HIT_TIMEOUT
         * on new S builds.
         * </pre>
         *
         * <code>optional bool buffer_overran = 7;</code>
         * @return This builder for chaining.
         */
        public Builder clearBufferOverran() {
          bitField0_ = (bitField0_ & ~0x00000010);
          bufferOverran_ = false;
          onChanged();
          return this;
        }

        private int clientError_ = 0;
        /**
         * <code>optional .perfetto.protos.ProfilePacket.ProcessHeapSamples.ClientError client_error = 14;</code>
         * @return Whether the clientError field is set.
         */
        @java.lang.Override public boolean hasClientError() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        /**
         * <code>optional .perfetto.protos.ProfilePacket.ProcessHeapSamples.ClientError client_error = 14;</code>
         * @return The clientError.
         */
        @java.lang.Override
        public perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples.ClientError getClientError() {
          perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples.ClientError result = perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples.ClientError.forNumber(clientError_);
          return result == null ? perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples.ClientError.CLIENT_ERROR_NONE : result;
        }
        /**
         * <code>optional .perfetto.protos.ProfilePacket.ProcessHeapSamples.ClientError client_error = 14;</code>
         * @param value The clientError to set.
         * @return This builder for chaining.
         */
        public Builder setClientError(perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples.ClientError value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000020;
          clientError_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>optional .perfetto.protos.ProfilePacket.ProcessHeapSamples.ClientError client_error = 14;</code>
         * @return This builder for chaining.
         */
        public Builder clearClientError() {
          bitField0_ = (bitField0_ & ~0x00000020);
          clientError_ = 0;
          onChanged();
          return this;
        }

        private boolean bufferCorrupted_ ;
        /**
         * <pre>
         * If disconnected, this disconnected was caused by the shared memory
         * buffer being corrupted. THIS IS ALWAYS A BUG IN HEAPPROFD OR CLIENT
         * MEMORY CORRUPTION.
         * </pre>
         *
         * <code>optional bool buffer_corrupted = 8;</code>
         * @return Whether the bufferCorrupted field is set.
         */
        @java.lang.Override
        public boolean hasBufferCorrupted() {
          return ((bitField0_ & 0x00000040) != 0);
        }
        /**
         * <pre>
         * If disconnected, this disconnected was caused by the shared memory
         * buffer being corrupted. THIS IS ALWAYS A BUG IN HEAPPROFD OR CLIENT
         * MEMORY CORRUPTION.
         * </pre>
         *
         * <code>optional bool buffer_corrupted = 8;</code>
         * @return The bufferCorrupted.
         */
        @java.lang.Override
        public boolean getBufferCorrupted() {
          return bufferCorrupted_;
        }
        /**
         * <pre>
         * If disconnected, this disconnected was caused by the shared memory
         * buffer being corrupted. THIS IS ALWAYS A BUG IN HEAPPROFD OR CLIENT
         * MEMORY CORRUPTION.
         * </pre>
         *
         * <code>optional bool buffer_corrupted = 8;</code>
         * @param value The bufferCorrupted to set.
         * @return This builder for chaining.
         */
        public Builder setBufferCorrupted(boolean value) {
          
          bufferCorrupted_ = value;
          bitField0_ |= 0x00000040;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * If disconnected, this disconnected was caused by the shared memory
         * buffer being corrupted. THIS IS ALWAYS A BUG IN HEAPPROFD OR CLIENT
         * MEMORY CORRUPTION.
         * </pre>
         *
         * <code>optional bool buffer_corrupted = 8;</code>
         * @return This builder for chaining.
         */
        public Builder clearBufferCorrupted() {
          bitField0_ = (bitField0_ & ~0x00000040);
          bufferCorrupted_ = false;
          onChanged();
          return this;
        }

        private boolean hitGuardrail_ ;
        /**
         * <pre>
         * If disconnected, this disconnect was caused by heapprofd exceeding
         * guardrails during this profiling session.
         * </pre>
         *
         * <code>optional bool hit_guardrail = 10;</code>
         * @return Whether the hitGuardrail field is set.
         */
        @java.lang.Override
        public boolean hasHitGuardrail() {
          return ((bitField0_ & 0x00000080) != 0);
        }
        /**
         * <pre>
         * If disconnected, this disconnect was caused by heapprofd exceeding
         * guardrails during this profiling session.
         * </pre>
         *
         * <code>optional bool hit_guardrail = 10;</code>
         * @return The hitGuardrail.
         */
        @java.lang.Override
        public boolean getHitGuardrail() {
          return hitGuardrail_;
        }
        /**
         * <pre>
         * If disconnected, this disconnect was caused by heapprofd exceeding
         * guardrails during this profiling session.
         * </pre>
         *
         * <code>optional bool hit_guardrail = 10;</code>
         * @param value The hitGuardrail to set.
         * @return This builder for chaining.
         */
        public Builder setHitGuardrail(boolean value) {
          
          hitGuardrail_ = value;
          bitField0_ |= 0x00000080;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * If disconnected, this disconnect was caused by heapprofd exceeding
         * guardrails during this profiling session.
         * </pre>
         *
         * <code>optional bool hit_guardrail = 10;</code>
         * @return This builder for chaining.
         */
        public Builder clearHitGuardrail() {
          bitField0_ = (bitField0_ & ~0x00000080);
          hitGuardrail_ = false;
          onChanged();
          return this;
        }

        private java.lang.Object heapName_ = "";
        /**
         * <code>optional string heap_name = 11;</code>
         * @return Whether the heapName field is set.
         */
        public boolean hasHeapName() {
          return ((bitField0_ & 0x00000100) != 0);
        }
        /**
         * <code>optional string heap_name = 11;</code>
         * @return The heapName.
         */
        public java.lang.String getHeapName() {
          java.lang.Object ref = heapName_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              heapName_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string heap_name = 11;</code>
         * @return The bytes for heapName.
         */
        public com.google.protobuf.ByteString
            getHeapNameBytes() {
          java.lang.Object ref = heapName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            heapName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string heap_name = 11;</code>
         * @param value The heapName to set.
         * @return This builder for chaining.
         */
        public Builder setHeapName(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          heapName_ = value;
          bitField0_ |= 0x00000100;
          onChanged();
          return this;
        }
        /**
         * <code>optional string heap_name = 11;</code>
         * @return This builder for chaining.
         */
        public Builder clearHeapName() {
          heapName_ = getDefaultInstance().getHeapName();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
          return this;
        }
        /**
         * <code>optional string heap_name = 11;</code>
         * @param value The bytes for heapName to set.
         * @return This builder for chaining.
         */
        public Builder setHeapNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          heapName_ = value;
          bitField0_ |= 0x00000100;
          onChanged();
          return this;
        }

        private long samplingIntervalBytes_ ;
        /**
         * <code>optional uint64 sampling_interval_bytes = 12;</code>
         * @return Whether the samplingIntervalBytes field is set.
         */
        @java.lang.Override
        public boolean hasSamplingIntervalBytes() {
          return ((bitField0_ & 0x00000200) != 0);
        }
        /**
         * <code>optional uint64 sampling_interval_bytes = 12;</code>
         * @return The samplingIntervalBytes.
         */
        @java.lang.Override
        public long getSamplingIntervalBytes() {
          return samplingIntervalBytes_;
        }
        /**
         * <code>optional uint64 sampling_interval_bytes = 12;</code>
         * @param value The samplingIntervalBytes to set.
         * @return This builder for chaining.
         */
        public Builder setSamplingIntervalBytes(long value) {
          
          samplingIntervalBytes_ = value;
          bitField0_ |= 0x00000200;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 sampling_interval_bytes = 12;</code>
         * @return This builder for chaining.
         */
        public Builder clearSamplingIntervalBytes() {
          bitField0_ = (bitField0_ & ~0x00000200);
          samplingIntervalBytes_ = 0L;
          onChanged();
          return this;
        }

        private long origSamplingIntervalBytes_ ;
        /**
         * <code>optional uint64 orig_sampling_interval_bytes = 13;</code>
         * @return Whether the origSamplingIntervalBytes field is set.
         */
        @java.lang.Override
        public boolean hasOrigSamplingIntervalBytes() {
          return ((bitField0_ & 0x00000400) != 0);
        }
        /**
         * <code>optional uint64 orig_sampling_interval_bytes = 13;</code>
         * @return The origSamplingIntervalBytes.
         */
        @java.lang.Override
        public long getOrigSamplingIntervalBytes() {
          return origSamplingIntervalBytes_;
        }
        /**
         * <code>optional uint64 orig_sampling_interval_bytes = 13;</code>
         * @param value The origSamplingIntervalBytes to set.
         * @return This builder for chaining.
         */
        public Builder setOrigSamplingIntervalBytes(long value) {
          
          origSamplingIntervalBytes_ = value;
          bitField0_ |= 0x00000400;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint64 orig_sampling_interval_bytes = 13;</code>
         * @return This builder for chaining.
         */
        public Builder clearOrigSamplingIntervalBytes() {
          bitField0_ = (bitField0_ & ~0x00000400);
          origSamplingIntervalBytes_ = 0L;
          onChanged();
          return this;
        }

        private long timestamp_ ;
        /**
         * <pre>
         * Timestamp of the state of the target process that this dump represents.
         * This can be different to the timestamp of the TracePackets for various
         * reasons:
         * * If disconnected is set above, this is the timestamp of last state
         *   heapprofd had of the process before it disconnected.
         * * Otherwise, if the rate of events produced by the process is high,
         *   heapprofd might be behind.
         * TODO(fmayer): This is MONOTONIC_COARSE. Refactor ClockSnapshot::Clock
         *               to have a type enum that we can reuse here.
         * </pre>
         *
         * <code>optional uint64 timestamp = 9;</code>
         * @return Whether the timestamp field is set.
         */
        @java.lang.Override
        public boolean hasTimestamp() {
          return ((bitField0_ & 0x00000800) != 0);
        }
        /**
         * <pre>
         * Timestamp of the state of the target process that this dump represents.
         * This can be different to the timestamp of the TracePackets for various
         * reasons:
         * * If disconnected is set above, this is the timestamp of last state
         *   heapprofd had of the process before it disconnected.
         * * Otherwise, if the rate of events produced by the process is high,
         *   heapprofd might be behind.
         * TODO(fmayer): This is MONOTONIC_COARSE. Refactor ClockSnapshot::Clock
         *               to have a type enum that we can reuse here.
         * </pre>
         *
         * <code>optional uint64 timestamp = 9;</code>
         * @return The timestamp.
         */
        @java.lang.Override
        public long getTimestamp() {
          return timestamp_;
        }
        /**
         * <pre>
         * Timestamp of the state of the target process that this dump represents.
         * This can be different to the timestamp of the TracePackets for various
         * reasons:
         * * If disconnected is set above, this is the timestamp of last state
         *   heapprofd had of the process before it disconnected.
         * * Otherwise, if the rate of events produced by the process is high,
         *   heapprofd might be behind.
         * TODO(fmayer): This is MONOTONIC_COARSE. Refactor ClockSnapshot::Clock
         *               to have a type enum that we can reuse here.
         * </pre>
         *
         * <code>optional uint64 timestamp = 9;</code>
         * @param value The timestamp to set.
         * @return This builder for chaining.
         */
        public Builder setTimestamp(long value) {
          
          timestamp_ = value;
          bitField0_ |= 0x00000800;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Timestamp of the state of the target process that this dump represents.
         * This can be different to the timestamp of the TracePackets for various
         * reasons:
         * * If disconnected is set above, this is the timestamp of last state
         *   heapprofd had of the process before it disconnected.
         * * Otherwise, if the rate of events produced by the process is high,
         *   heapprofd might be behind.
         * TODO(fmayer): This is MONOTONIC_COARSE. Refactor ClockSnapshot::Clock
         *               to have a type enum that we can reuse here.
         * </pre>
         *
         * <code>optional uint64 timestamp = 9;</code>
         * @return This builder for chaining.
         */
        public Builder clearTimestamp() {
          bitField0_ = (bitField0_ & ~0x00000800);
          timestamp_ = 0L;
          onChanged();
          return this;
        }

        private perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStats stats_;
        private com.google.protobuf.SingleFieldBuilderV3<
            perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStats, perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStats.Builder, perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStatsOrBuilder> statsBuilder_;
        /**
         * <pre>
         * Metadata about heapprofd.
         * </pre>
         *
         * <code>optional .perfetto.protos.ProfilePacket.ProcessStats stats = 5;</code>
         * @return Whether the stats field is set.
         */
        public boolean hasStats() {
          return ((bitField0_ & 0x00001000) != 0);
        }
        /**
         * <pre>
         * Metadata about heapprofd.
         * </pre>
         *
         * <code>optional .perfetto.protos.ProfilePacket.ProcessStats stats = 5;</code>
         * @return The stats.
         */
        public perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStats getStats() {
          if (statsBuilder_ == null) {
            return stats_ == null ? perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStats.getDefaultInstance() : stats_;
          } else {
            return statsBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * Metadata about heapprofd.
         * </pre>
         *
         * <code>optional .perfetto.protos.ProfilePacket.ProcessStats stats = 5;</code>
         */
        public Builder setStats(perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStats value) {
          if (statsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            stats_ = value;
          } else {
            statsBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00001000;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Metadata about heapprofd.
         * </pre>
         *
         * <code>optional .perfetto.protos.ProfilePacket.ProcessStats stats = 5;</code>
         */
        public Builder setStats(
            perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStats.Builder builderForValue) {
          if (statsBuilder_ == null) {
            stats_ = builderForValue.build();
          } else {
            statsBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00001000;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Metadata about heapprofd.
         * </pre>
         *
         * <code>optional .perfetto.protos.ProfilePacket.ProcessStats stats = 5;</code>
         */
        public Builder mergeStats(perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStats value) {
          if (statsBuilder_ == null) {
            if (((bitField0_ & 0x00001000) != 0) &&
              stats_ != null &&
              stats_ != perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStats.getDefaultInstance()) {
              getStatsBuilder().mergeFrom(value);
            } else {
              stats_ = value;
            }
          } else {
            statsBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00001000;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Metadata about heapprofd.
         * </pre>
         *
         * <code>optional .perfetto.protos.ProfilePacket.ProcessStats stats = 5;</code>
         */
        public Builder clearStats() {
          bitField0_ = (bitField0_ & ~0x00001000);
          stats_ = null;
          if (statsBuilder_ != null) {
            statsBuilder_.dispose();
            statsBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Metadata about heapprofd.
         * </pre>
         *
         * <code>optional .perfetto.protos.ProfilePacket.ProcessStats stats = 5;</code>
         */
        public perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStats.Builder getStatsBuilder() {
          bitField0_ |= 0x00001000;
          onChanged();
          return getStatsFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * Metadata about heapprofd.
         * </pre>
         *
         * <code>optional .perfetto.protos.ProfilePacket.ProcessStats stats = 5;</code>
         */
        public perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStatsOrBuilder getStatsOrBuilder() {
          if (statsBuilder_ != null) {
            return statsBuilder_.getMessageOrBuilder();
          } else {
            return stats_ == null ?
                perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStats.getDefaultInstance() : stats_;
          }
        }
        /**
         * <pre>
         * Metadata about heapprofd.
         * </pre>
         *
         * <code>optional .perfetto.protos.ProfilePacket.ProcessStats stats = 5;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStats, perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStats.Builder, perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStatsOrBuilder> 
            getStatsFieldBuilder() {
          if (statsBuilder_ == null) {
            statsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStats, perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStats.Builder, perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessStatsOrBuilder>(
                    getStats(),
                    getParentForChildren(),
                    isClean());
            stats_ = null;
          }
          return statsBuilder_;
        }

        private java.util.List<perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample> samples_ =
          java.util.Collections.emptyList();
        private void ensureSamplesIsMutable() {
          if (!((bitField0_ & 0x00002000) != 0)) {
            samples_ = new java.util.ArrayList<perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample>(samples_);
            bitField0_ |= 0x00002000;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample, perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample.Builder, perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSampleOrBuilder> samplesBuilder_;

        /**
         * <code>repeated .perfetto.protos.ProfilePacket.HeapSample samples = 2;</code>
         */
        public java.util.List<perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample> getSamplesList() {
          if (samplesBuilder_ == null) {
            return java.util.Collections.unmodifiableList(samples_);
          } else {
            return samplesBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .perfetto.protos.ProfilePacket.HeapSample samples = 2;</code>
         */
        public int getSamplesCount() {
          if (samplesBuilder_ == null) {
            return samples_.size();
          } else {
            return samplesBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .perfetto.protos.ProfilePacket.HeapSample samples = 2;</code>
         */
        public perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample getSamples(int index) {
          if (samplesBuilder_ == null) {
            return samples_.get(index);
          } else {
            return samplesBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .perfetto.protos.ProfilePacket.HeapSample samples = 2;</code>
         */
        public Builder setSamples(
            int index, perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample value) {
          if (samplesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSamplesIsMutable();
            samples_.set(index, value);
            onChanged();
          } else {
            samplesBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .perfetto.protos.ProfilePacket.HeapSample samples = 2;</code>
         */
        public Builder setSamples(
            int index, perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample.Builder builderForValue) {
          if (samplesBuilder_ == null) {
            ensureSamplesIsMutable();
            samples_.set(index, builderForValue.build());
            onChanged();
          } else {
            samplesBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .perfetto.protos.ProfilePacket.HeapSample samples = 2;</code>
         */
        public Builder addSamples(perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample value) {
          if (samplesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSamplesIsMutable();
            samples_.add(value);
            onChanged();
          } else {
            samplesBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .perfetto.protos.ProfilePacket.HeapSample samples = 2;</code>
         */
        public Builder addSamples(
            int index, perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample value) {
          if (samplesBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureSamplesIsMutable();
            samples_.add(index, value);
            onChanged();
          } else {
            samplesBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .perfetto.protos.ProfilePacket.HeapSample samples = 2;</code>
         */
        public Builder addSamples(
            perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample.Builder builderForValue) {
          if (samplesBuilder_ == null) {
            ensureSamplesIsMutable();
            samples_.add(builderForValue.build());
            onChanged();
          } else {
            samplesBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .perfetto.protos.ProfilePacket.HeapSample samples = 2;</code>
         */
        public Builder addSamples(
            int index, perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample.Builder builderForValue) {
          if (samplesBuilder_ == null) {
            ensureSamplesIsMutable();
            samples_.add(index, builderForValue.build());
            onChanged();
          } else {
            samplesBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .perfetto.protos.ProfilePacket.HeapSample samples = 2;</code>
         */
        public Builder addAllSamples(
            java.lang.Iterable<? extends perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample> values) {
          if (samplesBuilder_ == null) {
            ensureSamplesIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, samples_);
            onChanged();
          } else {
            samplesBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .perfetto.protos.ProfilePacket.HeapSample samples = 2;</code>
         */
        public Builder clearSamples() {
          if (samplesBuilder_ == null) {
            samples_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00002000);
            onChanged();
          } else {
            samplesBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .perfetto.protos.ProfilePacket.HeapSample samples = 2;</code>
         */
        public Builder removeSamples(int index) {
          if (samplesBuilder_ == null) {
            ensureSamplesIsMutable();
            samples_.remove(index);
            onChanged();
          } else {
            samplesBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .perfetto.protos.ProfilePacket.HeapSample samples = 2;</code>
         */
        public perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample.Builder getSamplesBuilder(
            int index) {
          return getSamplesFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .perfetto.protos.ProfilePacket.HeapSample samples = 2;</code>
         */
        public perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSampleOrBuilder getSamplesOrBuilder(
            int index) {
          if (samplesBuilder_ == null) {
            return samples_.get(index);  } else {
            return samplesBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .perfetto.protos.ProfilePacket.HeapSample samples = 2;</code>
         */
        public java.util.List<? extends perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSampleOrBuilder> 
             getSamplesOrBuilderList() {
          if (samplesBuilder_ != null) {
            return samplesBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(samples_);
          }
        }
        /**
         * <code>repeated .perfetto.protos.ProfilePacket.HeapSample samples = 2;</code>
         */
        public perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample.Builder addSamplesBuilder() {
          return getSamplesFieldBuilder().addBuilder(
              perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample.getDefaultInstance());
        }
        /**
         * <code>repeated .perfetto.protos.ProfilePacket.HeapSample samples = 2;</code>
         */
        public perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample.Builder addSamplesBuilder(
            int index) {
          return getSamplesFieldBuilder().addBuilder(
              index, perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample.getDefaultInstance());
        }
        /**
         * <code>repeated .perfetto.protos.ProfilePacket.HeapSample samples = 2;</code>
         */
        public java.util.List<perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample.Builder> 
             getSamplesBuilderList() {
          return getSamplesFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample, perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample.Builder, perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSampleOrBuilder> 
            getSamplesFieldBuilder() {
          if (samplesBuilder_ == null) {
            samplesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample, perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSample.Builder, perfetto.protos.ProfilePacketOuterClass.ProfilePacket.HeapSampleOrBuilder>(
                    samples_,
                    ((bitField0_ & 0x00002000) != 0),
                    getParentForChildren(),
                    isClean());
            samples_ = null;
          }
          return samplesBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:perfetto.protos.ProfilePacket.ProcessHeapSamples)
      }

      // @@protoc_insertion_point(class_scope:perfetto.protos.ProfilePacket.ProcessHeapSamples)
      private static final perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples();
      }

      public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<ProcessHeapSamples>
          PARSER = new com.google.protobuf.AbstractParser<ProcessHeapSamples>() {
        @java.lang.Override
        public ProcessHeapSamples parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<ProcessHeapSamples> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<ProcessHeapSamples> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int STRINGS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<perfetto.protos.ProfileCommon.InternedString> strings_;
    /**
     * <pre>
     * The following interning tables are only used in Android version Q.
     * In newer versions, these tables are in InternedData
     * (see protos/perfetto/trace/interned_data) and are shared across
     * multiple ProfilePackets.
     * For backwards compatibility, consumers need to first look up interned
     * data in the tables within the ProfilePacket, and then, if they are empty,
     * look up in the InternedData instead.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString strings = 1;</code>
     */
    @java.lang.Override
    public java.util.List<perfetto.protos.ProfileCommon.InternedString> getStringsList() {
      return strings_;
    }
    /**
     * <pre>
     * The following interning tables are only used in Android version Q.
     * In newer versions, these tables are in InternedData
     * (see protos/perfetto/trace/interned_data) and are shared across
     * multiple ProfilePackets.
     * For backwards compatibility, consumers need to first look up interned
     * data in the tables within the ProfilePacket, and then, if they are empty,
     * look up in the InternedData instead.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString strings = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends perfetto.protos.ProfileCommon.InternedStringOrBuilder> 
        getStringsOrBuilderList() {
      return strings_;
    }
    /**
     * <pre>
     * The following interning tables are only used in Android version Q.
     * In newer versions, these tables are in InternedData
     * (see protos/perfetto/trace/interned_data) and are shared across
     * multiple ProfilePackets.
     * For backwards compatibility, consumers need to first look up interned
     * data in the tables within the ProfilePacket, and then, if they are empty,
     * look up in the InternedData instead.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString strings = 1;</code>
     */
    @java.lang.Override
    public int getStringsCount() {
      return strings_.size();
    }
    /**
     * <pre>
     * The following interning tables are only used in Android version Q.
     * In newer versions, these tables are in InternedData
     * (see protos/perfetto/trace/interned_data) and are shared across
     * multiple ProfilePackets.
     * For backwards compatibility, consumers need to first look up interned
     * data in the tables within the ProfilePacket, and then, if they are empty,
     * look up in the InternedData instead.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString strings = 1;</code>
     */
    @java.lang.Override
    public perfetto.protos.ProfileCommon.InternedString getStrings(int index) {
      return strings_.get(index);
    }
    /**
     * <pre>
     * The following interning tables are only used in Android version Q.
     * In newer versions, these tables are in InternedData
     * (see protos/perfetto/trace/interned_data) and are shared across
     * multiple ProfilePackets.
     * For backwards compatibility, consumers need to first look up interned
     * data in the tables within the ProfilePacket, and then, if they are empty,
     * look up in the InternedData instead.
     * </pre>
     *
     * <code>repeated .perfetto.protos.InternedString strings = 1;</code>
     */
    @java.lang.Override
    public perfetto.protos.ProfileCommon.InternedStringOrBuilder getStringsOrBuilder(
        int index) {
      return strings_.get(index);
    }

    public static final int MAPPINGS_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private java.util.List<perfetto.protos.ProfileCommon.Mapping> mappings_;
    /**
     * <code>repeated .perfetto.protos.Mapping mappings = 4;</code>
     */
    @java.lang.Override
    public java.util.List<perfetto.protos.ProfileCommon.Mapping> getMappingsList() {
      return mappings_;
    }
    /**
     * <code>repeated .perfetto.protos.Mapping mappings = 4;</code>
     */
    @java.lang.Override
    public java.util.List<? extends perfetto.protos.ProfileCommon.MappingOrBuilder> 
        getMappingsOrBuilderList() {
      return mappings_;
    }
    /**
     * <code>repeated .perfetto.protos.Mapping mappings = 4;</code>
     */
    @java.lang.Override
    public int getMappingsCount() {
      return mappings_.size();
    }
    /**
     * <code>repeated .perfetto.protos.Mapping mappings = 4;</code>
     */
    @java.lang.Override
    public perfetto.protos.ProfileCommon.Mapping getMappings(int index) {
      return mappings_.get(index);
    }
    /**
     * <code>repeated .perfetto.protos.Mapping mappings = 4;</code>
     */
    @java.lang.Override
    public perfetto.protos.ProfileCommon.MappingOrBuilder getMappingsOrBuilder(
        int index) {
      return mappings_.get(index);
    }

    public static final int FRAMES_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private java.util.List<perfetto.protos.ProfileCommon.Frame> frames_;
    /**
     * <code>repeated .perfetto.protos.Frame frames = 2;</code>
     */
    @java.lang.Override
    public java.util.List<perfetto.protos.ProfileCommon.Frame> getFramesList() {
      return frames_;
    }
    /**
     * <code>repeated .perfetto.protos.Frame frames = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends perfetto.protos.ProfileCommon.FrameOrBuilder> 
        getFramesOrBuilderList() {
      return frames_;
    }
    /**
     * <code>repeated .perfetto.protos.Frame frames = 2;</code>
     */
    @java.lang.Override
    public int getFramesCount() {
      return frames_.size();
    }
    /**
     * <code>repeated .perfetto.protos.Frame frames = 2;</code>
     */
    @java.lang.Override
    public perfetto.protos.ProfileCommon.Frame getFrames(int index) {
      return frames_.get(index);
    }
    /**
     * <code>repeated .perfetto.protos.Frame frames = 2;</code>
     */
    @java.lang.Override
    public perfetto.protos.ProfileCommon.FrameOrBuilder getFramesOrBuilder(
        int index) {
      return frames_.get(index);
    }

    public static final int CALLSTACKS_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private java.util.List<perfetto.protos.ProfileCommon.Callstack> callstacks_;
    /**
     * <code>repeated .perfetto.protos.Callstack callstacks = 3;</code>
     */
    @java.lang.Override
    public java.util.List<perfetto.protos.ProfileCommon.Callstack> getCallstacksList() {
      return callstacks_;
    }
    /**
     * <code>repeated .perfetto.protos.Callstack callstacks = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends perfetto.protos.ProfileCommon.CallstackOrBuilder> 
        getCallstacksOrBuilderList() {
      return callstacks_;
    }
    /**
     * <code>repeated .perfetto.protos.Callstack callstacks = 3;</code>
     */
    @java.lang.Override
    public int getCallstacksCount() {
      return callstacks_.size();
    }
    /**
     * <code>repeated .perfetto.protos.Callstack callstacks = 3;</code>
     */
    @java.lang.Override
    public perfetto.protos.ProfileCommon.Callstack getCallstacks(int index) {
      return callstacks_.get(index);
    }
    /**
     * <code>repeated .perfetto.protos.Callstack callstacks = 3;</code>
     */
    @java.lang.Override
    public perfetto.protos.ProfileCommon.CallstackOrBuilder getCallstacksOrBuilder(
        int index) {
      return callstacks_.get(index);
    }

    public static final int PROCESS_DUMPS_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private java.util.List<perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples> processDumps_;
    /**
     * <code>repeated .perfetto.protos.ProfilePacket.ProcessHeapSamples process_dumps = 5;</code>
     */
    @java.lang.Override
    public java.util.List<perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples> getProcessDumpsList() {
      return processDumps_;
    }
    /**
     * <code>repeated .perfetto.protos.ProfilePacket.ProcessHeapSamples process_dumps = 5;</code>
     */
    @java.lang.Override
    public java.util.List<? extends perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamplesOrBuilder> 
        getProcessDumpsOrBuilderList() {
      return processDumps_;
    }
    /**
     * <code>repeated .perfetto.protos.ProfilePacket.ProcessHeapSamples process_dumps = 5;</code>
     */
    @java.lang.Override
    public int getProcessDumpsCount() {
      return processDumps_.size();
    }
    /**
     * <code>repeated .perfetto.protos.ProfilePacket.ProcessHeapSamples process_dumps = 5;</code>
     */
    @java.lang.Override
    public perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples getProcessDumps(int index) {
      return processDumps_.get(index);
    }
    /**
     * <code>repeated .perfetto.protos.ProfilePacket.ProcessHeapSamples process_dumps = 5;</code>
     */
    @java.lang.Override
    public perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamplesOrBuilder getProcessDumpsOrBuilder(
        int index) {
      return processDumps_.get(index);
    }

    public static final int CONTINUED_FIELD_NUMBER = 6;
    private boolean continued_ = false;
    /**
     * <pre>
     * If this is true, the next ProfilePacket in this package_sequence_id is a
     * continuation of this one.
     * To get all samples for a process, accummulate its
     * ProcessHeapSamples.samples until you see continued=false.
     * </pre>
     *
     * <code>optional bool continued = 6;</code>
     * @return Whether the continued field is set.
     */
    @java.lang.Override
    public boolean hasContinued() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * If this is true, the next ProfilePacket in this package_sequence_id is a
     * continuation of this one.
     * To get all samples for a process, accummulate its
     * ProcessHeapSamples.samples until you see continued=false.
     * </pre>
     *
     * <code>optional bool continued = 6;</code>
     * @return The continued.
     */
    @java.lang.Override
    public boolean getContinued() {
      return continued_;
    }

    public static final int INDEX_FIELD_NUMBER = 7;
    private long index_ = 0L;
    /**
     * <pre>
     * Index of this ProfilePacket on its package_sequence_id. Can be used
     * to detect dropped data.
     * Verify these are consecutive.
     * </pre>
     *
     * <code>optional uint64 index = 7;</code>
     * @return Whether the index field is set.
     */
    @java.lang.Override
    public boolean hasIndex() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Index of this ProfilePacket on its package_sequence_id. Can be used
     * to detect dropped data.
     * Verify these are consecutive.
     * </pre>
     *
     * <code>optional uint64 index = 7;</code>
     * @return The index.
     */
    @java.lang.Override
    public long getIndex() {
      return index_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < strings_.size(); i++) {
        output.writeMessage(1, strings_.get(i));
      }
      for (int i = 0; i < frames_.size(); i++) {
        output.writeMessage(2, frames_.get(i));
      }
      for (int i = 0; i < callstacks_.size(); i++) {
        output.writeMessage(3, callstacks_.get(i));
      }
      for (int i = 0; i < mappings_.size(); i++) {
        output.writeMessage(4, mappings_.get(i));
      }
      for (int i = 0; i < processDumps_.size(); i++) {
        output.writeMessage(5, processDumps_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeBool(6, continued_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt64(7, index_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < strings_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, strings_.get(i));
      }
      for (int i = 0; i < frames_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, frames_.get(i));
      }
      for (int i = 0; i < callstacks_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, callstacks_.get(i));
      }
      for (int i = 0; i < mappings_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, mappings_.get(i));
      }
      for (int i = 0; i < processDumps_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, processDumps_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, continued_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(7, index_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof perfetto.protos.ProfilePacketOuterClass.ProfilePacket)) {
        return super.equals(obj);
      }
      perfetto.protos.ProfilePacketOuterClass.ProfilePacket other = (perfetto.protos.ProfilePacketOuterClass.ProfilePacket) obj;

      if (!getStringsList()
          .equals(other.getStringsList())) return false;
      if (!getMappingsList()
          .equals(other.getMappingsList())) return false;
      if (!getFramesList()
          .equals(other.getFramesList())) return false;
      if (!getCallstacksList()
          .equals(other.getCallstacksList())) return false;
      if (!getProcessDumpsList()
          .equals(other.getProcessDumpsList())) return false;
      if (hasContinued() != other.hasContinued()) return false;
      if (hasContinued()) {
        if (getContinued()
            != other.getContinued()) return false;
      }
      if (hasIndex() != other.hasIndex()) return false;
      if (hasIndex()) {
        if (getIndex()
            != other.getIndex()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getStringsCount() > 0) {
        hash = (37 * hash) + STRINGS_FIELD_NUMBER;
        hash = (53 * hash) + getStringsList().hashCode();
      }
      if (getMappingsCount() > 0) {
        hash = (37 * hash) + MAPPINGS_FIELD_NUMBER;
        hash = (53 * hash) + getMappingsList().hashCode();
      }
      if (getFramesCount() > 0) {
        hash = (37 * hash) + FRAMES_FIELD_NUMBER;
        hash = (53 * hash) + getFramesList().hashCode();
      }
      if (getCallstacksCount() > 0) {
        hash = (37 * hash) + CALLSTACKS_FIELD_NUMBER;
        hash = (53 * hash) + getCallstacksList().hashCode();
      }
      if (getProcessDumpsCount() > 0) {
        hash = (37 * hash) + PROCESS_DUMPS_FIELD_NUMBER;
        hash = (53 * hash) + getProcessDumpsList().hashCode();
      }
      if (hasContinued()) {
        hash = (37 * hash) + CONTINUED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getContinued());
      }
      if (hasIndex()) {
        hash = (37 * hash) + INDEX_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getIndex());
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(perfetto.protos.ProfilePacketOuterClass.ProfilePacket prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The packet emitted by heapprofd for each heap snapshot. A snapshot can
     * involve more than one ProfilePacket if the snapshot is big (when |continued|
     * is true). The cardinality and grouping is as follows:
     * A ProfilePacket contains:
     *  - 1+ per-process heap snapshots (ProcessHeapSamples). Normally there is only
     *    one heap per process (the main malloc/free heap), but there can be more if
     *    the process is using the heapprofd API to profile custom allocators.
     *  - Globally interned strings, mappings and frames (to allow de-duplicating
     *    frames/mapping in common between different processes).
     * A ProcessHeapSamples contains:
     *  - The process and heap identifier.
     *  - A number of HeapSample, one for each callsite that had some alloc/frees.
     *  - Statistics about heapprofd internals (e.g., sampling/unwinding timings).
     * A HeapSample contains statistics about callsites:
     *  - Total number of bytes allocated and freed from that callsite.
     *  - Total number of alloc/free calls sampled.
     *  - Stats at the local maximum when dump_at_max = true.
     * See https://perfetto.dev/docs/data-sources/native-heap-profiler for more.
     * </pre>
     *
     * Protobuf type {@code perfetto.protos.ProfilePacket}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:perfetto.protos.ProfilePacket)
        perfetto.protos.ProfilePacketOuterClass.ProfilePacketOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_ProfilePacket_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_ProfilePacket_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.ProfilePacketOuterClass.ProfilePacket.class, perfetto.protos.ProfilePacketOuterClass.ProfilePacket.Builder.class);
      }

      // Construct using perfetto.protos.ProfilePacketOuterClass.ProfilePacket.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (stringsBuilder_ == null) {
          strings_ = java.util.Collections.emptyList();
        } else {
          strings_ = null;
          stringsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (mappingsBuilder_ == null) {
          mappings_ = java.util.Collections.emptyList();
        } else {
          mappings_ = null;
          mappingsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (framesBuilder_ == null) {
          frames_ = java.util.Collections.emptyList();
        } else {
          frames_ = null;
          framesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (callstacksBuilder_ == null) {
          callstacks_ = java.util.Collections.emptyList();
        } else {
          callstacks_ = null;
          callstacksBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        if (processDumpsBuilder_ == null) {
          processDumps_ = java.util.Collections.emptyList();
        } else {
          processDumps_ = null;
          processDumpsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        continued_ = false;
        index_ = 0L;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_ProfilePacket_descriptor;
      }

      @java.lang.Override
      public perfetto.protos.ProfilePacketOuterClass.ProfilePacket getDefaultInstanceForType() {
        return perfetto.protos.ProfilePacketOuterClass.ProfilePacket.getDefaultInstance();
      }

      @java.lang.Override
      public perfetto.protos.ProfilePacketOuterClass.ProfilePacket build() {
        perfetto.protos.ProfilePacketOuterClass.ProfilePacket result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public perfetto.protos.ProfilePacketOuterClass.ProfilePacket buildPartial() {
        perfetto.protos.ProfilePacketOuterClass.ProfilePacket result = new perfetto.protos.ProfilePacketOuterClass.ProfilePacket(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(perfetto.protos.ProfilePacketOuterClass.ProfilePacket result) {
        if (stringsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            strings_ = java.util.Collections.unmodifiableList(strings_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.strings_ = strings_;
        } else {
          result.strings_ = stringsBuilder_.build();
        }
        if (mappingsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            mappings_ = java.util.Collections.unmodifiableList(mappings_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.mappings_ = mappings_;
        } else {
          result.mappings_ = mappingsBuilder_.build();
        }
        if (framesBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            frames_ = java.util.Collections.unmodifiableList(frames_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.frames_ = frames_;
        } else {
          result.frames_ = framesBuilder_.build();
        }
        if (callstacksBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0)) {
            callstacks_ = java.util.Collections.unmodifiableList(callstacks_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.callstacks_ = callstacks_;
        } else {
          result.callstacks_ = callstacksBuilder_.build();
        }
        if (processDumpsBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0)) {
            processDumps_ = java.util.Collections.unmodifiableList(processDumps_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.processDumps_ = processDumps_;
        } else {
          result.processDumps_ = processDumpsBuilder_.build();
        }
      }

      private void buildPartial0(perfetto.protos.ProfilePacketOuterClass.ProfilePacket result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.continued_ = continued_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.index_ = index_;
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof perfetto.protos.ProfilePacketOuterClass.ProfilePacket) {
          return mergeFrom((perfetto.protos.ProfilePacketOuterClass.ProfilePacket)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(perfetto.protos.ProfilePacketOuterClass.ProfilePacket other) {
        if (other == perfetto.protos.ProfilePacketOuterClass.ProfilePacket.getDefaultInstance()) return this;
        if (stringsBuilder_ == null) {
          if (!other.strings_.isEmpty()) {
            if (strings_.isEmpty()) {
              strings_ = other.strings_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureStringsIsMutable();
              strings_.addAll(other.strings_);
            }
            onChanged();
          }
        } else {
          if (!other.strings_.isEmpty()) {
            if (stringsBuilder_.isEmpty()) {
              stringsBuilder_.dispose();
              stringsBuilder_ = null;
              strings_ = other.strings_;
              bitField0_ = (bitField0_ & ~0x00000001);
              stringsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getStringsFieldBuilder() : null;
            } else {
              stringsBuilder_.addAllMessages(other.strings_);
            }
          }
        }
        if (mappingsBuilder_ == null) {
          if (!other.mappings_.isEmpty()) {
            if (mappings_.isEmpty()) {
              mappings_ = other.mappings_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMappingsIsMutable();
              mappings_.addAll(other.mappings_);
            }
            onChanged();
          }
        } else {
          if (!other.mappings_.isEmpty()) {
            if (mappingsBuilder_.isEmpty()) {
              mappingsBuilder_.dispose();
              mappingsBuilder_ = null;
              mappings_ = other.mappings_;
              bitField0_ = (bitField0_ & ~0x00000002);
              mappingsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMappingsFieldBuilder() : null;
            } else {
              mappingsBuilder_.addAllMessages(other.mappings_);
            }
          }
        }
        if (framesBuilder_ == null) {
          if (!other.frames_.isEmpty()) {
            if (frames_.isEmpty()) {
              frames_ = other.frames_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureFramesIsMutable();
              frames_.addAll(other.frames_);
            }
            onChanged();
          }
        } else {
          if (!other.frames_.isEmpty()) {
            if (framesBuilder_.isEmpty()) {
              framesBuilder_.dispose();
              framesBuilder_ = null;
              frames_ = other.frames_;
              bitField0_ = (bitField0_ & ~0x00000004);
              framesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getFramesFieldBuilder() : null;
            } else {
              framesBuilder_.addAllMessages(other.frames_);
            }
          }
        }
        if (callstacksBuilder_ == null) {
          if (!other.callstacks_.isEmpty()) {
            if (callstacks_.isEmpty()) {
              callstacks_ = other.callstacks_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureCallstacksIsMutable();
              callstacks_.addAll(other.callstacks_);
            }
            onChanged();
          }
        } else {
          if (!other.callstacks_.isEmpty()) {
            if (callstacksBuilder_.isEmpty()) {
              callstacksBuilder_.dispose();
              callstacksBuilder_ = null;
              callstacks_ = other.callstacks_;
              bitField0_ = (bitField0_ & ~0x00000008);
              callstacksBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getCallstacksFieldBuilder() : null;
            } else {
              callstacksBuilder_.addAllMessages(other.callstacks_);
            }
          }
        }
        if (processDumpsBuilder_ == null) {
          if (!other.processDumps_.isEmpty()) {
            if (processDumps_.isEmpty()) {
              processDumps_ = other.processDumps_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureProcessDumpsIsMutable();
              processDumps_.addAll(other.processDumps_);
            }
            onChanged();
          }
        } else {
          if (!other.processDumps_.isEmpty()) {
            if (processDumpsBuilder_.isEmpty()) {
              processDumpsBuilder_.dispose();
              processDumpsBuilder_ = null;
              processDumps_ = other.processDumps_;
              bitField0_ = (bitField0_ & ~0x00000010);
              processDumpsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getProcessDumpsFieldBuilder() : null;
            } else {
              processDumpsBuilder_.addAllMessages(other.processDumps_);
            }
          }
        }
        if (other.hasContinued()) {
          setContinued(other.getContinued());
        }
        if (other.hasIndex()) {
          setIndex(other.getIndex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                perfetto.protos.ProfileCommon.InternedString m =
                    input.readMessage(
                        perfetto.protos.ProfileCommon.InternedString.PARSER,
                        extensionRegistry);
                if (stringsBuilder_ == null) {
                  ensureStringsIsMutable();
                  strings_.add(m);
                } else {
                  stringsBuilder_.addMessage(m);
                }
                break;
              } // case 10
              case 18: {
                perfetto.protos.ProfileCommon.Frame m =
                    input.readMessage(
                        perfetto.protos.ProfileCommon.Frame.PARSER,
                        extensionRegistry);
                if (framesBuilder_ == null) {
                  ensureFramesIsMutable();
                  frames_.add(m);
                } else {
                  framesBuilder_.addMessage(m);
                }
                break;
              } // case 18
              case 26: {
                perfetto.protos.ProfileCommon.Callstack m =
                    input.readMessage(
                        perfetto.protos.ProfileCommon.Callstack.PARSER,
                        extensionRegistry);
                if (callstacksBuilder_ == null) {
                  ensureCallstacksIsMutable();
                  callstacks_.add(m);
                } else {
                  callstacksBuilder_.addMessage(m);
                }
                break;
              } // case 26
              case 34: {
                perfetto.protos.ProfileCommon.Mapping m =
                    input.readMessage(
                        perfetto.protos.ProfileCommon.Mapping.PARSER,
                        extensionRegistry);
                if (mappingsBuilder_ == null) {
                  ensureMappingsIsMutable();
                  mappings_.add(m);
                } else {
                  mappingsBuilder_.addMessage(m);
                }
                break;
              } // case 34
              case 42: {
                perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples m =
                    input.readMessage(
                        perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples.PARSER,
                        extensionRegistry);
                if (processDumpsBuilder_ == null) {
                  ensureProcessDumpsIsMutable();
                  processDumps_.add(m);
                } else {
                  processDumpsBuilder_.addMessage(m);
                }
                break;
              } // case 42
              case 48: {
                continued_ = input.readBool();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 56: {
                index_ = input.readUInt64();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<perfetto.protos.ProfileCommon.InternedString> strings_ =
        java.util.Collections.emptyList();
      private void ensureStringsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          strings_ = new java.util.ArrayList<perfetto.protos.ProfileCommon.InternedString>(strings_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.ProfileCommon.InternedString, perfetto.protos.ProfileCommon.InternedString.Builder, perfetto.protos.ProfileCommon.InternedStringOrBuilder> stringsBuilder_;

      /**
       * <pre>
       * The following interning tables are only used in Android version Q.
       * In newer versions, these tables are in InternedData
       * (see protos/perfetto/trace/interned_data) and are shared across
       * multiple ProfilePackets.
       * For backwards compatibility, consumers need to first look up interned
       * data in the tables within the ProfilePacket, and then, if they are empty,
       * look up in the InternedData instead.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString strings = 1;</code>
       */
      public java.util.List<perfetto.protos.ProfileCommon.InternedString> getStringsList() {
        if (stringsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(strings_);
        } else {
          return stringsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The following interning tables are only used in Android version Q.
       * In newer versions, these tables are in InternedData
       * (see protos/perfetto/trace/interned_data) and are shared across
       * multiple ProfilePackets.
       * For backwards compatibility, consumers need to first look up interned
       * data in the tables within the ProfilePacket, and then, if they are empty,
       * look up in the InternedData instead.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString strings = 1;</code>
       */
      public int getStringsCount() {
        if (stringsBuilder_ == null) {
          return strings_.size();
        } else {
          return stringsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The following interning tables are only used in Android version Q.
       * In newer versions, these tables are in InternedData
       * (see protos/perfetto/trace/interned_data) and are shared across
       * multiple ProfilePackets.
       * For backwards compatibility, consumers need to first look up interned
       * data in the tables within the ProfilePacket, and then, if they are empty,
       * look up in the InternedData instead.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString strings = 1;</code>
       */
      public perfetto.protos.ProfileCommon.InternedString getStrings(int index) {
        if (stringsBuilder_ == null) {
          return strings_.get(index);
        } else {
          return stringsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The following interning tables are only used in Android version Q.
       * In newer versions, these tables are in InternedData
       * (see protos/perfetto/trace/interned_data) and are shared across
       * multiple ProfilePackets.
       * For backwards compatibility, consumers need to first look up interned
       * data in the tables within the ProfilePacket, and then, if they are empty,
       * look up in the InternedData instead.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString strings = 1;</code>
       */
      public Builder setStrings(
          int index, perfetto.protos.ProfileCommon.InternedString value) {
        if (stringsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStringsIsMutable();
          strings_.set(index, value);
          onChanged();
        } else {
          stringsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The following interning tables are only used in Android version Q.
       * In newer versions, these tables are in InternedData
       * (see protos/perfetto/trace/interned_data) and are shared across
       * multiple ProfilePackets.
       * For backwards compatibility, consumers need to first look up interned
       * data in the tables within the ProfilePacket, and then, if they are empty,
       * look up in the InternedData instead.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString strings = 1;</code>
       */
      public Builder setStrings(
          int index, perfetto.protos.ProfileCommon.InternedString.Builder builderForValue) {
        if (stringsBuilder_ == null) {
          ensureStringsIsMutable();
          strings_.set(index, builderForValue.build());
          onChanged();
        } else {
          stringsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The following interning tables are only used in Android version Q.
       * In newer versions, these tables are in InternedData
       * (see protos/perfetto/trace/interned_data) and are shared across
       * multiple ProfilePackets.
       * For backwards compatibility, consumers need to first look up interned
       * data in the tables within the ProfilePacket, and then, if they are empty,
       * look up in the InternedData instead.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString strings = 1;</code>
       */
      public Builder addStrings(perfetto.protos.ProfileCommon.InternedString value) {
        if (stringsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStringsIsMutable();
          strings_.add(value);
          onChanged();
        } else {
          stringsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The following interning tables are only used in Android version Q.
       * In newer versions, these tables are in InternedData
       * (see protos/perfetto/trace/interned_data) and are shared across
       * multiple ProfilePackets.
       * For backwards compatibility, consumers need to first look up interned
       * data in the tables within the ProfilePacket, and then, if they are empty,
       * look up in the InternedData instead.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString strings = 1;</code>
       */
      public Builder addStrings(
          int index, perfetto.protos.ProfileCommon.InternedString value) {
        if (stringsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStringsIsMutable();
          strings_.add(index, value);
          onChanged();
        } else {
          stringsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The following interning tables are only used in Android version Q.
       * In newer versions, these tables are in InternedData
       * (see protos/perfetto/trace/interned_data) and are shared across
       * multiple ProfilePackets.
       * For backwards compatibility, consumers need to first look up interned
       * data in the tables within the ProfilePacket, and then, if they are empty,
       * look up in the InternedData instead.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString strings = 1;</code>
       */
      public Builder addStrings(
          perfetto.protos.ProfileCommon.InternedString.Builder builderForValue) {
        if (stringsBuilder_ == null) {
          ensureStringsIsMutable();
          strings_.add(builderForValue.build());
          onChanged();
        } else {
          stringsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The following interning tables are only used in Android version Q.
       * In newer versions, these tables are in InternedData
       * (see protos/perfetto/trace/interned_data) and are shared across
       * multiple ProfilePackets.
       * For backwards compatibility, consumers need to first look up interned
       * data in the tables within the ProfilePacket, and then, if they are empty,
       * look up in the InternedData instead.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString strings = 1;</code>
       */
      public Builder addStrings(
          int index, perfetto.protos.ProfileCommon.InternedString.Builder builderForValue) {
        if (stringsBuilder_ == null) {
          ensureStringsIsMutable();
          strings_.add(index, builderForValue.build());
          onChanged();
        } else {
          stringsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The following interning tables are only used in Android version Q.
       * In newer versions, these tables are in InternedData
       * (see protos/perfetto/trace/interned_data) and are shared across
       * multiple ProfilePackets.
       * For backwards compatibility, consumers need to first look up interned
       * data in the tables within the ProfilePacket, and then, if they are empty,
       * look up in the InternedData instead.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString strings = 1;</code>
       */
      public Builder addAllStrings(
          java.lang.Iterable<? extends perfetto.protos.ProfileCommon.InternedString> values) {
        if (stringsBuilder_ == null) {
          ensureStringsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, strings_);
          onChanged();
        } else {
          stringsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The following interning tables are only used in Android version Q.
       * In newer versions, these tables are in InternedData
       * (see protos/perfetto/trace/interned_data) and are shared across
       * multiple ProfilePackets.
       * For backwards compatibility, consumers need to first look up interned
       * data in the tables within the ProfilePacket, and then, if they are empty,
       * look up in the InternedData instead.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString strings = 1;</code>
       */
      public Builder clearStrings() {
        if (stringsBuilder_ == null) {
          strings_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          stringsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The following interning tables are only used in Android version Q.
       * In newer versions, these tables are in InternedData
       * (see protos/perfetto/trace/interned_data) and are shared across
       * multiple ProfilePackets.
       * For backwards compatibility, consumers need to first look up interned
       * data in the tables within the ProfilePacket, and then, if they are empty,
       * look up in the InternedData instead.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString strings = 1;</code>
       */
      public Builder removeStrings(int index) {
        if (stringsBuilder_ == null) {
          ensureStringsIsMutable();
          strings_.remove(index);
          onChanged();
        } else {
          stringsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The following interning tables are only used in Android version Q.
       * In newer versions, these tables are in InternedData
       * (see protos/perfetto/trace/interned_data) and are shared across
       * multiple ProfilePackets.
       * For backwards compatibility, consumers need to first look up interned
       * data in the tables within the ProfilePacket, and then, if they are empty,
       * look up in the InternedData instead.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString strings = 1;</code>
       */
      public perfetto.protos.ProfileCommon.InternedString.Builder getStringsBuilder(
          int index) {
        return getStringsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The following interning tables are only used in Android version Q.
       * In newer versions, these tables are in InternedData
       * (see protos/perfetto/trace/interned_data) and are shared across
       * multiple ProfilePackets.
       * For backwards compatibility, consumers need to first look up interned
       * data in the tables within the ProfilePacket, and then, if they are empty,
       * look up in the InternedData instead.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString strings = 1;</code>
       */
      public perfetto.protos.ProfileCommon.InternedStringOrBuilder getStringsOrBuilder(
          int index) {
        if (stringsBuilder_ == null) {
          return strings_.get(index);  } else {
          return stringsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The following interning tables are only used in Android version Q.
       * In newer versions, these tables are in InternedData
       * (see protos/perfetto/trace/interned_data) and are shared across
       * multiple ProfilePackets.
       * For backwards compatibility, consumers need to first look up interned
       * data in the tables within the ProfilePacket, and then, if they are empty,
       * look up in the InternedData instead.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString strings = 1;</code>
       */
      public java.util.List<? extends perfetto.protos.ProfileCommon.InternedStringOrBuilder> 
           getStringsOrBuilderList() {
        if (stringsBuilder_ != null) {
          return stringsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(strings_);
        }
      }
      /**
       * <pre>
       * The following interning tables are only used in Android version Q.
       * In newer versions, these tables are in InternedData
       * (see protos/perfetto/trace/interned_data) and are shared across
       * multiple ProfilePackets.
       * For backwards compatibility, consumers need to first look up interned
       * data in the tables within the ProfilePacket, and then, if they are empty,
       * look up in the InternedData instead.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString strings = 1;</code>
       */
      public perfetto.protos.ProfileCommon.InternedString.Builder addStringsBuilder() {
        return getStringsFieldBuilder().addBuilder(
            perfetto.protos.ProfileCommon.InternedString.getDefaultInstance());
      }
      /**
       * <pre>
       * The following interning tables are only used in Android version Q.
       * In newer versions, these tables are in InternedData
       * (see protos/perfetto/trace/interned_data) and are shared across
       * multiple ProfilePackets.
       * For backwards compatibility, consumers need to first look up interned
       * data in the tables within the ProfilePacket, and then, if they are empty,
       * look up in the InternedData instead.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString strings = 1;</code>
       */
      public perfetto.protos.ProfileCommon.InternedString.Builder addStringsBuilder(
          int index) {
        return getStringsFieldBuilder().addBuilder(
            index, perfetto.protos.ProfileCommon.InternedString.getDefaultInstance());
      }
      /**
       * <pre>
       * The following interning tables are only used in Android version Q.
       * In newer versions, these tables are in InternedData
       * (see protos/perfetto/trace/interned_data) and are shared across
       * multiple ProfilePackets.
       * For backwards compatibility, consumers need to first look up interned
       * data in the tables within the ProfilePacket, and then, if they are empty,
       * look up in the InternedData instead.
       * </pre>
       *
       * <code>repeated .perfetto.protos.InternedString strings = 1;</code>
       */
      public java.util.List<perfetto.protos.ProfileCommon.InternedString.Builder> 
           getStringsBuilderList() {
        return getStringsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.ProfileCommon.InternedString, perfetto.protos.ProfileCommon.InternedString.Builder, perfetto.protos.ProfileCommon.InternedStringOrBuilder> 
          getStringsFieldBuilder() {
        if (stringsBuilder_ == null) {
          stringsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              perfetto.protos.ProfileCommon.InternedString, perfetto.protos.ProfileCommon.InternedString.Builder, perfetto.protos.ProfileCommon.InternedStringOrBuilder>(
                  strings_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          strings_ = null;
        }
        return stringsBuilder_;
      }

      private java.util.List<perfetto.protos.ProfileCommon.Mapping> mappings_ =
        java.util.Collections.emptyList();
      private void ensureMappingsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          mappings_ = new java.util.ArrayList<perfetto.protos.ProfileCommon.Mapping>(mappings_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.ProfileCommon.Mapping, perfetto.protos.ProfileCommon.Mapping.Builder, perfetto.protos.ProfileCommon.MappingOrBuilder> mappingsBuilder_;

      /**
       * <code>repeated .perfetto.protos.Mapping mappings = 4;</code>
       */
      public java.util.List<perfetto.protos.ProfileCommon.Mapping> getMappingsList() {
        if (mappingsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(mappings_);
        } else {
          return mappingsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .perfetto.protos.Mapping mappings = 4;</code>
       */
      public int getMappingsCount() {
        if (mappingsBuilder_ == null) {
          return mappings_.size();
        } else {
          return mappingsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .perfetto.protos.Mapping mappings = 4;</code>
       */
      public perfetto.protos.ProfileCommon.Mapping getMappings(int index) {
        if (mappingsBuilder_ == null) {
          return mappings_.get(index);
        } else {
          return mappingsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .perfetto.protos.Mapping mappings = 4;</code>
       */
      public Builder setMappings(
          int index, perfetto.protos.ProfileCommon.Mapping value) {
        if (mappingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMappingsIsMutable();
          mappings_.set(index, value);
          onChanged();
        } else {
          mappingsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.Mapping mappings = 4;</code>
       */
      public Builder setMappings(
          int index, perfetto.protos.ProfileCommon.Mapping.Builder builderForValue) {
        if (mappingsBuilder_ == null) {
          ensureMappingsIsMutable();
          mappings_.set(index, builderForValue.build());
          onChanged();
        } else {
          mappingsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.Mapping mappings = 4;</code>
       */
      public Builder addMappings(perfetto.protos.ProfileCommon.Mapping value) {
        if (mappingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMappingsIsMutable();
          mappings_.add(value);
          onChanged();
        } else {
          mappingsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.Mapping mappings = 4;</code>
       */
      public Builder addMappings(
          int index, perfetto.protos.ProfileCommon.Mapping value) {
        if (mappingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMappingsIsMutable();
          mappings_.add(index, value);
          onChanged();
        } else {
          mappingsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.Mapping mappings = 4;</code>
       */
      public Builder addMappings(
          perfetto.protos.ProfileCommon.Mapping.Builder builderForValue) {
        if (mappingsBuilder_ == null) {
          ensureMappingsIsMutable();
          mappings_.add(builderForValue.build());
          onChanged();
        } else {
          mappingsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.Mapping mappings = 4;</code>
       */
      public Builder addMappings(
          int index, perfetto.protos.ProfileCommon.Mapping.Builder builderForValue) {
        if (mappingsBuilder_ == null) {
          ensureMappingsIsMutable();
          mappings_.add(index, builderForValue.build());
          onChanged();
        } else {
          mappingsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.Mapping mappings = 4;</code>
       */
      public Builder addAllMappings(
          java.lang.Iterable<? extends perfetto.protos.ProfileCommon.Mapping> values) {
        if (mappingsBuilder_ == null) {
          ensureMappingsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, mappings_);
          onChanged();
        } else {
          mappingsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.Mapping mappings = 4;</code>
       */
      public Builder clearMappings() {
        if (mappingsBuilder_ == null) {
          mappings_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          mappingsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.Mapping mappings = 4;</code>
       */
      public Builder removeMappings(int index) {
        if (mappingsBuilder_ == null) {
          ensureMappingsIsMutable();
          mappings_.remove(index);
          onChanged();
        } else {
          mappingsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.Mapping mappings = 4;</code>
       */
      public perfetto.protos.ProfileCommon.Mapping.Builder getMappingsBuilder(
          int index) {
        return getMappingsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .perfetto.protos.Mapping mappings = 4;</code>
       */
      public perfetto.protos.ProfileCommon.MappingOrBuilder getMappingsOrBuilder(
          int index) {
        if (mappingsBuilder_ == null) {
          return mappings_.get(index);  } else {
          return mappingsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .perfetto.protos.Mapping mappings = 4;</code>
       */
      public java.util.List<? extends perfetto.protos.ProfileCommon.MappingOrBuilder> 
           getMappingsOrBuilderList() {
        if (mappingsBuilder_ != null) {
          return mappingsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(mappings_);
        }
      }
      /**
       * <code>repeated .perfetto.protos.Mapping mappings = 4;</code>
       */
      public perfetto.protos.ProfileCommon.Mapping.Builder addMappingsBuilder() {
        return getMappingsFieldBuilder().addBuilder(
            perfetto.protos.ProfileCommon.Mapping.getDefaultInstance());
      }
      /**
       * <code>repeated .perfetto.protos.Mapping mappings = 4;</code>
       */
      public perfetto.protos.ProfileCommon.Mapping.Builder addMappingsBuilder(
          int index) {
        return getMappingsFieldBuilder().addBuilder(
            index, perfetto.protos.ProfileCommon.Mapping.getDefaultInstance());
      }
      /**
       * <code>repeated .perfetto.protos.Mapping mappings = 4;</code>
       */
      public java.util.List<perfetto.protos.ProfileCommon.Mapping.Builder> 
           getMappingsBuilderList() {
        return getMappingsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.ProfileCommon.Mapping, perfetto.protos.ProfileCommon.Mapping.Builder, perfetto.protos.ProfileCommon.MappingOrBuilder> 
          getMappingsFieldBuilder() {
        if (mappingsBuilder_ == null) {
          mappingsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              perfetto.protos.ProfileCommon.Mapping, perfetto.protos.ProfileCommon.Mapping.Builder, perfetto.protos.ProfileCommon.MappingOrBuilder>(
                  mappings_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          mappings_ = null;
        }
        return mappingsBuilder_;
      }

      private java.util.List<perfetto.protos.ProfileCommon.Frame> frames_ =
        java.util.Collections.emptyList();
      private void ensureFramesIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          frames_ = new java.util.ArrayList<perfetto.protos.ProfileCommon.Frame>(frames_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.ProfileCommon.Frame, perfetto.protos.ProfileCommon.Frame.Builder, perfetto.protos.ProfileCommon.FrameOrBuilder> framesBuilder_;

      /**
       * <code>repeated .perfetto.protos.Frame frames = 2;</code>
       */
      public java.util.List<perfetto.protos.ProfileCommon.Frame> getFramesList() {
        if (framesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(frames_);
        } else {
          return framesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .perfetto.protos.Frame frames = 2;</code>
       */
      public int getFramesCount() {
        if (framesBuilder_ == null) {
          return frames_.size();
        } else {
          return framesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .perfetto.protos.Frame frames = 2;</code>
       */
      public perfetto.protos.ProfileCommon.Frame getFrames(int index) {
        if (framesBuilder_ == null) {
          return frames_.get(index);
        } else {
          return framesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .perfetto.protos.Frame frames = 2;</code>
       */
      public Builder setFrames(
          int index, perfetto.protos.ProfileCommon.Frame value) {
        if (framesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFramesIsMutable();
          frames_.set(index, value);
          onChanged();
        } else {
          framesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.Frame frames = 2;</code>
       */
      public Builder setFrames(
          int index, perfetto.protos.ProfileCommon.Frame.Builder builderForValue) {
        if (framesBuilder_ == null) {
          ensureFramesIsMutable();
          frames_.set(index, builderForValue.build());
          onChanged();
        } else {
          framesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.Frame frames = 2;</code>
       */
      public Builder addFrames(perfetto.protos.ProfileCommon.Frame value) {
        if (framesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFramesIsMutable();
          frames_.add(value);
          onChanged();
        } else {
          framesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.Frame frames = 2;</code>
       */
      public Builder addFrames(
          int index, perfetto.protos.ProfileCommon.Frame value) {
        if (framesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFramesIsMutable();
          frames_.add(index, value);
          onChanged();
        } else {
          framesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.Frame frames = 2;</code>
       */
      public Builder addFrames(
          perfetto.protos.ProfileCommon.Frame.Builder builderForValue) {
        if (framesBuilder_ == null) {
          ensureFramesIsMutable();
          frames_.add(builderForValue.build());
          onChanged();
        } else {
          framesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.Frame frames = 2;</code>
       */
      public Builder addFrames(
          int index, perfetto.protos.ProfileCommon.Frame.Builder builderForValue) {
        if (framesBuilder_ == null) {
          ensureFramesIsMutable();
          frames_.add(index, builderForValue.build());
          onChanged();
        } else {
          framesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.Frame frames = 2;</code>
       */
      public Builder addAllFrames(
          java.lang.Iterable<? extends perfetto.protos.ProfileCommon.Frame> values) {
        if (framesBuilder_ == null) {
          ensureFramesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, frames_);
          onChanged();
        } else {
          framesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.Frame frames = 2;</code>
       */
      public Builder clearFrames() {
        if (framesBuilder_ == null) {
          frames_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          framesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.Frame frames = 2;</code>
       */
      public Builder removeFrames(int index) {
        if (framesBuilder_ == null) {
          ensureFramesIsMutable();
          frames_.remove(index);
          onChanged();
        } else {
          framesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.Frame frames = 2;</code>
       */
      public perfetto.protos.ProfileCommon.Frame.Builder getFramesBuilder(
          int index) {
        return getFramesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .perfetto.protos.Frame frames = 2;</code>
       */
      public perfetto.protos.ProfileCommon.FrameOrBuilder getFramesOrBuilder(
          int index) {
        if (framesBuilder_ == null) {
          return frames_.get(index);  } else {
          return framesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .perfetto.protos.Frame frames = 2;</code>
       */
      public java.util.List<? extends perfetto.protos.ProfileCommon.FrameOrBuilder> 
           getFramesOrBuilderList() {
        if (framesBuilder_ != null) {
          return framesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(frames_);
        }
      }
      /**
       * <code>repeated .perfetto.protos.Frame frames = 2;</code>
       */
      public perfetto.protos.ProfileCommon.Frame.Builder addFramesBuilder() {
        return getFramesFieldBuilder().addBuilder(
            perfetto.protos.ProfileCommon.Frame.getDefaultInstance());
      }
      /**
       * <code>repeated .perfetto.protos.Frame frames = 2;</code>
       */
      public perfetto.protos.ProfileCommon.Frame.Builder addFramesBuilder(
          int index) {
        return getFramesFieldBuilder().addBuilder(
            index, perfetto.protos.ProfileCommon.Frame.getDefaultInstance());
      }
      /**
       * <code>repeated .perfetto.protos.Frame frames = 2;</code>
       */
      public java.util.List<perfetto.protos.ProfileCommon.Frame.Builder> 
           getFramesBuilderList() {
        return getFramesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.ProfileCommon.Frame, perfetto.protos.ProfileCommon.Frame.Builder, perfetto.protos.ProfileCommon.FrameOrBuilder> 
          getFramesFieldBuilder() {
        if (framesBuilder_ == null) {
          framesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              perfetto.protos.ProfileCommon.Frame, perfetto.protos.ProfileCommon.Frame.Builder, perfetto.protos.ProfileCommon.FrameOrBuilder>(
                  frames_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          frames_ = null;
        }
        return framesBuilder_;
      }

      private java.util.List<perfetto.protos.ProfileCommon.Callstack> callstacks_ =
        java.util.Collections.emptyList();
      private void ensureCallstacksIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          callstacks_ = new java.util.ArrayList<perfetto.protos.ProfileCommon.Callstack>(callstacks_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.ProfileCommon.Callstack, perfetto.protos.ProfileCommon.Callstack.Builder, perfetto.protos.ProfileCommon.CallstackOrBuilder> callstacksBuilder_;

      /**
       * <code>repeated .perfetto.protos.Callstack callstacks = 3;</code>
       */
      public java.util.List<perfetto.protos.ProfileCommon.Callstack> getCallstacksList() {
        if (callstacksBuilder_ == null) {
          return java.util.Collections.unmodifiableList(callstacks_);
        } else {
          return callstacksBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .perfetto.protos.Callstack callstacks = 3;</code>
       */
      public int getCallstacksCount() {
        if (callstacksBuilder_ == null) {
          return callstacks_.size();
        } else {
          return callstacksBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .perfetto.protos.Callstack callstacks = 3;</code>
       */
      public perfetto.protos.ProfileCommon.Callstack getCallstacks(int index) {
        if (callstacksBuilder_ == null) {
          return callstacks_.get(index);
        } else {
          return callstacksBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .perfetto.protos.Callstack callstacks = 3;</code>
       */
      public Builder setCallstacks(
          int index, perfetto.protos.ProfileCommon.Callstack value) {
        if (callstacksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCallstacksIsMutable();
          callstacks_.set(index, value);
          onChanged();
        } else {
          callstacksBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.Callstack callstacks = 3;</code>
       */
      public Builder setCallstacks(
          int index, perfetto.protos.ProfileCommon.Callstack.Builder builderForValue) {
        if (callstacksBuilder_ == null) {
          ensureCallstacksIsMutable();
          callstacks_.set(index, builderForValue.build());
          onChanged();
        } else {
          callstacksBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.Callstack callstacks = 3;</code>
       */
      public Builder addCallstacks(perfetto.protos.ProfileCommon.Callstack value) {
        if (callstacksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCallstacksIsMutable();
          callstacks_.add(value);
          onChanged();
        } else {
          callstacksBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.Callstack callstacks = 3;</code>
       */
      public Builder addCallstacks(
          int index, perfetto.protos.ProfileCommon.Callstack value) {
        if (callstacksBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCallstacksIsMutable();
          callstacks_.add(index, value);
          onChanged();
        } else {
          callstacksBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.Callstack callstacks = 3;</code>
       */
      public Builder addCallstacks(
          perfetto.protos.ProfileCommon.Callstack.Builder builderForValue) {
        if (callstacksBuilder_ == null) {
          ensureCallstacksIsMutable();
          callstacks_.add(builderForValue.build());
          onChanged();
        } else {
          callstacksBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.Callstack callstacks = 3;</code>
       */
      public Builder addCallstacks(
          int index, perfetto.protos.ProfileCommon.Callstack.Builder builderForValue) {
        if (callstacksBuilder_ == null) {
          ensureCallstacksIsMutable();
          callstacks_.add(index, builderForValue.build());
          onChanged();
        } else {
          callstacksBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.Callstack callstacks = 3;</code>
       */
      public Builder addAllCallstacks(
          java.lang.Iterable<? extends perfetto.protos.ProfileCommon.Callstack> values) {
        if (callstacksBuilder_ == null) {
          ensureCallstacksIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, callstacks_);
          onChanged();
        } else {
          callstacksBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.Callstack callstacks = 3;</code>
       */
      public Builder clearCallstacks() {
        if (callstacksBuilder_ == null) {
          callstacks_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          callstacksBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.Callstack callstacks = 3;</code>
       */
      public Builder removeCallstacks(int index) {
        if (callstacksBuilder_ == null) {
          ensureCallstacksIsMutable();
          callstacks_.remove(index);
          onChanged();
        } else {
          callstacksBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.Callstack callstacks = 3;</code>
       */
      public perfetto.protos.ProfileCommon.Callstack.Builder getCallstacksBuilder(
          int index) {
        return getCallstacksFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .perfetto.protos.Callstack callstacks = 3;</code>
       */
      public perfetto.protos.ProfileCommon.CallstackOrBuilder getCallstacksOrBuilder(
          int index) {
        if (callstacksBuilder_ == null) {
          return callstacks_.get(index);  } else {
          return callstacksBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .perfetto.protos.Callstack callstacks = 3;</code>
       */
      public java.util.List<? extends perfetto.protos.ProfileCommon.CallstackOrBuilder> 
           getCallstacksOrBuilderList() {
        if (callstacksBuilder_ != null) {
          return callstacksBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(callstacks_);
        }
      }
      /**
       * <code>repeated .perfetto.protos.Callstack callstacks = 3;</code>
       */
      public perfetto.protos.ProfileCommon.Callstack.Builder addCallstacksBuilder() {
        return getCallstacksFieldBuilder().addBuilder(
            perfetto.protos.ProfileCommon.Callstack.getDefaultInstance());
      }
      /**
       * <code>repeated .perfetto.protos.Callstack callstacks = 3;</code>
       */
      public perfetto.protos.ProfileCommon.Callstack.Builder addCallstacksBuilder(
          int index) {
        return getCallstacksFieldBuilder().addBuilder(
            index, perfetto.protos.ProfileCommon.Callstack.getDefaultInstance());
      }
      /**
       * <code>repeated .perfetto.protos.Callstack callstacks = 3;</code>
       */
      public java.util.List<perfetto.protos.ProfileCommon.Callstack.Builder> 
           getCallstacksBuilderList() {
        return getCallstacksFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.ProfileCommon.Callstack, perfetto.protos.ProfileCommon.Callstack.Builder, perfetto.protos.ProfileCommon.CallstackOrBuilder> 
          getCallstacksFieldBuilder() {
        if (callstacksBuilder_ == null) {
          callstacksBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              perfetto.protos.ProfileCommon.Callstack, perfetto.protos.ProfileCommon.Callstack.Builder, perfetto.protos.ProfileCommon.CallstackOrBuilder>(
                  callstacks_,
                  ((bitField0_ & 0x00000008) != 0),
                  getParentForChildren(),
                  isClean());
          callstacks_ = null;
        }
        return callstacksBuilder_;
      }

      private java.util.List<perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples> processDumps_ =
        java.util.Collections.emptyList();
      private void ensureProcessDumpsIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          processDumps_ = new java.util.ArrayList<perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples>(processDumps_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples, perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples.Builder, perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamplesOrBuilder> processDumpsBuilder_;

      /**
       * <code>repeated .perfetto.protos.ProfilePacket.ProcessHeapSamples process_dumps = 5;</code>
       */
      public java.util.List<perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples> getProcessDumpsList() {
        if (processDumpsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(processDumps_);
        } else {
          return processDumpsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .perfetto.protos.ProfilePacket.ProcessHeapSamples process_dumps = 5;</code>
       */
      public int getProcessDumpsCount() {
        if (processDumpsBuilder_ == null) {
          return processDumps_.size();
        } else {
          return processDumpsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .perfetto.protos.ProfilePacket.ProcessHeapSamples process_dumps = 5;</code>
       */
      public perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples getProcessDumps(int index) {
        if (processDumpsBuilder_ == null) {
          return processDumps_.get(index);
        } else {
          return processDumpsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .perfetto.protos.ProfilePacket.ProcessHeapSamples process_dumps = 5;</code>
       */
      public Builder setProcessDumps(
          int index, perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples value) {
        if (processDumpsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureProcessDumpsIsMutable();
          processDumps_.set(index, value);
          onChanged();
        } else {
          processDumpsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.ProfilePacket.ProcessHeapSamples process_dumps = 5;</code>
       */
      public Builder setProcessDumps(
          int index, perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples.Builder builderForValue) {
        if (processDumpsBuilder_ == null) {
          ensureProcessDumpsIsMutable();
          processDumps_.set(index, builderForValue.build());
          onChanged();
        } else {
          processDumpsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.ProfilePacket.ProcessHeapSamples process_dumps = 5;</code>
       */
      public Builder addProcessDumps(perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples value) {
        if (processDumpsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureProcessDumpsIsMutable();
          processDumps_.add(value);
          onChanged();
        } else {
          processDumpsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.ProfilePacket.ProcessHeapSamples process_dumps = 5;</code>
       */
      public Builder addProcessDumps(
          int index, perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples value) {
        if (processDumpsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureProcessDumpsIsMutable();
          processDumps_.add(index, value);
          onChanged();
        } else {
          processDumpsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.ProfilePacket.ProcessHeapSamples process_dumps = 5;</code>
       */
      public Builder addProcessDumps(
          perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples.Builder builderForValue) {
        if (processDumpsBuilder_ == null) {
          ensureProcessDumpsIsMutable();
          processDumps_.add(builderForValue.build());
          onChanged();
        } else {
          processDumpsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.ProfilePacket.ProcessHeapSamples process_dumps = 5;</code>
       */
      public Builder addProcessDumps(
          int index, perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples.Builder builderForValue) {
        if (processDumpsBuilder_ == null) {
          ensureProcessDumpsIsMutable();
          processDumps_.add(index, builderForValue.build());
          onChanged();
        } else {
          processDumpsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.ProfilePacket.ProcessHeapSamples process_dumps = 5;</code>
       */
      public Builder addAllProcessDumps(
          java.lang.Iterable<? extends perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples> values) {
        if (processDumpsBuilder_ == null) {
          ensureProcessDumpsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, processDumps_);
          onChanged();
        } else {
          processDumpsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.ProfilePacket.ProcessHeapSamples process_dumps = 5;</code>
       */
      public Builder clearProcessDumps() {
        if (processDumpsBuilder_ == null) {
          processDumps_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          processDumpsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.ProfilePacket.ProcessHeapSamples process_dumps = 5;</code>
       */
      public Builder removeProcessDumps(int index) {
        if (processDumpsBuilder_ == null) {
          ensureProcessDumpsIsMutable();
          processDumps_.remove(index);
          onChanged();
        } else {
          processDumpsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.ProfilePacket.ProcessHeapSamples process_dumps = 5;</code>
       */
      public perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples.Builder getProcessDumpsBuilder(
          int index) {
        return getProcessDumpsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .perfetto.protos.ProfilePacket.ProcessHeapSamples process_dumps = 5;</code>
       */
      public perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamplesOrBuilder getProcessDumpsOrBuilder(
          int index) {
        if (processDumpsBuilder_ == null) {
          return processDumps_.get(index);  } else {
          return processDumpsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .perfetto.protos.ProfilePacket.ProcessHeapSamples process_dumps = 5;</code>
       */
      public java.util.List<? extends perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamplesOrBuilder> 
           getProcessDumpsOrBuilderList() {
        if (processDumpsBuilder_ != null) {
          return processDumpsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(processDumps_);
        }
      }
      /**
       * <code>repeated .perfetto.protos.ProfilePacket.ProcessHeapSamples process_dumps = 5;</code>
       */
      public perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples.Builder addProcessDumpsBuilder() {
        return getProcessDumpsFieldBuilder().addBuilder(
            perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples.getDefaultInstance());
      }
      /**
       * <code>repeated .perfetto.protos.ProfilePacket.ProcessHeapSamples process_dumps = 5;</code>
       */
      public perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples.Builder addProcessDumpsBuilder(
          int index) {
        return getProcessDumpsFieldBuilder().addBuilder(
            index, perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples.getDefaultInstance());
      }
      /**
       * <code>repeated .perfetto.protos.ProfilePacket.ProcessHeapSamples process_dumps = 5;</code>
       */
      public java.util.List<perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples.Builder> 
           getProcessDumpsBuilderList() {
        return getProcessDumpsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples, perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples.Builder, perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamplesOrBuilder> 
          getProcessDumpsFieldBuilder() {
        if (processDumpsBuilder_ == null) {
          processDumpsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples, perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamples.Builder, perfetto.protos.ProfilePacketOuterClass.ProfilePacket.ProcessHeapSamplesOrBuilder>(
                  processDumps_,
                  ((bitField0_ & 0x00000010) != 0),
                  getParentForChildren(),
                  isClean());
          processDumps_ = null;
        }
        return processDumpsBuilder_;
      }

      private boolean continued_ ;
      /**
       * <pre>
       * If this is true, the next ProfilePacket in this package_sequence_id is a
       * continuation of this one.
       * To get all samples for a process, accummulate its
       * ProcessHeapSamples.samples until you see continued=false.
       * </pre>
       *
       * <code>optional bool continued = 6;</code>
       * @return Whether the continued field is set.
       */
      @java.lang.Override
      public boolean hasContinued() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * If this is true, the next ProfilePacket in this package_sequence_id is a
       * continuation of this one.
       * To get all samples for a process, accummulate its
       * ProcessHeapSamples.samples until you see continued=false.
       * </pre>
       *
       * <code>optional bool continued = 6;</code>
       * @return The continued.
       */
      @java.lang.Override
      public boolean getContinued() {
        return continued_;
      }
      /**
       * <pre>
       * If this is true, the next ProfilePacket in this package_sequence_id is a
       * continuation of this one.
       * To get all samples for a process, accummulate its
       * ProcessHeapSamples.samples until you see continued=false.
       * </pre>
       *
       * <code>optional bool continued = 6;</code>
       * @param value The continued to set.
       * @return This builder for chaining.
       */
      public Builder setContinued(boolean value) {
        
        continued_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If this is true, the next ProfilePacket in this package_sequence_id is a
       * continuation of this one.
       * To get all samples for a process, accummulate its
       * ProcessHeapSamples.samples until you see continued=false.
       * </pre>
       *
       * <code>optional bool continued = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearContinued() {
        bitField0_ = (bitField0_ & ~0x00000020);
        continued_ = false;
        onChanged();
        return this;
      }

      private long index_ ;
      /**
       * <pre>
       * Index of this ProfilePacket on its package_sequence_id. Can be used
       * to detect dropped data.
       * Verify these are consecutive.
       * </pre>
       *
       * <code>optional uint64 index = 7;</code>
       * @return Whether the index field is set.
       */
      @java.lang.Override
      public boolean hasIndex() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       * Index of this ProfilePacket on its package_sequence_id. Can be used
       * to detect dropped data.
       * Verify these are consecutive.
       * </pre>
       *
       * <code>optional uint64 index = 7;</code>
       * @return The index.
       */
      @java.lang.Override
      public long getIndex() {
        return index_;
      }
      /**
       * <pre>
       * Index of this ProfilePacket on its package_sequence_id. Can be used
       * to detect dropped data.
       * Verify these are consecutive.
       * </pre>
       *
       * <code>optional uint64 index = 7;</code>
       * @param value The index to set.
       * @return This builder for chaining.
       */
      public Builder setIndex(long value) {
        
        index_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Index of this ProfilePacket on its package_sequence_id. Can be used
       * to detect dropped data.
       * Verify these are consecutive.
       * </pre>
       *
       * <code>optional uint64 index = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearIndex() {
        bitField0_ = (bitField0_ & ~0x00000040);
        index_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:perfetto.protos.ProfilePacket)
    }

    // @@protoc_insertion_point(class_scope:perfetto.protos.ProfilePacket)
    private static final perfetto.protos.ProfilePacketOuterClass.ProfilePacket DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new perfetto.protos.ProfilePacketOuterClass.ProfilePacket();
    }

    public static perfetto.protos.ProfilePacketOuterClass.ProfilePacket getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ProfilePacket>
        PARSER = new com.google.protobuf.AbstractParser<ProfilePacket>() {
      @java.lang.Override
      public ProfilePacket parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ProfilePacket> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ProfilePacket> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public perfetto.protos.ProfilePacketOuterClass.ProfilePacket getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StreamingAllocationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:perfetto.protos.StreamingAllocation)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * TODO(fmayer): Add callstack.
     * </pre>
     *
     * <code>repeated uint64 address = 1;</code>
     * @return A list containing the address.
     */
    java.util.List<java.lang.Long> getAddressList();
    /**
     * <pre>
     * TODO(fmayer): Add callstack.
     * </pre>
     *
     * <code>repeated uint64 address = 1;</code>
     * @return The count of address.
     */
    int getAddressCount();
    /**
     * <pre>
     * TODO(fmayer): Add callstack.
     * </pre>
     *
     * <code>repeated uint64 address = 1;</code>
     * @param index The index of the element to return.
     * @return The address at the given index.
     */
    long getAddress(int index);

    /**
     * <code>repeated uint64 size = 2;</code>
     * @return A list containing the size.
     */
    java.util.List<java.lang.Long> getSizeList();
    /**
     * <code>repeated uint64 size = 2;</code>
     * @return The count of size.
     */
    int getSizeCount();
    /**
     * <code>repeated uint64 size = 2;</code>
     * @param index The index of the element to return.
     * @return The size at the given index.
     */
    long getSize(int index);

    /**
     * <code>repeated uint64 sample_size = 3;</code>
     * @return A list containing the sampleSize.
     */
    java.util.List<java.lang.Long> getSampleSizeList();
    /**
     * <code>repeated uint64 sample_size = 3;</code>
     * @return The count of sampleSize.
     */
    int getSampleSizeCount();
    /**
     * <code>repeated uint64 sample_size = 3;</code>
     * @param index The index of the element to return.
     * @return The sampleSize at the given index.
     */
    long getSampleSize(int index);

    /**
     * <code>repeated uint64 clock_monotonic_coarse_timestamp = 4;</code>
     * @return A list containing the clockMonotonicCoarseTimestamp.
     */
    java.util.List<java.lang.Long> getClockMonotonicCoarseTimestampList();
    /**
     * <code>repeated uint64 clock_monotonic_coarse_timestamp = 4;</code>
     * @return The count of clockMonotonicCoarseTimestamp.
     */
    int getClockMonotonicCoarseTimestampCount();
    /**
     * <code>repeated uint64 clock_monotonic_coarse_timestamp = 4;</code>
     * @param index The index of the element to return.
     * @return The clockMonotonicCoarseTimestamp at the given index.
     */
    long getClockMonotonicCoarseTimestamp(int index);

    /**
     * <code>repeated uint32 heap_id = 5;</code>
     * @return A list containing the heapId.
     */
    java.util.List<java.lang.Integer> getHeapIdList();
    /**
     * <code>repeated uint32 heap_id = 5;</code>
     * @return The count of heapId.
     */
    int getHeapIdCount();
    /**
     * <code>repeated uint32 heap_id = 5;</code>
     * @param index The index of the element to return.
     * @return The heapId at the given index.
     */
    int getHeapId(int index);

    /**
     * <code>repeated uint64 sequence_number = 6;</code>
     * @return A list containing the sequenceNumber.
     */
    java.util.List<java.lang.Long> getSequenceNumberList();
    /**
     * <code>repeated uint64 sequence_number = 6;</code>
     * @return The count of sequenceNumber.
     */
    int getSequenceNumberCount();
    /**
     * <code>repeated uint64 sequence_number = 6;</code>
     * @param index The index of the element to return.
     * @return The sequenceNumber at the given index.
     */
    long getSequenceNumber(int index);
  }
  /**
   * <pre>
   * Packet emitted by heapprofd when stream_allocations = true. Only for local
   * testing. Doesn't report the callsite.
   * </pre>
   *
   * Protobuf type {@code perfetto.protos.StreamingAllocation}
   */
  public static final class StreamingAllocation extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:perfetto.protos.StreamingAllocation)
      StreamingAllocationOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use StreamingAllocation.newBuilder() to construct.
    private StreamingAllocation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private StreamingAllocation() {
      address_ = emptyLongList();
      size_ = emptyLongList();
      sampleSize_ = emptyLongList();
      clockMonotonicCoarseTimestamp_ = emptyLongList();
      heapId_ = emptyIntList();
      sequenceNumber_ = emptyLongList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new StreamingAllocation();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_StreamingAllocation_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_StreamingAllocation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              perfetto.protos.ProfilePacketOuterClass.StreamingAllocation.class, perfetto.protos.ProfilePacketOuterClass.StreamingAllocation.Builder.class);
    }

    public static final int ADDRESS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.LongList address_;
    /**
     * <pre>
     * TODO(fmayer): Add callstack.
     * </pre>
     *
     * <code>repeated uint64 address = 1;</code>
     * @return A list containing the address.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getAddressList() {
      return address_;
    }
    /**
     * <pre>
     * TODO(fmayer): Add callstack.
     * </pre>
     *
     * <code>repeated uint64 address = 1;</code>
     * @return The count of address.
     */
    public int getAddressCount() {
      return address_.size();
    }
    /**
     * <pre>
     * TODO(fmayer): Add callstack.
     * </pre>
     *
     * <code>repeated uint64 address = 1;</code>
     * @param index The index of the element to return.
     * @return The address at the given index.
     */
    public long getAddress(int index) {
      return address_.getLong(index);
    }

    public static final int SIZE_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.LongList size_;
    /**
     * <code>repeated uint64 size = 2;</code>
     * @return A list containing the size.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getSizeList() {
      return size_;
    }
    /**
     * <code>repeated uint64 size = 2;</code>
     * @return The count of size.
     */
    public int getSizeCount() {
      return size_.size();
    }
    /**
     * <code>repeated uint64 size = 2;</code>
     * @param index The index of the element to return.
     * @return The size at the given index.
     */
    public long getSize(int index) {
      return size_.getLong(index);
    }

    public static final int SAMPLE_SIZE_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.LongList sampleSize_;
    /**
     * <code>repeated uint64 sample_size = 3;</code>
     * @return A list containing the sampleSize.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getSampleSizeList() {
      return sampleSize_;
    }
    /**
     * <code>repeated uint64 sample_size = 3;</code>
     * @return The count of sampleSize.
     */
    public int getSampleSizeCount() {
      return sampleSize_.size();
    }
    /**
     * <code>repeated uint64 sample_size = 3;</code>
     * @param index The index of the element to return.
     * @return The sampleSize at the given index.
     */
    public long getSampleSize(int index) {
      return sampleSize_.getLong(index);
    }

    public static final int CLOCK_MONOTONIC_COARSE_TIMESTAMP_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.LongList clockMonotonicCoarseTimestamp_;
    /**
     * <code>repeated uint64 clock_monotonic_coarse_timestamp = 4;</code>
     * @return A list containing the clockMonotonicCoarseTimestamp.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getClockMonotonicCoarseTimestampList() {
      return clockMonotonicCoarseTimestamp_;
    }
    /**
     * <code>repeated uint64 clock_monotonic_coarse_timestamp = 4;</code>
     * @return The count of clockMonotonicCoarseTimestamp.
     */
    public int getClockMonotonicCoarseTimestampCount() {
      return clockMonotonicCoarseTimestamp_.size();
    }
    /**
     * <code>repeated uint64 clock_monotonic_coarse_timestamp = 4;</code>
     * @param index The index of the element to return.
     * @return The clockMonotonicCoarseTimestamp at the given index.
     */
    public long getClockMonotonicCoarseTimestamp(int index) {
      return clockMonotonicCoarseTimestamp_.getLong(index);
    }

    public static final int HEAP_ID_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList heapId_;
    /**
     * <code>repeated uint32 heap_id = 5;</code>
     * @return A list containing the heapId.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getHeapIdList() {
      return heapId_;
    }
    /**
     * <code>repeated uint32 heap_id = 5;</code>
     * @return The count of heapId.
     */
    public int getHeapIdCount() {
      return heapId_.size();
    }
    /**
     * <code>repeated uint32 heap_id = 5;</code>
     * @param index The index of the element to return.
     * @return The heapId at the given index.
     */
    public int getHeapId(int index) {
      return heapId_.getInt(index);
    }

    public static final int SEQUENCE_NUMBER_FIELD_NUMBER = 6;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.LongList sequenceNumber_;
    /**
     * <code>repeated uint64 sequence_number = 6;</code>
     * @return A list containing the sequenceNumber.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getSequenceNumberList() {
      return sequenceNumber_;
    }
    /**
     * <code>repeated uint64 sequence_number = 6;</code>
     * @return The count of sequenceNumber.
     */
    public int getSequenceNumberCount() {
      return sequenceNumber_.size();
    }
    /**
     * <code>repeated uint64 sequence_number = 6;</code>
     * @param index The index of the element to return.
     * @return The sequenceNumber at the given index.
     */
    public long getSequenceNumber(int index) {
      return sequenceNumber_.getLong(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < address_.size(); i++) {
        output.writeUInt64(1, address_.getLong(i));
      }
      for (int i = 0; i < size_.size(); i++) {
        output.writeUInt64(2, size_.getLong(i));
      }
      for (int i = 0; i < sampleSize_.size(); i++) {
        output.writeUInt64(3, sampleSize_.getLong(i));
      }
      for (int i = 0; i < clockMonotonicCoarseTimestamp_.size(); i++) {
        output.writeUInt64(4, clockMonotonicCoarseTimestamp_.getLong(i));
      }
      for (int i = 0; i < heapId_.size(); i++) {
        output.writeUInt32(5, heapId_.getInt(i));
      }
      for (int i = 0; i < sequenceNumber_.size(); i++) {
        output.writeUInt64(6, sequenceNumber_.getLong(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < address_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt64SizeNoTag(address_.getLong(i));
        }
        size += dataSize;
        size += 1 * getAddressList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < size_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt64SizeNoTag(size_.getLong(i));
        }
        size += dataSize;
        size += 1 * getSizeList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < sampleSize_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt64SizeNoTag(sampleSize_.getLong(i));
        }
        size += dataSize;
        size += 1 * getSampleSizeList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < clockMonotonicCoarseTimestamp_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt64SizeNoTag(clockMonotonicCoarseTimestamp_.getLong(i));
        }
        size += dataSize;
        size += 1 * getClockMonotonicCoarseTimestampList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < heapId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(heapId_.getInt(i));
        }
        size += dataSize;
        size += 1 * getHeapIdList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < sequenceNumber_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt64SizeNoTag(sequenceNumber_.getLong(i));
        }
        size += dataSize;
        size += 1 * getSequenceNumberList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof perfetto.protos.ProfilePacketOuterClass.StreamingAllocation)) {
        return super.equals(obj);
      }
      perfetto.protos.ProfilePacketOuterClass.StreamingAllocation other = (perfetto.protos.ProfilePacketOuterClass.StreamingAllocation) obj;

      if (!getAddressList()
          .equals(other.getAddressList())) return false;
      if (!getSizeList()
          .equals(other.getSizeList())) return false;
      if (!getSampleSizeList()
          .equals(other.getSampleSizeList())) return false;
      if (!getClockMonotonicCoarseTimestampList()
          .equals(other.getClockMonotonicCoarseTimestampList())) return false;
      if (!getHeapIdList()
          .equals(other.getHeapIdList())) return false;
      if (!getSequenceNumberList()
          .equals(other.getSequenceNumberList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getAddressCount() > 0) {
        hash = (37 * hash) + ADDRESS_FIELD_NUMBER;
        hash = (53 * hash) + getAddressList().hashCode();
      }
      if (getSizeCount() > 0) {
        hash = (37 * hash) + SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getSizeList().hashCode();
      }
      if (getSampleSizeCount() > 0) {
        hash = (37 * hash) + SAMPLE_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getSampleSizeList().hashCode();
      }
      if (getClockMonotonicCoarseTimestampCount() > 0) {
        hash = (37 * hash) + CLOCK_MONOTONIC_COARSE_TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + getClockMonotonicCoarseTimestampList().hashCode();
      }
      if (getHeapIdCount() > 0) {
        hash = (37 * hash) + HEAP_ID_FIELD_NUMBER;
        hash = (53 * hash) + getHeapIdList().hashCode();
      }
      if (getSequenceNumberCount() > 0) {
        hash = (37 * hash) + SEQUENCE_NUMBER_FIELD_NUMBER;
        hash = (53 * hash) + getSequenceNumberList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static perfetto.protos.ProfilePacketOuterClass.StreamingAllocation parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.ProfilePacketOuterClass.StreamingAllocation parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.ProfilePacketOuterClass.StreamingAllocation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.ProfilePacketOuterClass.StreamingAllocation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.ProfilePacketOuterClass.StreamingAllocation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.ProfilePacketOuterClass.StreamingAllocation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.ProfilePacketOuterClass.StreamingAllocation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.ProfilePacketOuterClass.StreamingAllocation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.ProfilePacketOuterClass.StreamingAllocation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static perfetto.protos.ProfilePacketOuterClass.StreamingAllocation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.ProfilePacketOuterClass.StreamingAllocation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.ProfilePacketOuterClass.StreamingAllocation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(perfetto.protos.ProfilePacketOuterClass.StreamingAllocation prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Packet emitted by heapprofd when stream_allocations = true. Only for local
     * testing. Doesn't report the callsite.
     * </pre>
     *
     * Protobuf type {@code perfetto.protos.StreamingAllocation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:perfetto.protos.StreamingAllocation)
        perfetto.protos.ProfilePacketOuterClass.StreamingAllocationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_StreamingAllocation_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_StreamingAllocation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.ProfilePacketOuterClass.StreamingAllocation.class, perfetto.protos.ProfilePacketOuterClass.StreamingAllocation.Builder.class);
      }

      // Construct using perfetto.protos.ProfilePacketOuterClass.StreamingAllocation.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        address_ = emptyLongList();
        size_ = emptyLongList();
        sampleSize_ = emptyLongList();
        clockMonotonicCoarseTimestamp_ = emptyLongList();
        heapId_ = emptyIntList();
        sequenceNumber_ = emptyLongList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_StreamingAllocation_descriptor;
      }

      @java.lang.Override
      public perfetto.protos.ProfilePacketOuterClass.StreamingAllocation getDefaultInstanceForType() {
        return perfetto.protos.ProfilePacketOuterClass.StreamingAllocation.getDefaultInstance();
      }

      @java.lang.Override
      public perfetto.protos.ProfilePacketOuterClass.StreamingAllocation build() {
        perfetto.protos.ProfilePacketOuterClass.StreamingAllocation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public perfetto.protos.ProfilePacketOuterClass.StreamingAllocation buildPartial() {
        perfetto.protos.ProfilePacketOuterClass.StreamingAllocation result = new perfetto.protos.ProfilePacketOuterClass.StreamingAllocation(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(perfetto.protos.ProfilePacketOuterClass.StreamingAllocation result) {
        if (((bitField0_ & 0x00000001) != 0)) {
          address_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.address_ = address_;
        if (((bitField0_ & 0x00000002) != 0)) {
          size_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.size_ = size_;
        if (((bitField0_ & 0x00000004) != 0)) {
          sampleSize_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.sampleSize_ = sampleSize_;
        if (((bitField0_ & 0x00000008) != 0)) {
          clockMonotonicCoarseTimestamp_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.clockMonotonicCoarseTimestamp_ = clockMonotonicCoarseTimestamp_;
        if (((bitField0_ & 0x00000010) != 0)) {
          heapId_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.heapId_ = heapId_;
        if (((bitField0_ & 0x00000020) != 0)) {
          sequenceNumber_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.sequenceNumber_ = sequenceNumber_;
      }

      private void buildPartial0(perfetto.protos.ProfilePacketOuterClass.StreamingAllocation result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof perfetto.protos.ProfilePacketOuterClass.StreamingAllocation) {
          return mergeFrom((perfetto.protos.ProfilePacketOuterClass.StreamingAllocation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(perfetto.protos.ProfilePacketOuterClass.StreamingAllocation other) {
        if (other == perfetto.protos.ProfilePacketOuterClass.StreamingAllocation.getDefaultInstance()) return this;
        if (!other.address_.isEmpty()) {
          if (address_.isEmpty()) {
            address_ = other.address_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureAddressIsMutable();
            address_.addAll(other.address_);
          }
          onChanged();
        }
        if (!other.size_.isEmpty()) {
          if (size_.isEmpty()) {
            size_ = other.size_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureSizeIsMutable();
            size_.addAll(other.size_);
          }
          onChanged();
        }
        if (!other.sampleSize_.isEmpty()) {
          if (sampleSize_.isEmpty()) {
            sampleSize_ = other.sampleSize_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureSampleSizeIsMutable();
            sampleSize_.addAll(other.sampleSize_);
          }
          onChanged();
        }
        if (!other.clockMonotonicCoarseTimestamp_.isEmpty()) {
          if (clockMonotonicCoarseTimestamp_.isEmpty()) {
            clockMonotonicCoarseTimestamp_ = other.clockMonotonicCoarseTimestamp_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureClockMonotonicCoarseTimestampIsMutable();
            clockMonotonicCoarseTimestamp_.addAll(other.clockMonotonicCoarseTimestamp_);
          }
          onChanged();
        }
        if (!other.heapId_.isEmpty()) {
          if (heapId_.isEmpty()) {
            heapId_ = other.heapId_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureHeapIdIsMutable();
            heapId_.addAll(other.heapId_);
          }
          onChanged();
        }
        if (!other.sequenceNumber_.isEmpty()) {
          if (sequenceNumber_.isEmpty()) {
            sequenceNumber_ = other.sequenceNumber_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureSequenceNumberIsMutable();
            sequenceNumber_.addAll(other.sequenceNumber_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                long v = input.readUInt64();
                ensureAddressIsMutable();
                address_.addLong(v);
                break;
              } // case 8
              case 10: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureAddressIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  address_.addLong(input.readUInt64());
                }
                input.popLimit(limit);
                break;
              } // case 10
              case 16: {
                long v = input.readUInt64();
                ensureSizeIsMutable();
                size_.addLong(v);
                break;
              } // case 16
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureSizeIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  size_.addLong(input.readUInt64());
                }
                input.popLimit(limit);
                break;
              } // case 18
              case 24: {
                long v = input.readUInt64();
                ensureSampleSizeIsMutable();
                sampleSize_.addLong(v);
                break;
              } // case 24
              case 26: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureSampleSizeIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  sampleSize_.addLong(input.readUInt64());
                }
                input.popLimit(limit);
                break;
              } // case 26
              case 32: {
                long v = input.readUInt64();
                ensureClockMonotonicCoarseTimestampIsMutable();
                clockMonotonicCoarseTimestamp_.addLong(v);
                break;
              } // case 32
              case 34: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureClockMonotonicCoarseTimestampIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  clockMonotonicCoarseTimestamp_.addLong(input.readUInt64());
                }
                input.popLimit(limit);
                break;
              } // case 34
              case 40: {
                int v = input.readUInt32();
                ensureHeapIdIsMutable();
                heapId_.addInt(v);
                break;
              } // case 40
              case 42: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureHeapIdIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  heapId_.addInt(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              } // case 42
              case 48: {
                long v = input.readUInt64();
                ensureSequenceNumberIsMutable();
                sequenceNumber_.addLong(v);
                break;
              } // case 48
              case 50: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureSequenceNumberIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  sequenceNumber_.addLong(input.readUInt64());
                }
                input.popLimit(limit);
                break;
              } // case 50
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.LongList address_ = emptyLongList();
      private void ensureAddressIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          address_ = mutableCopy(address_);
          bitField0_ |= 0x00000001;
        }
      }
      /**
       * <pre>
       * TODO(fmayer): Add callstack.
       * </pre>
       *
       * <code>repeated uint64 address = 1;</code>
       * @return A list containing the address.
       */
      public java.util.List<java.lang.Long>
          getAddressList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(address_) : address_;
      }
      /**
       * <pre>
       * TODO(fmayer): Add callstack.
       * </pre>
       *
       * <code>repeated uint64 address = 1;</code>
       * @return The count of address.
       */
      public int getAddressCount() {
        return address_.size();
      }
      /**
       * <pre>
       * TODO(fmayer): Add callstack.
       * </pre>
       *
       * <code>repeated uint64 address = 1;</code>
       * @param index The index of the element to return.
       * @return The address at the given index.
       */
      public long getAddress(int index) {
        return address_.getLong(index);
      }
      /**
       * <pre>
       * TODO(fmayer): Add callstack.
       * </pre>
       *
       * <code>repeated uint64 address = 1;</code>
       * @param index The index to set the value at.
       * @param value The address to set.
       * @return This builder for chaining.
       */
      public Builder setAddress(
          int index, long value) {
        
        ensureAddressIsMutable();
        address_.setLong(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * TODO(fmayer): Add callstack.
       * </pre>
       *
       * <code>repeated uint64 address = 1;</code>
       * @param value The address to add.
       * @return This builder for chaining.
       */
      public Builder addAddress(long value) {
        
        ensureAddressIsMutable();
        address_.addLong(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * TODO(fmayer): Add callstack.
       * </pre>
       *
       * <code>repeated uint64 address = 1;</code>
       * @param values The address to add.
       * @return This builder for chaining.
       */
      public Builder addAllAddress(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureAddressIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, address_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * TODO(fmayer): Add callstack.
       * </pre>
       *
       * <code>repeated uint64 address = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAddress() {
        address_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.LongList size_ = emptyLongList();
      private void ensureSizeIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          size_ = mutableCopy(size_);
          bitField0_ |= 0x00000002;
        }
      }
      /**
       * <code>repeated uint64 size = 2;</code>
       * @return A list containing the size.
       */
      public java.util.List<java.lang.Long>
          getSizeList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(size_) : size_;
      }
      /**
       * <code>repeated uint64 size = 2;</code>
       * @return The count of size.
       */
      public int getSizeCount() {
        return size_.size();
      }
      /**
       * <code>repeated uint64 size = 2;</code>
       * @param index The index of the element to return.
       * @return The size at the given index.
       */
      public long getSize(int index) {
        return size_.getLong(index);
      }
      /**
       * <code>repeated uint64 size = 2;</code>
       * @param index The index to set the value at.
       * @param value The size to set.
       * @return This builder for chaining.
       */
      public Builder setSize(
          int index, long value) {
        
        ensureSizeIsMutable();
        size_.setLong(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 size = 2;</code>
       * @param value The size to add.
       * @return This builder for chaining.
       */
      public Builder addSize(long value) {
        
        ensureSizeIsMutable();
        size_.addLong(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 size = 2;</code>
       * @param values The size to add.
       * @return This builder for chaining.
       */
      public Builder addAllSize(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureSizeIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, size_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 size = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSize() {
        size_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.LongList sampleSize_ = emptyLongList();
      private void ensureSampleSizeIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          sampleSize_ = mutableCopy(sampleSize_);
          bitField0_ |= 0x00000004;
        }
      }
      /**
       * <code>repeated uint64 sample_size = 3;</code>
       * @return A list containing the sampleSize.
       */
      public java.util.List<java.lang.Long>
          getSampleSizeList() {
        return ((bitField0_ & 0x00000004) != 0) ?
                 java.util.Collections.unmodifiableList(sampleSize_) : sampleSize_;
      }
      /**
       * <code>repeated uint64 sample_size = 3;</code>
       * @return The count of sampleSize.
       */
      public int getSampleSizeCount() {
        return sampleSize_.size();
      }
      /**
       * <code>repeated uint64 sample_size = 3;</code>
       * @param index The index of the element to return.
       * @return The sampleSize at the given index.
       */
      public long getSampleSize(int index) {
        return sampleSize_.getLong(index);
      }
      /**
       * <code>repeated uint64 sample_size = 3;</code>
       * @param index The index to set the value at.
       * @param value The sampleSize to set.
       * @return This builder for chaining.
       */
      public Builder setSampleSize(
          int index, long value) {
        
        ensureSampleSizeIsMutable();
        sampleSize_.setLong(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 sample_size = 3;</code>
       * @param value The sampleSize to add.
       * @return This builder for chaining.
       */
      public Builder addSampleSize(long value) {
        
        ensureSampleSizeIsMutable();
        sampleSize_.addLong(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 sample_size = 3;</code>
       * @param values The sampleSize to add.
       * @return This builder for chaining.
       */
      public Builder addAllSampleSize(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureSampleSizeIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, sampleSize_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 sample_size = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearSampleSize() {
        sampleSize_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.LongList clockMonotonicCoarseTimestamp_ = emptyLongList();
      private void ensureClockMonotonicCoarseTimestampIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          clockMonotonicCoarseTimestamp_ = mutableCopy(clockMonotonicCoarseTimestamp_);
          bitField0_ |= 0x00000008;
        }
      }
      /**
       * <code>repeated uint64 clock_monotonic_coarse_timestamp = 4;</code>
       * @return A list containing the clockMonotonicCoarseTimestamp.
       */
      public java.util.List<java.lang.Long>
          getClockMonotonicCoarseTimestampList() {
        return ((bitField0_ & 0x00000008) != 0) ?
                 java.util.Collections.unmodifiableList(clockMonotonicCoarseTimestamp_) : clockMonotonicCoarseTimestamp_;
      }
      /**
       * <code>repeated uint64 clock_monotonic_coarse_timestamp = 4;</code>
       * @return The count of clockMonotonicCoarseTimestamp.
       */
      public int getClockMonotonicCoarseTimestampCount() {
        return clockMonotonicCoarseTimestamp_.size();
      }
      /**
       * <code>repeated uint64 clock_monotonic_coarse_timestamp = 4;</code>
       * @param index The index of the element to return.
       * @return The clockMonotonicCoarseTimestamp at the given index.
       */
      public long getClockMonotonicCoarseTimestamp(int index) {
        return clockMonotonicCoarseTimestamp_.getLong(index);
      }
      /**
       * <code>repeated uint64 clock_monotonic_coarse_timestamp = 4;</code>
       * @param index The index to set the value at.
       * @param value The clockMonotonicCoarseTimestamp to set.
       * @return This builder for chaining.
       */
      public Builder setClockMonotonicCoarseTimestamp(
          int index, long value) {
        
        ensureClockMonotonicCoarseTimestampIsMutable();
        clockMonotonicCoarseTimestamp_.setLong(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 clock_monotonic_coarse_timestamp = 4;</code>
       * @param value The clockMonotonicCoarseTimestamp to add.
       * @return This builder for chaining.
       */
      public Builder addClockMonotonicCoarseTimestamp(long value) {
        
        ensureClockMonotonicCoarseTimestampIsMutable();
        clockMonotonicCoarseTimestamp_.addLong(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 clock_monotonic_coarse_timestamp = 4;</code>
       * @param values The clockMonotonicCoarseTimestamp to add.
       * @return This builder for chaining.
       */
      public Builder addAllClockMonotonicCoarseTimestamp(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureClockMonotonicCoarseTimestampIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, clockMonotonicCoarseTimestamp_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 clock_monotonic_coarse_timestamp = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearClockMonotonicCoarseTimestamp() {
        clockMonotonicCoarseTimestamp_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList heapId_ = emptyIntList();
      private void ensureHeapIdIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          heapId_ = mutableCopy(heapId_);
          bitField0_ |= 0x00000010;
        }
      }
      /**
       * <code>repeated uint32 heap_id = 5;</code>
       * @return A list containing the heapId.
       */
      public java.util.List<java.lang.Integer>
          getHeapIdList() {
        return ((bitField0_ & 0x00000010) != 0) ?
                 java.util.Collections.unmodifiableList(heapId_) : heapId_;
      }
      /**
       * <code>repeated uint32 heap_id = 5;</code>
       * @return The count of heapId.
       */
      public int getHeapIdCount() {
        return heapId_.size();
      }
      /**
       * <code>repeated uint32 heap_id = 5;</code>
       * @param index The index of the element to return.
       * @return The heapId at the given index.
       */
      public int getHeapId(int index) {
        return heapId_.getInt(index);
      }
      /**
       * <code>repeated uint32 heap_id = 5;</code>
       * @param index The index to set the value at.
       * @param value The heapId to set.
       * @return This builder for chaining.
       */
      public Builder setHeapId(
          int index, int value) {
        
        ensureHeapIdIsMutable();
        heapId_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 heap_id = 5;</code>
       * @param value The heapId to add.
       * @return This builder for chaining.
       */
      public Builder addHeapId(int value) {
        
        ensureHeapIdIsMutable();
        heapId_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 heap_id = 5;</code>
       * @param values The heapId to add.
       * @return This builder for chaining.
       */
      public Builder addAllHeapId(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureHeapIdIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, heapId_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 heap_id = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeapId() {
        heapId_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.LongList sequenceNumber_ = emptyLongList();
      private void ensureSequenceNumberIsMutable() {
        if (!((bitField0_ & 0x00000020) != 0)) {
          sequenceNumber_ = mutableCopy(sequenceNumber_);
          bitField0_ |= 0x00000020;
        }
      }
      /**
       * <code>repeated uint64 sequence_number = 6;</code>
       * @return A list containing the sequenceNumber.
       */
      public java.util.List<java.lang.Long>
          getSequenceNumberList() {
        return ((bitField0_ & 0x00000020) != 0) ?
                 java.util.Collections.unmodifiableList(sequenceNumber_) : sequenceNumber_;
      }
      /**
       * <code>repeated uint64 sequence_number = 6;</code>
       * @return The count of sequenceNumber.
       */
      public int getSequenceNumberCount() {
        return sequenceNumber_.size();
      }
      /**
       * <code>repeated uint64 sequence_number = 6;</code>
       * @param index The index of the element to return.
       * @return The sequenceNumber at the given index.
       */
      public long getSequenceNumber(int index) {
        return sequenceNumber_.getLong(index);
      }
      /**
       * <code>repeated uint64 sequence_number = 6;</code>
       * @param index The index to set the value at.
       * @param value The sequenceNumber to set.
       * @return This builder for chaining.
       */
      public Builder setSequenceNumber(
          int index, long value) {
        
        ensureSequenceNumberIsMutable();
        sequenceNumber_.setLong(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 sequence_number = 6;</code>
       * @param value The sequenceNumber to add.
       * @return This builder for chaining.
       */
      public Builder addSequenceNumber(long value) {
        
        ensureSequenceNumberIsMutable();
        sequenceNumber_.addLong(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 sequence_number = 6;</code>
       * @param values The sequenceNumber to add.
       * @return This builder for chaining.
       */
      public Builder addAllSequenceNumber(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureSequenceNumberIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, sequenceNumber_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 sequence_number = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearSequenceNumber() {
        sequenceNumber_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:perfetto.protos.StreamingAllocation)
    }

    // @@protoc_insertion_point(class_scope:perfetto.protos.StreamingAllocation)
    private static final perfetto.protos.ProfilePacketOuterClass.StreamingAllocation DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new perfetto.protos.ProfilePacketOuterClass.StreamingAllocation();
    }

    public static perfetto.protos.ProfilePacketOuterClass.StreamingAllocation getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<StreamingAllocation>
        PARSER = new com.google.protobuf.AbstractParser<StreamingAllocation>() {
      @java.lang.Override
      public StreamingAllocation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<StreamingAllocation> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<StreamingAllocation> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public perfetto.protos.ProfilePacketOuterClass.StreamingAllocation getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StreamingFreeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:perfetto.protos.StreamingFree)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * TODO(fmayer): Add callstack.
     * </pre>
     *
     * <code>repeated uint64 address = 1;</code>
     * @return A list containing the address.
     */
    java.util.List<java.lang.Long> getAddressList();
    /**
     * <pre>
     * TODO(fmayer): Add callstack.
     * </pre>
     *
     * <code>repeated uint64 address = 1;</code>
     * @return The count of address.
     */
    int getAddressCount();
    /**
     * <pre>
     * TODO(fmayer): Add callstack.
     * </pre>
     *
     * <code>repeated uint64 address = 1;</code>
     * @param index The index of the element to return.
     * @return The address at the given index.
     */
    long getAddress(int index);

    /**
     * <code>repeated uint32 heap_id = 2;</code>
     * @return A list containing the heapId.
     */
    java.util.List<java.lang.Integer> getHeapIdList();
    /**
     * <code>repeated uint32 heap_id = 2;</code>
     * @return The count of heapId.
     */
    int getHeapIdCount();
    /**
     * <code>repeated uint32 heap_id = 2;</code>
     * @param index The index of the element to return.
     * @return The heapId at the given index.
     */
    int getHeapId(int index);

    /**
     * <code>repeated uint64 sequence_number = 3;</code>
     * @return A list containing the sequenceNumber.
     */
    java.util.List<java.lang.Long> getSequenceNumberList();
    /**
     * <code>repeated uint64 sequence_number = 3;</code>
     * @return The count of sequenceNumber.
     */
    int getSequenceNumberCount();
    /**
     * <code>repeated uint64 sequence_number = 3;</code>
     * @param index The index of the element to return.
     * @return The sequenceNumber at the given index.
     */
    long getSequenceNumber(int index);
  }
  /**
   * <pre>
   * Packet emitted by heapprofd when stream_allocations = true. Only for local
   * testing. Doesn't report the callsite.
   * </pre>
   *
   * Protobuf type {@code perfetto.protos.StreamingFree}
   */
  public static final class StreamingFree extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:perfetto.protos.StreamingFree)
      StreamingFreeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use StreamingFree.newBuilder() to construct.
    private StreamingFree(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private StreamingFree() {
      address_ = emptyLongList();
      heapId_ = emptyIntList();
      sequenceNumber_ = emptyLongList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new StreamingFree();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_StreamingFree_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_StreamingFree_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              perfetto.protos.ProfilePacketOuterClass.StreamingFree.class, perfetto.protos.ProfilePacketOuterClass.StreamingFree.Builder.class);
    }

    public static final int ADDRESS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.LongList address_;
    /**
     * <pre>
     * TODO(fmayer): Add callstack.
     * </pre>
     *
     * <code>repeated uint64 address = 1;</code>
     * @return A list containing the address.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getAddressList() {
      return address_;
    }
    /**
     * <pre>
     * TODO(fmayer): Add callstack.
     * </pre>
     *
     * <code>repeated uint64 address = 1;</code>
     * @return The count of address.
     */
    public int getAddressCount() {
      return address_.size();
    }
    /**
     * <pre>
     * TODO(fmayer): Add callstack.
     * </pre>
     *
     * <code>repeated uint64 address = 1;</code>
     * @param index The index of the element to return.
     * @return The address at the given index.
     */
    public long getAddress(int index) {
      return address_.getLong(index);
    }

    public static final int HEAP_ID_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList heapId_;
    /**
     * <code>repeated uint32 heap_id = 2;</code>
     * @return A list containing the heapId.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getHeapIdList() {
      return heapId_;
    }
    /**
     * <code>repeated uint32 heap_id = 2;</code>
     * @return The count of heapId.
     */
    public int getHeapIdCount() {
      return heapId_.size();
    }
    /**
     * <code>repeated uint32 heap_id = 2;</code>
     * @param index The index of the element to return.
     * @return The heapId at the given index.
     */
    public int getHeapId(int index) {
      return heapId_.getInt(index);
    }

    public static final int SEQUENCE_NUMBER_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.LongList sequenceNumber_;
    /**
     * <code>repeated uint64 sequence_number = 3;</code>
     * @return A list containing the sequenceNumber.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getSequenceNumberList() {
      return sequenceNumber_;
    }
    /**
     * <code>repeated uint64 sequence_number = 3;</code>
     * @return The count of sequenceNumber.
     */
    public int getSequenceNumberCount() {
      return sequenceNumber_.size();
    }
    /**
     * <code>repeated uint64 sequence_number = 3;</code>
     * @param index The index of the element to return.
     * @return The sequenceNumber at the given index.
     */
    public long getSequenceNumber(int index) {
      return sequenceNumber_.getLong(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < address_.size(); i++) {
        output.writeUInt64(1, address_.getLong(i));
      }
      for (int i = 0; i < heapId_.size(); i++) {
        output.writeUInt32(2, heapId_.getInt(i));
      }
      for (int i = 0; i < sequenceNumber_.size(); i++) {
        output.writeUInt64(3, sequenceNumber_.getLong(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < address_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt64SizeNoTag(address_.getLong(i));
        }
        size += dataSize;
        size += 1 * getAddressList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < heapId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(heapId_.getInt(i));
        }
        size += dataSize;
        size += 1 * getHeapIdList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < sequenceNumber_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt64SizeNoTag(sequenceNumber_.getLong(i));
        }
        size += dataSize;
        size += 1 * getSequenceNumberList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof perfetto.protos.ProfilePacketOuterClass.StreamingFree)) {
        return super.equals(obj);
      }
      perfetto.protos.ProfilePacketOuterClass.StreamingFree other = (perfetto.protos.ProfilePacketOuterClass.StreamingFree) obj;

      if (!getAddressList()
          .equals(other.getAddressList())) return false;
      if (!getHeapIdList()
          .equals(other.getHeapIdList())) return false;
      if (!getSequenceNumberList()
          .equals(other.getSequenceNumberList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getAddressCount() > 0) {
        hash = (37 * hash) + ADDRESS_FIELD_NUMBER;
        hash = (53 * hash) + getAddressList().hashCode();
      }
      if (getHeapIdCount() > 0) {
        hash = (37 * hash) + HEAP_ID_FIELD_NUMBER;
        hash = (53 * hash) + getHeapIdList().hashCode();
      }
      if (getSequenceNumberCount() > 0) {
        hash = (37 * hash) + SEQUENCE_NUMBER_FIELD_NUMBER;
        hash = (53 * hash) + getSequenceNumberList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static perfetto.protos.ProfilePacketOuterClass.StreamingFree parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.ProfilePacketOuterClass.StreamingFree parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.ProfilePacketOuterClass.StreamingFree parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.ProfilePacketOuterClass.StreamingFree parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.ProfilePacketOuterClass.StreamingFree parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.ProfilePacketOuterClass.StreamingFree parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.ProfilePacketOuterClass.StreamingFree parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.ProfilePacketOuterClass.StreamingFree parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.ProfilePacketOuterClass.StreamingFree parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static perfetto.protos.ProfilePacketOuterClass.StreamingFree parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.ProfilePacketOuterClass.StreamingFree parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.ProfilePacketOuterClass.StreamingFree parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(perfetto.protos.ProfilePacketOuterClass.StreamingFree prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Packet emitted by heapprofd when stream_allocations = true. Only for local
     * testing. Doesn't report the callsite.
     * </pre>
     *
     * Protobuf type {@code perfetto.protos.StreamingFree}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:perfetto.protos.StreamingFree)
        perfetto.protos.ProfilePacketOuterClass.StreamingFreeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_StreamingFree_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_StreamingFree_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.ProfilePacketOuterClass.StreamingFree.class, perfetto.protos.ProfilePacketOuterClass.StreamingFree.Builder.class);
      }

      // Construct using perfetto.protos.ProfilePacketOuterClass.StreamingFree.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        address_ = emptyLongList();
        heapId_ = emptyIntList();
        sequenceNumber_ = emptyLongList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_StreamingFree_descriptor;
      }

      @java.lang.Override
      public perfetto.protos.ProfilePacketOuterClass.StreamingFree getDefaultInstanceForType() {
        return perfetto.protos.ProfilePacketOuterClass.StreamingFree.getDefaultInstance();
      }

      @java.lang.Override
      public perfetto.protos.ProfilePacketOuterClass.StreamingFree build() {
        perfetto.protos.ProfilePacketOuterClass.StreamingFree result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public perfetto.protos.ProfilePacketOuterClass.StreamingFree buildPartial() {
        perfetto.protos.ProfilePacketOuterClass.StreamingFree result = new perfetto.protos.ProfilePacketOuterClass.StreamingFree(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(perfetto.protos.ProfilePacketOuterClass.StreamingFree result) {
        if (((bitField0_ & 0x00000001) != 0)) {
          address_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.address_ = address_;
        if (((bitField0_ & 0x00000002) != 0)) {
          heapId_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.heapId_ = heapId_;
        if (((bitField0_ & 0x00000004) != 0)) {
          sequenceNumber_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.sequenceNumber_ = sequenceNumber_;
      }

      private void buildPartial0(perfetto.protos.ProfilePacketOuterClass.StreamingFree result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof perfetto.protos.ProfilePacketOuterClass.StreamingFree) {
          return mergeFrom((perfetto.protos.ProfilePacketOuterClass.StreamingFree)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(perfetto.protos.ProfilePacketOuterClass.StreamingFree other) {
        if (other == perfetto.protos.ProfilePacketOuterClass.StreamingFree.getDefaultInstance()) return this;
        if (!other.address_.isEmpty()) {
          if (address_.isEmpty()) {
            address_ = other.address_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureAddressIsMutable();
            address_.addAll(other.address_);
          }
          onChanged();
        }
        if (!other.heapId_.isEmpty()) {
          if (heapId_.isEmpty()) {
            heapId_ = other.heapId_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureHeapIdIsMutable();
            heapId_.addAll(other.heapId_);
          }
          onChanged();
        }
        if (!other.sequenceNumber_.isEmpty()) {
          if (sequenceNumber_.isEmpty()) {
            sequenceNumber_ = other.sequenceNumber_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureSequenceNumberIsMutable();
            sequenceNumber_.addAll(other.sequenceNumber_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                long v = input.readUInt64();
                ensureAddressIsMutable();
                address_.addLong(v);
                break;
              } // case 8
              case 10: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureAddressIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  address_.addLong(input.readUInt64());
                }
                input.popLimit(limit);
                break;
              } // case 10
              case 16: {
                int v = input.readUInt32();
                ensureHeapIdIsMutable();
                heapId_.addInt(v);
                break;
              } // case 16
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureHeapIdIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  heapId_.addInt(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              } // case 18
              case 24: {
                long v = input.readUInt64();
                ensureSequenceNumberIsMutable();
                sequenceNumber_.addLong(v);
                break;
              } // case 24
              case 26: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureSequenceNumberIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  sequenceNumber_.addLong(input.readUInt64());
                }
                input.popLimit(limit);
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.LongList address_ = emptyLongList();
      private void ensureAddressIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          address_ = mutableCopy(address_);
          bitField0_ |= 0x00000001;
        }
      }
      /**
       * <pre>
       * TODO(fmayer): Add callstack.
       * </pre>
       *
       * <code>repeated uint64 address = 1;</code>
       * @return A list containing the address.
       */
      public java.util.List<java.lang.Long>
          getAddressList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(address_) : address_;
      }
      /**
       * <pre>
       * TODO(fmayer): Add callstack.
       * </pre>
       *
       * <code>repeated uint64 address = 1;</code>
       * @return The count of address.
       */
      public int getAddressCount() {
        return address_.size();
      }
      /**
       * <pre>
       * TODO(fmayer): Add callstack.
       * </pre>
       *
       * <code>repeated uint64 address = 1;</code>
       * @param index The index of the element to return.
       * @return The address at the given index.
       */
      public long getAddress(int index) {
        return address_.getLong(index);
      }
      /**
       * <pre>
       * TODO(fmayer): Add callstack.
       * </pre>
       *
       * <code>repeated uint64 address = 1;</code>
       * @param index The index to set the value at.
       * @param value The address to set.
       * @return This builder for chaining.
       */
      public Builder setAddress(
          int index, long value) {
        
        ensureAddressIsMutable();
        address_.setLong(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * TODO(fmayer): Add callstack.
       * </pre>
       *
       * <code>repeated uint64 address = 1;</code>
       * @param value The address to add.
       * @return This builder for chaining.
       */
      public Builder addAddress(long value) {
        
        ensureAddressIsMutable();
        address_.addLong(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * TODO(fmayer): Add callstack.
       * </pre>
       *
       * <code>repeated uint64 address = 1;</code>
       * @param values The address to add.
       * @return This builder for chaining.
       */
      public Builder addAllAddress(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureAddressIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, address_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * TODO(fmayer): Add callstack.
       * </pre>
       *
       * <code>repeated uint64 address = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAddress() {
        address_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList heapId_ = emptyIntList();
      private void ensureHeapIdIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          heapId_ = mutableCopy(heapId_);
          bitField0_ |= 0x00000002;
        }
      }
      /**
       * <code>repeated uint32 heap_id = 2;</code>
       * @return A list containing the heapId.
       */
      public java.util.List<java.lang.Integer>
          getHeapIdList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(heapId_) : heapId_;
      }
      /**
       * <code>repeated uint32 heap_id = 2;</code>
       * @return The count of heapId.
       */
      public int getHeapIdCount() {
        return heapId_.size();
      }
      /**
       * <code>repeated uint32 heap_id = 2;</code>
       * @param index The index of the element to return.
       * @return The heapId at the given index.
       */
      public int getHeapId(int index) {
        return heapId_.getInt(index);
      }
      /**
       * <code>repeated uint32 heap_id = 2;</code>
       * @param index The index to set the value at.
       * @param value The heapId to set.
       * @return This builder for chaining.
       */
      public Builder setHeapId(
          int index, int value) {
        
        ensureHeapIdIsMutable();
        heapId_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 heap_id = 2;</code>
       * @param value The heapId to add.
       * @return This builder for chaining.
       */
      public Builder addHeapId(int value) {
        
        ensureHeapIdIsMutable();
        heapId_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 heap_id = 2;</code>
       * @param values The heapId to add.
       * @return This builder for chaining.
       */
      public Builder addAllHeapId(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureHeapIdIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, heapId_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 heap_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeapId() {
        heapId_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.LongList sequenceNumber_ = emptyLongList();
      private void ensureSequenceNumberIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          sequenceNumber_ = mutableCopy(sequenceNumber_);
          bitField0_ |= 0x00000004;
        }
      }
      /**
       * <code>repeated uint64 sequence_number = 3;</code>
       * @return A list containing the sequenceNumber.
       */
      public java.util.List<java.lang.Long>
          getSequenceNumberList() {
        return ((bitField0_ & 0x00000004) != 0) ?
                 java.util.Collections.unmodifiableList(sequenceNumber_) : sequenceNumber_;
      }
      /**
       * <code>repeated uint64 sequence_number = 3;</code>
       * @return The count of sequenceNumber.
       */
      public int getSequenceNumberCount() {
        return sequenceNumber_.size();
      }
      /**
       * <code>repeated uint64 sequence_number = 3;</code>
       * @param index The index of the element to return.
       * @return The sequenceNumber at the given index.
       */
      public long getSequenceNumber(int index) {
        return sequenceNumber_.getLong(index);
      }
      /**
       * <code>repeated uint64 sequence_number = 3;</code>
       * @param index The index to set the value at.
       * @param value The sequenceNumber to set.
       * @return This builder for chaining.
       */
      public Builder setSequenceNumber(
          int index, long value) {
        
        ensureSequenceNumberIsMutable();
        sequenceNumber_.setLong(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 sequence_number = 3;</code>
       * @param value The sequenceNumber to add.
       * @return This builder for chaining.
       */
      public Builder addSequenceNumber(long value) {
        
        ensureSequenceNumberIsMutable();
        sequenceNumber_.addLong(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 sequence_number = 3;</code>
       * @param values The sequenceNumber to add.
       * @return This builder for chaining.
       */
      public Builder addAllSequenceNumber(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureSequenceNumberIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, sequenceNumber_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint64 sequence_number = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearSequenceNumber() {
        sequenceNumber_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:perfetto.protos.StreamingFree)
    }

    // @@protoc_insertion_point(class_scope:perfetto.protos.StreamingFree)
    private static final perfetto.protos.ProfilePacketOuterClass.StreamingFree DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new perfetto.protos.ProfilePacketOuterClass.StreamingFree();
    }

    public static perfetto.protos.ProfilePacketOuterClass.StreamingFree getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<StreamingFree>
        PARSER = new com.google.protobuf.AbstractParser<StreamingFree>() {
      @java.lang.Override
      public StreamingFree parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<StreamingFree> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<StreamingFree> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public perfetto.protos.ProfilePacketOuterClass.StreamingFree getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StreamingProfilePacketOrBuilder extends
      // @@protoc_insertion_point(interface_extends:perfetto.protos.StreamingProfilePacket)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Index into InternedData.callstacks
     * </pre>
     *
     * <code>repeated uint64 callstack_iid = 1;</code>
     * @return A list containing the callstackIid.
     */
    java.util.List<java.lang.Long> getCallstackIidList();
    /**
     * <pre>
     * Index into InternedData.callstacks
     * </pre>
     *
     * <code>repeated uint64 callstack_iid = 1;</code>
     * @return The count of callstackIid.
     */
    int getCallstackIidCount();
    /**
     * <pre>
     * Index into InternedData.callstacks
     * </pre>
     *
     * <code>repeated uint64 callstack_iid = 1;</code>
     * @param index The index of the element to return.
     * @return The callstackIid at the given index.
     */
    long getCallstackIid(int index);

    /**
     * <pre>
     * TODO(eseckler): ThreadDescriptor-based timestamps are deprecated. Replace
     * this with ClockSnapshot-based delta encoding instead.
     * </pre>
     *
     * <code>repeated int64 timestamp_delta_us = 2;</code>
     * @return A list containing the timestampDeltaUs.
     */
    java.util.List<java.lang.Long> getTimestampDeltaUsList();
    /**
     * <pre>
     * TODO(eseckler): ThreadDescriptor-based timestamps are deprecated. Replace
     * this with ClockSnapshot-based delta encoding instead.
     * </pre>
     *
     * <code>repeated int64 timestamp_delta_us = 2;</code>
     * @return The count of timestampDeltaUs.
     */
    int getTimestampDeltaUsCount();
    /**
     * <pre>
     * TODO(eseckler): ThreadDescriptor-based timestamps are deprecated. Replace
     * this with ClockSnapshot-based delta encoding instead.
     * </pre>
     *
     * <code>repeated int64 timestamp_delta_us = 2;</code>
     * @param index The index of the element to return.
     * @return The timestampDeltaUs at the given index.
     */
    long getTimestampDeltaUs(int index);

    /**
     * <code>optional int32 process_priority = 3;</code>
     * @return Whether the processPriority field is set.
     */
    boolean hasProcessPriority();
    /**
     * <code>optional int32 process_priority = 3;</code>
     * @return The processPriority.
     */
    int getProcessPriority();
  }
  /**
   * <pre>
   * Packet emitted by the chromium in-process signal-based callstack sampler.
   * Represents a series of individual stack samples (sampled at discrete points
   * in time), rather than aggregated over an interval.
   * </pre>
   *
   * Protobuf type {@code perfetto.protos.StreamingProfilePacket}
   */
  public static final class StreamingProfilePacket extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:perfetto.protos.StreamingProfilePacket)
      StreamingProfilePacketOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use StreamingProfilePacket.newBuilder() to construct.
    private StreamingProfilePacket(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private StreamingProfilePacket() {
      callstackIid_ = emptyLongList();
      timestampDeltaUs_ = emptyLongList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new StreamingProfilePacket();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_StreamingProfilePacket_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_StreamingProfilePacket_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              perfetto.protos.ProfilePacketOuterClass.StreamingProfilePacket.class, perfetto.protos.ProfilePacketOuterClass.StreamingProfilePacket.Builder.class);
    }

    private int bitField0_;
    public static final int CALLSTACK_IID_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.LongList callstackIid_;
    /**
     * <pre>
     * Index into InternedData.callstacks
     * </pre>
     *
     * <code>repeated uint64 callstack_iid = 1;</code>
     * @return A list containing the callstackIid.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getCallstackIidList() {
      return callstackIid_;
    }
    /**
     * <pre>
     * Index into InternedData.callstacks
     * </pre>
     *
     * <code>repeated uint64 callstack_iid = 1;</code>
     * @return The count of callstackIid.
     */
    public int getCallstackIidCount() {
      return callstackIid_.size();
    }
    /**
     * <pre>
     * Index into InternedData.callstacks
     * </pre>
     *
     * <code>repeated uint64 callstack_iid = 1;</code>
     * @param index The index of the element to return.
     * @return The callstackIid at the given index.
     */
    public long getCallstackIid(int index) {
      return callstackIid_.getLong(index);
    }

    public static final int TIMESTAMP_DELTA_US_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.LongList timestampDeltaUs_;
    /**
     * <pre>
     * TODO(eseckler): ThreadDescriptor-based timestamps are deprecated. Replace
     * this with ClockSnapshot-based delta encoding instead.
     * </pre>
     *
     * <code>repeated int64 timestamp_delta_us = 2;</code>
     * @return A list containing the timestampDeltaUs.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getTimestampDeltaUsList() {
      return timestampDeltaUs_;
    }
    /**
     * <pre>
     * TODO(eseckler): ThreadDescriptor-based timestamps are deprecated. Replace
     * this with ClockSnapshot-based delta encoding instead.
     * </pre>
     *
     * <code>repeated int64 timestamp_delta_us = 2;</code>
     * @return The count of timestampDeltaUs.
     */
    public int getTimestampDeltaUsCount() {
      return timestampDeltaUs_.size();
    }
    /**
     * <pre>
     * TODO(eseckler): ThreadDescriptor-based timestamps are deprecated. Replace
     * this with ClockSnapshot-based delta encoding instead.
     * </pre>
     *
     * <code>repeated int64 timestamp_delta_us = 2;</code>
     * @param index The index of the element to return.
     * @return The timestampDeltaUs at the given index.
     */
    public long getTimestampDeltaUs(int index) {
      return timestampDeltaUs_.getLong(index);
    }

    public static final int PROCESS_PRIORITY_FIELD_NUMBER = 3;
    private int processPriority_ = 0;
    /**
     * <code>optional int32 process_priority = 3;</code>
     * @return Whether the processPriority field is set.
     */
    @java.lang.Override
    public boolean hasProcessPriority() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional int32 process_priority = 3;</code>
     * @return The processPriority.
     */
    @java.lang.Override
    public int getProcessPriority() {
      return processPriority_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < callstackIid_.size(); i++) {
        output.writeUInt64(1, callstackIid_.getLong(i));
      }
      for (int i = 0; i < timestampDeltaUs_.size(); i++) {
        output.writeInt64(2, timestampDeltaUs_.getLong(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(3, processPriority_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < callstackIid_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt64SizeNoTag(callstackIid_.getLong(i));
        }
        size += dataSize;
        size += 1 * getCallstackIidList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < timestampDeltaUs_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(timestampDeltaUs_.getLong(i));
        }
        size += dataSize;
        size += 1 * getTimestampDeltaUsList().size();
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, processPriority_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof perfetto.protos.ProfilePacketOuterClass.StreamingProfilePacket)) {
        return super.equals(obj);
      }
      perfetto.protos.ProfilePacketOuterClass.StreamingProfilePacket other = (perfetto.protos.ProfilePacketOuterClass.StreamingProfilePacket) obj;

      if (!getCallstackIidList()
          .equals(other.getCallstackIidList())) return false;
      if (!getTimestampDeltaUsList()
          .equals(other.getTimestampDeltaUsList())) return false;
      if (hasProcessPriority() != other.hasProcessPriority()) return false;
      if (hasProcessPriority()) {
        if (getProcessPriority()
            != other.getProcessPriority()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getCallstackIidCount() > 0) {
        hash = (37 * hash) + CALLSTACK_IID_FIELD_NUMBER;
        hash = (53 * hash) + getCallstackIidList().hashCode();
      }
      if (getTimestampDeltaUsCount() > 0) {
        hash = (37 * hash) + TIMESTAMP_DELTA_US_FIELD_NUMBER;
        hash = (53 * hash) + getTimestampDeltaUsList().hashCode();
      }
      if (hasProcessPriority()) {
        hash = (37 * hash) + PROCESS_PRIORITY_FIELD_NUMBER;
        hash = (53 * hash) + getProcessPriority();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static perfetto.protos.ProfilePacketOuterClass.StreamingProfilePacket parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.ProfilePacketOuterClass.StreamingProfilePacket parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.ProfilePacketOuterClass.StreamingProfilePacket parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.ProfilePacketOuterClass.StreamingProfilePacket parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.ProfilePacketOuterClass.StreamingProfilePacket parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.ProfilePacketOuterClass.StreamingProfilePacket parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.ProfilePacketOuterClass.StreamingProfilePacket parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.ProfilePacketOuterClass.StreamingProfilePacket parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.ProfilePacketOuterClass.StreamingProfilePacket parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static perfetto.protos.ProfilePacketOuterClass.StreamingProfilePacket parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.ProfilePacketOuterClass.StreamingProfilePacket parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.ProfilePacketOuterClass.StreamingProfilePacket parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(perfetto.protos.ProfilePacketOuterClass.StreamingProfilePacket prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Packet emitted by the chromium in-process signal-based callstack sampler.
     * Represents a series of individual stack samples (sampled at discrete points
     * in time), rather than aggregated over an interval.
     * </pre>
     *
     * Protobuf type {@code perfetto.protos.StreamingProfilePacket}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:perfetto.protos.StreamingProfilePacket)
        perfetto.protos.ProfilePacketOuterClass.StreamingProfilePacketOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_StreamingProfilePacket_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_StreamingProfilePacket_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.ProfilePacketOuterClass.StreamingProfilePacket.class, perfetto.protos.ProfilePacketOuterClass.StreamingProfilePacket.Builder.class);
      }

      // Construct using perfetto.protos.ProfilePacketOuterClass.StreamingProfilePacket.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        callstackIid_ = emptyLongList();
        timestampDeltaUs_ = emptyLongList();
        processPriority_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_StreamingProfilePacket_descriptor;
      }

      @java.lang.Override
      public perfetto.protos.ProfilePacketOuterClass.StreamingProfilePacket getDefaultInstanceForType() {
        return perfetto.protos.ProfilePacketOuterClass.StreamingProfilePacket.getDefaultInstance();
      }

      @java.lang.Override
      public perfetto.protos.ProfilePacketOuterClass.StreamingProfilePacket build() {
        perfetto.protos.ProfilePacketOuterClass.StreamingProfilePacket result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public perfetto.protos.ProfilePacketOuterClass.StreamingProfilePacket buildPartial() {
        perfetto.protos.ProfilePacketOuterClass.StreamingProfilePacket result = new perfetto.protos.ProfilePacketOuterClass.StreamingProfilePacket(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(perfetto.protos.ProfilePacketOuterClass.StreamingProfilePacket result) {
        if (((bitField0_ & 0x00000001) != 0)) {
          callstackIid_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.callstackIid_ = callstackIid_;
        if (((bitField0_ & 0x00000002) != 0)) {
          timestampDeltaUs_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.timestampDeltaUs_ = timestampDeltaUs_;
      }

      private void buildPartial0(perfetto.protos.ProfilePacketOuterClass.StreamingProfilePacket result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.processPriority_ = processPriority_;
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof perfetto.protos.ProfilePacketOuterClass.StreamingProfilePacket) {
          return mergeFrom((perfetto.protos.ProfilePacketOuterClass.StreamingProfilePacket)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(perfetto.protos.ProfilePacketOuterClass.StreamingProfilePacket other) {
        if (other == perfetto.protos.ProfilePacketOuterClass.StreamingProfilePacket.getDefaultInstance()) return this;
        if (!other.callstackIid_.isEmpty()) {
          if (callstackIid_.isEmpty()) {
            callstackIid_ = other.callstackIid_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureCallstackIidIsMutable();
            callstackIid_.addAll(other.callstackIid_);
          }
          onChanged();
        }
        if (!other.timestampDeltaUs_.isEmpty()) {
          if (timestampDeltaUs_.isEmpty()) {
            timestampDeltaUs_ = other.timestampDeltaUs_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureTimestampDeltaUsIsMutable();
            timestampDeltaUs_.addAll(other.timestampDeltaUs_);
          }
          onChanged();
        }
        if (other.hasProcessPriority()) {
          setProcessPriority(other.getProcessPriority());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                long v = input.readUInt64();
                ensureCallstackIidIsMutable();
                callstackIid_.addLong(v);
                break;
              } // case 8
              case 10: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureCallstackIidIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  callstackIid_.addLong(input.readUInt64());
                }
                input.popLimit(limit);
                break;
              } // case 10
              case 16: {
                long v = input.readInt64();
                ensureTimestampDeltaUsIsMutable();
                timestampDeltaUs_.addLong(v);
                break;
              } // case 16
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureTimestampDeltaUsIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  timestampDeltaUs_.addLong(input.readInt64());
                }
                input.popLimit(limit);
                break;
              } // case 18
              case 24: {
                processPriority_ = input.readInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.LongList callstackIid_ = emptyLongList();
      private void ensureCallstackIidIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          callstackIid_ = mutableCopy(callstackIid_);
          bitField0_ |= 0x00000001;
        }
      }
      /**
       * <pre>
       * Index into InternedData.callstacks
       * </pre>
       *
       * <code>repeated uint64 callstack_iid = 1;</code>
       * @return A list containing the callstackIid.
       */
      public java.util.List<java.lang.Long>
          getCallstackIidList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(callstackIid_) : callstackIid_;
      }
      /**
       * <pre>
       * Index into InternedData.callstacks
       * </pre>
       *
       * <code>repeated uint64 callstack_iid = 1;</code>
       * @return The count of callstackIid.
       */
      public int getCallstackIidCount() {
        return callstackIid_.size();
      }
      /**
       * <pre>
       * Index into InternedData.callstacks
       * </pre>
       *
       * <code>repeated uint64 callstack_iid = 1;</code>
       * @param index The index of the element to return.
       * @return The callstackIid at the given index.
       */
      public long getCallstackIid(int index) {
        return callstackIid_.getLong(index);
      }
      /**
       * <pre>
       * Index into InternedData.callstacks
       * </pre>
       *
       * <code>repeated uint64 callstack_iid = 1;</code>
       * @param index The index to set the value at.
       * @param value The callstackIid to set.
       * @return This builder for chaining.
       */
      public Builder setCallstackIid(
          int index, long value) {
        
        ensureCallstackIidIsMutable();
        callstackIid_.setLong(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Index into InternedData.callstacks
       * </pre>
       *
       * <code>repeated uint64 callstack_iid = 1;</code>
       * @param value The callstackIid to add.
       * @return This builder for chaining.
       */
      public Builder addCallstackIid(long value) {
        
        ensureCallstackIidIsMutable();
        callstackIid_.addLong(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Index into InternedData.callstacks
       * </pre>
       *
       * <code>repeated uint64 callstack_iid = 1;</code>
       * @param values The callstackIid to add.
       * @return This builder for chaining.
       */
      public Builder addAllCallstackIid(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureCallstackIidIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, callstackIid_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Index into InternedData.callstacks
       * </pre>
       *
       * <code>repeated uint64 callstack_iid = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearCallstackIid() {
        callstackIid_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.LongList timestampDeltaUs_ = emptyLongList();
      private void ensureTimestampDeltaUsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          timestampDeltaUs_ = mutableCopy(timestampDeltaUs_);
          bitField0_ |= 0x00000002;
        }
      }
      /**
       * <pre>
       * TODO(eseckler): ThreadDescriptor-based timestamps are deprecated. Replace
       * this with ClockSnapshot-based delta encoding instead.
       * </pre>
       *
       * <code>repeated int64 timestamp_delta_us = 2;</code>
       * @return A list containing the timestampDeltaUs.
       */
      public java.util.List<java.lang.Long>
          getTimestampDeltaUsList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(timestampDeltaUs_) : timestampDeltaUs_;
      }
      /**
       * <pre>
       * TODO(eseckler): ThreadDescriptor-based timestamps are deprecated. Replace
       * this with ClockSnapshot-based delta encoding instead.
       * </pre>
       *
       * <code>repeated int64 timestamp_delta_us = 2;</code>
       * @return The count of timestampDeltaUs.
       */
      public int getTimestampDeltaUsCount() {
        return timestampDeltaUs_.size();
      }
      /**
       * <pre>
       * TODO(eseckler): ThreadDescriptor-based timestamps are deprecated. Replace
       * this with ClockSnapshot-based delta encoding instead.
       * </pre>
       *
       * <code>repeated int64 timestamp_delta_us = 2;</code>
       * @param index The index of the element to return.
       * @return The timestampDeltaUs at the given index.
       */
      public long getTimestampDeltaUs(int index) {
        return timestampDeltaUs_.getLong(index);
      }
      /**
       * <pre>
       * TODO(eseckler): ThreadDescriptor-based timestamps are deprecated. Replace
       * this with ClockSnapshot-based delta encoding instead.
       * </pre>
       *
       * <code>repeated int64 timestamp_delta_us = 2;</code>
       * @param index The index to set the value at.
       * @param value The timestampDeltaUs to set.
       * @return This builder for chaining.
       */
      public Builder setTimestampDeltaUs(
          int index, long value) {
        
        ensureTimestampDeltaUsIsMutable();
        timestampDeltaUs_.setLong(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * TODO(eseckler): ThreadDescriptor-based timestamps are deprecated. Replace
       * this with ClockSnapshot-based delta encoding instead.
       * </pre>
       *
       * <code>repeated int64 timestamp_delta_us = 2;</code>
       * @param value The timestampDeltaUs to add.
       * @return This builder for chaining.
       */
      public Builder addTimestampDeltaUs(long value) {
        
        ensureTimestampDeltaUsIsMutable();
        timestampDeltaUs_.addLong(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * TODO(eseckler): ThreadDescriptor-based timestamps are deprecated. Replace
       * this with ClockSnapshot-based delta encoding instead.
       * </pre>
       *
       * <code>repeated int64 timestamp_delta_us = 2;</code>
       * @param values The timestampDeltaUs to add.
       * @return This builder for chaining.
       */
      public Builder addAllTimestampDeltaUs(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureTimestampDeltaUsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, timestampDeltaUs_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * TODO(eseckler): ThreadDescriptor-based timestamps are deprecated. Replace
       * this with ClockSnapshot-based delta encoding instead.
       * </pre>
       *
       * <code>repeated int64 timestamp_delta_us = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimestampDeltaUs() {
        timestampDeltaUs_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private int processPriority_ ;
      /**
       * <code>optional int32 process_priority = 3;</code>
       * @return Whether the processPriority field is set.
       */
      @java.lang.Override
      public boolean hasProcessPriority() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional int32 process_priority = 3;</code>
       * @return The processPriority.
       */
      @java.lang.Override
      public int getProcessPriority() {
        return processPriority_;
      }
      /**
       * <code>optional int32 process_priority = 3;</code>
       * @param value The processPriority to set.
       * @return This builder for chaining.
       */
      public Builder setProcessPriority(int value) {
        
        processPriority_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 process_priority = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearProcessPriority() {
        bitField0_ = (bitField0_ & ~0x00000004);
        processPriority_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:perfetto.protos.StreamingProfilePacket)
    }

    // @@protoc_insertion_point(class_scope:perfetto.protos.StreamingProfilePacket)
    private static final perfetto.protos.ProfilePacketOuterClass.StreamingProfilePacket DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new perfetto.protos.ProfilePacketOuterClass.StreamingProfilePacket();
    }

    public static perfetto.protos.ProfilePacketOuterClass.StreamingProfilePacket getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<StreamingProfilePacket>
        PARSER = new com.google.protobuf.AbstractParser<StreamingProfilePacket>() {
      @java.lang.Override
      public StreamingProfilePacket parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<StreamingProfilePacket> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<StreamingProfilePacket> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public perfetto.protos.ProfilePacketOuterClass.StreamingProfilePacket getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ProfilingOrBuilder extends
      // @@protoc_insertion_point(interface_extends:perfetto.protos.Profiling)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * <pre>
   * Namespace for the contained enums.
   * </pre>
   *
   * Protobuf type {@code perfetto.protos.Profiling}
   */
  public static final class Profiling extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:perfetto.protos.Profiling)
      ProfilingOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Profiling.newBuilder() to construct.
    private Profiling(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Profiling() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Profiling();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_Profiling_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_Profiling_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              perfetto.protos.ProfilePacketOuterClass.Profiling.class, perfetto.protos.ProfilePacketOuterClass.Profiling.Builder.class);
    }

    /**
     * Protobuf enum {@code perfetto.protos.Profiling.CpuMode}
     */
    public enum CpuMode
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>MODE_UNKNOWN = 0;</code>
       */
      MODE_UNKNOWN(0),
      /**
       * <code>MODE_KERNEL = 1;</code>
       */
      MODE_KERNEL(1),
      /**
       * <code>MODE_USER = 2;</code>
       */
      MODE_USER(2),
      /**
       * <pre>
       * The following values aren't expected, but included for completeness:
       * </pre>
       *
       * <code>MODE_HYPERVISOR = 3;</code>
       */
      MODE_HYPERVISOR(3),
      /**
       * <code>MODE_GUEST_KERNEL = 4;</code>
       */
      MODE_GUEST_KERNEL(4),
      /**
       * <code>MODE_GUEST_USER = 5;</code>
       */
      MODE_GUEST_USER(5),
      ;

      /**
       * <code>MODE_UNKNOWN = 0;</code>
       */
      public static final int MODE_UNKNOWN_VALUE = 0;
      /**
       * <code>MODE_KERNEL = 1;</code>
       */
      public static final int MODE_KERNEL_VALUE = 1;
      /**
       * <code>MODE_USER = 2;</code>
       */
      public static final int MODE_USER_VALUE = 2;
      /**
       * <pre>
       * The following values aren't expected, but included for completeness:
       * </pre>
       *
       * <code>MODE_HYPERVISOR = 3;</code>
       */
      public static final int MODE_HYPERVISOR_VALUE = 3;
      /**
       * <code>MODE_GUEST_KERNEL = 4;</code>
       */
      public static final int MODE_GUEST_KERNEL_VALUE = 4;
      /**
       * <code>MODE_GUEST_USER = 5;</code>
       */
      public static final int MODE_GUEST_USER_VALUE = 5;


      public final int getNumber() {
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static CpuMode valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static CpuMode forNumber(int value) {
        switch (value) {
          case 0: return MODE_UNKNOWN;
          case 1: return MODE_KERNEL;
          case 2: return MODE_USER;
          case 3: return MODE_HYPERVISOR;
          case 4: return MODE_GUEST_KERNEL;
          case 5: return MODE_GUEST_USER;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<CpuMode>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          CpuMode> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<CpuMode>() {
              public CpuMode findValueByNumber(int number) {
                return CpuMode.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return perfetto.protos.ProfilePacketOuterClass.Profiling.getDescriptor().getEnumTypes().get(0);
      }

      private static final CpuMode[] VALUES = values();

      public static CpuMode valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private CpuMode(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:perfetto.protos.Profiling.CpuMode)
    }

    /**
     * <pre>
     * Enumeration of libunwindstack's error codes.
     * NB: the integral representations of the two enums are different.
     * </pre>
     *
     * Protobuf enum {@code perfetto.protos.Profiling.StackUnwindError}
     */
    public enum StackUnwindError
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UNWIND_ERROR_UNKNOWN = 0;</code>
       */
      UNWIND_ERROR_UNKNOWN(0),
      /**
       * <code>UNWIND_ERROR_NONE = 1;</code>
       */
      UNWIND_ERROR_NONE(1),
      /**
       * <code>UNWIND_ERROR_MEMORY_INVALID = 2;</code>
       */
      UNWIND_ERROR_MEMORY_INVALID(2),
      /**
       * <code>UNWIND_ERROR_UNWIND_INFO = 3;</code>
       */
      UNWIND_ERROR_UNWIND_INFO(3),
      /**
       * <code>UNWIND_ERROR_UNSUPPORTED = 4;</code>
       */
      UNWIND_ERROR_UNSUPPORTED(4),
      /**
       * <code>UNWIND_ERROR_INVALID_MAP = 5;</code>
       */
      UNWIND_ERROR_INVALID_MAP(5),
      /**
       * <code>UNWIND_ERROR_MAX_FRAMES_EXCEEDED = 6;</code>
       */
      UNWIND_ERROR_MAX_FRAMES_EXCEEDED(6),
      /**
       * <code>UNWIND_ERROR_REPEATED_FRAME = 7;</code>
       */
      UNWIND_ERROR_REPEATED_FRAME(7),
      /**
       * <code>UNWIND_ERROR_INVALID_ELF = 8;</code>
       */
      UNWIND_ERROR_INVALID_ELF(8),
      /**
       * <code>UNWIND_ERROR_SYSTEM_CALL = 9;</code>
       */
      UNWIND_ERROR_SYSTEM_CALL(9),
      /**
       * <code>UNWIND_ERROR_THREAD_TIMEOUT = 10;</code>
       */
      UNWIND_ERROR_THREAD_TIMEOUT(10),
      /**
       * <code>UNWIND_ERROR_THREAD_DOES_NOT_EXIST = 11;</code>
       */
      UNWIND_ERROR_THREAD_DOES_NOT_EXIST(11),
      /**
       * <code>UNWIND_ERROR_BAD_ARCH = 12;</code>
       */
      UNWIND_ERROR_BAD_ARCH(12),
      /**
       * <code>UNWIND_ERROR_MAPS_PARSE = 13;</code>
       */
      UNWIND_ERROR_MAPS_PARSE(13),
      /**
       * <code>UNWIND_ERROR_INVALID_PARAMETER = 14;</code>
       */
      UNWIND_ERROR_INVALID_PARAMETER(14),
      /**
       * <code>UNWIND_ERROR_PTRACE_CALL = 15;</code>
       */
      UNWIND_ERROR_PTRACE_CALL(15),
      ;

      /**
       * <code>UNWIND_ERROR_UNKNOWN = 0;</code>
       */
      public static final int UNWIND_ERROR_UNKNOWN_VALUE = 0;
      /**
       * <code>UNWIND_ERROR_NONE = 1;</code>
       */
      public static final int UNWIND_ERROR_NONE_VALUE = 1;
      /**
       * <code>UNWIND_ERROR_MEMORY_INVALID = 2;</code>
       */
      public static final int UNWIND_ERROR_MEMORY_INVALID_VALUE = 2;
      /**
       * <code>UNWIND_ERROR_UNWIND_INFO = 3;</code>
       */
      public static final int UNWIND_ERROR_UNWIND_INFO_VALUE = 3;
      /**
       * <code>UNWIND_ERROR_UNSUPPORTED = 4;</code>
       */
      public static final int UNWIND_ERROR_UNSUPPORTED_VALUE = 4;
      /**
       * <code>UNWIND_ERROR_INVALID_MAP = 5;</code>
       */
      public static final int UNWIND_ERROR_INVALID_MAP_VALUE = 5;
      /**
       * <code>UNWIND_ERROR_MAX_FRAMES_EXCEEDED = 6;</code>
       */
      public static final int UNWIND_ERROR_MAX_FRAMES_EXCEEDED_VALUE = 6;
      /**
       * <code>UNWIND_ERROR_REPEATED_FRAME = 7;</code>
       */
      public static final int UNWIND_ERROR_REPEATED_FRAME_VALUE = 7;
      /**
       * <code>UNWIND_ERROR_INVALID_ELF = 8;</code>
       */
      public static final int UNWIND_ERROR_INVALID_ELF_VALUE = 8;
      /**
       * <code>UNWIND_ERROR_SYSTEM_CALL = 9;</code>
       */
      public static final int UNWIND_ERROR_SYSTEM_CALL_VALUE = 9;
      /**
       * <code>UNWIND_ERROR_THREAD_TIMEOUT = 10;</code>
       */
      public static final int UNWIND_ERROR_THREAD_TIMEOUT_VALUE = 10;
      /**
       * <code>UNWIND_ERROR_THREAD_DOES_NOT_EXIST = 11;</code>
       */
      public static final int UNWIND_ERROR_THREAD_DOES_NOT_EXIST_VALUE = 11;
      /**
       * <code>UNWIND_ERROR_BAD_ARCH = 12;</code>
       */
      public static final int UNWIND_ERROR_BAD_ARCH_VALUE = 12;
      /**
       * <code>UNWIND_ERROR_MAPS_PARSE = 13;</code>
       */
      public static final int UNWIND_ERROR_MAPS_PARSE_VALUE = 13;
      /**
       * <code>UNWIND_ERROR_INVALID_PARAMETER = 14;</code>
       */
      public static final int UNWIND_ERROR_INVALID_PARAMETER_VALUE = 14;
      /**
       * <code>UNWIND_ERROR_PTRACE_CALL = 15;</code>
       */
      public static final int UNWIND_ERROR_PTRACE_CALL_VALUE = 15;


      public final int getNumber() {
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static StackUnwindError valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static StackUnwindError forNumber(int value) {
        switch (value) {
          case 0: return UNWIND_ERROR_UNKNOWN;
          case 1: return UNWIND_ERROR_NONE;
          case 2: return UNWIND_ERROR_MEMORY_INVALID;
          case 3: return UNWIND_ERROR_UNWIND_INFO;
          case 4: return UNWIND_ERROR_UNSUPPORTED;
          case 5: return UNWIND_ERROR_INVALID_MAP;
          case 6: return UNWIND_ERROR_MAX_FRAMES_EXCEEDED;
          case 7: return UNWIND_ERROR_REPEATED_FRAME;
          case 8: return UNWIND_ERROR_INVALID_ELF;
          case 9: return UNWIND_ERROR_SYSTEM_CALL;
          case 10: return UNWIND_ERROR_THREAD_TIMEOUT;
          case 11: return UNWIND_ERROR_THREAD_DOES_NOT_EXIST;
          case 12: return UNWIND_ERROR_BAD_ARCH;
          case 13: return UNWIND_ERROR_MAPS_PARSE;
          case 14: return UNWIND_ERROR_INVALID_PARAMETER;
          case 15: return UNWIND_ERROR_PTRACE_CALL;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<StackUnwindError>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          StackUnwindError> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<StackUnwindError>() {
              public StackUnwindError findValueByNumber(int number) {
                return StackUnwindError.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return perfetto.protos.ProfilePacketOuterClass.Profiling.getDescriptor().getEnumTypes().get(1);
      }

      private static final StackUnwindError[] VALUES = values();

      public static StackUnwindError valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private StackUnwindError(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:perfetto.protos.Profiling.StackUnwindError)
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof perfetto.protos.ProfilePacketOuterClass.Profiling)) {
        return super.equals(obj);
      }
      perfetto.protos.ProfilePacketOuterClass.Profiling other = (perfetto.protos.ProfilePacketOuterClass.Profiling) obj;

      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static perfetto.protos.ProfilePacketOuterClass.Profiling parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.ProfilePacketOuterClass.Profiling parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.ProfilePacketOuterClass.Profiling parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.ProfilePacketOuterClass.Profiling parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.ProfilePacketOuterClass.Profiling parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.ProfilePacketOuterClass.Profiling parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.ProfilePacketOuterClass.Profiling parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.ProfilePacketOuterClass.Profiling parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.ProfilePacketOuterClass.Profiling parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static perfetto.protos.ProfilePacketOuterClass.Profiling parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.ProfilePacketOuterClass.Profiling parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.ProfilePacketOuterClass.Profiling parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(perfetto.protos.ProfilePacketOuterClass.Profiling prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Namespace for the contained enums.
     * </pre>
     *
     * Protobuf type {@code perfetto.protos.Profiling}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:perfetto.protos.Profiling)
        perfetto.protos.ProfilePacketOuterClass.ProfilingOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_Profiling_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_Profiling_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.ProfilePacketOuterClass.Profiling.class, perfetto.protos.ProfilePacketOuterClass.Profiling.Builder.class);
      }

      // Construct using perfetto.protos.ProfilePacketOuterClass.Profiling.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_Profiling_descriptor;
      }

      @java.lang.Override
      public perfetto.protos.ProfilePacketOuterClass.Profiling getDefaultInstanceForType() {
        return perfetto.protos.ProfilePacketOuterClass.Profiling.getDefaultInstance();
      }

      @java.lang.Override
      public perfetto.protos.ProfilePacketOuterClass.Profiling build() {
        perfetto.protos.ProfilePacketOuterClass.Profiling result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public perfetto.protos.ProfilePacketOuterClass.Profiling buildPartial() {
        perfetto.protos.ProfilePacketOuterClass.Profiling result = new perfetto.protos.ProfilePacketOuterClass.Profiling(this);
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof perfetto.protos.ProfilePacketOuterClass.Profiling) {
          return mergeFrom((perfetto.protos.ProfilePacketOuterClass.Profiling)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(perfetto.protos.ProfilePacketOuterClass.Profiling other) {
        if (other == perfetto.protos.ProfilePacketOuterClass.Profiling.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:perfetto.protos.Profiling)
    }

    // @@protoc_insertion_point(class_scope:perfetto.protos.Profiling)
    private static final perfetto.protos.ProfilePacketOuterClass.Profiling DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new perfetto.protos.ProfilePacketOuterClass.Profiling();
    }

    public static perfetto.protos.ProfilePacketOuterClass.Profiling getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<Profiling>
        PARSER = new com.google.protobuf.AbstractParser<Profiling>() {
      @java.lang.Override
      public Profiling parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Profiling> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Profiling> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public perfetto.protos.ProfilePacketOuterClass.Profiling getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PerfSampleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:perfetto.protos.PerfSample)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 cpu = 1;</code>
     * @return Whether the cpu field is set.
     */
    boolean hasCpu();
    /**
     * <code>optional uint32 cpu = 1;</code>
     * @return The cpu.
     */
    int getCpu();

    /**
     * <code>optional uint32 pid = 2;</code>
     * @return Whether the pid field is set.
     */
    boolean hasPid();
    /**
     * <code>optional uint32 pid = 2;</code>
     * @return The pid.
     */
    int getPid();

    /**
     * <code>optional uint32 tid = 3;</code>
     * @return Whether the tid field is set.
     */
    boolean hasTid();
    /**
     * <code>optional uint32 tid = 3;</code>
     * @return The tid.
     */
    int getTid();

    /**
     * <pre>
     * Execution state that the process was sampled at.
     * </pre>
     *
     * <code>optional .perfetto.protos.Profiling.CpuMode cpu_mode = 5;</code>
     * @return Whether the cpuMode field is set.
     */
    boolean hasCpuMode();
    /**
     * <pre>
     * Execution state that the process was sampled at.
     * </pre>
     *
     * <code>optional .perfetto.protos.Profiling.CpuMode cpu_mode = 5;</code>
     * @return The cpuMode.
     */
    perfetto.protos.ProfilePacketOuterClass.Profiling.CpuMode getCpuMode();

    /**
     * <pre>
     * Value of the timebase counter (since the event was configured, no deltas).
     * </pre>
     *
     * <code>optional uint64 timebase_count = 6;</code>
     * @return Whether the timebaseCount field is set.
     */
    boolean hasTimebaseCount();
    /**
     * <pre>
     * Value of the timebase counter (since the event was configured, no deltas).
     * </pre>
     *
     * <code>optional uint64 timebase_count = 6;</code>
     * @return The timebaseCount.
     */
    long getTimebaseCount();

    /**
     * <pre>
     * Unwound callstack. Might be partial, in which case a synthetic "error"
     * frame is appended, and |unwind_error| is set accordingly.
     * </pre>
     *
     * <code>optional uint64 callstack_iid = 4;</code>
     * @return Whether the callstackIid field is set.
     */
    boolean hasCallstackIid();
    /**
     * <pre>
     * Unwound callstack. Might be partial, in which case a synthetic "error"
     * frame is appended, and |unwind_error| is set accordingly.
     * </pre>
     *
     * <code>optional uint64 callstack_iid = 4;</code>
     * @return The callstackIid.
     */
    long getCallstackIid();

    /**
     * <code>.perfetto.protos.Profiling.StackUnwindError unwind_error = 16;</code>
     * @return Whether the unwindError field is set.
     */
    boolean hasUnwindError();
    /**
     * <code>.perfetto.protos.Profiling.StackUnwindError unwind_error = 16;</code>
     * @return The unwindError.
     */
    perfetto.protos.ProfilePacketOuterClass.Profiling.StackUnwindError getUnwindError();

    /**
     * <pre>
     * If set, indicates that this message is not a sample, but rather an
     * indication of data loss in the ring buffer allocated for |cpu|. Such data
     * loss occurs when the kernel has insufficient ring buffer capacity to write
     * a record (which gets discarded). A record in this context is an individual
     * ring buffer entry, and counts more than just sample records.
     * The |timestamp| of the packet corresponds to the time that the producer
     * wrote the packet for trace-sorting purposes alone, and should not be
     * interpreted relative to the sample timestamps. This field is sufficient to
     * detect that *some* kernel data loss happened within the trace, but not the
     * specific time bounds of that loss (which would require tracking precedessor
     * &amp; successor timestamps, which is not deemed necessary at the moment).
     * </pre>
     *
     * <code>optional uint64 kernel_records_lost = 17;</code>
     * @return Whether the kernelRecordsLost field is set.
     */
    boolean hasKernelRecordsLost();
    /**
     * <pre>
     * If set, indicates that this message is not a sample, but rather an
     * indication of data loss in the ring buffer allocated for |cpu|. Such data
     * loss occurs when the kernel has insufficient ring buffer capacity to write
     * a record (which gets discarded). A record in this context is an individual
     * ring buffer entry, and counts more than just sample records.
     * The |timestamp| of the packet corresponds to the time that the producer
     * wrote the packet for trace-sorting purposes alone, and should not be
     * interpreted relative to the sample timestamps. This field is sufficient to
     * detect that *some* kernel data loss happened within the trace, but not the
     * specific time bounds of that loss (which would require tracking precedessor
     * &amp; successor timestamps, which is not deemed necessary at the moment).
     * </pre>
     *
     * <code>optional uint64 kernel_records_lost = 17;</code>
     * @return The kernelRecordsLost.
     */
    long getKernelRecordsLost();

    /**
     * <code>.perfetto.protos.PerfSample.SampleSkipReason sample_skipped_reason = 18;</code>
     * @return Whether the sampleSkippedReason field is set.
     */
    boolean hasSampleSkippedReason();
    /**
     * <code>.perfetto.protos.PerfSample.SampleSkipReason sample_skipped_reason = 18;</code>
     * @return The sampleSkippedReason.
     */
    perfetto.protos.ProfilePacketOuterClass.PerfSample.SampleSkipReason getSampleSkippedReason();

    /**
     * <code>optional .perfetto.protos.PerfSample.ProducerEvent producer_event = 19;</code>
     * @return Whether the producerEvent field is set.
     */
    boolean hasProducerEvent();
    /**
     * <code>optional .perfetto.protos.PerfSample.ProducerEvent producer_event = 19;</code>
     * @return The producerEvent.
     */
    perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent getProducerEvent();
    /**
     * <code>optional .perfetto.protos.PerfSample.ProducerEvent producer_event = 19;</code>
     */
    perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEventOrBuilder getProducerEventOrBuilder();

    public perfetto.protos.ProfilePacketOuterClass.PerfSample.OptionalUnwindErrorCase getOptionalUnwindErrorCase();

    public perfetto.protos.ProfilePacketOuterClass.PerfSample.OptionalSampleSkippedReasonCase getOptionalSampleSkippedReasonCase();
  }
  /**
   * <pre>
   * Packet emitted by the traced_perf sampling performance profiler, which
   * gathers data via the perf_event_open syscall. Each packet contains an
   * individual sample with a counter value, and optionally a
   * callstack.
   * Timestamps are within the root packet. The config can specify the clock, or
   * the implementation will default to CLOCK_MONOTONIC_RAW. Within the Android R
   * timeframe, the default was CLOCK_BOOTTIME.
   * There are several distinct views of this message:
   * * indication of kernel buffer data loss (kernel_records_lost set)
   * * indication of skipped samples (sample_skipped_reason set)
   * * notable event in the sampling implementation (producer_event set)
   * * normal sample (timebase_count set, typically also callstack_iid)
   * </pre>
   *
   * Protobuf type {@code perfetto.protos.PerfSample}
   */
  public static final class PerfSample extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:perfetto.protos.PerfSample)
      PerfSampleOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PerfSample.newBuilder() to construct.
    private PerfSample(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PerfSample() {
      cpuMode_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new PerfSample();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_PerfSample_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_PerfSample_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              perfetto.protos.ProfilePacketOuterClass.PerfSample.class, perfetto.protos.ProfilePacketOuterClass.PerfSample.Builder.class);
    }

    /**
     * <pre>
     * If set, indicates that the profiler encountered a sample that was relevant,
     * but was skipped.
     * </pre>
     *
     * Protobuf enum {@code perfetto.protos.PerfSample.SampleSkipReason}
     */
    public enum SampleSkipReason
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>PROFILER_SKIP_UNKNOWN = 0;</code>
       */
      PROFILER_SKIP_UNKNOWN(0),
      /**
       * <code>PROFILER_SKIP_READ_STAGE = 1;</code>
       */
      PROFILER_SKIP_READ_STAGE(1),
      /**
       * <code>PROFILER_SKIP_UNWIND_STAGE = 2;</code>
       */
      PROFILER_SKIP_UNWIND_STAGE(2),
      /**
       * <code>PROFILER_SKIP_UNWIND_ENQUEUE = 3;</code>
       */
      PROFILER_SKIP_UNWIND_ENQUEUE(3),
      ;

      /**
       * <code>PROFILER_SKIP_UNKNOWN = 0;</code>
       */
      public static final int PROFILER_SKIP_UNKNOWN_VALUE = 0;
      /**
       * <code>PROFILER_SKIP_READ_STAGE = 1;</code>
       */
      public static final int PROFILER_SKIP_READ_STAGE_VALUE = 1;
      /**
       * <code>PROFILER_SKIP_UNWIND_STAGE = 2;</code>
       */
      public static final int PROFILER_SKIP_UNWIND_STAGE_VALUE = 2;
      /**
       * <code>PROFILER_SKIP_UNWIND_ENQUEUE = 3;</code>
       */
      public static final int PROFILER_SKIP_UNWIND_ENQUEUE_VALUE = 3;


      public final int getNumber() {
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static SampleSkipReason valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static SampleSkipReason forNumber(int value) {
        switch (value) {
          case 0: return PROFILER_SKIP_UNKNOWN;
          case 1: return PROFILER_SKIP_READ_STAGE;
          case 2: return PROFILER_SKIP_UNWIND_STAGE;
          case 3: return PROFILER_SKIP_UNWIND_ENQUEUE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<SampleSkipReason>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          SampleSkipReason> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<SampleSkipReason>() {
              public SampleSkipReason findValueByNumber(int number) {
                return SampleSkipReason.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return perfetto.protos.ProfilePacketOuterClass.PerfSample.getDescriptor().getEnumTypes().get(0);
      }

      private static final SampleSkipReason[] VALUES = values();

      public static SampleSkipReason valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private SampleSkipReason(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:perfetto.protos.PerfSample.SampleSkipReason)
    }

    public interface ProducerEventOrBuilder extends
        // @@protoc_insertion_point(interface_extends:perfetto.protos.PerfSample.ProducerEvent)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.perfetto.protos.PerfSample.ProducerEvent.DataSourceStopReason source_stop_reason = 1;</code>
       * @return Whether the sourceStopReason field is set.
       */
      boolean hasSourceStopReason();
      /**
       * <code>.perfetto.protos.PerfSample.ProducerEvent.DataSourceStopReason source_stop_reason = 1;</code>
       * @return The sourceStopReason.
       */
      perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent.DataSourceStopReason getSourceStopReason();

      public perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent.OptionalSourceStopReasonCase getOptionalSourceStopReasonCase();
    }
    /**
     * <pre>
     * A notable event within the sampling implementation.
     * </pre>
     *
     * Protobuf type {@code perfetto.protos.PerfSample.ProducerEvent}
     */
    public static final class ProducerEvent extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:perfetto.protos.PerfSample.ProducerEvent)
        ProducerEventOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use ProducerEvent.newBuilder() to construct.
      private ProducerEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private ProducerEvent() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new ProducerEvent();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_PerfSample_ProducerEvent_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_PerfSample_ProducerEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent.class, perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent.Builder.class);
      }

      /**
       * Protobuf enum {@code perfetto.protos.PerfSample.ProducerEvent.DataSourceStopReason}
       */
      public enum DataSourceStopReason
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>PROFILER_STOP_UNKNOWN = 0;</code>
         */
        PROFILER_STOP_UNKNOWN(0),
        /**
         * <code>PROFILER_STOP_GUARDRAIL = 1;</code>
         */
        PROFILER_STOP_GUARDRAIL(1),
        ;

        /**
         * <code>PROFILER_STOP_UNKNOWN = 0;</code>
         */
        public static final int PROFILER_STOP_UNKNOWN_VALUE = 0;
        /**
         * <code>PROFILER_STOP_GUARDRAIL = 1;</code>
         */
        public static final int PROFILER_STOP_GUARDRAIL_VALUE = 1;


        public final int getNumber() {
          return value;
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static DataSourceStopReason valueOf(int value) {
          return forNumber(value);
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         */
        public static DataSourceStopReason forNumber(int value) {
          switch (value) {
            case 0: return PROFILER_STOP_UNKNOWN;
            case 1: return PROFILER_STOP_GUARDRAIL;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<DataSourceStopReason>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            DataSourceStopReason> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<DataSourceStopReason>() {
                public DataSourceStopReason findValueByNumber(int number) {
                  return DataSourceStopReason.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent.getDescriptor().getEnumTypes().get(0);
        }

        private static final DataSourceStopReason[] VALUES = values();

        public static DataSourceStopReason valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private DataSourceStopReason(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:perfetto.protos.PerfSample.ProducerEvent.DataSourceStopReason)
      }

      private int bitField0_;
      private int optionalSourceStopReasonCase_ = 0;
      private java.lang.Object optionalSourceStopReason_;
      public enum OptionalSourceStopReasonCase
          implements com.google.protobuf.Internal.EnumLite,
              com.google.protobuf.AbstractMessage.InternalOneOfEnum {
        SOURCE_STOP_REASON(1),
        OPTIONALSOURCESTOPREASON_NOT_SET(0);
        private final int value;
        private OptionalSourceStopReasonCase(int value) {
          this.value = value;
        }
        /**
         * @param value The number of the enum to look for.
         * @return The enum associated with the given number.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static OptionalSourceStopReasonCase valueOf(int value) {
          return forNumber(value);
        }

        public static OptionalSourceStopReasonCase forNumber(int value) {
          switch (value) {
            case 1: return SOURCE_STOP_REASON;
            case 0: return OPTIONALSOURCESTOPREASON_NOT_SET;
            default: return null;
          }
        }
        public int getNumber() {
          return this.value;
        }
      };

      public OptionalSourceStopReasonCase
      getOptionalSourceStopReasonCase() {
        return OptionalSourceStopReasonCase.forNumber(
            optionalSourceStopReasonCase_);
      }

      public static final int SOURCE_STOP_REASON_FIELD_NUMBER = 1;
      /**
       * <code>.perfetto.protos.PerfSample.ProducerEvent.DataSourceStopReason source_stop_reason = 1;</code>
       * @return Whether the sourceStopReason field is set.
       */
      public boolean hasSourceStopReason() {
        return optionalSourceStopReasonCase_ == 1;
      }
      /**
       * <code>.perfetto.protos.PerfSample.ProducerEvent.DataSourceStopReason source_stop_reason = 1;</code>
       * @return The sourceStopReason.
       */
      public perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent.DataSourceStopReason getSourceStopReason() {
        if (optionalSourceStopReasonCase_ == 1) {
          perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent.DataSourceStopReason result = perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent.DataSourceStopReason.forNumber(
              (java.lang.Integer) optionalSourceStopReason_);
          return result == null ? perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent.DataSourceStopReason.PROFILER_STOP_UNKNOWN : result;
        }
        return perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent.DataSourceStopReason.PROFILER_STOP_UNKNOWN;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (optionalSourceStopReasonCase_ == 1) {
          output.writeEnum(1, ((java.lang.Integer) optionalSourceStopReason_));
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (optionalSourceStopReasonCase_ == 1) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, ((java.lang.Integer) optionalSourceStopReason_));
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent)) {
          return super.equals(obj);
        }
        perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent other = (perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent) obj;

        if (!getOptionalSourceStopReasonCase().equals(other.getOptionalSourceStopReasonCase())) return false;
        switch (optionalSourceStopReasonCase_) {
          case 1:
            if (!getSourceStopReason()
                .equals(other.getSourceStopReason())) return false;
            break;
          case 0:
          default:
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        switch (optionalSourceStopReasonCase_) {
          case 1:
            hash = (37 * hash) + SOURCE_STOP_REASON_FIELD_NUMBER;
            hash = (53 * hash) + getSourceStopReason().getNumber();
            break;
          case 0:
          default:
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * A notable event within the sampling implementation.
       * </pre>
       *
       * Protobuf type {@code perfetto.protos.PerfSample.ProducerEvent}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:perfetto.protos.PerfSample.ProducerEvent)
          perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEventOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_PerfSample_ProducerEvent_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_PerfSample_ProducerEvent_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent.class, perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent.Builder.class);
        }

        // Construct using perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          optionalSourceStopReasonCase_ = 0;
          optionalSourceStopReason_ = null;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_PerfSample_ProducerEvent_descriptor;
        }

        @java.lang.Override
        public perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent getDefaultInstanceForType() {
          return perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent.getDefaultInstance();
        }

        @java.lang.Override
        public perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent build() {
          perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent buildPartial() {
          perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent result = new perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          buildPartialOneofs(result);
          onBuilt();
          return result;
        }

        private void buildPartial0(perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent result) {
          int from_bitField0_ = bitField0_;
        }

        private void buildPartialOneofs(perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent result) {
          result.optionalSourceStopReasonCase_ = optionalSourceStopReasonCase_;
          result.optionalSourceStopReason_ = this.optionalSourceStopReason_;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent) {
            return mergeFrom((perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent other) {
          if (other == perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent.getDefaultInstance()) return this;
          switch (other.getOptionalSourceStopReasonCase()) {
            case SOURCE_STOP_REASON: {
              setSourceStopReason(other.getSourceStopReason());
              break;
            }
            case OPTIONALSOURCESTOPREASON_NOT_SET: {
              break;
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  int rawValue = input.readEnum();
                  perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent.DataSourceStopReason value =
                      perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent.DataSourceStopReason.forNumber(rawValue);
                  if (value == null) {
                    mergeUnknownVarintField(1, rawValue);
                  } else {
                    optionalSourceStopReasonCase_ = 1;
                    optionalSourceStopReason_ = rawValue;
                  }
                  break;
                } // case 8
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int optionalSourceStopReasonCase_ = 0;
        private java.lang.Object optionalSourceStopReason_;
        public OptionalSourceStopReasonCase
            getOptionalSourceStopReasonCase() {
          return OptionalSourceStopReasonCase.forNumber(
              optionalSourceStopReasonCase_);
        }

        public Builder clearOptionalSourceStopReason() {
          optionalSourceStopReasonCase_ = 0;
          optionalSourceStopReason_ = null;
          onChanged();
          return this;
        }

        private int bitField0_;

        /**
         * <code>.perfetto.protos.PerfSample.ProducerEvent.DataSourceStopReason source_stop_reason = 1;</code>
         * @return Whether the sourceStopReason field is set.
         */
        @java.lang.Override
        public boolean hasSourceStopReason() {
          return optionalSourceStopReasonCase_ == 1;
        }
        /**
         * <code>.perfetto.protos.PerfSample.ProducerEvent.DataSourceStopReason source_stop_reason = 1;</code>
         * @return The sourceStopReason.
         */
        @java.lang.Override
        public perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent.DataSourceStopReason getSourceStopReason() {
          if (optionalSourceStopReasonCase_ == 1) {
            perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent.DataSourceStopReason result = perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent.DataSourceStopReason.forNumber(
                (java.lang.Integer) optionalSourceStopReason_);
            return result == null ? perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent.DataSourceStopReason.PROFILER_STOP_UNKNOWN : result;
          }
          return perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent.DataSourceStopReason.PROFILER_STOP_UNKNOWN;
        }
        /**
         * <code>.perfetto.protos.PerfSample.ProducerEvent.DataSourceStopReason source_stop_reason = 1;</code>
         * @param value The sourceStopReason to set.
         * @return This builder for chaining.
         */
        public Builder setSourceStopReason(perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent.DataSourceStopReason value) {
          if (value == null) {
            throw new NullPointerException();
          }
          optionalSourceStopReasonCase_ = 1;
          optionalSourceStopReason_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>.perfetto.protos.PerfSample.ProducerEvent.DataSourceStopReason source_stop_reason = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearSourceStopReason() {
          if (optionalSourceStopReasonCase_ == 1) {
            optionalSourceStopReasonCase_ = 0;
            optionalSourceStopReason_ = null;
            onChanged();
          }
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:perfetto.protos.PerfSample.ProducerEvent)
      }

      // @@protoc_insertion_point(class_scope:perfetto.protos.PerfSample.ProducerEvent)
      private static final perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent();
      }

      public static perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<ProducerEvent>
          PARSER = new com.google.protobuf.AbstractParser<ProducerEvent>() {
        @java.lang.Override
        public ProducerEvent parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<ProducerEvent> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<ProducerEvent> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    private int optionalUnwindErrorCase_ = 0;
    private java.lang.Object optionalUnwindError_;
    public enum OptionalUnwindErrorCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      UNWIND_ERROR(16),
      OPTIONALUNWINDERROR_NOT_SET(0);
      private final int value;
      private OptionalUnwindErrorCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OptionalUnwindErrorCase valueOf(int value) {
        return forNumber(value);
      }

      public static OptionalUnwindErrorCase forNumber(int value) {
        switch (value) {
          case 16: return UNWIND_ERROR;
          case 0: return OPTIONALUNWINDERROR_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public OptionalUnwindErrorCase
    getOptionalUnwindErrorCase() {
      return OptionalUnwindErrorCase.forNumber(
          optionalUnwindErrorCase_);
    }

    private int optionalSampleSkippedReasonCase_ = 0;
    private java.lang.Object optionalSampleSkippedReason_;
    public enum OptionalSampleSkippedReasonCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      SAMPLE_SKIPPED_REASON(18),
      OPTIONALSAMPLESKIPPEDREASON_NOT_SET(0);
      private final int value;
      private OptionalSampleSkippedReasonCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static OptionalSampleSkippedReasonCase valueOf(int value) {
        return forNumber(value);
      }

      public static OptionalSampleSkippedReasonCase forNumber(int value) {
        switch (value) {
          case 18: return SAMPLE_SKIPPED_REASON;
          case 0: return OPTIONALSAMPLESKIPPEDREASON_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public OptionalSampleSkippedReasonCase
    getOptionalSampleSkippedReasonCase() {
      return OptionalSampleSkippedReasonCase.forNumber(
          optionalSampleSkippedReasonCase_);
    }

    public static final int CPU_FIELD_NUMBER = 1;
    private int cpu_ = 0;
    /**
     * <code>optional uint32 cpu = 1;</code>
     * @return Whether the cpu field is set.
     */
    @java.lang.Override
    public boolean hasCpu() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint32 cpu = 1;</code>
     * @return The cpu.
     */
    @java.lang.Override
    public int getCpu() {
      return cpu_;
    }

    public static final int PID_FIELD_NUMBER = 2;
    private int pid_ = 0;
    /**
     * <code>optional uint32 pid = 2;</code>
     * @return Whether the pid field is set.
     */
    @java.lang.Override
    public boolean hasPid() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional uint32 pid = 2;</code>
     * @return The pid.
     */
    @java.lang.Override
    public int getPid() {
      return pid_;
    }

    public static final int TID_FIELD_NUMBER = 3;
    private int tid_ = 0;
    /**
     * <code>optional uint32 tid = 3;</code>
     * @return Whether the tid field is set.
     */
    @java.lang.Override
    public boolean hasTid() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional uint32 tid = 3;</code>
     * @return The tid.
     */
    @java.lang.Override
    public int getTid() {
      return tid_;
    }

    public static final int CPU_MODE_FIELD_NUMBER = 5;
    private int cpuMode_ = 0;
    /**
     * <pre>
     * Execution state that the process was sampled at.
     * </pre>
     *
     * <code>optional .perfetto.protos.Profiling.CpuMode cpu_mode = 5;</code>
     * @return Whether the cpuMode field is set.
     */
    @java.lang.Override public boolean hasCpuMode() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Execution state that the process was sampled at.
     * </pre>
     *
     * <code>optional .perfetto.protos.Profiling.CpuMode cpu_mode = 5;</code>
     * @return The cpuMode.
     */
    @java.lang.Override public perfetto.protos.ProfilePacketOuterClass.Profiling.CpuMode getCpuMode() {
      perfetto.protos.ProfilePacketOuterClass.Profiling.CpuMode result = perfetto.protos.ProfilePacketOuterClass.Profiling.CpuMode.forNumber(cpuMode_);
      return result == null ? perfetto.protos.ProfilePacketOuterClass.Profiling.CpuMode.MODE_UNKNOWN : result;
    }

    public static final int TIMEBASE_COUNT_FIELD_NUMBER = 6;
    private long timebaseCount_ = 0L;
    /**
     * <pre>
     * Value of the timebase counter (since the event was configured, no deltas).
     * </pre>
     *
     * <code>optional uint64 timebase_count = 6;</code>
     * @return Whether the timebaseCount field is set.
     */
    @java.lang.Override
    public boolean hasTimebaseCount() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Value of the timebase counter (since the event was configured, no deltas).
     * </pre>
     *
     * <code>optional uint64 timebase_count = 6;</code>
     * @return The timebaseCount.
     */
    @java.lang.Override
    public long getTimebaseCount() {
      return timebaseCount_;
    }

    public static final int CALLSTACK_IID_FIELD_NUMBER = 4;
    private long callstackIid_ = 0L;
    /**
     * <pre>
     * Unwound callstack. Might be partial, in which case a synthetic "error"
     * frame is appended, and |unwind_error| is set accordingly.
     * </pre>
     *
     * <code>optional uint64 callstack_iid = 4;</code>
     * @return Whether the callstackIid field is set.
     */
    @java.lang.Override
    public boolean hasCallstackIid() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * Unwound callstack. Might be partial, in which case a synthetic "error"
     * frame is appended, and |unwind_error| is set accordingly.
     * </pre>
     *
     * <code>optional uint64 callstack_iid = 4;</code>
     * @return The callstackIid.
     */
    @java.lang.Override
    public long getCallstackIid() {
      return callstackIid_;
    }

    public static final int UNWIND_ERROR_FIELD_NUMBER = 16;
    /**
     * <code>.perfetto.protos.Profiling.StackUnwindError unwind_error = 16;</code>
     * @return Whether the unwindError field is set.
     */
    public boolean hasUnwindError() {
      return optionalUnwindErrorCase_ == 16;
    }
    /**
     * <code>.perfetto.protos.Profiling.StackUnwindError unwind_error = 16;</code>
     * @return The unwindError.
     */
    public perfetto.protos.ProfilePacketOuterClass.Profiling.StackUnwindError getUnwindError() {
      if (optionalUnwindErrorCase_ == 16) {
        perfetto.protos.ProfilePacketOuterClass.Profiling.StackUnwindError result = perfetto.protos.ProfilePacketOuterClass.Profiling.StackUnwindError.forNumber(
            (java.lang.Integer) optionalUnwindError_);
        return result == null ? perfetto.protos.ProfilePacketOuterClass.Profiling.StackUnwindError.UNWIND_ERROR_UNKNOWN : result;
      }
      return perfetto.protos.ProfilePacketOuterClass.Profiling.StackUnwindError.UNWIND_ERROR_UNKNOWN;
    }

    public static final int KERNEL_RECORDS_LOST_FIELD_NUMBER = 17;
    private long kernelRecordsLost_ = 0L;
    /**
     * <pre>
     * If set, indicates that this message is not a sample, but rather an
     * indication of data loss in the ring buffer allocated for |cpu|. Such data
     * loss occurs when the kernel has insufficient ring buffer capacity to write
     * a record (which gets discarded). A record in this context is an individual
     * ring buffer entry, and counts more than just sample records.
     * The |timestamp| of the packet corresponds to the time that the producer
     * wrote the packet for trace-sorting purposes alone, and should not be
     * interpreted relative to the sample timestamps. This field is sufficient to
     * detect that *some* kernel data loss happened within the trace, but not the
     * specific time bounds of that loss (which would require tracking precedessor
     * &amp; successor timestamps, which is not deemed necessary at the moment).
     * </pre>
     *
     * <code>optional uint64 kernel_records_lost = 17;</code>
     * @return Whether the kernelRecordsLost field is set.
     */
    @java.lang.Override
    public boolean hasKernelRecordsLost() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * If set, indicates that this message is not a sample, but rather an
     * indication of data loss in the ring buffer allocated for |cpu|. Such data
     * loss occurs when the kernel has insufficient ring buffer capacity to write
     * a record (which gets discarded). A record in this context is an individual
     * ring buffer entry, and counts more than just sample records.
     * The |timestamp| of the packet corresponds to the time that the producer
     * wrote the packet for trace-sorting purposes alone, and should not be
     * interpreted relative to the sample timestamps. This field is sufficient to
     * detect that *some* kernel data loss happened within the trace, but not the
     * specific time bounds of that loss (which would require tracking precedessor
     * &amp; successor timestamps, which is not deemed necessary at the moment).
     * </pre>
     *
     * <code>optional uint64 kernel_records_lost = 17;</code>
     * @return The kernelRecordsLost.
     */
    @java.lang.Override
    public long getKernelRecordsLost() {
      return kernelRecordsLost_;
    }

    public static final int SAMPLE_SKIPPED_REASON_FIELD_NUMBER = 18;
    /**
     * <code>.perfetto.protos.PerfSample.SampleSkipReason sample_skipped_reason = 18;</code>
     * @return Whether the sampleSkippedReason field is set.
     */
    public boolean hasSampleSkippedReason() {
      return optionalSampleSkippedReasonCase_ == 18;
    }
    /**
     * <code>.perfetto.protos.PerfSample.SampleSkipReason sample_skipped_reason = 18;</code>
     * @return The sampleSkippedReason.
     */
    public perfetto.protos.ProfilePacketOuterClass.PerfSample.SampleSkipReason getSampleSkippedReason() {
      if (optionalSampleSkippedReasonCase_ == 18) {
        perfetto.protos.ProfilePacketOuterClass.PerfSample.SampleSkipReason result = perfetto.protos.ProfilePacketOuterClass.PerfSample.SampleSkipReason.forNumber(
            (java.lang.Integer) optionalSampleSkippedReason_);
        return result == null ? perfetto.protos.ProfilePacketOuterClass.PerfSample.SampleSkipReason.PROFILER_SKIP_UNKNOWN : result;
      }
      return perfetto.protos.ProfilePacketOuterClass.PerfSample.SampleSkipReason.PROFILER_SKIP_UNKNOWN;
    }

    public static final int PRODUCER_EVENT_FIELD_NUMBER = 19;
    private perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent producerEvent_;
    /**
     * <code>optional .perfetto.protos.PerfSample.ProducerEvent producer_event = 19;</code>
     * @return Whether the producerEvent field is set.
     */
    @java.lang.Override
    public boolean hasProducerEvent() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <code>optional .perfetto.protos.PerfSample.ProducerEvent producer_event = 19;</code>
     * @return The producerEvent.
     */
    @java.lang.Override
    public perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent getProducerEvent() {
      return producerEvent_ == null ? perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent.getDefaultInstance() : producerEvent_;
    }
    /**
     * <code>optional .perfetto.protos.PerfSample.ProducerEvent producer_event = 19;</code>
     */
    @java.lang.Override
    public perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEventOrBuilder getProducerEventOrBuilder() {
      return producerEvent_ == null ? perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent.getDefaultInstance() : producerEvent_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, cpu_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt32(2, pid_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeUInt32(3, tid_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeUInt64(4, callstackIid_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeEnum(5, cpuMode_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeUInt64(6, timebaseCount_);
      }
      if (optionalUnwindErrorCase_ == 16) {
        output.writeEnum(16, ((java.lang.Integer) optionalUnwindError_));
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeUInt64(17, kernelRecordsLost_);
      }
      if (optionalSampleSkippedReasonCase_ == 18) {
        output.writeEnum(18, ((java.lang.Integer) optionalSampleSkippedReason_));
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        output.writeMessage(19, getProducerEvent());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, cpu_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, pid_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, tid_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, callstackIid_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, cpuMode_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, timebaseCount_);
      }
      if (optionalUnwindErrorCase_ == 16) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(16, ((java.lang.Integer) optionalUnwindError_));
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(17, kernelRecordsLost_);
      }
      if (optionalSampleSkippedReasonCase_ == 18) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(18, ((java.lang.Integer) optionalSampleSkippedReason_));
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(19, getProducerEvent());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof perfetto.protos.ProfilePacketOuterClass.PerfSample)) {
        return super.equals(obj);
      }
      perfetto.protos.ProfilePacketOuterClass.PerfSample other = (perfetto.protos.ProfilePacketOuterClass.PerfSample) obj;

      if (hasCpu() != other.hasCpu()) return false;
      if (hasCpu()) {
        if (getCpu()
            != other.getCpu()) return false;
      }
      if (hasPid() != other.hasPid()) return false;
      if (hasPid()) {
        if (getPid()
            != other.getPid()) return false;
      }
      if (hasTid() != other.hasTid()) return false;
      if (hasTid()) {
        if (getTid()
            != other.getTid()) return false;
      }
      if (hasCpuMode() != other.hasCpuMode()) return false;
      if (hasCpuMode()) {
        if (cpuMode_ != other.cpuMode_) return false;
      }
      if (hasTimebaseCount() != other.hasTimebaseCount()) return false;
      if (hasTimebaseCount()) {
        if (getTimebaseCount()
            != other.getTimebaseCount()) return false;
      }
      if (hasCallstackIid() != other.hasCallstackIid()) return false;
      if (hasCallstackIid()) {
        if (getCallstackIid()
            != other.getCallstackIid()) return false;
      }
      if (hasKernelRecordsLost() != other.hasKernelRecordsLost()) return false;
      if (hasKernelRecordsLost()) {
        if (getKernelRecordsLost()
            != other.getKernelRecordsLost()) return false;
      }
      if (hasProducerEvent() != other.hasProducerEvent()) return false;
      if (hasProducerEvent()) {
        if (!getProducerEvent()
            .equals(other.getProducerEvent())) return false;
      }
      if (!getOptionalUnwindErrorCase().equals(other.getOptionalUnwindErrorCase())) return false;
      switch (optionalUnwindErrorCase_) {
        case 16:
          if (!getUnwindError()
              .equals(other.getUnwindError())) return false;
          break;
        case 0:
        default:
      }
      if (!getOptionalSampleSkippedReasonCase().equals(other.getOptionalSampleSkippedReasonCase())) return false;
      switch (optionalSampleSkippedReasonCase_) {
        case 18:
          if (!getSampleSkippedReason()
              .equals(other.getSampleSkippedReason())) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasCpu()) {
        hash = (37 * hash) + CPU_FIELD_NUMBER;
        hash = (53 * hash) + getCpu();
      }
      if (hasPid()) {
        hash = (37 * hash) + PID_FIELD_NUMBER;
        hash = (53 * hash) + getPid();
      }
      if (hasTid()) {
        hash = (37 * hash) + TID_FIELD_NUMBER;
        hash = (53 * hash) + getTid();
      }
      if (hasCpuMode()) {
        hash = (37 * hash) + CPU_MODE_FIELD_NUMBER;
        hash = (53 * hash) + cpuMode_;
      }
      if (hasTimebaseCount()) {
        hash = (37 * hash) + TIMEBASE_COUNT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getTimebaseCount());
      }
      if (hasCallstackIid()) {
        hash = (37 * hash) + CALLSTACK_IID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getCallstackIid());
      }
      if (hasKernelRecordsLost()) {
        hash = (37 * hash) + KERNEL_RECORDS_LOST_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getKernelRecordsLost());
      }
      if (hasProducerEvent()) {
        hash = (37 * hash) + PRODUCER_EVENT_FIELD_NUMBER;
        hash = (53 * hash) + getProducerEvent().hashCode();
      }
      switch (optionalUnwindErrorCase_) {
        case 16:
          hash = (37 * hash) + UNWIND_ERROR_FIELD_NUMBER;
          hash = (53 * hash) + getUnwindError().getNumber();
          break;
        case 0:
        default:
      }
      switch (optionalSampleSkippedReasonCase_) {
        case 18:
          hash = (37 * hash) + SAMPLE_SKIPPED_REASON_FIELD_NUMBER;
          hash = (53 * hash) + getSampleSkippedReason().getNumber();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static perfetto.protos.ProfilePacketOuterClass.PerfSample parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.ProfilePacketOuterClass.PerfSample parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.ProfilePacketOuterClass.PerfSample parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.ProfilePacketOuterClass.PerfSample parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.ProfilePacketOuterClass.PerfSample parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.ProfilePacketOuterClass.PerfSample parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.ProfilePacketOuterClass.PerfSample parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.ProfilePacketOuterClass.PerfSample parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.ProfilePacketOuterClass.PerfSample parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static perfetto.protos.ProfilePacketOuterClass.PerfSample parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.ProfilePacketOuterClass.PerfSample parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.ProfilePacketOuterClass.PerfSample parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(perfetto.protos.ProfilePacketOuterClass.PerfSample prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Packet emitted by the traced_perf sampling performance profiler, which
     * gathers data via the perf_event_open syscall. Each packet contains an
     * individual sample with a counter value, and optionally a
     * callstack.
     * Timestamps are within the root packet. The config can specify the clock, or
     * the implementation will default to CLOCK_MONOTONIC_RAW. Within the Android R
     * timeframe, the default was CLOCK_BOOTTIME.
     * There are several distinct views of this message:
     * * indication of kernel buffer data loss (kernel_records_lost set)
     * * indication of skipped samples (sample_skipped_reason set)
     * * notable event in the sampling implementation (producer_event set)
     * * normal sample (timebase_count set, typically also callstack_iid)
     * </pre>
     *
     * Protobuf type {@code perfetto.protos.PerfSample}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:perfetto.protos.PerfSample)
        perfetto.protos.ProfilePacketOuterClass.PerfSampleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_PerfSample_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_PerfSample_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.ProfilePacketOuterClass.PerfSample.class, perfetto.protos.ProfilePacketOuterClass.PerfSample.Builder.class);
      }

      // Construct using perfetto.protos.ProfilePacketOuterClass.PerfSample.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getProducerEventFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        cpu_ = 0;
        pid_ = 0;
        tid_ = 0;
        cpuMode_ = 0;
        timebaseCount_ = 0L;
        callstackIid_ = 0L;
        kernelRecordsLost_ = 0L;
        producerEvent_ = null;
        if (producerEventBuilder_ != null) {
          producerEventBuilder_.dispose();
          producerEventBuilder_ = null;
        }
        optionalUnwindErrorCase_ = 0;
        optionalUnwindError_ = null;
        optionalSampleSkippedReasonCase_ = 0;
        optionalSampleSkippedReason_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_PerfSample_descriptor;
      }

      @java.lang.Override
      public perfetto.protos.ProfilePacketOuterClass.PerfSample getDefaultInstanceForType() {
        return perfetto.protos.ProfilePacketOuterClass.PerfSample.getDefaultInstance();
      }

      @java.lang.Override
      public perfetto.protos.ProfilePacketOuterClass.PerfSample build() {
        perfetto.protos.ProfilePacketOuterClass.PerfSample result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public perfetto.protos.ProfilePacketOuterClass.PerfSample buildPartial() {
        perfetto.protos.ProfilePacketOuterClass.PerfSample result = new perfetto.protos.ProfilePacketOuterClass.PerfSample(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        buildPartialOneofs(result);
        onBuilt();
        return result;
      }

      private void buildPartial0(perfetto.protos.ProfilePacketOuterClass.PerfSample result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.cpu_ = cpu_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.pid_ = pid_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.tid_ = tid_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.cpuMode_ = cpuMode_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.timebaseCount_ = timebaseCount_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.callstackIid_ = callstackIid_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.kernelRecordsLost_ = kernelRecordsLost_;
          to_bitField0_ |= 0x00000080;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.producerEvent_ = producerEventBuilder_ == null
              ? producerEvent_
              : producerEventBuilder_.build();
          to_bitField0_ |= 0x00000200;
        }
        result.bitField0_ |= to_bitField0_;
      }

      private void buildPartialOneofs(perfetto.protos.ProfilePacketOuterClass.PerfSample result) {
        result.optionalUnwindErrorCase_ = optionalUnwindErrorCase_;
        result.optionalUnwindError_ = this.optionalUnwindError_;
        result.optionalSampleSkippedReasonCase_ = optionalSampleSkippedReasonCase_;
        result.optionalSampleSkippedReason_ = this.optionalSampleSkippedReason_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof perfetto.protos.ProfilePacketOuterClass.PerfSample) {
          return mergeFrom((perfetto.protos.ProfilePacketOuterClass.PerfSample)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(perfetto.protos.ProfilePacketOuterClass.PerfSample other) {
        if (other == perfetto.protos.ProfilePacketOuterClass.PerfSample.getDefaultInstance()) return this;
        if (other.hasCpu()) {
          setCpu(other.getCpu());
        }
        if (other.hasPid()) {
          setPid(other.getPid());
        }
        if (other.hasTid()) {
          setTid(other.getTid());
        }
        if (other.hasCpuMode()) {
          setCpuMode(other.getCpuMode());
        }
        if (other.hasTimebaseCount()) {
          setTimebaseCount(other.getTimebaseCount());
        }
        if (other.hasCallstackIid()) {
          setCallstackIid(other.getCallstackIid());
        }
        if (other.hasKernelRecordsLost()) {
          setKernelRecordsLost(other.getKernelRecordsLost());
        }
        if (other.hasProducerEvent()) {
          mergeProducerEvent(other.getProducerEvent());
        }
        switch (other.getOptionalUnwindErrorCase()) {
          case UNWIND_ERROR: {
            setUnwindError(other.getUnwindError());
            break;
          }
          case OPTIONALUNWINDERROR_NOT_SET: {
            break;
          }
        }
        switch (other.getOptionalSampleSkippedReasonCase()) {
          case SAMPLE_SKIPPED_REASON: {
            setSampleSkippedReason(other.getSampleSkippedReason());
            break;
          }
          case OPTIONALSAMPLESKIPPEDREASON_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                cpu_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                pid_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                tid_ = input.readUInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                callstackIid_ = input.readUInt64();
                bitField0_ |= 0x00000020;
                break;
              } // case 32
              case 40: {
                int tmpRaw = input.readEnum();
                perfetto.protos.ProfilePacketOuterClass.Profiling.CpuMode tmpValue =
                    perfetto.protos.ProfilePacketOuterClass.Profiling.CpuMode.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(5, tmpRaw);
                } else {
                  cpuMode_ = tmpRaw;
                  bitField0_ |= 0x00000008;
                }
                break;
              } // case 40
              case 48: {
                timebaseCount_ = input.readUInt64();
                bitField0_ |= 0x00000010;
                break;
              } // case 48
              case 128: {
                int rawValue = input.readEnum();
                perfetto.protos.ProfilePacketOuterClass.Profiling.StackUnwindError value =
                    perfetto.protos.ProfilePacketOuterClass.Profiling.StackUnwindError.forNumber(rawValue);
                if (value == null) {
                  mergeUnknownVarintField(16, rawValue);
                } else {
                  optionalUnwindErrorCase_ = 16;
                  optionalUnwindError_ = rawValue;
                }
                break;
              } // case 128
              case 136: {
                kernelRecordsLost_ = input.readUInt64();
                bitField0_ |= 0x00000080;
                break;
              } // case 136
              case 144: {
                int rawValue = input.readEnum();
                perfetto.protos.ProfilePacketOuterClass.PerfSample.SampleSkipReason value =
                    perfetto.protos.ProfilePacketOuterClass.PerfSample.SampleSkipReason.forNumber(rawValue);
                if (value == null) {
                  mergeUnknownVarintField(18, rawValue);
                } else {
                  optionalSampleSkippedReasonCase_ = 18;
                  optionalSampleSkippedReason_ = rawValue;
                }
                break;
              } // case 144
              case 154: {
                input.readMessage(
                    getProducerEventFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000200;
                break;
              } // case 154
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int optionalUnwindErrorCase_ = 0;
      private java.lang.Object optionalUnwindError_;
      public OptionalUnwindErrorCase
          getOptionalUnwindErrorCase() {
        return OptionalUnwindErrorCase.forNumber(
            optionalUnwindErrorCase_);
      }

      public Builder clearOptionalUnwindError() {
        optionalUnwindErrorCase_ = 0;
        optionalUnwindError_ = null;
        onChanged();
        return this;
      }

      private int optionalSampleSkippedReasonCase_ = 0;
      private java.lang.Object optionalSampleSkippedReason_;
      public OptionalSampleSkippedReasonCase
          getOptionalSampleSkippedReasonCase() {
        return OptionalSampleSkippedReasonCase.forNumber(
            optionalSampleSkippedReasonCase_);
      }

      public Builder clearOptionalSampleSkippedReason() {
        optionalSampleSkippedReasonCase_ = 0;
        optionalSampleSkippedReason_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private int cpu_ ;
      /**
       * <code>optional uint32 cpu = 1;</code>
       * @return Whether the cpu field is set.
       */
      @java.lang.Override
      public boolean hasCpu() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 cpu = 1;</code>
       * @return The cpu.
       */
      @java.lang.Override
      public int getCpu() {
        return cpu_;
      }
      /**
       * <code>optional uint32 cpu = 1;</code>
       * @param value The cpu to set.
       * @return This builder for chaining.
       */
      public Builder setCpu(int value) {
        
        cpu_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 cpu = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearCpu() {
        bitField0_ = (bitField0_ & ~0x00000001);
        cpu_ = 0;
        onChanged();
        return this;
      }

      private int pid_ ;
      /**
       * <code>optional uint32 pid = 2;</code>
       * @return Whether the pid field is set.
       */
      @java.lang.Override
      public boolean hasPid() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 pid = 2;</code>
       * @return The pid.
       */
      @java.lang.Override
      public int getPid() {
        return pid_;
      }
      /**
       * <code>optional uint32 pid = 2;</code>
       * @param value The pid to set.
       * @return This builder for chaining.
       */
      public Builder setPid(int value) {
        
        pid_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 pid = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearPid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        pid_ = 0;
        onChanged();
        return this;
      }

      private int tid_ ;
      /**
       * <code>optional uint32 tid = 3;</code>
       * @return Whether the tid field is set.
       */
      @java.lang.Override
      public boolean hasTid() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional uint32 tid = 3;</code>
       * @return The tid.
       */
      @java.lang.Override
      public int getTid() {
        return tid_;
      }
      /**
       * <code>optional uint32 tid = 3;</code>
       * @param value The tid to set.
       * @return This builder for chaining.
       */
      public Builder setTid(int value) {
        
        tid_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 tid = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearTid() {
        bitField0_ = (bitField0_ & ~0x00000004);
        tid_ = 0;
        onChanged();
        return this;
      }

      private int cpuMode_ = 0;
      /**
       * <pre>
       * Execution state that the process was sampled at.
       * </pre>
       *
       * <code>optional .perfetto.protos.Profiling.CpuMode cpu_mode = 5;</code>
       * @return Whether the cpuMode field is set.
       */
      @java.lang.Override public boolean hasCpuMode() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Execution state that the process was sampled at.
       * </pre>
       *
       * <code>optional .perfetto.protos.Profiling.CpuMode cpu_mode = 5;</code>
       * @return The cpuMode.
       */
      @java.lang.Override
      public perfetto.protos.ProfilePacketOuterClass.Profiling.CpuMode getCpuMode() {
        perfetto.protos.ProfilePacketOuterClass.Profiling.CpuMode result = perfetto.protos.ProfilePacketOuterClass.Profiling.CpuMode.forNumber(cpuMode_);
        return result == null ? perfetto.protos.ProfilePacketOuterClass.Profiling.CpuMode.MODE_UNKNOWN : result;
      }
      /**
       * <pre>
       * Execution state that the process was sampled at.
       * </pre>
       *
       * <code>optional .perfetto.protos.Profiling.CpuMode cpu_mode = 5;</code>
       * @param value The cpuMode to set.
       * @return This builder for chaining.
       */
      public Builder setCpuMode(perfetto.protos.ProfilePacketOuterClass.Profiling.CpuMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        cpuMode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Execution state that the process was sampled at.
       * </pre>
       *
       * <code>optional .perfetto.protos.Profiling.CpuMode cpu_mode = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearCpuMode() {
        bitField0_ = (bitField0_ & ~0x00000008);
        cpuMode_ = 0;
        onChanged();
        return this;
      }

      private long timebaseCount_ ;
      /**
       * <pre>
       * Value of the timebase counter (since the event was configured, no deltas).
       * </pre>
       *
       * <code>optional uint64 timebase_count = 6;</code>
       * @return Whether the timebaseCount field is set.
       */
      @java.lang.Override
      public boolean hasTimebaseCount() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * Value of the timebase counter (since the event was configured, no deltas).
       * </pre>
       *
       * <code>optional uint64 timebase_count = 6;</code>
       * @return The timebaseCount.
       */
      @java.lang.Override
      public long getTimebaseCount() {
        return timebaseCount_;
      }
      /**
       * <pre>
       * Value of the timebase counter (since the event was configured, no deltas).
       * </pre>
       *
       * <code>optional uint64 timebase_count = 6;</code>
       * @param value The timebaseCount to set.
       * @return This builder for chaining.
       */
      public Builder setTimebaseCount(long value) {
        
        timebaseCount_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Value of the timebase counter (since the event was configured, no deltas).
       * </pre>
       *
       * <code>optional uint64 timebase_count = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimebaseCount() {
        bitField0_ = (bitField0_ & ~0x00000010);
        timebaseCount_ = 0L;
        onChanged();
        return this;
      }

      private long callstackIid_ ;
      /**
       * <pre>
       * Unwound callstack. Might be partial, in which case a synthetic "error"
       * frame is appended, and |unwind_error| is set accordingly.
       * </pre>
       *
       * <code>optional uint64 callstack_iid = 4;</code>
       * @return Whether the callstackIid field is set.
       */
      @java.lang.Override
      public boolean hasCallstackIid() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * Unwound callstack. Might be partial, in which case a synthetic "error"
       * frame is appended, and |unwind_error| is set accordingly.
       * </pre>
       *
       * <code>optional uint64 callstack_iid = 4;</code>
       * @return The callstackIid.
       */
      @java.lang.Override
      public long getCallstackIid() {
        return callstackIid_;
      }
      /**
       * <pre>
       * Unwound callstack. Might be partial, in which case a synthetic "error"
       * frame is appended, and |unwind_error| is set accordingly.
       * </pre>
       *
       * <code>optional uint64 callstack_iid = 4;</code>
       * @param value The callstackIid to set.
       * @return This builder for chaining.
       */
      public Builder setCallstackIid(long value) {
        
        callstackIid_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Unwound callstack. Might be partial, in which case a synthetic "error"
       * frame is appended, and |unwind_error| is set accordingly.
       * </pre>
       *
       * <code>optional uint64 callstack_iid = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearCallstackIid() {
        bitField0_ = (bitField0_ & ~0x00000020);
        callstackIid_ = 0L;
        onChanged();
        return this;
      }

      /**
       * <code>.perfetto.protos.Profiling.StackUnwindError unwind_error = 16;</code>
       * @return Whether the unwindError field is set.
       */
      @java.lang.Override
      public boolean hasUnwindError() {
        return optionalUnwindErrorCase_ == 16;
      }
      /**
       * <code>.perfetto.protos.Profiling.StackUnwindError unwind_error = 16;</code>
       * @return The unwindError.
       */
      @java.lang.Override
      public perfetto.protos.ProfilePacketOuterClass.Profiling.StackUnwindError getUnwindError() {
        if (optionalUnwindErrorCase_ == 16) {
          perfetto.protos.ProfilePacketOuterClass.Profiling.StackUnwindError result = perfetto.protos.ProfilePacketOuterClass.Profiling.StackUnwindError.forNumber(
              (java.lang.Integer) optionalUnwindError_);
          return result == null ? perfetto.protos.ProfilePacketOuterClass.Profiling.StackUnwindError.UNWIND_ERROR_UNKNOWN : result;
        }
        return perfetto.protos.ProfilePacketOuterClass.Profiling.StackUnwindError.UNWIND_ERROR_UNKNOWN;
      }
      /**
       * <code>.perfetto.protos.Profiling.StackUnwindError unwind_error = 16;</code>
       * @param value The unwindError to set.
       * @return This builder for chaining.
       */
      public Builder setUnwindError(perfetto.protos.ProfilePacketOuterClass.Profiling.StackUnwindError value) {
        if (value == null) {
          throw new NullPointerException();
        }
        optionalUnwindErrorCase_ = 16;
        optionalUnwindError_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.perfetto.protos.Profiling.StackUnwindError unwind_error = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearUnwindError() {
        if (optionalUnwindErrorCase_ == 16) {
          optionalUnwindErrorCase_ = 0;
          optionalUnwindError_ = null;
          onChanged();
        }
        return this;
      }

      private long kernelRecordsLost_ ;
      /**
       * <pre>
       * If set, indicates that this message is not a sample, but rather an
       * indication of data loss in the ring buffer allocated for |cpu|. Such data
       * loss occurs when the kernel has insufficient ring buffer capacity to write
       * a record (which gets discarded). A record in this context is an individual
       * ring buffer entry, and counts more than just sample records.
       * The |timestamp| of the packet corresponds to the time that the producer
       * wrote the packet for trace-sorting purposes alone, and should not be
       * interpreted relative to the sample timestamps. This field is sufficient to
       * detect that *some* kernel data loss happened within the trace, but not the
       * specific time bounds of that loss (which would require tracking precedessor
       * &amp; successor timestamps, which is not deemed necessary at the moment).
       * </pre>
       *
       * <code>optional uint64 kernel_records_lost = 17;</code>
       * @return Whether the kernelRecordsLost field is set.
       */
      @java.lang.Override
      public boolean hasKernelRecordsLost() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <pre>
       * If set, indicates that this message is not a sample, but rather an
       * indication of data loss in the ring buffer allocated for |cpu|. Such data
       * loss occurs when the kernel has insufficient ring buffer capacity to write
       * a record (which gets discarded). A record in this context is an individual
       * ring buffer entry, and counts more than just sample records.
       * The |timestamp| of the packet corresponds to the time that the producer
       * wrote the packet for trace-sorting purposes alone, and should not be
       * interpreted relative to the sample timestamps. This field is sufficient to
       * detect that *some* kernel data loss happened within the trace, but not the
       * specific time bounds of that loss (which would require tracking precedessor
       * &amp; successor timestamps, which is not deemed necessary at the moment).
       * </pre>
       *
       * <code>optional uint64 kernel_records_lost = 17;</code>
       * @return The kernelRecordsLost.
       */
      @java.lang.Override
      public long getKernelRecordsLost() {
        return kernelRecordsLost_;
      }
      /**
       * <pre>
       * If set, indicates that this message is not a sample, but rather an
       * indication of data loss in the ring buffer allocated for |cpu|. Such data
       * loss occurs when the kernel has insufficient ring buffer capacity to write
       * a record (which gets discarded). A record in this context is an individual
       * ring buffer entry, and counts more than just sample records.
       * The |timestamp| of the packet corresponds to the time that the producer
       * wrote the packet for trace-sorting purposes alone, and should not be
       * interpreted relative to the sample timestamps. This field is sufficient to
       * detect that *some* kernel data loss happened within the trace, but not the
       * specific time bounds of that loss (which would require tracking precedessor
       * &amp; successor timestamps, which is not deemed necessary at the moment).
       * </pre>
       *
       * <code>optional uint64 kernel_records_lost = 17;</code>
       * @param value The kernelRecordsLost to set.
       * @return This builder for chaining.
       */
      public Builder setKernelRecordsLost(long value) {
        
        kernelRecordsLost_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If set, indicates that this message is not a sample, but rather an
       * indication of data loss in the ring buffer allocated for |cpu|. Such data
       * loss occurs when the kernel has insufficient ring buffer capacity to write
       * a record (which gets discarded). A record in this context is an individual
       * ring buffer entry, and counts more than just sample records.
       * The |timestamp| of the packet corresponds to the time that the producer
       * wrote the packet for trace-sorting purposes alone, and should not be
       * interpreted relative to the sample timestamps. This field is sufficient to
       * detect that *some* kernel data loss happened within the trace, but not the
       * specific time bounds of that loss (which would require tracking precedessor
       * &amp; successor timestamps, which is not deemed necessary at the moment).
       * </pre>
       *
       * <code>optional uint64 kernel_records_lost = 17;</code>
       * @return This builder for chaining.
       */
      public Builder clearKernelRecordsLost() {
        bitField0_ = (bitField0_ & ~0x00000080);
        kernelRecordsLost_ = 0L;
        onChanged();
        return this;
      }

      /**
       * <code>.perfetto.protos.PerfSample.SampleSkipReason sample_skipped_reason = 18;</code>
       * @return Whether the sampleSkippedReason field is set.
       */
      @java.lang.Override
      public boolean hasSampleSkippedReason() {
        return optionalSampleSkippedReasonCase_ == 18;
      }
      /**
       * <code>.perfetto.protos.PerfSample.SampleSkipReason sample_skipped_reason = 18;</code>
       * @return The sampleSkippedReason.
       */
      @java.lang.Override
      public perfetto.protos.ProfilePacketOuterClass.PerfSample.SampleSkipReason getSampleSkippedReason() {
        if (optionalSampleSkippedReasonCase_ == 18) {
          perfetto.protos.ProfilePacketOuterClass.PerfSample.SampleSkipReason result = perfetto.protos.ProfilePacketOuterClass.PerfSample.SampleSkipReason.forNumber(
              (java.lang.Integer) optionalSampleSkippedReason_);
          return result == null ? perfetto.protos.ProfilePacketOuterClass.PerfSample.SampleSkipReason.PROFILER_SKIP_UNKNOWN : result;
        }
        return perfetto.protos.ProfilePacketOuterClass.PerfSample.SampleSkipReason.PROFILER_SKIP_UNKNOWN;
      }
      /**
       * <code>.perfetto.protos.PerfSample.SampleSkipReason sample_skipped_reason = 18;</code>
       * @param value The sampleSkippedReason to set.
       * @return This builder for chaining.
       */
      public Builder setSampleSkippedReason(perfetto.protos.ProfilePacketOuterClass.PerfSample.SampleSkipReason value) {
        if (value == null) {
          throw new NullPointerException();
        }
        optionalSampleSkippedReasonCase_ = 18;
        optionalSampleSkippedReason_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.perfetto.protos.PerfSample.SampleSkipReason sample_skipped_reason = 18;</code>
       * @return This builder for chaining.
       */
      public Builder clearSampleSkippedReason() {
        if (optionalSampleSkippedReasonCase_ == 18) {
          optionalSampleSkippedReasonCase_ = 0;
          optionalSampleSkippedReason_ = null;
          onChanged();
        }
        return this;
      }

      private perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent producerEvent_;
      private com.google.protobuf.SingleFieldBuilderV3<
          perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent, perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent.Builder, perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEventOrBuilder> producerEventBuilder_;
      /**
       * <code>optional .perfetto.protos.PerfSample.ProducerEvent producer_event = 19;</code>
       * @return Whether the producerEvent field is set.
       */
      public boolean hasProducerEvent() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <code>optional .perfetto.protos.PerfSample.ProducerEvent producer_event = 19;</code>
       * @return The producerEvent.
       */
      public perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent getProducerEvent() {
        if (producerEventBuilder_ == null) {
          return producerEvent_ == null ? perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent.getDefaultInstance() : producerEvent_;
        } else {
          return producerEventBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .perfetto.protos.PerfSample.ProducerEvent producer_event = 19;</code>
       */
      public Builder setProducerEvent(perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent value) {
        if (producerEventBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          producerEvent_ = value;
        } else {
          producerEventBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <code>optional .perfetto.protos.PerfSample.ProducerEvent producer_event = 19;</code>
       */
      public Builder setProducerEvent(
          perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent.Builder builderForValue) {
        if (producerEventBuilder_ == null) {
          producerEvent_ = builderForValue.build();
        } else {
          producerEventBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <code>optional .perfetto.protos.PerfSample.ProducerEvent producer_event = 19;</code>
       */
      public Builder mergeProducerEvent(perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent value) {
        if (producerEventBuilder_ == null) {
          if (((bitField0_ & 0x00000200) != 0) &&
            producerEvent_ != null &&
            producerEvent_ != perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent.getDefaultInstance()) {
            getProducerEventBuilder().mergeFrom(value);
          } else {
            producerEvent_ = value;
          }
        } else {
          producerEventBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <code>optional .perfetto.protos.PerfSample.ProducerEvent producer_event = 19;</code>
       */
      public Builder clearProducerEvent() {
        bitField0_ = (bitField0_ & ~0x00000200);
        producerEvent_ = null;
        if (producerEventBuilder_ != null) {
          producerEventBuilder_.dispose();
          producerEventBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional .perfetto.protos.PerfSample.ProducerEvent producer_event = 19;</code>
       */
      public perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent.Builder getProducerEventBuilder() {
        bitField0_ |= 0x00000200;
        onChanged();
        return getProducerEventFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .perfetto.protos.PerfSample.ProducerEvent producer_event = 19;</code>
       */
      public perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEventOrBuilder getProducerEventOrBuilder() {
        if (producerEventBuilder_ != null) {
          return producerEventBuilder_.getMessageOrBuilder();
        } else {
          return producerEvent_ == null ?
              perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent.getDefaultInstance() : producerEvent_;
        }
      }
      /**
       * <code>optional .perfetto.protos.PerfSample.ProducerEvent producer_event = 19;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent, perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent.Builder, perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEventOrBuilder> 
          getProducerEventFieldBuilder() {
        if (producerEventBuilder_ == null) {
          producerEventBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent, perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEvent.Builder, perfetto.protos.ProfilePacketOuterClass.PerfSample.ProducerEventOrBuilder>(
                  getProducerEvent(),
                  getParentForChildren(),
                  isClean());
          producerEvent_ = null;
        }
        return producerEventBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:perfetto.protos.PerfSample)
    }

    // @@protoc_insertion_point(class_scope:perfetto.protos.PerfSample)
    private static final perfetto.protos.ProfilePacketOuterClass.PerfSample DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new perfetto.protos.ProfilePacketOuterClass.PerfSample();
    }

    public static perfetto.protos.ProfilePacketOuterClass.PerfSample getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<PerfSample>
        PARSER = new com.google.protobuf.AbstractParser<PerfSample>() {
      @java.lang.Override
      public PerfSample parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<PerfSample> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PerfSample> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public perfetto.protos.ProfilePacketOuterClass.PerfSample getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PerfSampleDefaultsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:perfetto.protos.PerfSampleDefaults)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The sampling timebase. Might not be identical to the data source config if
     * the implementation decided to default/override some parameters.
     * </pre>
     *
     * <code>optional .perfetto.protos.PerfEvents.Timebase timebase = 1;</code>
     * @return Whether the timebase field is set.
     */
    boolean hasTimebase();
    /**
     * <pre>
     * The sampling timebase. Might not be identical to the data source config if
     * the implementation decided to default/override some parameters.
     * </pre>
     *
     * <code>optional .perfetto.protos.PerfEvents.Timebase timebase = 1;</code>
     * @return The timebase.
     */
    perfetto.protos.PerfEventsOuterClass.PerfEvents.Timebase getTimebase();
    /**
     * <pre>
     * The sampling timebase. Might not be identical to the data source config if
     * the implementation decided to default/override some parameters.
     * </pre>
     *
     * <code>optional .perfetto.protos.PerfEvents.Timebase timebase = 1;</code>
     */
    perfetto.protos.PerfEventsOuterClass.PerfEvents.TimebaseOrBuilder getTimebaseOrBuilder();

    /**
     * <pre>
     * If the config requested process sharding, report back the count and which
     * of those bins was selected. Never changes for the duration of a trace.
     * </pre>
     *
     * <code>optional uint32 process_shard_count = 2;</code>
     * @return Whether the processShardCount field is set.
     */
    boolean hasProcessShardCount();
    /**
     * <pre>
     * If the config requested process sharding, report back the count and which
     * of those bins was selected. Never changes for the duration of a trace.
     * </pre>
     *
     * <code>optional uint32 process_shard_count = 2;</code>
     * @return The processShardCount.
     */
    int getProcessShardCount();

    /**
     * <code>optional uint32 chosen_process_shard = 3;</code>
     * @return Whether the chosenProcessShard field is set.
     */
    boolean hasChosenProcessShard();
    /**
     * <code>optional uint32 chosen_process_shard = 3;</code>
     * @return The chosenProcessShard.
     */
    int getChosenProcessShard();
  }
  /**
   * <pre>
   * Submessage for TracePacketDefaults.
   * </pre>
   *
   * Protobuf type {@code perfetto.protos.PerfSampleDefaults}
   */
  public static final class PerfSampleDefaults extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:perfetto.protos.PerfSampleDefaults)
      PerfSampleDefaultsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use PerfSampleDefaults.newBuilder() to construct.
    private PerfSampleDefaults(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private PerfSampleDefaults() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new PerfSampleDefaults();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_PerfSampleDefaults_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_PerfSampleDefaults_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              perfetto.protos.ProfilePacketOuterClass.PerfSampleDefaults.class, perfetto.protos.ProfilePacketOuterClass.PerfSampleDefaults.Builder.class);
    }

    private int bitField0_;
    public static final int TIMEBASE_FIELD_NUMBER = 1;
    private perfetto.protos.PerfEventsOuterClass.PerfEvents.Timebase timebase_;
    /**
     * <pre>
     * The sampling timebase. Might not be identical to the data source config if
     * the implementation decided to default/override some parameters.
     * </pre>
     *
     * <code>optional .perfetto.protos.PerfEvents.Timebase timebase = 1;</code>
     * @return Whether the timebase field is set.
     */
    @java.lang.Override
    public boolean hasTimebase() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The sampling timebase. Might not be identical to the data source config if
     * the implementation decided to default/override some parameters.
     * </pre>
     *
     * <code>optional .perfetto.protos.PerfEvents.Timebase timebase = 1;</code>
     * @return The timebase.
     */
    @java.lang.Override
    public perfetto.protos.PerfEventsOuterClass.PerfEvents.Timebase getTimebase() {
      return timebase_ == null ? perfetto.protos.PerfEventsOuterClass.PerfEvents.Timebase.getDefaultInstance() : timebase_;
    }
    /**
     * <pre>
     * The sampling timebase. Might not be identical to the data source config if
     * the implementation decided to default/override some parameters.
     * </pre>
     *
     * <code>optional .perfetto.protos.PerfEvents.Timebase timebase = 1;</code>
     */
    @java.lang.Override
    public perfetto.protos.PerfEventsOuterClass.PerfEvents.TimebaseOrBuilder getTimebaseOrBuilder() {
      return timebase_ == null ? perfetto.protos.PerfEventsOuterClass.PerfEvents.Timebase.getDefaultInstance() : timebase_;
    }

    public static final int PROCESS_SHARD_COUNT_FIELD_NUMBER = 2;
    private int processShardCount_ = 0;
    /**
     * <pre>
     * If the config requested process sharding, report back the count and which
     * of those bins was selected. Never changes for the duration of a trace.
     * </pre>
     *
     * <code>optional uint32 process_shard_count = 2;</code>
     * @return Whether the processShardCount field is set.
     */
    @java.lang.Override
    public boolean hasProcessShardCount() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * If the config requested process sharding, report back the count and which
     * of those bins was selected. Never changes for the duration of a trace.
     * </pre>
     *
     * <code>optional uint32 process_shard_count = 2;</code>
     * @return The processShardCount.
     */
    @java.lang.Override
    public int getProcessShardCount() {
      return processShardCount_;
    }

    public static final int CHOSEN_PROCESS_SHARD_FIELD_NUMBER = 3;
    private int chosenProcessShard_ = 0;
    /**
     * <code>optional uint32 chosen_process_shard = 3;</code>
     * @return Whether the chosenProcessShard field is set.
     */
    @java.lang.Override
    public boolean hasChosenProcessShard() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional uint32 chosen_process_shard = 3;</code>
     * @return The chosenProcessShard.
     */
    @java.lang.Override
    public int getChosenProcessShard() {
      return chosenProcessShard_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getTimebase());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt32(2, processShardCount_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeUInt32(3, chosenProcessShard_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getTimebase());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, processShardCount_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, chosenProcessShard_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof perfetto.protos.ProfilePacketOuterClass.PerfSampleDefaults)) {
        return super.equals(obj);
      }
      perfetto.protos.ProfilePacketOuterClass.PerfSampleDefaults other = (perfetto.protos.ProfilePacketOuterClass.PerfSampleDefaults) obj;

      if (hasTimebase() != other.hasTimebase()) return false;
      if (hasTimebase()) {
        if (!getTimebase()
            .equals(other.getTimebase())) return false;
      }
      if (hasProcessShardCount() != other.hasProcessShardCount()) return false;
      if (hasProcessShardCount()) {
        if (getProcessShardCount()
            != other.getProcessShardCount()) return false;
      }
      if (hasChosenProcessShard() != other.hasChosenProcessShard()) return false;
      if (hasChosenProcessShard()) {
        if (getChosenProcessShard()
            != other.getChosenProcessShard()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTimebase()) {
        hash = (37 * hash) + TIMEBASE_FIELD_NUMBER;
        hash = (53 * hash) + getTimebase().hashCode();
      }
      if (hasProcessShardCount()) {
        hash = (37 * hash) + PROCESS_SHARD_COUNT_FIELD_NUMBER;
        hash = (53 * hash) + getProcessShardCount();
      }
      if (hasChosenProcessShard()) {
        hash = (37 * hash) + CHOSEN_PROCESS_SHARD_FIELD_NUMBER;
        hash = (53 * hash) + getChosenProcessShard();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static perfetto.protos.ProfilePacketOuterClass.PerfSampleDefaults parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.ProfilePacketOuterClass.PerfSampleDefaults parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.ProfilePacketOuterClass.PerfSampleDefaults parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.ProfilePacketOuterClass.PerfSampleDefaults parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.ProfilePacketOuterClass.PerfSampleDefaults parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.ProfilePacketOuterClass.PerfSampleDefaults parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.ProfilePacketOuterClass.PerfSampleDefaults parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.ProfilePacketOuterClass.PerfSampleDefaults parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.ProfilePacketOuterClass.PerfSampleDefaults parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static perfetto.protos.ProfilePacketOuterClass.PerfSampleDefaults parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.ProfilePacketOuterClass.PerfSampleDefaults parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.ProfilePacketOuterClass.PerfSampleDefaults parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(perfetto.protos.ProfilePacketOuterClass.PerfSampleDefaults prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Submessage for TracePacketDefaults.
     * </pre>
     *
     * Protobuf type {@code perfetto.protos.PerfSampleDefaults}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:perfetto.protos.PerfSampleDefaults)
        perfetto.protos.ProfilePacketOuterClass.PerfSampleDefaultsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_PerfSampleDefaults_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_PerfSampleDefaults_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.ProfilePacketOuterClass.PerfSampleDefaults.class, perfetto.protos.ProfilePacketOuterClass.PerfSampleDefaults.Builder.class);
      }

      // Construct using perfetto.protos.ProfilePacketOuterClass.PerfSampleDefaults.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTimebaseFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        timebase_ = null;
        if (timebaseBuilder_ != null) {
          timebaseBuilder_.dispose();
          timebaseBuilder_ = null;
        }
        processShardCount_ = 0;
        chosenProcessShard_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return perfetto.protos.ProfilePacketOuterClass.internal_static_perfetto_protos_PerfSampleDefaults_descriptor;
      }

      @java.lang.Override
      public perfetto.protos.ProfilePacketOuterClass.PerfSampleDefaults getDefaultInstanceForType() {
        return perfetto.protos.ProfilePacketOuterClass.PerfSampleDefaults.getDefaultInstance();
      }

      @java.lang.Override
      public perfetto.protos.ProfilePacketOuterClass.PerfSampleDefaults build() {
        perfetto.protos.ProfilePacketOuterClass.PerfSampleDefaults result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public perfetto.protos.ProfilePacketOuterClass.PerfSampleDefaults buildPartial() {
        perfetto.protos.ProfilePacketOuterClass.PerfSampleDefaults result = new perfetto.protos.ProfilePacketOuterClass.PerfSampleDefaults(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(perfetto.protos.ProfilePacketOuterClass.PerfSampleDefaults result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.timebase_ = timebaseBuilder_ == null
              ? timebase_
              : timebaseBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.processShardCount_ = processShardCount_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.chosenProcessShard_ = chosenProcessShard_;
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof perfetto.protos.ProfilePacketOuterClass.PerfSampleDefaults) {
          return mergeFrom((perfetto.protos.ProfilePacketOuterClass.PerfSampleDefaults)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(perfetto.protos.ProfilePacketOuterClass.PerfSampleDefaults other) {
        if (other == perfetto.protos.ProfilePacketOuterClass.PerfSampleDefaults.getDefaultInstance()) return this;
        if (other.hasTimebase()) {
          mergeTimebase(other.getTimebase());
        }
        if (other.hasProcessShardCount()) {
          setProcessShardCount(other.getProcessShardCount());
        }
        if (other.hasChosenProcessShard()) {
          setChosenProcessShard(other.getChosenProcessShard());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getTimebaseFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                processShardCount_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                chosenProcessShard_ = input.readUInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private perfetto.protos.PerfEventsOuterClass.PerfEvents.Timebase timebase_;
      private com.google.protobuf.SingleFieldBuilderV3<
          perfetto.protos.PerfEventsOuterClass.PerfEvents.Timebase, perfetto.protos.PerfEventsOuterClass.PerfEvents.Timebase.Builder, perfetto.protos.PerfEventsOuterClass.PerfEvents.TimebaseOrBuilder> timebaseBuilder_;
      /**
       * <pre>
       * The sampling timebase. Might not be identical to the data source config if
       * the implementation decided to default/override some parameters.
       * </pre>
       *
       * <code>optional .perfetto.protos.PerfEvents.Timebase timebase = 1;</code>
       * @return Whether the timebase field is set.
       */
      public boolean hasTimebase() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * The sampling timebase. Might not be identical to the data source config if
       * the implementation decided to default/override some parameters.
       * </pre>
       *
       * <code>optional .perfetto.protos.PerfEvents.Timebase timebase = 1;</code>
       * @return The timebase.
       */
      public perfetto.protos.PerfEventsOuterClass.PerfEvents.Timebase getTimebase() {
        if (timebaseBuilder_ == null) {
          return timebase_ == null ? perfetto.protos.PerfEventsOuterClass.PerfEvents.Timebase.getDefaultInstance() : timebase_;
        } else {
          return timebaseBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The sampling timebase. Might not be identical to the data source config if
       * the implementation decided to default/override some parameters.
       * </pre>
       *
       * <code>optional .perfetto.protos.PerfEvents.Timebase timebase = 1;</code>
       */
      public Builder setTimebase(perfetto.protos.PerfEventsOuterClass.PerfEvents.Timebase value) {
        if (timebaseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          timebase_ = value;
        } else {
          timebaseBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The sampling timebase. Might not be identical to the data source config if
       * the implementation decided to default/override some parameters.
       * </pre>
       *
       * <code>optional .perfetto.protos.PerfEvents.Timebase timebase = 1;</code>
       */
      public Builder setTimebase(
          perfetto.protos.PerfEventsOuterClass.PerfEvents.Timebase.Builder builderForValue) {
        if (timebaseBuilder_ == null) {
          timebase_ = builderForValue.build();
        } else {
          timebaseBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The sampling timebase. Might not be identical to the data source config if
       * the implementation decided to default/override some parameters.
       * </pre>
       *
       * <code>optional .perfetto.protos.PerfEvents.Timebase timebase = 1;</code>
       */
      public Builder mergeTimebase(perfetto.protos.PerfEventsOuterClass.PerfEvents.Timebase value) {
        if (timebaseBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            timebase_ != null &&
            timebase_ != perfetto.protos.PerfEventsOuterClass.PerfEvents.Timebase.getDefaultInstance()) {
            getTimebaseBuilder().mergeFrom(value);
          } else {
            timebase_ = value;
          }
        } else {
          timebaseBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The sampling timebase. Might not be identical to the data source config if
       * the implementation decided to default/override some parameters.
       * </pre>
       *
       * <code>optional .perfetto.protos.PerfEvents.Timebase timebase = 1;</code>
       */
      public Builder clearTimebase() {
        bitField0_ = (bitField0_ & ~0x00000001);
        timebase_ = null;
        if (timebaseBuilder_ != null) {
          timebaseBuilder_.dispose();
          timebaseBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The sampling timebase. Might not be identical to the data source config if
       * the implementation decided to default/override some parameters.
       * </pre>
       *
       * <code>optional .perfetto.protos.PerfEvents.Timebase timebase = 1;</code>
       */
      public perfetto.protos.PerfEventsOuterClass.PerfEvents.Timebase.Builder getTimebaseBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getTimebaseFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The sampling timebase. Might not be identical to the data source config if
       * the implementation decided to default/override some parameters.
       * </pre>
       *
       * <code>optional .perfetto.protos.PerfEvents.Timebase timebase = 1;</code>
       */
      public perfetto.protos.PerfEventsOuterClass.PerfEvents.TimebaseOrBuilder getTimebaseOrBuilder() {
        if (timebaseBuilder_ != null) {
          return timebaseBuilder_.getMessageOrBuilder();
        } else {
          return timebase_ == null ?
              perfetto.protos.PerfEventsOuterClass.PerfEvents.Timebase.getDefaultInstance() : timebase_;
        }
      }
      /**
       * <pre>
       * The sampling timebase. Might not be identical to the data source config if
       * the implementation decided to default/override some parameters.
       * </pre>
       *
       * <code>optional .perfetto.protos.PerfEvents.Timebase timebase = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          perfetto.protos.PerfEventsOuterClass.PerfEvents.Timebase, perfetto.protos.PerfEventsOuterClass.PerfEvents.Timebase.Builder, perfetto.protos.PerfEventsOuterClass.PerfEvents.TimebaseOrBuilder> 
          getTimebaseFieldBuilder() {
        if (timebaseBuilder_ == null) {
          timebaseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              perfetto.protos.PerfEventsOuterClass.PerfEvents.Timebase, perfetto.protos.PerfEventsOuterClass.PerfEvents.Timebase.Builder, perfetto.protos.PerfEventsOuterClass.PerfEvents.TimebaseOrBuilder>(
                  getTimebase(),
                  getParentForChildren(),
                  isClean());
          timebase_ = null;
        }
        return timebaseBuilder_;
      }

      private int processShardCount_ ;
      /**
       * <pre>
       * If the config requested process sharding, report back the count and which
       * of those bins was selected. Never changes for the duration of a trace.
       * </pre>
       *
       * <code>optional uint32 process_shard_count = 2;</code>
       * @return Whether the processShardCount field is set.
       */
      @java.lang.Override
      public boolean hasProcessShardCount() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * If the config requested process sharding, report back the count and which
       * of those bins was selected. Never changes for the duration of a trace.
       * </pre>
       *
       * <code>optional uint32 process_shard_count = 2;</code>
       * @return The processShardCount.
       */
      @java.lang.Override
      public int getProcessShardCount() {
        return processShardCount_;
      }
      /**
       * <pre>
       * If the config requested process sharding, report back the count and which
       * of those bins was selected. Never changes for the duration of a trace.
       * </pre>
       *
       * <code>optional uint32 process_shard_count = 2;</code>
       * @param value The processShardCount to set.
       * @return This builder for chaining.
       */
      public Builder setProcessShardCount(int value) {
        
        processShardCount_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If the config requested process sharding, report back the count and which
       * of those bins was selected. Never changes for the duration of a trace.
       * </pre>
       *
       * <code>optional uint32 process_shard_count = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearProcessShardCount() {
        bitField0_ = (bitField0_ & ~0x00000002);
        processShardCount_ = 0;
        onChanged();
        return this;
      }

      private int chosenProcessShard_ ;
      /**
       * <code>optional uint32 chosen_process_shard = 3;</code>
       * @return Whether the chosenProcessShard field is set.
       */
      @java.lang.Override
      public boolean hasChosenProcessShard() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional uint32 chosen_process_shard = 3;</code>
       * @return The chosenProcessShard.
       */
      @java.lang.Override
      public int getChosenProcessShard() {
        return chosenProcessShard_;
      }
      /**
       * <code>optional uint32 chosen_process_shard = 3;</code>
       * @param value The chosenProcessShard to set.
       * @return This builder for chaining.
       */
      public Builder setChosenProcessShard(int value) {
        
        chosenProcessShard_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 chosen_process_shard = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearChosenProcessShard() {
        bitField0_ = (bitField0_ & ~0x00000004);
        chosenProcessShard_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:perfetto.protos.PerfSampleDefaults)
    }

    // @@protoc_insertion_point(class_scope:perfetto.protos.PerfSampleDefaults)
    private static final perfetto.protos.ProfilePacketOuterClass.PerfSampleDefaults DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new perfetto.protos.ProfilePacketOuterClass.PerfSampleDefaults();
    }

    public static perfetto.protos.ProfilePacketOuterClass.PerfSampleDefaults getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<PerfSampleDefaults>
        PARSER = new com.google.protobuf.AbstractParser<PerfSampleDefaults>() {
      @java.lang.Override
      public PerfSampleDefaults parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<PerfSampleDefaults> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PerfSampleDefaults> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public perfetto.protos.ProfilePacketOuterClass.PerfSampleDefaults getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_ProfilePacket_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_perfetto_protos_ProfilePacket_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_ProfilePacket_HeapSample_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_perfetto_protos_ProfilePacket_HeapSample_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_ProfilePacket_Histogram_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_perfetto_protos_ProfilePacket_Histogram_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_ProfilePacket_Histogram_Bucket_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_perfetto_protos_ProfilePacket_Histogram_Bucket_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_ProfilePacket_ProcessStats_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_perfetto_protos_ProfilePacket_ProcessStats_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_ProfilePacket_ProcessHeapSamples_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_perfetto_protos_ProfilePacket_ProcessHeapSamples_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_StreamingAllocation_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_perfetto_protos_StreamingAllocation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_StreamingFree_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_perfetto_protos_StreamingFree_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_StreamingProfilePacket_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_perfetto_protos_StreamingProfilePacket_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_Profiling_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_perfetto_protos_Profiling_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_PerfSample_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_perfetto_protos_PerfSample_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_PerfSample_ProducerEvent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_perfetto_protos_PerfSample_ProducerEvent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_PerfSampleDefaults_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_perfetto_protos_PerfSampleDefaults_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n4protos/perfetto/trace/profiling/profil" +
      "e_packet.proto\022\017perfetto.protos\032(protos/" +
      "perfetto/common/perf_events.proto\0324proto" +
      "s/perfetto/trace/profiling/profile_commo" +
      "n.proto\"\274\013\n\rProfilePacket\0220\n\007strings\030\001 \003" +
      "(\0132\037.perfetto.protos.InternedString\022*\n\010m" +
      "appings\030\004 \003(\0132\030.perfetto.protos.Mapping\022" +
      "&\n\006frames\030\002 \003(\0132\026.perfetto.protos.Frame\022" +
      ".\n\ncallstacks\030\003 \003(\0132\032.perfetto.protos.Ca" +
      "llstack\022H\n\rprocess_dumps\030\005 \003(\01321.perfett" +
      "o.protos.ProfilePacket.ProcessHeapSample" +
      "s\022\021\n\tcontinued\030\006 \001(\010\022\r\n\005index\030\007 \001(\004\032\272\001\n\n" +
      "HeapSample\022\024\n\014callstack_id\030\001 \001(\004\022\026\n\016self" +
      "_allocated\030\002 \001(\004\022\022\n\nself_freed\030\003 \001(\004\022\020\n\010" +
      "self_max\030\010 \001(\004\022\026\n\016self_max_count\030\t \001(\004\022\021" +
      "\n\ttimestamp\030\004 \001(\004\022\023\n\013alloc_count\030\005 \001(\004\022\022" +
      "\n\nfree_count\030\006 \001(\004J\004\010\007\020\010\032\217\001\n\tHistogram\022@" +
      "\n\007buckets\030\001 \003(\0132/.perfetto.protos.Profil" +
      "ePacket.Histogram.Bucket\032@\n\006Bucket\022\023\n\013up" +
      "per_limit\030\001 \001(\004\022\022\n\nmax_bucket\030\002 \001(\010\022\r\n\005c" +
      "ount\030\003 \001(\004\032\336\001\n\014ProcessStats\022\030\n\020unwinding" +
      "_errors\030\001 \001(\004\022\024\n\014heap_samples\030\002 \001(\004\022\024\n\014m" +
      "ap_reparses\030\003 \001(\004\022C\n\021unwinding_time_us\030\004" +
      " \001(\0132(.perfetto.protos.ProfilePacket.His" +
      "togram\022\037\n\027total_unwinding_time_us\030\005 \001(\004\022" +
      "\"\n\032client_spinlock_blocked_us\030\006 \001(\004\032\330\004\n\022" +
      "ProcessHeapSamples\022\013\n\003pid\030\001 \001(\004\022\024\n\014from_" +
      "startup\030\003 \001(\010\022\033\n\023rejected_concurrent\030\004 \001" +
      "(\010\022\024\n\014disconnected\030\006 \001(\010\022\026\n\016buffer_overr" +
      "an\030\007 \001(\010\022S\n\014client_error\030\016 \001(\0162=.perfett" +
      "o.protos.ProfilePacket.ProcessHeapSample" +
      "s.ClientError\022\030\n\020buffer_corrupted\030\010 \001(\010\022" +
      "\025\n\rhit_guardrail\030\n \001(\010\022\021\n\theap_name\030\013 \001(" +
      "\t\022\037\n\027sampling_interval_bytes\030\014 \001(\004\022$\n\034or" +
      "ig_sampling_interval_bytes\030\r \001(\004\022\021\n\ttime" +
      "stamp\030\t \001(\004\022:\n\005stats\030\005 \001(\0132+.perfetto.pr" +
      "otos.ProfilePacket.ProcessStats\022:\n\007sampl" +
      "es\030\002 \003(\0132).perfetto.protos.ProfilePacket" +
      ".HeapSample\"i\n\013ClientError\022\025\n\021CLIENT_ERR" +
      "OR_NONE\020\000\022\034\n\030CLIENT_ERROR_HIT_TIMEOUT\020\001\022" +
      "%\n!CLIENT_ERROR_INVALID_STACK_BOUNDS\020\002\"\235" +
      "\001\n\023StreamingAllocation\022\017\n\007address\030\001 \003(\004\022" +
      "\014\n\004size\030\002 \003(\004\022\023\n\013sample_size\030\003 \003(\004\022(\n cl" +
      "ock_monotonic_coarse_timestamp\030\004 \003(\004\022\017\n\007" +
      "heap_id\030\005 \003(\r\022\027\n\017sequence_number\030\006 \003(\004\"J" +
      "\n\rStreamingFree\022\017\n\007address\030\001 \003(\004\022\017\n\007heap" +
      "_id\030\002 \003(\r\022\027\n\017sequence_number\030\003 \003(\004\"e\n\026St" +
      "reamingProfilePacket\022\025\n\rcallstack_iid\030\001 " +
      "\003(\004\022\032\n\022timestamp_delta_us\030\002 \003(\003\022\030\n\020proce" +
      "ss_priority\030\003 \001(\005\"\220\005\n\tProfiling\"|\n\007CpuMo" +
      "de\022\020\n\014MODE_UNKNOWN\020\000\022\017\n\013MODE_KERNEL\020\001\022\r\n" +
      "\tMODE_USER\020\002\022\023\n\017MODE_HYPERVISOR\020\003\022\025\n\021MOD" +
      "E_GUEST_KERNEL\020\004\022\023\n\017MODE_GUEST_USER\020\005\"\204\004" +
      "\n\020StackUnwindError\022\030\n\024UNWIND_ERROR_UNKNO" +
      "WN\020\000\022\025\n\021UNWIND_ERROR_NONE\020\001\022\037\n\033UNWIND_ER" +
      "ROR_MEMORY_INVALID\020\002\022\034\n\030UNWIND_ERROR_UNW" +
      "IND_INFO\020\003\022\034\n\030UNWIND_ERROR_UNSUPPORTED\020\004" +
      "\022\034\n\030UNWIND_ERROR_INVALID_MAP\020\005\022$\n UNWIND" +
      "_ERROR_MAX_FRAMES_EXCEEDED\020\006\022\037\n\033UNWIND_E" +
      "RROR_REPEATED_FRAME\020\007\022\034\n\030UNWIND_ERROR_IN" +
      "VALID_ELF\020\010\022\034\n\030UNWIND_ERROR_SYSTEM_CALL\020" +
      "\t\022\037\n\033UNWIND_ERROR_THREAD_TIMEOUT\020\n\022&\n\"UN" +
      "WIND_ERROR_THREAD_DOES_NOT_EXIST\020\013\022\031\n\025UN" +
      "WIND_ERROR_BAD_ARCH\020\014\022\033\n\027UNWIND_ERROR_MA" +
      "PS_PARSE\020\r\022\"\n\036UNWIND_ERROR_INVALID_PARAM" +
      "ETER\020\016\022\034\n\030UNWIND_ERROR_PTRACE_CALL\020\017\"\266\006\n" +
      "\nPerfSample\022\013\n\003cpu\030\001 \001(\r\022\013\n\003pid\030\002 \001(\r\022\013\n" +
      "\003tid\030\003 \001(\r\0224\n\010cpu_mode\030\005 \001(\0162\".perfetto." +
      "protos.Profiling.CpuMode\022\026\n\016timebase_cou" +
      "nt\030\006 \001(\004\022\025\n\rcallstack_iid\030\004 \001(\004\022C\n\014unwin" +
      "d_error\030\020 \001(\0162+.perfetto.protos.Profilin" +
      "g.StackUnwindErrorH\000\022\033\n\023kernel_records_l" +
      "ost\030\021 \001(\004\022M\n\025sample_skipped_reason\030\022 \001(\016" +
      "2,.perfetto.protos.PerfSample.SampleSkip" +
      "ReasonH\001\022A\n\016producer_event\030\023 \001(\0132).perfe" +
      "tto.protos.PerfSample.ProducerEvent\032\334\001\n\r" +
      "ProducerEvent\022\\\n\022source_stop_reason\030\001 \001(" +
      "\0162>.perfetto.protos.PerfSample.ProducerE" +
      "vent.DataSourceStopReasonH\000\"N\n\024DataSourc" +
      "eStopReason\022\031\n\025PROFILER_STOP_UNKNOWN\020\000\022\033" +
      "\n\027PROFILER_STOP_GUARDRAIL\020\001B\035\n\033optional_" +
      "source_stop_reason\"\215\001\n\020SampleSkipReason\022" +
      "\031\n\025PROFILER_SKIP_UNKNOWN\020\000\022\034\n\030PROFILER_S" +
      "KIP_READ_STAGE\020\001\022\036\n\032PROFILER_SKIP_UNWIND" +
      "_STAGE\020\002\022 \n\034PROFILER_SKIP_UNWIND_ENQUEUE" +
      "\020\003B\027\n\025optional_unwind_errorB \n\036optional_" +
      "sample_skipped_reason\"\207\001\n\022PerfSampleDefa" +
      "ults\0226\n\010timebase\030\001 \001(\0132$.perfetto.protos" +
      ".PerfEvents.Timebase\022\033\n\023process_shard_co" +
      "unt\030\002 \001(\r\022\034\n\024chosen_process_shard\030\003 \001(\r"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          perfetto.protos.PerfEventsOuterClass.getDescriptor(),
          perfetto.protos.ProfileCommon.getDescriptor(),
        });
    internal_static_perfetto_protos_ProfilePacket_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_perfetto_protos_ProfilePacket_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_perfetto_protos_ProfilePacket_descriptor,
        new java.lang.String[] { "Strings", "Mappings", "Frames", "Callstacks", "ProcessDumps", "Continued", "Index", });
    internal_static_perfetto_protos_ProfilePacket_HeapSample_descriptor =
      internal_static_perfetto_protos_ProfilePacket_descriptor.getNestedTypes().get(0);
    internal_static_perfetto_protos_ProfilePacket_HeapSample_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_perfetto_protos_ProfilePacket_HeapSample_descriptor,
        new java.lang.String[] { "CallstackId", "SelfAllocated", "SelfFreed", "SelfMax", "SelfMaxCount", "Timestamp", "AllocCount", "FreeCount", });
    internal_static_perfetto_protos_ProfilePacket_Histogram_descriptor =
      internal_static_perfetto_protos_ProfilePacket_descriptor.getNestedTypes().get(1);
    internal_static_perfetto_protos_ProfilePacket_Histogram_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_perfetto_protos_ProfilePacket_Histogram_descriptor,
        new java.lang.String[] { "Buckets", });
    internal_static_perfetto_protos_ProfilePacket_Histogram_Bucket_descriptor =
      internal_static_perfetto_protos_ProfilePacket_Histogram_descriptor.getNestedTypes().get(0);
    internal_static_perfetto_protos_ProfilePacket_Histogram_Bucket_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_perfetto_protos_ProfilePacket_Histogram_Bucket_descriptor,
        new java.lang.String[] { "UpperLimit", "MaxBucket", "Count", });
    internal_static_perfetto_protos_ProfilePacket_ProcessStats_descriptor =
      internal_static_perfetto_protos_ProfilePacket_descriptor.getNestedTypes().get(2);
    internal_static_perfetto_protos_ProfilePacket_ProcessStats_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_perfetto_protos_ProfilePacket_ProcessStats_descriptor,
        new java.lang.String[] { "UnwindingErrors", "HeapSamples", "MapReparses", "UnwindingTimeUs", "TotalUnwindingTimeUs", "ClientSpinlockBlockedUs", });
    internal_static_perfetto_protos_ProfilePacket_ProcessHeapSamples_descriptor =
      internal_static_perfetto_protos_ProfilePacket_descriptor.getNestedTypes().get(3);
    internal_static_perfetto_protos_ProfilePacket_ProcessHeapSamples_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_perfetto_protos_ProfilePacket_ProcessHeapSamples_descriptor,
        new java.lang.String[] { "Pid", "FromStartup", "RejectedConcurrent", "Disconnected", "BufferOverran", "ClientError", "BufferCorrupted", "HitGuardrail", "HeapName", "SamplingIntervalBytes", "OrigSamplingIntervalBytes", "Timestamp", "Stats", "Samples", });
    internal_static_perfetto_protos_StreamingAllocation_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_perfetto_protos_StreamingAllocation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_perfetto_protos_StreamingAllocation_descriptor,
        new java.lang.String[] { "Address", "Size", "SampleSize", "ClockMonotonicCoarseTimestamp", "HeapId", "SequenceNumber", });
    internal_static_perfetto_protos_StreamingFree_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_perfetto_protos_StreamingFree_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_perfetto_protos_StreamingFree_descriptor,
        new java.lang.String[] { "Address", "HeapId", "SequenceNumber", });
    internal_static_perfetto_protos_StreamingProfilePacket_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_perfetto_protos_StreamingProfilePacket_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_perfetto_protos_StreamingProfilePacket_descriptor,
        new java.lang.String[] { "CallstackIid", "TimestampDeltaUs", "ProcessPriority", });
    internal_static_perfetto_protos_Profiling_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_perfetto_protos_Profiling_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_perfetto_protos_Profiling_descriptor,
        new java.lang.String[] { });
    internal_static_perfetto_protos_PerfSample_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_perfetto_protos_PerfSample_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_perfetto_protos_PerfSample_descriptor,
        new java.lang.String[] { "Cpu", "Pid", "Tid", "CpuMode", "TimebaseCount", "CallstackIid", "UnwindError", "KernelRecordsLost", "SampleSkippedReason", "ProducerEvent", "OptionalUnwindError", "OptionalSampleSkippedReason", });
    internal_static_perfetto_protos_PerfSample_ProducerEvent_descriptor =
      internal_static_perfetto_protos_PerfSample_descriptor.getNestedTypes().get(0);
    internal_static_perfetto_protos_PerfSample_ProducerEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_perfetto_protos_PerfSample_ProducerEvent_descriptor,
        new java.lang.String[] { "SourceStopReason", "OptionalSourceStopReason", });
    internal_static_perfetto_protos_PerfSampleDefaults_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_perfetto_protos_PerfSampleDefaults_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_perfetto_protos_PerfSampleDefaults_descriptor,
        new java.lang.String[] { "Timebase", "ProcessShardCount", "ChosenProcessShard", });
    perfetto.protos.PerfEventsOuterClass.getDescriptor();
    perfetto.protos.ProfileCommon.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
