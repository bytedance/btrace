// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/perfetto/config/track_event/track_event_config.proto

package perfetto.protos;

public final class TrackEventConfigOuterClass {
  private TrackEventConfigOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface TrackEventConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:perfetto.protos.TrackEventConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Default: []
     * </pre>
     *
     * <code>repeated string disabled_categories = 1;</code>
     * @return A list containing the disabledCategories.
     */
    java.util.List<java.lang.String>
        getDisabledCategoriesList();
    /**
     * <pre>
     * Default: []
     * </pre>
     *
     * <code>repeated string disabled_categories = 1;</code>
     * @return The count of disabledCategories.
     */
    int getDisabledCategoriesCount();
    /**
     * <pre>
     * Default: []
     * </pre>
     *
     * <code>repeated string disabled_categories = 1;</code>
     * @param index The index of the element to return.
     * @return The disabledCategories at the given index.
     */
    java.lang.String getDisabledCategories(int index);
    /**
     * <pre>
     * Default: []
     * </pre>
     *
     * <code>repeated string disabled_categories = 1;</code>
     * @param index The index of the value to return.
     * @return The bytes of the disabledCategories at the given index.
     */
    com.google.protobuf.ByteString
        getDisabledCategoriesBytes(int index);

    /**
     * <pre>
     * Default: []
     * </pre>
     *
     * <code>repeated string enabled_categories = 2;</code>
     * @return A list containing the enabledCategories.
     */
    java.util.List<java.lang.String>
        getEnabledCategoriesList();
    /**
     * <pre>
     * Default: []
     * </pre>
     *
     * <code>repeated string enabled_categories = 2;</code>
     * @return The count of enabledCategories.
     */
    int getEnabledCategoriesCount();
    /**
     * <pre>
     * Default: []
     * </pre>
     *
     * <code>repeated string enabled_categories = 2;</code>
     * @param index The index of the element to return.
     * @return The enabledCategories at the given index.
     */
    java.lang.String getEnabledCategories(int index);
    /**
     * <pre>
     * Default: []
     * </pre>
     *
     * <code>repeated string enabled_categories = 2;</code>
     * @param index The index of the value to return.
     * @return The bytes of the enabledCategories at the given index.
     */
    com.google.protobuf.ByteString
        getEnabledCategoriesBytes(int index);

    /**
     * <pre>
     * Default: ["slow", "debug"]
     * </pre>
     *
     * <code>repeated string disabled_tags = 3;</code>
     * @return A list containing the disabledTags.
     */
    java.util.List<java.lang.String>
        getDisabledTagsList();
    /**
     * <pre>
     * Default: ["slow", "debug"]
     * </pre>
     *
     * <code>repeated string disabled_tags = 3;</code>
     * @return The count of disabledTags.
     */
    int getDisabledTagsCount();
    /**
     * <pre>
     * Default: ["slow", "debug"]
     * </pre>
     *
     * <code>repeated string disabled_tags = 3;</code>
     * @param index The index of the element to return.
     * @return The disabledTags at the given index.
     */
    java.lang.String getDisabledTags(int index);
    /**
     * <pre>
     * Default: ["slow", "debug"]
     * </pre>
     *
     * <code>repeated string disabled_tags = 3;</code>
     * @param index The index of the value to return.
     * @return The bytes of the disabledTags at the given index.
     */
    com.google.protobuf.ByteString
        getDisabledTagsBytes(int index);

    /**
     * <pre>
     * Default: []
     * </pre>
     *
     * <code>repeated string enabled_tags = 4;</code>
     * @return A list containing the enabledTags.
     */
    java.util.List<java.lang.String>
        getEnabledTagsList();
    /**
     * <pre>
     * Default: []
     * </pre>
     *
     * <code>repeated string enabled_tags = 4;</code>
     * @return The count of enabledTags.
     */
    int getEnabledTagsCount();
    /**
     * <pre>
     * Default: []
     * </pre>
     *
     * <code>repeated string enabled_tags = 4;</code>
     * @param index The index of the element to return.
     * @return The enabledTags at the given index.
     */
    java.lang.String getEnabledTags(int index);
    /**
     * <pre>
     * Default: []
     * </pre>
     *
     * <code>repeated string enabled_tags = 4;</code>
     * @param index The index of the value to return.
     * @return The bytes of the enabledTags at the given index.
     */
    com.google.protobuf.ByteString
        getEnabledTagsBytes(int index);

    /**
     * <pre>
     * Default: false (i.e. enabled by default)
     * </pre>
     *
     * <code>optional bool disable_incremental_timestamps = 5;</code>
     * @return Whether the disableIncrementalTimestamps field is set.
     */
    boolean hasDisableIncrementalTimestamps();
    /**
     * <pre>
     * Default: false (i.e. enabled by default)
     * </pre>
     *
     * <code>optional bool disable_incremental_timestamps = 5;</code>
     * @return The disableIncrementalTimestamps.
     */
    boolean getDisableIncrementalTimestamps();

    /**
     * <pre>
     * Allows to specify a custom unit different than the default (ns).
     * Also affects thread timestamps if enable_thread_time_sampling = true.
     * A multiplier of 1000 means that a timestamp = 3 should be interpreted as
     * 3000 ns = 3 us.
     * Default: 1 (if unset, it should be read as 1).
     * </pre>
     *
     * <code>optional uint64 timestamp_unit_multiplier = 6;</code>
     * @return Whether the timestampUnitMultiplier field is set.
     */
    boolean hasTimestampUnitMultiplier();
    /**
     * <pre>
     * Allows to specify a custom unit different than the default (ns).
     * Also affects thread timestamps if enable_thread_time_sampling = true.
     * A multiplier of 1000 means that a timestamp = 3 should be interpreted as
     * 3000 ns = 3 us.
     * Default: 1 (if unset, it should be read as 1).
     * </pre>
     *
     * <code>optional uint64 timestamp_unit_multiplier = 6;</code>
     * @return The timestampUnitMultiplier.
     */
    long getTimestampUnitMultiplier();

    /**
     * <pre>
     * Default: false (i.e. debug_annotations is NOT filtered out by default)
     * When true, any debug annotations provided as arguments to the
     * TRACE_EVENT macros are not written into the trace. Typed arguments will
     * still be emitted even if set to true.
     * </pre>
     *
     * <code>optional bool filter_debug_annotations = 7;</code>
     * @return Whether the filterDebugAnnotations field is set.
     */
    boolean hasFilterDebugAnnotations();
    /**
     * <pre>
     * Default: false (i.e. debug_annotations is NOT filtered out by default)
     * When true, any debug annotations provided as arguments to the
     * TRACE_EVENT macros are not written into the trace. Typed arguments will
     * still be emitted even if set to true.
     * </pre>
     *
     * <code>optional bool filter_debug_annotations = 7;</code>
     * @return The filterDebugAnnotations.
     */
    boolean getFilterDebugAnnotations();

    /**
     * <pre>
     * Default : false (i.e. disabled)
     * When true, the SDK samples and emits the current thread time counter value
     * for each event on the current thread's track. This value represents the
     * total CPU time consumed by that thread since its creation. Note that if a
     * thread is not scheduled by OS for some duration, that time won't be
     * included in thread_time.
     * Learn more : "CLOCK_THREAD_CPUTIME_ID" flag at
     * https://linux.die.net/man/3/clock_gettime
     * </pre>
     *
     * <code>optional bool enable_thread_time_sampling = 8;</code>
     * @return Whether the enableThreadTimeSampling field is set.
     */
    boolean hasEnableThreadTimeSampling();
    /**
     * <pre>
     * Default : false (i.e. disabled)
     * When true, the SDK samples and emits the current thread time counter value
     * for each event on the current thread's track. This value represents the
     * total CPU time consumed by that thread since its creation. Note that if a
     * thread is not scheduled by OS for some duration, that time won't be
     * included in thread_time.
     * Learn more : "CLOCK_THREAD_CPUTIME_ID" flag at
     * https://linux.die.net/man/3/clock_gettime
     * </pre>
     *
     * <code>optional bool enable_thread_time_sampling = 8;</code>
     * @return The enableThreadTimeSampling.
     */
    boolean getEnableThreadTimeSampling();

    /**
     * <pre>
     * Default: false (i.e. dynamic event names are NOT filtered out by default)
     * When true, event_names wrapped in perfetto::DynamicString will be filtered
     * out.
     * </pre>
     *
     * <code>optional bool filter_dynamic_event_names = 9;</code>
     * @return Whether the filterDynamicEventNames field is set.
     */
    boolean hasFilterDynamicEventNames();
    /**
     * <pre>
     * Default: false (i.e. dynamic event names are NOT filtered out by default)
     * When true, event_names wrapped in perfetto::DynamicString will be filtered
     * out.
     * </pre>
     *
     * <code>optional bool filter_dynamic_event_names = 9;</code>
     * @return The filterDynamicEventNames.
     */
    boolean getFilterDynamicEventNames();
  }
  /**
   * <pre>
   * The following fields define the set of enabled trace categories. Each list
   * item is a glob.
   * To determine if category is enabled, it is checked against the filters in
   * the following order:
   *   1. Exact matches in enabled categories.
   *   2. Exact matches in enabled tags.
   *   3. Exact matches in disabled categories.
   *   4. Exact matches in disabled tags.
   *   5. Pattern matches in enabled categories.
   *   6. Pattern matches in enabled tags.
   *   7. Pattern matches in disabled categories.
   *   8. Pattern matches in disabled tags.
   * If none of the steps produced a match, the category is enabled by default.
   * Examples:
   *  - To enable all non-slow/debug categories:
   *       No configuration needed, happens by default.
   *  - To enable a specific category:
   *       disabled_categories = ["*"]
   *       enabled_categories = ["my_category"]
   *  - To enable only categories with a specific tag:
   *       disabled_tags = ["*"]
   *       enabled_tags = ["my_tag"]
   * </pre>
   *
   * Protobuf type {@code perfetto.protos.TrackEventConfig}
   */
  public static final class TrackEventConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:perfetto.protos.TrackEventConfig)
      TrackEventConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TrackEventConfig.newBuilder() to construct.
    private TrackEventConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TrackEventConfig() {
      disabledCategories_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      enabledCategories_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      disabledTags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      enabledTags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TrackEventConfig();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return perfetto.protos.TrackEventConfigOuterClass.internal_static_perfetto_protos_TrackEventConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return perfetto.protos.TrackEventConfigOuterClass.internal_static_perfetto_protos_TrackEventConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              perfetto.protos.TrackEventConfigOuterClass.TrackEventConfig.class, perfetto.protos.TrackEventConfigOuterClass.TrackEventConfig.Builder.class);
    }

    private int bitField0_;
    public static final int DISABLED_CATEGORIES_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringList disabledCategories_;
    /**
     * <pre>
     * Default: []
     * </pre>
     *
     * <code>repeated string disabled_categories = 1;</code>
     * @return A list containing the disabledCategories.
     */
    public com.google.protobuf.ProtocolStringList
        getDisabledCategoriesList() {
      return disabledCategories_;
    }
    /**
     * <pre>
     * Default: []
     * </pre>
     *
     * <code>repeated string disabled_categories = 1;</code>
     * @return The count of disabledCategories.
     */
    public int getDisabledCategoriesCount() {
      return disabledCategories_.size();
    }
    /**
     * <pre>
     * Default: []
     * </pre>
     *
     * <code>repeated string disabled_categories = 1;</code>
     * @param index The index of the element to return.
     * @return The disabledCategories at the given index.
     */
    public java.lang.String getDisabledCategories(int index) {
      return disabledCategories_.get(index);
    }
    /**
     * <pre>
     * Default: []
     * </pre>
     *
     * <code>repeated string disabled_categories = 1;</code>
     * @param index The index of the value to return.
     * @return The bytes of the disabledCategories at the given index.
     */
    public com.google.protobuf.ByteString
        getDisabledCategoriesBytes(int index) {
      return disabledCategories_.getByteString(index);
    }

    public static final int ENABLED_CATEGORIES_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringList enabledCategories_;
    /**
     * <pre>
     * Default: []
     * </pre>
     *
     * <code>repeated string enabled_categories = 2;</code>
     * @return A list containing the enabledCategories.
     */
    public com.google.protobuf.ProtocolStringList
        getEnabledCategoriesList() {
      return enabledCategories_;
    }
    /**
     * <pre>
     * Default: []
     * </pre>
     *
     * <code>repeated string enabled_categories = 2;</code>
     * @return The count of enabledCategories.
     */
    public int getEnabledCategoriesCount() {
      return enabledCategories_.size();
    }
    /**
     * <pre>
     * Default: []
     * </pre>
     *
     * <code>repeated string enabled_categories = 2;</code>
     * @param index The index of the element to return.
     * @return The enabledCategories at the given index.
     */
    public java.lang.String getEnabledCategories(int index) {
      return enabledCategories_.get(index);
    }
    /**
     * <pre>
     * Default: []
     * </pre>
     *
     * <code>repeated string enabled_categories = 2;</code>
     * @param index The index of the value to return.
     * @return The bytes of the enabledCategories at the given index.
     */
    public com.google.protobuf.ByteString
        getEnabledCategoriesBytes(int index) {
      return enabledCategories_.getByteString(index);
    }

    public static final int DISABLED_TAGS_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringList disabledTags_;
    /**
     * <pre>
     * Default: ["slow", "debug"]
     * </pre>
     *
     * <code>repeated string disabled_tags = 3;</code>
     * @return A list containing the disabledTags.
     */
    public com.google.protobuf.ProtocolStringList
        getDisabledTagsList() {
      return disabledTags_;
    }
    /**
     * <pre>
     * Default: ["slow", "debug"]
     * </pre>
     *
     * <code>repeated string disabled_tags = 3;</code>
     * @return The count of disabledTags.
     */
    public int getDisabledTagsCount() {
      return disabledTags_.size();
    }
    /**
     * <pre>
     * Default: ["slow", "debug"]
     * </pre>
     *
     * <code>repeated string disabled_tags = 3;</code>
     * @param index The index of the element to return.
     * @return The disabledTags at the given index.
     */
    public java.lang.String getDisabledTags(int index) {
      return disabledTags_.get(index);
    }
    /**
     * <pre>
     * Default: ["slow", "debug"]
     * </pre>
     *
     * <code>repeated string disabled_tags = 3;</code>
     * @param index The index of the value to return.
     * @return The bytes of the disabledTags at the given index.
     */
    public com.google.protobuf.ByteString
        getDisabledTagsBytes(int index) {
      return disabledTags_.getByteString(index);
    }

    public static final int ENABLED_TAGS_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringList enabledTags_;
    /**
     * <pre>
     * Default: []
     * </pre>
     *
     * <code>repeated string enabled_tags = 4;</code>
     * @return A list containing the enabledTags.
     */
    public com.google.protobuf.ProtocolStringList
        getEnabledTagsList() {
      return enabledTags_;
    }
    /**
     * <pre>
     * Default: []
     * </pre>
     *
     * <code>repeated string enabled_tags = 4;</code>
     * @return The count of enabledTags.
     */
    public int getEnabledTagsCount() {
      return enabledTags_.size();
    }
    /**
     * <pre>
     * Default: []
     * </pre>
     *
     * <code>repeated string enabled_tags = 4;</code>
     * @param index The index of the element to return.
     * @return The enabledTags at the given index.
     */
    public java.lang.String getEnabledTags(int index) {
      return enabledTags_.get(index);
    }
    /**
     * <pre>
     * Default: []
     * </pre>
     *
     * <code>repeated string enabled_tags = 4;</code>
     * @param index The index of the value to return.
     * @return The bytes of the enabledTags at the given index.
     */
    public com.google.protobuf.ByteString
        getEnabledTagsBytes(int index) {
      return enabledTags_.getByteString(index);
    }

    public static final int DISABLE_INCREMENTAL_TIMESTAMPS_FIELD_NUMBER = 5;
    private boolean disableIncrementalTimestamps_ = false;
    /**
     * <pre>
     * Default: false (i.e. enabled by default)
     * </pre>
     *
     * <code>optional bool disable_incremental_timestamps = 5;</code>
     * @return Whether the disableIncrementalTimestamps field is set.
     */
    @java.lang.Override
    public boolean hasDisableIncrementalTimestamps() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Default: false (i.e. enabled by default)
     * </pre>
     *
     * <code>optional bool disable_incremental_timestamps = 5;</code>
     * @return The disableIncrementalTimestamps.
     */
    @java.lang.Override
    public boolean getDisableIncrementalTimestamps() {
      return disableIncrementalTimestamps_;
    }

    public static final int TIMESTAMP_UNIT_MULTIPLIER_FIELD_NUMBER = 6;
    private long timestampUnitMultiplier_ = 0L;
    /**
     * <pre>
     * Allows to specify a custom unit different than the default (ns).
     * Also affects thread timestamps if enable_thread_time_sampling = true.
     * A multiplier of 1000 means that a timestamp = 3 should be interpreted as
     * 3000 ns = 3 us.
     * Default: 1 (if unset, it should be read as 1).
     * </pre>
     *
     * <code>optional uint64 timestamp_unit_multiplier = 6;</code>
     * @return Whether the timestampUnitMultiplier field is set.
     */
    @java.lang.Override
    public boolean hasTimestampUnitMultiplier() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Allows to specify a custom unit different than the default (ns).
     * Also affects thread timestamps if enable_thread_time_sampling = true.
     * A multiplier of 1000 means that a timestamp = 3 should be interpreted as
     * 3000 ns = 3 us.
     * Default: 1 (if unset, it should be read as 1).
     * </pre>
     *
     * <code>optional uint64 timestamp_unit_multiplier = 6;</code>
     * @return The timestampUnitMultiplier.
     */
    @java.lang.Override
    public long getTimestampUnitMultiplier() {
      return timestampUnitMultiplier_;
    }

    public static final int FILTER_DEBUG_ANNOTATIONS_FIELD_NUMBER = 7;
    private boolean filterDebugAnnotations_ = false;
    /**
     * <pre>
     * Default: false (i.e. debug_annotations is NOT filtered out by default)
     * When true, any debug annotations provided as arguments to the
     * TRACE_EVENT macros are not written into the trace. Typed arguments will
     * still be emitted even if set to true.
     * </pre>
     *
     * <code>optional bool filter_debug_annotations = 7;</code>
     * @return Whether the filterDebugAnnotations field is set.
     */
    @java.lang.Override
    public boolean hasFilterDebugAnnotations() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Default: false (i.e. debug_annotations is NOT filtered out by default)
     * When true, any debug annotations provided as arguments to the
     * TRACE_EVENT macros are not written into the trace. Typed arguments will
     * still be emitted even if set to true.
     * </pre>
     *
     * <code>optional bool filter_debug_annotations = 7;</code>
     * @return The filterDebugAnnotations.
     */
    @java.lang.Override
    public boolean getFilterDebugAnnotations() {
      return filterDebugAnnotations_;
    }

    public static final int ENABLE_THREAD_TIME_SAMPLING_FIELD_NUMBER = 8;
    private boolean enableThreadTimeSampling_ = false;
    /**
     * <pre>
     * Default : false (i.e. disabled)
     * When true, the SDK samples and emits the current thread time counter value
     * for each event on the current thread's track. This value represents the
     * total CPU time consumed by that thread since its creation. Note that if a
     * thread is not scheduled by OS for some duration, that time won't be
     * included in thread_time.
     * Learn more : "CLOCK_THREAD_CPUTIME_ID" flag at
     * https://linux.die.net/man/3/clock_gettime
     * </pre>
     *
     * <code>optional bool enable_thread_time_sampling = 8;</code>
     * @return Whether the enableThreadTimeSampling field is set.
     */
    @java.lang.Override
    public boolean hasEnableThreadTimeSampling() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * Default : false (i.e. disabled)
     * When true, the SDK samples and emits the current thread time counter value
     * for each event on the current thread's track. This value represents the
     * total CPU time consumed by that thread since its creation. Note that if a
     * thread is not scheduled by OS for some duration, that time won't be
     * included in thread_time.
     * Learn more : "CLOCK_THREAD_CPUTIME_ID" flag at
     * https://linux.die.net/man/3/clock_gettime
     * </pre>
     *
     * <code>optional bool enable_thread_time_sampling = 8;</code>
     * @return The enableThreadTimeSampling.
     */
    @java.lang.Override
    public boolean getEnableThreadTimeSampling() {
      return enableThreadTimeSampling_;
    }

    public static final int FILTER_DYNAMIC_EVENT_NAMES_FIELD_NUMBER = 9;
    private boolean filterDynamicEventNames_ = false;
    /**
     * <pre>
     * Default: false (i.e. dynamic event names are NOT filtered out by default)
     * When true, event_names wrapped in perfetto::DynamicString will be filtered
     * out.
     * </pre>
     *
     * <code>optional bool filter_dynamic_event_names = 9;</code>
     * @return Whether the filterDynamicEventNames field is set.
     */
    @java.lang.Override
    public boolean hasFilterDynamicEventNames() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Default: false (i.e. dynamic event names are NOT filtered out by default)
     * When true, event_names wrapped in perfetto::DynamicString will be filtered
     * out.
     * </pre>
     *
     * <code>optional bool filter_dynamic_event_names = 9;</code>
     * @return The filterDynamicEventNames.
     */
    @java.lang.Override
    public boolean getFilterDynamicEventNames() {
      return filterDynamicEventNames_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < disabledCategories_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, disabledCategories_.getRaw(i));
      }
      for (int i = 0; i < enabledCategories_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, enabledCategories_.getRaw(i));
      }
      for (int i = 0; i < disabledTags_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, disabledTags_.getRaw(i));
      }
      for (int i = 0; i < enabledTags_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, enabledTags_.getRaw(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeBool(5, disableIncrementalTimestamps_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt64(6, timestampUnitMultiplier_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeBool(7, filterDebugAnnotations_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeBool(8, enableThreadTimeSampling_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeBool(9, filterDynamicEventNames_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < disabledCategories_.size(); i++) {
          dataSize += computeStringSizeNoTag(disabledCategories_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getDisabledCategoriesList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < enabledCategories_.size(); i++) {
          dataSize += computeStringSizeNoTag(enabledCategories_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getEnabledCategoriesList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < disabledTags_.size(); i++) {
          dataSize += computeStringSizeNoTag(disabledTags_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getDisabledTagsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < enabledTags_.size(); i++) {
          dataSize += computeStringSizeNoTag(enabledTags_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getEnabledTagsList().size();
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, disableIncrementalTimestamps_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, timestampUnitMultiplier_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, filterDebugAnnotations_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, enableThreadTimeSampling_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, filterDynamicEventNames_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof perfetto.protos.TrackEventConfigOuterClass.TrackEventConfig)) {
        return super.equals(obj);
      }
      perfetto.protos.TrackEventConfigOuterClass.TrackEventConfig other = (perfetto.protos.TrackEventConfigOuterClass.TrackEventConfig) obj;

      if (!getDisabledCategoriesList()
          .equals(other.getDisabledCategoriesList())) return false;
      if (!getEnabledCategoriesList()
          .equals(other.getEnabledCategoriesList())) return false;
      if (!getDisabledTagsList()
          .equals(other.getDisabledTagsList())) return false;
      if (!getEnabledTagsList()
          .equals(other.getEnabledTagsList())) return false;
      if (hasDisableIncrementalTimestamps() != other.hasDisableIncrementalTimestamps()) return false;
      if (hasDisableIncrementalTimestamps()) {
        if (getDisableIncrementalTimestamps()
            != other.getDisableIncrementalTimestamps()) return false;
      }
      if (hasTimestampUnitMultiplier() != other.hasTimestampUnitMultiplier()) return false;
      if (hasTimestampUnitMultiplier()) {
        if (getTimestampUnitMultiplier()
            != other.getTimestampUnitMultiplier()) return false;
      }
      if (hasFilterDebugAnnotations() != other.hasFilterDebugAnnotations()) return false;
      if (hasFilterDebugAnnotations()) {
        if (getFilterDebugAnnotations()
            != other.getFilterDebugAnnotations()) return false;
      }
      if (hasEnableThreadTimeSampling() != other.hasEnableThreadTimeSampling()) return false;
      if (hasEnableThreadTimeSampling()) {
        if (getEnableThreadTimeSampling()
            != other.getEnableThreadTimeSampling()) return false;
      }
      if (hasFilterDynamicEventNames() != other.hasFilterDynamicEventNames()) return false;
      if (hasFilterDynamicEventNames()) {
        if (getFilterDynamicEventNames()
            != other.getFilterDynamicEventNames()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getDisabledCategoriesCount() > 0) {
        hash = (37 * hash) + DISABLED_CATEGORIES_FIELD_NUMBER;
        hash = (53 * hash) + getDisabledCategoriesList().hashCode();
      }
      if (getEnabledCategoriesCount() > 0) {
        hash = (37 * hash) + ENABLED_CATEGORIES_FIELD_NUMBER;
        hash = (53 * hash) + getEnabledCategoriesList().hashCode();
      }
      if (getDisabledTagsCount() > 0) {
        hash = (37 * hash) + DISABLED_TAGS_FIELD_NUMBER;
        hash = (53 * hash) + getDisabledTagsList().hashCode();
      }
      if (getEnabledTagsCount() > 0) {
        hash = (37 * hash) + ENABLED_TAGS_FIELD_NUMBER;
        hash = (53 * hash) + getEnabledTagsList().hashCode();
      }
      if (hasDisableIncrementalTimestamps()) {
        hash = (37 * hash) + DISABLE_INCREMENTAL_TIMESTAMPS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getDisableIncrementalTimestamps());
      }
      if (hasTimestampUnitMultiplier()) {
        hash = (37 * hash) + TIMESTAMP_UNIT_MULTIPLIER_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getTimestampUnitMultiplier());
      }
      if (hasFilterDebugAnnotations()) {
        hash = (37 * hash) + FILTER_DEBUG_ANNOTATIONS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getFilterDebugAnnotations());
      }
      if (hasEnableThreadTimeSampling()) {
        hash = (37 * hash) + ENABLE_THREAD_TIME_SAMPLING_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getEnableThreadTimeSampling());
      }
      if (hasFilterDynamicEventNames()) {
        hash = (37 * hash) + FILTER_DYNAMIC_EVENT_NAMES_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getFilterDynamicEventNames());
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static perfetto.protos.TrackEventConfigOuterClass.TrackEventConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.TrackEventConfigOuterClass.TrackEventConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.TrackEventConfigOuterClass.TrackEventConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.TrackEventConfigOuterClass.TrackEventConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.TrackEventConfigOuterClass.TrackEventConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.TrackEventConfigOuterClass.TrackEventConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.TrackEventConfigOuterClass.TrackEventConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.TrackEventConfigOuterClass.TrackEventConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.TrackEventConfigOuterClass.TrackEventConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static perfetto.protos.TrackEventConfigOuterClass.TrackEventConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.TrackEventConfigOuterClass.TrackEventConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.TrackEventConfigOuterClass.TrackEventConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(perfetto.protos.TrackEventConfigOuterClass.TrackEventConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The following fields define the set of enabled trace categories. Each list
     * item is a glob.
     * To determine if category is enabled, it is checked against the filters in
     * the following order:
     *   1. Exact matches in enabled categories.
     *   2. Exact matches in enabled tags.
     *   3. Exact matches in disabled categories.
     *   4. Exact matches in disabled tags.
     *   5. Pattern matches in enabled categories.
     *   6. Pattern matches in enabled tags.
     *   7. Pattern matches in disabled categories.
     *   8. Pattern matches in disabled tags.
     * If none of the steps produced a match, the category is enabled by default.
     * Examples:
     *  - To enable all non-slow/debug categories:
     *       No configuration needed, happens by default.
     *  - To enable a specific category:
     *       disabled_categories = ["*"]
     *       enabled_categories = ["my_category"]
     *  - To enable only categories with a specific tag:
     *       disabled_tags = ["*"]
     *       enabled_tags = ["my_tag"]
     * </pre>
     *
     * Protobuf type {@code perfetto.protos.TrackEventConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:perfetto.protos.TrackEventConfig)
        perfetto.protos.TrackEventConfigOuterClass.TrackEventConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.TrackEventConfigOuterClass.internal_static_perfetto_protos_TrackEventConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.TrackEventConfigOuterClass.internal_static_perfetto_protos_TrackEventConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.TrackEventConfigOuterClass.TrackEventConfig.class, perfetto.protos.TrackEventConfigOuterClass.TrackEventConfig.Builder.class);
      }

      // Construct using perfetto.protos.TrackEventConfigOuterClass.TrackEventConfig.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        disabledCategories_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        enabledCategories_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        disabledTags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        enabledTags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        disableIncrementalTimestamps_ = false;
        timestampUnitMultiplier_ = 0L;
        filterDebugAnnotations_ = false;
        enableThreadTimeSampling_ = false;
        filterDynamicEventNames_ = false;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return perfetto.protos.TrackEventConfigOuterClass.internal_static_perfetto_protos_TrackEventConfig_descriptor;
      }

      @java.lang.Override
      public perfetto.protos.TrackEventConfigOuterClass.TrackEventConfig getDefaultInstanceForType() {
        return perfetto.protos.TrackEventConfigOuterClass.TrackEventConfig.getDefaultInstance();
      }

      @java.lang.Override
      public perfetto.protos.TrackEventConfigOuterClass.TrackEventConfig build() {
        perfetto.protos.TrackEventConfigOuterClass.TrackEventConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public perfetto.protos.TrackEventConfigOuterClass.TrackEventConfig buildPartial() {
        perfetto.protos.TrackEventConfigOuterClass.TrackEventConfig result = new perfetto.protos.TrackEventConfigOuterClass.TrackEventConfig(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(perfetto.protos.TrackEventConfigOuterClass.TrackEventConfig result) {
        if (((bitField0_ & 0x00000001) != 0)) {
          disabledCategories_ = disabledCategories_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.disabledCategories_ = disabledCategories_;
        if (((bitField0_ & 0x00000002) != 0)) {
          enabledCategories_ = enabledCategories_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.enabledCategories_ = enabledCategories_;
        if (((bitField0_ & 0x00000004) != 0)) {
          disabledTags_ = disabledTags_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.disabledTags_ = disabledTags_;
        if (((bitField0_ & 0x00000008) != 0)) {
          enabledTags_ = enabledTags_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.enabledTags_ = enabledTags_;
      }

      private void buildPartial0(perfetto.protos.TrackEventConfigOuterClass.TrackEventConfig result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.disableIncrementalTimestamps_ = disableIncrementalTimestamps_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.timestampUnitMultiplier_ = timestampUnitMultiplier_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.filterDebugAnnotations_ = filterDebugAnnotations_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.enableThreadTimeSampling_ = enableThreadTimeSampling_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.filterDynamicEventNames_ = filterDynamicEventNames_;
          to_bitField0_ |= 0x00000010;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof perfetto.protos.TrackEventConfigOuterClass.TrackEventConfig) {
          return mergeFrom((perfetto.protos.TrackEventConfigOuterClass.TrackEventConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(perfetto.protos.TrackEventConfigOuterClass.TrackEventConfig other) {
        if (other == perfetto.protos.TrackEventConfigOuterClass.TrackEventConfig.getDefaultInstance()) return this;
        if (!other.disabledCategories_.isEmpty()) {
          if (disabledCategories_.isEmpty()) {
            disabledCategories_ = other.disabledCategories_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureDisabledCategoriesIsMutable();
            disabledCategories_.addAll(other.disabledCategories_);
          }
          onChanged();
        }
        if (!other.enabledCategories_.isEmpty()) {
          if (enabledCategories_.isEmpty()) {
            enabledCategories_ = other.enabledCategories_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureEnabledCategoriesIsMutable();
            enabledCategories_.addAll(other.enabledCategories_);
          }
          onChanged();
        }
        if (!other.disabledTags_.isEmpty()) {
          if (disabledTags_.isEmpty()) {
            disabledTags_ = other.disabledTags_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureDisabledTagsIsMutable();
            disabledTags_.addAll(other.disabledTags_);
          }
          onChanged();
        }
        if (!other.enabledTags_.isEmpty()) {
          if (enabledTags_.isEmpty()) {
            enabledTags_ = other.enabledTags_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureEnabledTagsIsMutable();
            enabledTags_.addAll(other.enabledTags_);
          }
          onChanged();
        }
        if (other.hasDisableIncrementalTimestamps()) {
          setDisableIncrementalTimestamps(other.getDisableIncrementalTimestamps());
        }
        if (other.hasTimestampUnitMultiplier()) {
          setTimestampUnitMultiplier(other.getTimestampUnitMultiplier());
        }
        if (other.hasFilterDebugAnnotations()) {
          setFilterDebugAnnotations(other.getFilterDebugAnnotations());
        }
        if (other.hasEnableThreadTimeSampling()) {
          setEnableThreadTimeSampling(other.getEnableThreadTimeSampling());
        }
        if (other.hasFilterDynamicEventNames()) {
          setFilterDynamicEventNames(other.getFilterDynamicEventNames());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.protobuf.ByteString bs = input.readBytes();
                ensureDisabledCategoriesIsMutable();
                disabledCategories_.add(bs);
                break;
              } // case 10
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                ensureEnabledCategoriesIsMutable();
                enabledCategories_.add(bs);
                break;
              } // case 18
              case 26: {
                com.google.protobuf.ByteString bs = input.readBytes();
                ensureDisabledTagsIsMutable();
                disabledTags_.add(bs);
                break;
              } // case 26
              case 34: {
                com.google.protobuf.ByteString bs = input.readBytes();
                ensureEnabledTagsIsMutable();
                enabledTags_.add(bs);
                break;
              } // case 34
              case 40: {
                disableIncrementalTimestamps_ = input.readBool();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                timestampUnitMultiplier_ = input.readUInt64();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 56: {
                filterDebugAnnotations_ = input.readBool();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
              case 64: {
                enableThreadTimeSampling_ = input.readBool();
                bitField0_ |= 0x00000080;
                break;
              } // case 64
              case 72: {
                filterDynamicEventNames_ = input.readBool();
                bitField0_ |= 0x00000100;
                break;
              } // case 72
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.LazyStringList disabledCategories_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureDisabledCategoriesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          disabledCategories_ = new com.google.protobuf.LazyStringArrayList(disabledCategories_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <pre>
       * Default: []
       * </pre>
       *
       * <code>repeated string disabled_categories = 1;</code>
       * @return A list containing the disabledCategories.
       */
      public com.google.protobuf.ProtocolStringList
          getDisabledCategoriesList() {
        return disabledCategories_.getUnmodifiableView();
      }
      /**
       * <pre>
       * Default: []
       * </pre>
       *
       * <code>repeated string disabled_categories = 1;</code>
       * @return The count of disabledCategories.
       */
      public int getDisabledCategoriesCount() {
        return disabledCategories_.size();
      }
      /**
       * <pre>
       * Default: []
       * </pre>
       *
       * <code>repeated string disabled_categories = 1;</code>
       * @param index The index of the element to return.
       * @return The disabledCategories at the given index.
       */
      public java.lang.String getDisabledCategories(int index) {
        return disabledCategories_.get(index);
      }
      /**
       * <pre>
       * Default: []
       * </pre>
       *
       * <code>repeated string disabled_categories = 1;</code>
       * @param index The index of the value to return.
       * @return The bytes of the disabledCategories at the given index.
       */
      public com.google.protobuf.ByteString
          getDisabledCategoriesBytes(int index) {
        return disabledCategories_.getByteString(index);
      }
      /**
       * <pre>
       * Default: []
       * </pre>
       *
       * <code>repeated string disabled_categories = 1;</code>
       * @param index The index to set the value at.
       * @param value The disabledCategories to set.
       * @return This builder for chaining.
       */
      public Builder setDisabledCategories(
          int index, java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureDisabledCategoriesIsMutable();
        disabledCategories_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Default: []
       * </pre>
       *
       * <code>repeated string disabled_categories = 1;</code>
       * @param value The disabledCategories to add.
       * @return This builder for chaining.
       */
      public Builder addDisabledCategories(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureDisabledCategoriesIsMutable();
        disabledCategories_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Default: []
       * </pre>
       *
       * <code>repeated string disabled_categories = 1;</code>
       * @param values The disabledCategories to add.
       * @return This builder for chaining.
       */
      public Builder addAllDisabledCategories(
          java.lang.Iterable<java.lang.String> values) {
        ensureDisabledCategoriesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, disabledCategories_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Default: []
       * </pre>
       *
       * <code>repeated string disabled_categories = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDisabledCategories() {
        disabledCategories_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Default: []
       * </pre>
       *
       * <code>repeated string disabled_categories = 1;</code>
       * @param value The bytes of the disabledCategories to add.
       * @return This builder for chaining.
       */
      public Builder addDisabledCategoriesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        ensureDisabledCategoriesIsMutable();
        disabledCategories_.add(value);
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList enabledCategories_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureEnabledCategoriesIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          enabledCategories_ = new com.google.protobuf.LazyStringArrayList(enabledCategories_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       * Default: []
       * </pre>
       *
       * <code>repeated string enabled_categories = 2;</code>
       * @return A list containing the enabledCategories.
       */
      public com.google.protobuf.ProtocolStringList
          getEnabledCategoriesList() {
        return enabledCategories_.getUnmodifiableView();
      }
      /**
       * <pre>
       * Default: []
       * </pre>
       *
       * <code>repeated string enabled_categories = 2;</code>
       * @return The count of enabledCategories.
       */
      public int getEnabledCategoriesCount() {
        return enabledCategories_.size();
      }
      /**
       * <pre>
       * Default: []
       * </pre>
       *
       * <code>repeated string enabled_categories = 2;</code>
       * @param index The index of the element to return.
       * @return The enabledCategories at the given index.
       */
      public java.lang.String getEnabledCategories(int index) {
        return enabledCategories_.get(index);
      }
      /**
       * <pre>
       * Default: []
       * </pre>
       *
       * <code>repeated string enabled_categories = 2;</code>
       * @param index The index of the value to return.
       * @return The bytes of the enabledCategories at the given index.
       */
      public com.google.protobuf.ByteString
          getEnabledCategoriesBytes(int index) {
        return enabledCategories_.getByteString(index);
      }
      /**
       * <pre>
       * Default: []
       * </pre>
       *
       * <code>repeated string enabled_categories = 2;</code>
       * @param index The index to set the value at.
       * @param value The enabledCategories to set.
       * @return This builder for chaining.
       */
      public Builder setEnabledCategories(
          int index, java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureEnabledCategoriesIsMutable();
        enabledCategories_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Default: []
       * </pre>
       *
       * <code>repeated string enabled_categories = 2;</code>
       * @param value The enabledCategories to add.
       * @return This builder for chaining.
       */
      public Builder addEnabledCategories(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureEnabledCategoriesIsMutable();
        enabledCategories_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Default: []
       * </pre>
       *
       * <code>repeated string enabled_categories = 2;</code>
       * @param values The enabledCategories to add.
       * @return This builder for chaining.
       */
      public Builder addAllEnabledCategories(
          java.lang.Iterable<java.lang.String> values) {
        ensureEnabledCategoriesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, enabledCategories_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Default: []
       * </pre>
       *
       * <code>repeated string enabled_categories = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearEnabledCategories() {
        enabledCategories_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Default: []
       * </pre>
       *
       * <code>repeated string enabled_categories = 2;</code>
       * @param value The bytes of the enabledCategories to add.
       * @return This builder for chaining.
       */
      public Builder addEnabledCategoriesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        ensureEnabledCategoriesIsMutable();
        enabledCategories_.add(value);
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList disabledTags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureDisabledTagsIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          disabledTags_ = new com.google.protobuf.LazyStringArrayList(disabledTags_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <pre>
       * Default: ["slow", "debug"]
       * </pre>
       *
       * <code>repeated string disabled_tags = 3;</code>
       * @return A list containing the disabledTags.
       */
      public com.google.protobuf.ProtocolStringList
          getDisabledTagsList() {
        return disabledTags_.getUnmodifiableView();
      }
      /**
       * <pre>
       * Default: ["slow", "debug"]
       * </pre>
       *
       * <code>repeated string disabled_tags = 3;</code>
       * @return The count of disabledTags.
       */
      public int getDisabledTagsCount() {
        return disabledTags_.size();
      }
      /**
       * <pre>
       * Default: ["slow", "debug"]
       * </pre>
       *
       * <code>repeated string disabled_tags = 3;</code>
       * @param index The index of the element to return.
       * @return The disabledTags at the given index.
       */
      public java.lang.String getDisabledTags(int index) {
        return disabledTags_.get(index);
      }
      /**
       * <pre>
       * Default: ["slow", "debug"]
       * </pre>
       *
       * <code>repeated string disabled_tags = 3;</code>
       * @param index The index of the value to return.
       * @return The bytes of the disabledTags at the given index.
       */
      public com.google.protobuf.ByteString
          getDisabledTagsBytes(int index) {
        return disabledTags_.getByteString(index);
      }
      /**
       * <pre>
       * Default: ["slow", "debug"]
       * </pre>
       *
       * <code>repeated string disabled_tags = 3;</code>
       * @param index The index to set the value at.
       * @param value The disabledTags to set.
       * @return This builder for chaining.
       */
      public Builder setDisabledTags(
          int index, java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureDisabledTagsIsMutable();
        disabledTags_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Default: ["slow", "debug"]
       * </pre>
       *
       * <code>repeated string disabled_tags = 3;</code>
       * @param value The disabledTags to add.
       * @return This builder for chaining.
       */
      public Builder addDisabledTags(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureDisabledTagsIsMutable();
        disabledTags_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Default: ["slow", "debug"]
       * </pre>
       *
       * <code>repeated string disabled_tags = 3;</code>
       * @param values The disabledTags to add.
       * @return This builder for chaining.
       */
      public Builder addAllDisabledTags(
          java.lang.Iterable<java.lang.String> values) {
        ensureDisabledTagsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, disabledTags_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Default: ["slow", "debug"]
       * </pre>
       *
       * <code>repeated string disabled_tags = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearDisabledTags() {
        disabledTags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Default: ["slow", "debug"]
       * </pre>
       *
       * <code>repeated string disabled_tags = 3;</code>
       * @param value The bytes of the disabledTags to add.
       * @return This builder for chaining.
       */
      public Builder addDisabledTagsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        ensureDisabledTagsIsMutable();
        disabledTags_.add(value);
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList enabledTags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureEnabledTagsIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          enabledTags_ = new com.google.protobuf.LazyStringArrayList(enabledTags_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <pre>
       * Default: []
       * </pre>
       *
       * <code>repeated string enabled_tags = 4;</code>
       * @return A list containing the enabledTags.
       */
      public com.google.protobuf.ProtocolStringList
          getEnabledTagsList() {
        return enabledTags_.getUnmodifiableView();
      }
      /**
       * <pre>
       * Default: []
       * </pre>
       *
       * <code>repeated string enabled_tags = 4;</code>
       * @return The count of enabledTags.
       */
      public int getEnabledTagsCount() {
        return enabledTags_.size();
      }
      /**
       * <pre>
       * Default: []
       * </pre>
       *
       * <code>repeated string enabled_tags = 4;</code>
       * @param index The index of the element to return.
       * @return The enabledTags at the given index.
       */
      public java.lang.String getEnabledTags(int index) {
        return enabledTags_.get(index);
      }
      /**
       * <pre>
       * Default: []
       * </pre>
       *
       * <code>repeated string enabled_tags = 4;</code>
       * @param index The index of the value to return.
       * @return The bytes of the enabledTags at the given index.
       */
      public com.google.protobuf.ByteString
          getEnabledTagsBytes(int index) {
        return enabledTags_.getByteString(index);
      }
      /**
       * <pre>
       * Default: []
       * </pre>
       *
       * <code>repeated string enabled_tags = 4;</code>
       * @param index The index to set the value at.
       * @param value The enabledTags to set.
       * @return This builder for chaining.
       */
      public Builder setEnabledTags(
          int index, java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureEnabledTagsIsMutable();
        enabledTags_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Default: []
       * </pre>
       *
       * <code>repeated string enabled_tags = 4;</code>
       * @param value The enabledTags to add.
       * @return This builder for chaining.
       */
      public Builder addEnabledTags(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureEnabledTagsIsMutable();
        enabledTags_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Default: []
       * </pre>
       *
       * <code>repeated string enabled_tags = 4;</code>
       * @param values The enabledTags to add.
       * @return This builder for chaining.
       */
      public Builder addAllEnabledTags(
          java.lang.Iterable<java.lang.String> values) {
        ensureEnabledTagsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, enabledTags_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Default: []
       * </pre>
       *
       * <code>repeated string enabled_tags = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearEnabledTags() {
        enabledTags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Default: []
       * </pre>
       *
       * <code>repeated string enabled_tags = 4;</code>
       * @param value The bytes of the enabledTags to add.
       * @return This builder for chaining.
       */
      public Builder addEnabledTagsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        ensureEnabledTagsIsMutable();
        enabledTags_.add(value);
        onChanged();
        return this;
      }

      private boolean disableIncrementalTimestamps_ ;
      /**
       * <pre>
       * Default: false (i.e. enabled by default)
       * </pre>
       *
       * <code>optional bool disable_incremental_timestamps = 5;</code>
       * @return Whether the disableIncrementalTimestamps field is set.
       */
      @java.lang.Override
      public boolean hasDisableIncrementalTimestamps() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * Default: false (i.e. enabled by default)
       * </pre>
       *
       * <code>optional bool disable_incremental_timestamps = 5;</code>
       * @return The disableIncrementalTimestamps.
       */
      @java.lang.Override
      public boolean getDisableIncrementalTimestamps() {
        return disableIncrementalTimestamps_;
      }
      /**
       * <pre>
       * Default: false (i.e. enabled by default)
       * </pre>
       *
       * <code>optional bool disable_incremental_timestamps = 5;</code>
       * @param value The disableIncrementalTimestamps to set.
       * @return This builder for chaining.
       */
      public Builder setDisableIncrementalTimestamps(boolean value) {
        
        disableIncrementalTimestamps_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Default: false (i.e. enabled by default)
       * </pre>
       *
       * <code>optional bool disable_incremental_timestamps = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearDisableIncrementalTimestamps() {
        bitField0_ = (bitField0_ & ~0x00000010);
        disableIncrementalTimestamps_ = false;
        onChanged();
        return this;
      }

      private long timestampUnitMultiplier_ ;
      /**
       * <pre>
       * Allows to specify a custom unit different than the default (ns).
       * Also affects thread timestamps if enable_thread_time_sampling = true.
       * A multiplier of 1000 means that a timestamp = 3 should be interpreted as
       * 3000 ns = 3 us.
       * Default: 1 (if unset, it should be read as 1).
       * </pre>
       *
       * <code>optional uint64 timestamp_unit_multiplier = 6;</code>
       * @return Whether the timestampUnitMultiplier field is set.
       */
      @java.lang.Override
      public boolean hasTimestampUnitMultiplier() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * Allows to specify a custom unit different than the default (ns).
       * Also affects thread timestamps if enable_thread_time_sampling = true.
       * A multiplier of 1000 means that a timestamp = 3 should be interpreted as
       * 3000 ns = 3 us.
       * Default: 1 (if unset, it should be read as 1).
       * </pre>
       *
       * <code>optional uint64 timestamp_unit_multiplier = 6;</code>
       * @return The timestampUnitMultiplier.
       */
      @java.lang.Override
      public long getTimestampUnitMultiplier() {
        return timestampUnitMultiplier_;
      }
      /**
       * <pre>
       * Allows to specify a custom unit different than the default (ns).
       * Also affects thread timestamps if enable_thread_time_sampling = true.
       * A multiplier of 1000 means that a timestamp = 3 should be interpreted as
       * 3000 ns = 3 us.
       * Default: 1 (if unset, it should be read as 1).
       * </pre>
       *
       * <code>optional uint64 timestamp_unit_multiplier = 6;</code>
       * @param value The timestampUnitMultiplier to set.
       * @return This builder for chaining.
       */
      public Builder setTimestampUnitMultiplier(long value) {
        
        timestampUnitMultiplier_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Allows to specify a custom unit different than the default (ns).
       * Also affects thread timestamps if enable_thread_time_sampling = true.
       * A multiplier of 1000 means that a timestamp = 3 should be interpreted as
       * 3000 ns = 3 us.
       * Default: 1 (if unset, it should be read as 1).
       * </pre>
       *
       * <code>optional uint64 timestamp_unit_multiplier = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimestampUnitMultiplier() {
        bitField0_ = (bitField0_ & ~0x00000020);
        timestampUnitMultiplier_ = 0L;
        onChanged();
        return this;
      }

      private boolean filterDebugAnnotations_ ;
      /**
       * <pre>
       * Default: false (i.e. debug_annotations is NOT filtered out by default)
       * When true, any debug annotations provided as arguments to the
       * TRACE_EVENT macros are not written into the trace. Typed arguments will
       * still be emitted even if set to true.
       * </pre>
       *
       * <code>optional bool filter_debug_annotations = 7;</code>
       * @return Whether the filterDebugAnnotations field is set.
       */
      @java.lang.Override
      public boolean hasFilterDebugAnnotations() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       * Default: false (i.e. debug_annotations is NOT filtered out by default)
       * When true, any debug annotations provided as arguments to the
       * TRACE_EVENT macros are not written into the trace. Typed arguments will
       * still be emitted even if set to true.
       * </pre>
       *
       * <code>optional bool filter_debug_annotations = 7;</code>
       * @return The filterDebugAnnotations.
       */
      @java.lang.Override
      public boolean getFilterDebugAnnotations() {
        return filterDebugAnnotations_;
      }
      /**
       * <pre>
       * Default: false (i.e. debug_annotations is NOT filtered out by default)
       * When true, any debug annotations provided as arguments to the
       * TRACE_EVENT macros are not written into the trace. Typed arguments will
       * still be emitted even if set to true.
       * </pre>
       *
       * <code>optional bool filter_debug_annotations = 7;</code>
       * @param value The filterDebugAnnotations to set.
       * @return This builder for chaining.
       */
      public Builder setFilterDebugAnnotations(boolean value) {
        
        filterDebugAnnotations_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Default: false (i.e. debug_annotations is NOT filtered out by default)
       * When true, any debug annotations provided as arguments to the
       * TRACE_EVENT macros are not written into the trace. Typed arguments will
       * still be emitted even if set to true.
       * </pre>
       *
       * <code>optional bool filter_debug_annotations = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearFilterDebugAnnotations() {
        bitField0_ = (bitField0_ & ~0x00000040);
        filterDebugAnnotations_ = false;
        onChanged();
        return this;
      }

      private boolean enableThreadTimeSampling_ ;
      /**
       * <pre>
       * Default : false (i.e. disabled)
       * When true, the SDK samples and emits the current thread time counter value
       * for each event on the current thread's track. This value represents the
       * total CPU time consumed by that thread since its creation. Note that if a
       * thread is not scheduled by OS for some duration, that time won't be
       * included in thread_time.
       * Learn more : "CLOCK_THREAD_CPUTIME_ID" flag at
       * https://linux.die.net/man/3/clock_gettime
       * </pre>
       *
       * <code>optional bool enable_thread_time_sampling = 8;</code>
       * @return Whether the enableThreadTimeSampling field is set.
       */
      @java.lang.Override
      public boolean hasEnableThreadTimeSampling() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <pre>
       * Default : false (i.e. disabled)
       * When true, the SDK samples and emits the current thread time counter value
       * for each event on the current thread's track. This value represents the
       * total CPU time consumed by that thread since its creation. Note that if a
       * thread is not scheduled by OS for some duration, that time won't be
       * included in thread_time.
       * Learn more : "CLOCK_THREAD_CPUTIME_ID" flag at
       * https://linux.die.net/man/3/clock_gettime
       * </pre>
       *
       * <code>optional bool enable_thread_time_sampling = 8;</code>
       * @return The enableThreadTimeSampling.
       */
      @java.lang.Override
      public boolean getEnableThreadTimeSampling() {
        return enableThreadTimeSampling_;
      }
      /**
       * <pre>
       * Default : false (i.e. disabled)
       * When true, the SDK samples and emits the current thread time counter value
       * for each event on the current thread's track. This value represents the
       * total CPU time consumed by that thread since its creation. Note that if a
       * thread is not scheduled by OS for some duration, that time won't be
       * included in thread_time.
       * Learn more : "CLOCK_THREAD_CPUTIME_ID" flag at
       * https://linux.die.net/man/3/clock_gettime
       * </pre>
       *
       * <code>optional bool enable_thread_time_sampling = 8;</code>
       * @param value The enableThreadTimeSampling to set.
       * @return This builder for chaining.
       */
      public Builder setEnableThreadTimeSampling(boolean value) {
        
        enableThreadTimeSampling_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Default : false (i.e. disabled)
       * When true, the SDK samples and emits the current thread time counter value
       * for each event on the current thread's track. This value represents the
       * total CPU time consumed by that thread since its creation. Note that if a
       * thread is not scheduled by OS for some duration, that time won't be
       * included in thread_time.
       * Learn more : "CLOCK_THREAD_CPUTIME_ID" flag at
       * https://linux.die.net/man/3/clock_gettime
       * </pre>
       *
       * <code>optional bool enable_thread_time_sampling = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearEnableThreadTimeSampling() {
        bitField0_ = (bitField0_ & ~0x00000080);
        enableThreadTimeSampling_ = false;
        onChanged();
        return this;
      }

      private boolean filterDynamicEventNames_ ;
      /**
       * <pre>
       * Default: false (i.e. dynamic event names are NOT filtered out by default)
       * When true, event_names wrapped in perfetto::DynamicString will be filtered
       * out.
       * </pre>
       *
       * <code>optional bool filter_dynamic_event_names = 9;</code>
       * @return Whether the filterDynamicEventNames field is set.
       */
      @java.lang.Override
      public boolean hasFilterDynamicEventNames() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <pre>
       * Default: false (i.e. dynamic event names are NOT filtered out by default)
       * When true, event_names wrapped in perfetto::DynamicString will be filtered
       * out.
       * </pre>
       *
       * <code>optional bool filter_dynamic_event_names = 9;</code>
       * @return The filterDynamicEventNames.
       */
      @java.lang.Override
      public boolean getFilterDynamicEventNames() {
        return filterDynamicEventNames_;
      }
      /**
       * <pre>
       * Default: false (i.e. dynamic event names are NOT filtered out by default)
       * When true, event_names wrapped in perfetto::DynamicString will be filtered
       * out.
       * </pre>
       *
       * <code>optional bool filter_dynamic_event_names = 9;</code>
       * @param value The filterDynamicEventNames to set.
       * @return This builder for chaining.
       */
      public Builder setFilterDynamicEventNames(boolean value) {
        
        filterDynamicEventNames_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Default: false (i.e. dynamic event names are NOT filtered out by default)
       * When true, event_names wrapped in perfetto::DynamicString will be filtered
       * out.
       * </pre>
       *
       * <code>optional bool filter_dynamic_event_names = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearFilterDynamicEventNames() {
        bitField0_ = (bitField0_ & ~0x00000100);
        filterDynamicEventNames_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:perfetto.protos.TrackEventConfig)
    }

    // @@protoc_insertion_point(class_scope:perfetto.protos.TrackEventConfig)
    private static final perfetto.protos.TrackEventConfigOuterClass.TrackEventConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new perfetto.protos.TrackEventConfigOuterClass.TrackEventConfig();
    }

    public static perfetto.protos.TrackEventConfigOuterClass.TrackEventConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<TrackEventConfig>
        PARSER = new com.google.protobuf.AbstractParser<TrackEventConfig>() {
      @java.lang.Override
      public TrackEventConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<TrackEventConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TrackEventConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public perfetto.protos.TrackEventConfigOuterClass.TrackEventConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_TrackEventConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_perfetto_protos_TrackEventConfig_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n;protos/perfetto/config/track_event/tra" +
      "ck_event_config.proto\022\017perfetto.protos\"\256" +
      "\002\n\020TrackEventConfig\022\033\n\023disabled_categori" +
      "es\030\001 \003(\t\022\032\n\022enabled_categories\030\002 \003(\t\022\025\n\r" +
      "disabled_tags\030\003 \003(\t\022\024\n\014enabled_tags\030\004 \003(" +
      "\t\022&\n\036disable_incremental_timestamps\030\005 \001(" +
      "\010\022!\n\031timestamp_unit_multiplier\030\006 \001(\004\022 \n\030" +
      "filter_debug_annotations\030\007 \001(\010\022#\n\033enable" +
      "_thread_time_sampling\030\010 \001(\010\022\"\n\032filter_dy" +
      "namic_event_names\030\t \001(\010"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_perfetto_protos_TrackEventConfig_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_perfetto_protos_TrackEventConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_perfetto_protos_TrackEventConfig_descriptor,
        new java.lang.String[] { "DisabledCategories", "EnabledCategories", "DisabledTags", "EnabledTags", "DisableIncrementalTimestamps", "TimestampUnitMultiplier", "FilterDebugAnnotations", "EnableThreadTimeSampling", "FilterDynamicEventNames", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
