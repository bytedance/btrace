// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/perfetto/trace/android/frame_timeline_event.proto

package perfetto.protos;

public final class FrameTimelineEventOuterClass {
  private FrameTimelineEventOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface FrameTimelineEventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:perfetto.protos.FrameTimelineEvent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.perfetto.protos.FrameTimelineEvent.ExpectedDisplayFrameStart expected_display_frame_start = 1;</code>
     * @return Whether the expectedDisplayFrameStart field is set.
     */
    boolean hasExpectedDisplayFrameStart();
    /**
     * <code>.perfetto.protos.FrameTimelineEvent.ExpectedDisplayFrameStart expected_display_frame_start = 1;</code>
     * @return The expectedDisplayFrameStart.
     */
    perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart getExpectedDisplayFrameStart();
    /**
     * <code>.perfetto.protos.FrameTimelineEvent.ExpectedDisplayFrameStart expected_display_frame_start = 1;</code>
     */
    perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStartOrBuilder getExpectedDisplayFrameStartOrBuilder();

    /**
     * <code>.perfetto.protos.FrameTimelineEvent.ActualDisplayFrameStart actual_display_frame_start = 2;</code>
     * @return Whether the actualDisplayFrameStart field is set.
     */
    boolean hasActualDisplayFrameStart();
    /**
     * <code>.perfetto.protos.FrameTimelineEvent.ActualDisplayFrameStart actual_display_frame_start = 2;</code>
     * @return The actualDisplayFrameStart.
     */
    perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart getActualDisplayFrameStart();
    /**
     * <code>.perfetto.protos.FrameTimelineEvent.ActualDisplayFrameStart actual_display_frame_start = 2;</code>
     */
    perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStartOrBuilder getActualDisplayFrameStartOrBuilder();

    /**
     * <code>.perfetto.protos.FrameTimelineEvent.ExpectedSurfaceFrameStart expected_surface_frame_start = 3;</code>
     * @return Whether the expectedSurfaceFrameStart field is set.
     */
    boolean hasExpectedSurfaceFrameStart();
    /**
     * <code>.perfetto.protos.FrameTimelineEvent.ExpectedSurfaceFrameStart expected_surface_frame_start = 3;</code>
     * @return The expectedSurfaceFrameStart.
     */
    perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart getExpectedSurfaceFrameStart();
    /**
     * <code>.perfetto.protos.FrameTimelineEvent.ExpectedSurfaceFrameStart expected_surface_frame_start = 3;</code>
     */
    perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStartOrBuilder getExpectedSurfaceFrameStartOrBuilder();

    /**
     * <code>.perfetto.protos.FrameTimelineEvent.ActualSurfaceFrameStart actual_surface_frame_start = 4;</code>
     * @return Whether the actualSurfaceFrameStart field is set.
     */
    boolean hasActualSurfaceFrameStart();
    /**
     * <code>.perfetto.protos.FrameTimelineEvent.ActualSurfaceFrameStart actual_surface_frame_start = 4;</code>
     * @return The actualSurfaceFrameStart.
     */
    perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart getActualSurfaceFrameStart();
    /**
     * <code>.perfetto.protos.FrameTimelineEvent.ActualSurfaceFrameStart actual_surface_frame_start = 4;</code>
     */
    perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStartOrBuilder getActualSurfaceFrameStartOrBuilder();

    /**
     * <code>.perfetto.protos.FrameTimelineEvent.FrameEnd frame_end = 5;</code>
     * @return Whether the frameEnd field is set.
     */
    boolean hasFrameEnd();
    /**
     * <code>.perfetto.protos.FrameTimelineEvent.FrameEnd frame_end = 5;</code>
     * @return The frameEnd.
     */
    perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd getFrameEnd();
    /**
     * <code>.perfetto.protos.FrameTimelineEvent.FrameEnd frame_end = 5;</code>
     */
    perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEndOrBuilder getFrameEndOrBuilder();

    public perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.EventCase getEventCase();
  }
  /**
   * <pre>
   * Generated by SurfaceFlinger's FrameTimeline (go/adaptive-scheduling-fr).
   * Used in comparing the expected timeline of a frame to the actual timeline.
   * Key terms:
   *    1) DisplayFrame - represents SurfaceFlinger's work on a frame(composited)
   *    2) SurfaceFrame - represents App's work on its frame
   *    3) Timeline = start to end of a component's(app/SF) work on a frame.
   * SurfaceFlinger composites frames from many apps together, so
   *    One DisplayFrame can map to N SurfaceFrame(s)
   * This relationship can be reconstructed by using
   *    DisplayFrame.token = SurfaceFrame.display_frame_token
   * </pre>
   *
   * Protobuf type {@code perfetto.protos.FrameTimelineEvent}
   */
  public static final class FrameTimelineEvent extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:perfetto.protos.FrameTimelineEvent)
      FrameTimelineEventOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FrameTimelineEvent.newBuilder() to construct.
    private FrameTimelineEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FrameTimelineEvent() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new FrameTimelineEvent();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return perfetto.protos.FrameTimelineEventOuterClass.internal_static_perfetto_protos_FrameTimelineEvent_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return perfetto.protos.FrameTimelineEventOuterClass.internal_static_perfetto_protos_FrameTimelineEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.class, perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.Builder.class);
    }

    /**
     * <pre>
     * Specifies the reason(s) most likely to have caused the jank.
     * Used as a bitmask.
     * </pre>
     *
     * Protobuf enum {@code perfetto.protos.FrameTimelineEvent.JankType}
     */
    public enum JankType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>JANK_UNSPECIFIED = 0;</code>
       */
      JANK_UNSPECIFIED(0),
      /**
       * <code>JANK_NONE = 1;</code>
       */
      JANK_NONE(1),
      /**
       * <code>JANK_SF_SCHEDULING = 2;</code>
       */
      JANK_SF_SCHEDULING(2),
      /**
       * <code>JANK_PREDICTION_ERROR = 4;</code>
       */
      JANK_PREDICTION_ERROR(4),
      /**
       * <code>JANK_DISPLAY_HAL = 8;</code>
       */
      JANK_DISPLAY_HAL(8),
      /**
       * <code>JANK_SF_CPU_DEADLINE_MISSED = 16;</code>
       */
      JANK_SF_CPU_DEADLINE_MISSED(16),
      /**
       * <code>JANK_SF_GPU_DEADLINE_MISSED = 32;</code>
       */
      JANK_SF_GPU_DEADLINE_MISSED(32),
      /**
       * <code>JANK_APP_DEADLINE_MISSED = 64;</code>
       */
      JANK_APP_DEADLINE_MISSED(64),
      /**
       * <code>JANK_BUFFER_STUFFING = 128;</code>
       */
      JANK_BUFFER_STUFFING(128),
      /**
       * <code>JANK_UNKNOWN = 256;</code>
       */
      JANK_UNKNOWN(256),
      /**
       * <code>JANK_SF_STUFFING = 512;</code>
       */
      JANK_SF_STUFFING(512),
      ;

      /**
       * <code>JANK_UNSPECIFIED = 0;</code>
       */
      public static final int JANK_UNSPECIFIED_VALUE = 0;
      /**
       * <code>JANK_NONE = 1;</code>
       */
      public static final int JANK_NONE_VALUE = 1;
      /**
       * <code>JANK_SF_SCHEDULING = 2;</code>
       */
      public static final int JANK_SF_SCHEDULING_VALUE = 2;
      /**
       * <code>JANK_PREDICTION_ERROR = 4;</code>
       */
      public static final int JANK_PREDICTION_ERROR_VALUE = 4;
      /**
       * <code>JANK_DISPLAY_HAL = 8;</code>
       */
      public static final int JANK_DISPLAY_HAL_VALUE = 8;
      /**
       * <code>JANK_SF_CPU_DEADLINE_MISSED = 16;</code>
       */
      public static final int JANK_SF_CPU_DEADLINE_MISSED_VALUE = 16;
      /**
       * <code>JANK_SF_GPU_DEADLINE_MISSED = 32;</code>
       */
      public static final int JANK_SF_GPU_DEADLINE_MISSED_VALUE = 32;
      /**
       * <code>JANK_APP_DEADLINE_MISSED = 64;</code>
       */
      public static final int JANK_APP_DEADLINE_MISSED_VALUE = 64;
      /**
       * <code>JANK_BUFFER_STUFFING = 128;</code>
       */
      public static final int JANK_BUFFER_STUFFING_VALUE = 128;
      /**
       * <code>JANK_UNKNOWN = 256;</code>
       */
      public static final int JANK_UNKNOWN_VALUE = 256;
      /**
       * <code>JANK_SF_STUFFING = 512;</code>
       */
      public static final int JANK_SF_STUFFING_VALUE = 512;


      public final int getNumber() {
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static JankType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static JankType forNumber(int value) {
        switch (value) {
          case 0: return JANK_UNSPECIFIED;
          case 1: return JANK_NONE;
          case 2: return JANK_SF_SCHEDULING;
          case 4: return JANK_PREDICTION_ERROR;
          case 8: return JANK_DISPLAY_HAL;
          case 16: return JANK_SF_CPU_DEADLINE_MISSED;
          case 32: return JANK_SF_GPU_DEADLINE_MISSED;
          case 64: return JANK_APP_DEADLINE_MISSED;
          case 128: return JANK_BUFFER_STUFFING;
          case 256: return JANK_UNKNOWN;
          case 512: return JANK_SF_STUFFING;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<JankType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          JankType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<JankType>() {
              public JankType findValueByNumber(int number) {
                return JankType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.getDescriptor().getEnumTypes().get(0);
      }

      private static final JankType[] VALUES = values();

      public static JankType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private JankType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:perfetto.protos.FrameTimelineEvent.JankType)
    }

    /**
     * <pre>
     * Specifies how a frame was presented on screen w.r.t. timing.
     * Can be different for SurfaceFrame and DisplayFrame.
     * </pre>
     *
     * Protobuf enum {@code perfetto.protos.FrameTimelineEvent.PresentType}
     */
    public enum PresentType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>PRESENT_UNSPECIFIED = 0;</code>
       */
      PRESENT_UNSPECIFIED(0),
      /**
       * <code>PRESENT_ON_TIME = 1;</code>
       */
      PRESENT_ON_TIME(1),
      /**
       * <code>PRESENT_LATE = 2;</code>
       */
      PRESENT_LATE(2),
      /**
       * <code>PRESENT_EARLY = 3;</code>
       */
      PRESENT_EARLY(3),
      /**
       * <code>PRESENT_DROPPED = 4;</code>
       */
      PRESENT_DROPPED(4),
      /**
       * <code>PRESENT_UNKNOWN = 5;</code>
       */
      PRESENT_UNKNOWN(5),
      ;

      /**
       * <code>PRESENT_UNSPECIFIED = 0;</code>
       */
      public static final int PRESENT_UNSPECIFIED_VALUE = 0;
      /**
       * <code>PRESENT_ON_TIME = 1;</code>
       */
      public static final int PRESENT_ON_TIME_VALUE = 1;
      /**
       * <code>PRESENT_LATE = 2;</code>
       */
      public static final int PRESENT_LATE_VALUE = 2;
      /**
       * <code>PRESENT_EARLY = 3;</code>
       */
      public static final int PRESENT_EARLY_VALUE = 3;
      /**
       * <code>PRESENT_DROPPED = 4;</code>
       */
      public static final int PRESENT_DROPPED_VALUE = 4;
      /**
       * <code>PRESENT_UNKNOWN = 5;</code>
       */
      public static final int PRESENT_UNKNOWN_VALUE = 5;


      public final int getNumber() {
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static PresentType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static PresentType forNumber(int value) {
        switch (value) {
          case 0: return PRESENT_UNSPECIFIED;
          case 1: return PRESENT_ON_TIME;
          case 2: return PRESENT_LATE;
          case 3: return PRESENT_EARLY;
          case 4: return PRESENT_DROPPED;
          case 5: return PRESENT_UNKNOWN;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<PresentType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          PresentType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<PresentType>() {
              public PresentType findValueByNumber(int number) {
                return PresentType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.getDescriptor().getEnumTypes().get(1);
      }

      private static final PresentType[] VALUES = values();

      public static PresentType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private PresentType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:perfetto.protos.FrameTimelineEvent.PresentType)
    }

    /**
     * <pre>
     * Specifies if the predictions for the frame are still valid, expired or
     * unknown.
     * </pre>
     *
     * Protobuf enum {@code perfetto.protos.FrameTimelineEvent.PredictionType}
     */
    public enum PredictionType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>PREDICTION_UNSPECIFIED = 0;</code>
       */
      PREDICTION_UNSPECIFIED(0),
      /**
       * <code>PREDICTION_VALID = 1;</code>
       */
      PREDICTION_VALID(1),
      /**
       * <code>PREDICTION_EXPIRED = 2;</code>
       */
      PREDICTION_EXPIRED(2),
      /**
       * <code>PREDICTION_UNKNOWN = 3;</code>
       */
      PREDICTION_UNKNOWN(3),
      ;

      /**
       * <code>PREDICTION_UNSPECIFIED = 0;</code>
       */
      public static final int PREDICTION_UNSPECIFIED_VALUE = 0;
      /**
       * <code>PREDICTION_VALID = 1;</code>
       */
      public static final int PREDICTION_VALID_VALUE = 1;
      /**
       * <code>PREDICTION_EXPIRED = 2;</code>
       */
      public static final int PREDICTION_EXPIRED_VALUE = 2;
      /**
       * <code>PREDICTION_UNKNOWN = 3;</code>
       */
      public static final int PREDICTION_UNKNOWN_VALUE = 3;


      public final int getNumber() {
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static PredictionType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static PredictionType forNumber(int value) {
        switch (value) {
          case 0: return PREDICTION_UNSPECIFIED;
          case 1: return PREDICTION_VALID;
          case 2: return PREDICTION_EXPIRED;
          case 3: return PREDICTION_UNKNOWN;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<PredictionType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          PredictionType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<PredictionType>() {
              public PredictionType findValueByNumber(int number) {
                return PredictionType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.getDescriptor().getEnumTypes().get(2);
      }

      private static final PredictionType[] VALUES = values();

      public static PredictionType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private PredictionType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:perfetto.protos.FrameTimelineEvent.PredictionType)
    }

    public interface ExpectedSurfaceFrameStartOrBuilder extends
        // @@protoc_insertion_point(interface_extends:perfetto.protos.FrameTimelineEvent.ExpectedSurfaceFrameStart)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Cookie used to correlate between the start and end messages of the same
       * frame. Since all values except the ts are same for start and end, cookie
       * helps in preventing redundant data transmission.
       * The same cookie is used only by start and end messages of a single frame
       * and is otherwise unique.
       * </pre>
       *
       * <code>optional int64 cookie = 1;</code>
       * @return Whether the cookie field is set.
       */
      boolean hasCookie();
      /**
       * <pre>
       * Cookie used to correlate between the start and end messages of the same
       * frame. Since all values except the ts are same for start and end, cookie
       * helps in preventing redundant data transmission.
       * The same cookie is used only by start and end messages of a single frame
       * and is otherwise unique.
       * </pre>
       *
       * <code>optional int64 cookie = 1;</code>
       * @return The cookie.
       */
      long getCookie();

      /**
       * <pre>
       * Token received by the app for its work. Can be shared between multiple
       * layers of the same app (example: pip mode).
       * </pre>
       *
       * <code>optional int64 token = 2;</code>
       * @return Whether the token field is set.
       */
      boolean hasToken();
      /**
       * <pre>
       * Token received by the app for its work. Can be shared between multiple
       * layers of the same app (example: pip mode).
       * </pre>
       *
       * <code>optional int64 token = 2;</code>
       * @return The token.
       */
      long getToken();

      /**
       * <pre>
       * The corresponding DisplayFrame token is required to link the App's work
       * with SurfaceFlinger's work. Many SurfaceFrames can be mapped to a single
       * DisplayFrame.
       * this.display_frame_token = DisplayFrame.token
       * </pre>
       *
       * <code>optional int64 display_frame_token = 3;</code>
       * @return Whether the displayFrameToken field is set.
       */
      boolean hasDisplayFrameToken();
      /**
       * <pre>
       * The corresponding DisplayFrame token is required to link the App's work
       * with SurfaceFlinger's work. Many SurfaceFrames can be mapped to a single
       * DisplayFrame.
       * this.display_frame_token = DisplayFrame.token
       * </pre>
       *
       * <code>optional int64 display_frame_token = 3;</code>
       * @return The displayFrameToken.
       */
      long getDisplayFrameToken();

      /**
       * <pre>
       * Pid of the app. Used in creating the timeline tracks (and slices) inside
       * the respective process track group.
       * </pre>
       *
       * <code>optional int32 pid = 4;</code>
       * @return Whether the pid field is set.
       */
      boolean hasPid();
      /**
       * <pre>
       * Pid of the app. Used in creating the timeline tracks (and slices) inside
       * the respective process track group.
       * </pre>
       *
       * <code>optional int32 pid = 4;</code>
       * @return The pid.
       */
      int getPid();

      /**
       * <code>optional string layer_name = 5;</code>
       * @return Whether the layerName field is set.
       */
      boolean hasLayerName();
      /**
       * <code>optional string layer_name = 5;</code>
       * @return The layerName.
       */
      java.lang.String getLayerName();
      /**
       * <code>optional string layer_name = 5;</code>
       * @return The bytes for layerName.
       */
      com.google.protobuf.ByteString
          getLayerNameBytes();
    }
    /**
     * <pre>
     * Indicates the start of expected timeline slice for SurfaceFrames.
     * </pre>
     *
     * Protobuf type {@code perfetto.protos.FrameTimelineEvent.ExpectedSurfaceFrameStart}
     */
    public static final class ExpectedSurfaceFrameStart extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:perfetto.protos.FrameTimelineEvent.ExpectedSurfaceFrameStart)
        ExpectedSurfaceFrameStartOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use ExpectedSurfaceFrameStart.newBuilder() to construct.
      private ExpectedSurfaceFrameStart(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private ExpectedSurfaceFrameStart() {
        layerName_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new ExpectedSurfaceFrameStart();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.FrameTimelineEventOuterClass.internal_static_perfetto_protos_FrameTimelineEvent_ExpectedSurfaceFrameStart_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.FrameTimelineEventOuterClass.internal_static_perfetto_protos_FrameTimelineEvent_ExpectedSurfaceFrameStart_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart.class, perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart.Builder.class);
      }

      private int bitField0_;
      public static final int COOKIE_FIELD_NUMBER = 1;
      private long cookie_ = 0L;
      /**
       * <pre>
       * Cookie used to correlate between the start and end messages of the same
       * frame. Since all values except the ts are same for start and end, cookie
       * helps in preventing redundant data transmission.
       * The same cookie is used only by start and end messages of a single frame
       * and is otherwise unique.
       * </pre>
       *
       * <code>optional int64 cookie = 1;</code>
       * @return Whether the cookie field is set.
       */
      @java.lang.Override
      public boolean hasCookie() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Cookie used to correlate between the start and end messages of the same
       * frame. Since all values except the ts are same for start and end, cookie
       * helps in preventing redundant data transmission.
       * The same cookie is used only by start and end messages of a single frame
       * and is otherwise unique.
       * </pre>
       *
       * <code>optional int64 cookie = 1;</code>
       * @return The cookie.
       */
      @java.lang.Override
      public long getCookie() {
        return cookie_;
      }

      public static final int TOKEN_FIELD_NUMBER = 2;
      private long token_ = 0L;
      /**
       * <pre>
       * Token received by the app for its work. Can be shared between multiple
       * layers of the same app (example: pip mode).
       * </pre>
       *
       * <code>optional int64 token = 2;</code>
       * @return Whether the token field is set.
       */
      @java.lang.Override
      public boolean hasToken() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Token received by the app for its work. Can be shared between multiple
       * layers of the same app (example: pip mode).
       * </pre>
       *
       * <code>optional int64 token = 2;</code>
       * @return The token.
       */
      @java.lang.Override
      public long getToken() {
        return token_;
      }

      public static final int DISPLAY_FRAME_TOKEN_FIELD_NUMBER = 3;
      private long displayFrameToken_ = 0L;
      /**
       * <pre>
       * The corresponding DisplayFrame token is required to link the App's work
       * with SurfaceFlinger's work. Many SurfaceFrames can be mapped to a single
       * DisplayFrame.
       * this.display_frame_token = DisplayFrame.token
       * </pre>
       *
       * <code>optional int64 display_frame_token = 3;</code>
       * @return Whether the displayFrameToken field is set.
       */
      @java.lang.Override
      public boolean hasDisplayFrameToken() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * The corresponding DisplayFrame token is required to link the App's work
       * with SurfaceFlinger's work. Many SurfaceFrames can be mapped to a single
       * DisplayFrame.
       * this.display_frame_token = DisplayFrame.token
       * </pre>
       *
       * <code>optional int64 display_frame_token = 3;</code>
       * @return The displayFrameToken.
       */
      @java.lang.Override
      public long getDisplayFrameToken() {
        return displayFrameToken_;
      }

      public static final int PID_FIELD_NUMBER = 4;
      private int pid_ = 0;
      /**
       * <pre>
       * Pid of the app. Used in creating the timeline tracks (and slices) inside
       * the respective process track group.
       * </pre>
       *
       * <code>optional int32 pid = 4;</code>
       * @return Whether the pid field is set.
       */
      @java.lang.Override
      public boolean hasPid() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Pid of the app. Used in creating the timeline tracks (and slices) inside
       * the respective process track group.
       * </pre>
       *
       * <code>optional int32 pid = 4;</code>
       * @return The pid.
       */
      @java.lang.Override
      public int getPid() {
        return pid_;
      }

      public static final int LAYER_NAME_FIELD_NUMBER = 5;
      @SuppressWarnings("serial")
      private volatile java.lang.Object layerName_ = "";
      /**
       * <code>optional string layer_name = 5;</code>
       * @return Whether the layerName field is set.
       */
      @java.lang.Override
      public boolean hasLayerName() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional string layer_name = 5;</code>
       * @return The layerName.
       */
      @java.lang.Override
      public java.lang.String getLayerName() {
        java.lang.Object ref = layerName_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            layerName_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string layer_name = 5;</code>
       * @return The bytes for layerName.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getLayerNameBytes() {
        java.lang.Object ref = layerName_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          layerName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeInt64(1, cookie_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeInt64(2, token_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeInt64(3, displayFrameToken_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          output.writeInt32(4, pid_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 5, layerName_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(1, cookie_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(2, token_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(3, displayFrameToken_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(4, pid_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, layerName_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart)) {
          return super.equals(obj);
        }
        perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart other = (perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart) obj;

        if (hasCookie() != other.hasCookie()) return false;
        if (hasCookie()) {
          if (getCookie()
              != other.getCookie()) return false;
        }
        if (hasToken() != other.hasToken()) return false;
        if (hasToken()) {
          if (getToken()
              != other.getToken()) return false;
        }
        if (hasDisplayFrameToken() != other.hasDisplayFrameToken()) return false;
        if (hasDisplayFrameToken()) {
          if (getDisplayFrameToken()
              != other.getDisplayFrameToken()) return false;
        }
        if (hasPid() != other.hasPid()) return false;
        if (hasPid()) {
          if (getPid()
              != other.getPid()) return false;
        }
        if (hasLayerName() != other.hasLayerName()) return false;
        if (hasLayerName()) {
          if (!getLayerName()
              .equals(other.getLayerName())) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasCookie()) {
          hash = (37 * hash) + COOKIE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getCookie());
        }
        if (hasToken()) {
          hash = (37 * hash) + TOKEN_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getToken());
        }
        if (hasDisplayFrameToken()) {
          hash = (37 * hash) + DISPLAY_FRAME_TOKEN_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getDisplayFrameToken());
        }
        if (hasPid()) {
          hash = (37 * hash) + PID_FIELD_NUMBER;
          hash = (53 * hash) + getPid();
        }
        if (hasLayerName()) {
          hash = (37 * hash) + LAYER_NAME_FIELD_NUMBER;
          hash = (53 * hash) + getLayerName().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Indicates the start of expected timeline slice for SurfaceFrames.
       * </pre>
       *
       * Protobuf type {@code perfetto.protos.FrameTimelineEvent.ExpectedSurfaceFrameStart}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:perfetto.protos.FrameTimelineEvent.ExpectedSurfaceFrameStart)
          perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStartOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return perfetto.protos.FrameTimelineEventOuterClass.internal_static_perfetto_protos_FrameTimelineEvent_ExpectedSurfaceFrameStart_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return perfetto.protos.FrameTimelineEventOuterClass.internal_static_perfetto_protos_FrameTimelineEvent_ExpectedSurfaceFrameStart_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart.class, perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart.Builder.class);
        }

        // Construct using perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          cookie_ = 0L;
          token_ = 0L;
          displayFrameToken_ = 0L;
          pid_ = 0;
          layerName_ = "";
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return perfetto.protos.FrameTimelineEventOuterClass.internal_static_perfetto_protos_FrameTimelineEvent_ExpectedSurfaceFrameStart_descriptor;
        }

        @java.lang.Override
        public perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart getDefaultInstanceForType() {
          return perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart.getDefaultInstance();
        }

        @java.lang.Override
        public perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart build() {
          perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart buildPartial() {
          perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart result = new perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.cookie_ = cookie_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.token_ = token_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.displayFrameToken_ = displayFrameToken_;
            to_bitField0_ |= 0x00000004;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.pid_ = pid_;
            to_bitField0_ |= 0x00000008;
          }
          if (((from_bitField0_ & 0x00000010) != 0)) {
            result.layerName_ = layerName_;
            to_bitField0_ |= 0x00000010;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart) {
            return mergeFrom((perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart other) {
          if (other == perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart.getDefaultInstance()) return this;
          if (other.hasCookie()) {
            setCookie(other.getCookie());
          }
          if (other.hasToken()) {
            setToken(other.getToken());
          }
          if (other.hasDisplayFrameToken()) {
            setDisplayFrameToken(other.getDisplayFrameToken());
          }
          if (other.hasPid()) {
            setPid(other.getPid());
          }
          if (other.hasLayerName()) {
            layerName_ = other.layerName_;
            bitField0_ |= 0x00000010;
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  cookie_ = input.readInt64();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 16: {
                  token_ = input.readInt64();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                case 24: {
                  displayFrameToken_ = input.readInt64();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 24
                case 32: {
                  pid_ = input.readInt32();
                  bitField0_ |= 0x00000008;
                  break;
                } // case 32
                case 42: {
                  layerName_ = input.readBytes();
                  bitField0_ |= 0x00000010;
                  break;
                } // case 42
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private long cookie_ ;
        /**
         * <pre>
         * Cookie used to correlate between the start and end messages of the same
         * frame. Since all values except the ts are same for start and end, cookie
         * helps in preventing redundant data transmission.
         * The same cookie is used only by start and end messages of a single frame
         * and is otherwise unique.
         * </pre>
         *
         * <code>optional int64 cookie = 1;</code>
         * @return Whether the cookie field is set.
         */
        @java.lang.Override
        public boolean hasCookie() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * Cookie used to correlate between the start and end messages of the same
         * frame. Since all values except the ts are same for start and end, cookie
         * helps in preventing redundant data transmission.
         * The same cookie is used only by start and end messages of a single frame
         * and is otherwise unique.
         * </pre>
         *
         * <code>optional int64 cookie = 1;</code>
         * @return The cookie.
         */
        @java.lang.Override
        public long getCookie() {
          return cookie_;
        }
        /**
         * <pre>
         * Cookie used to correlate between the start and end messages of the same
         * frame. Since all values except the ts are same for start and end, cookie
         * helps in preventing redundant data transmission.
         * The same cookie is used only by start and end messages of a single frame
         * and is otherwise unique.
         * </pre>
         *
         * <code>optional int64 cookie = 1;</code>
         * @param value The cookie to set.
         * @return This builder for chaining.
         */
        public Builder setCookie(long value) {
          
          cookie_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Cookie used to correlate between the start and end messages of the same
         * frame. Since all values except the ts are same for start and end, cookie
         * helps in preventing redundant data transmission.
         * The same cookie is used only by start and end messages of a single frame
         * and is otherwise unique.
         * </pre>
         *
         * <code>optional int64 cookie = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearCookie() {
          bitField0_ = (bitField0_ & ~0x00000001);
          cookie_ = 0L;
          onChanged();
          return this;
        }

        private long token_ ;
        /**
         * <pre>
         * Token received by the app for its work. Can be shared between multiple
         * layers of the same app (example: pip mode).
         * </pre>
         *
         * <code>optional int64 token = 2;</code>
         * @return Whether the token field is set.
         */
        @java.lang.Override
        public boolean hasToken() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * Token received by the app for its work. Can be shared between multiple
         * layers of the same app (example: pip mode).
         * </pre>
         *
         * <code>optional int64 token = 2;</code>
         * @return The token.
         */
        @java.lang.Override
        public long getToken() {
          return token_;
        }
        /**
         * <pre>
         * Token received by the app for its work. Can be shared between multiple
         * layers of the same app (example: pip mode).
         * </pre>
         *
         * <code>optional int64 token = 2;</code>
         * @param value The token to set.
         * @return This builder for chaining.
         */
        public Builder setToken(long value) {
          
          token_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Token received by the app for its work. Can be shared between multiple
         * layers of the same app (example: pip mode).
         * </pre>
         *
         * <code>optional int64 token = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearToken() {
          bitField0_ = (bitField0_ & ~0x00000002);
          token_ = 0L;
          onChanged();
          return this;
        }

        private long displayFrameToken_ ;
        /**
         * <pre>
         * The corresponding DisplayFrame token is required to link the App's work
         * with SurfaceFlinger's work. Many SurfaceFrames can be mapped to a single
         * DisplayFrame.
         * this.display_frame_token = DisplayFrame.token
         * </pre>
         *
         * <code>optional int64 display_frame_token = 3;</code>
         * @return Whether the displayFrameToken field is set.
         */
        @java.lang.Override
        public boolean hasDisplayFrameToken() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         * The corresponding DisplayFrame token is required to link the App's work
         * with SurfaceFlinger's work. Many SurfaceFrames can be mapped to a single
         * DisplayFrame.
         * this.display_frame_token = DisplayFrame.token
         * </pre>
         *
         * <code>optional int64 display_frame_token = 3;</code>
         * @return The displayFrameToken.
         */
        @java.lang.Override
        public long getDisplayFrameToken() {
          return displayFrameToken_;
        }
        /**
         * <pre>
         * The corresponding DisplayFrame token is required to link the App's work
         * with SurfaceFlinger's work. Many SurfaceFrames can be mapped to a single
         * DisplayFrame.
         * this.display_frame_token = DisplayFrame.token
         * </pre>
         *
         * <code>optional int64 display_frame_token = 3;</code>
         * @param value The displayFrameToken to set.
         * @return This builder for chaining.
         */
        public Builder setDisplayFrameToken(long value) {
          
          displayFrameToken_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The corresponding DisplayFrame token is required to link the App's work
         * with SurfaceFlinger's work. Many SurfaceFrames can be mapped to a single
         * DisplayFrame.
         * this.display_frame_token = DisplayFrame.token
         * </pre>
         *
         * <code>optional int64 display_frame_token = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearDisplayFrameToken() {
          bitField0_ = (bitField0_ & ~0x00000004);
          displayFrameToken_ = 0L;
          onChanged();
          return this;
        }

        private int pid_ ;
        /**
         * <pre>
         * Pid of the app. Used in creating the timeline tracks (and slices) inside
         * the respective process track group.
         * </pre>
         *
         * <code>optional int32 pid = 4;</code>
         * @return Whether the pid field is set.
         */
        @java.lang.Override
        public boolean hasPid() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <pre>
         * Pid of the app. Used in creating the timeline tracks (and slices) inside
         * the respective process track group.
         * </pre>
         *
         * <code>optional int32 pid = 4;</code>
         * @return The pid.
         */
        @java.lang.Override
        public int getPid() {
          return pid_;
        }
        /**
         * <pre>
         * Pid of the app. Used in creating the timeline tracks (and slices) inside
         * the respective process track group.
         * </pre>
         *
         * <code>optional int32 pid = 4;</code>
         * @param value The pid to set.
         * @return This builder for chaining.
         */
        public Builder setPid(int value) {
          
          pid_ = value;
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Pid of the app. Used in creating the timeline tracks (and slices) inside
         * the respective process track group.
         * </pre>
         *
         * <code>optional int32 pid = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearPid() {
          bitField0_ = (bitField0_ & ~0x00000008);
          pid_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object layerName_ = "";
        /**
         * <code>optional string layer_name = 5;</code>
         * @return Whether the layerName field is set.
         */
        public boolean hasLayerName() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <code>optional string layer_name = 5;</code>
         * @return The layerName.
         */
        public java.lang.String getLayerName() {
          java.lang.Object ref = layerName_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              layerName_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string layer_name = 5;</code>
         * @return The bytes for layerName.
         */
        public com.google.protobuf.ByteString
            getLayerNameBytes() {
          java.lang.Object ref = layerName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            layerName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string layer_name = 5;</code>
         * @param value The layerName to set.
         * @return This builder for chaining.
         */
        public Builder setLayerName(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          layerName_ = value;
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <code>optional string layer_name = 5;</code>
         * @return This builder for chaining.
         */
        public Builder clearLayerName() {
          layerName_ = getDefaultInstance().getLayerName();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
          return this;
        }
        /**
         * <code>optional string layer_name = 5;</code>
         * @param value The bytes for layerName to set.
         * @return This builder for chaining.
         */
        public Builder setLayerNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          layerName_ = value;
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:perfetto.protos.FrameTimelineEvent.ExpectedSurfaceFrameStart)
      }

      // @@protoc_insertion_point(class_scope:perfetto.protos.FrameTimelineEvent.ExpectedSurfaceFrameStart)
      private static final perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart();
      }

      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<ExpectedSurfaceFrameStart>
          PARSER = new com.google.protobuf.AbstractParser<ExpectedSurfaceFrameStart>() {
        @java.lang.Override
        public ExpectedSurfaceFrameStart parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<ExpectedSurfaceFrameStart> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<ExpectedSurfaceFrameStart> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface ActualSurfaceFrameStartOrBuilder extends
        // @@protoc_insertion_point(interface_extends:perfetto.protos.FrameTimelineEvent.ActualSurfaceFrameStart)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Cookie used to correlate between the start and end messages of the same
       * frame. Since all values except the ts are same for start and end, cookie
       * helps in preventing redundant data transmission.
       * The same cookie is used only by start and end messages of a single frame
       * and is otherwise unique.
       * </pre>
       *
       * <code>optional int64 cookie = 1;</code>
       * @return Whether the cookie field is set.
       */
      boolean hasCookie();
      /**
       * <pre>
       * Cookie used to correlate between the start and end messages of the same
       * frame. Since all values except the ts are same for start and end, cookie
       * helps in preventing redundant data transmission.
       * The same cookie is used only by start and end messages of a single frame
       * and is otherwise unique.
       * </pre>
       *
       * <code>optional int64 cookie = 1;</code>
       * @return The cookie.
       */
      long getCookie();

      /**
       * <pre>
       * Token received by the app for its work. Can be shared between multiple
       * layers of the same app (example: pip mode).
       * </pre>
       *
       * <code>optional int64 token = 2;</code>
       * @return Whether the token field is set.
       */
      boolean hasToken();
      /**
       * <pre>
       * Token received by the app for its work. Can be shared between multiple
       * layers of the same app (example: pip mode).
       * </pre>
       *
       * <code>optional int64 token = 2;</code>
       * @return The token.
       */
      long getToken();

      /**
       * <pre>
       * The corresponding DisplayFrame token is required to link the App's work
       * with SurfaceFlinger's work. Many SurfaceFrames can be mapped to a single
       * DisplayFrame.
       * this.display_frame_token = DisplayFrame.token
       * </pre>
       *
       * <code>optional int64 display_frame_token = 3;</code>
       * @return Whether the displayFrameToken field is set.
       */
      boolean hasDisplayFrameToken();
      /**
       * <pre>
       * The corresponding DisplayFrame token is required to link the App's work
       * with SurfaceFlinger's work. Many SurfaceFrames can be mapped to a single
       * DisplayFrame.
       * this.display_frame_token = DisplayFrame.token
       * </pre>
       *
       * <code>optional int64 display_frame_token = 3;</code>
       * @return The displayFrameToken.
       */
      long getDisplayFrameToken();

      /**
       * <pre>
       * Pid of the app. Used in creating the timeline tracks (and slices) inside
       * the respective process track group.
       * </pre>
       *
       * <code>optional int32 pid = 4;</code>
       * @return Whether the pid field is set.
       */
      boolean hasPid();
      /**
       * <pre>
       * Pid of the app. Used in creating the timeline tracks (and slices) inside
       * the respective process track group.
       * </pre>
       *
       * <code>optional int32 pid = 4;</code>
       * @return The pid.
       */
      int getPid();

      /**
       * <code>optional string layer_name = 5;</code>
       * @return Whether the layerName field is set.
       */
      boolean hasLayerName();
      /**
       * <code>optional string layer_name = 5;</code>
       * @return The layerName.
       */
      java.lang.String getLayerName();
      /**
       * <code>optional string layer_name = 5;</code>
       * @return The bytes for layerName.
       */
      com.google.protobuf.ByteString
          getLayerNameBytes();

      /**
       * <code>optional .perfetto.protos.FrameTimelineEvent.PresentType present_type = 6;</code>
       * @return Whether the presentType field is set.
       */
      boolean hasPresentType();
      /**
       * <code>optional .perfetto.protos.FrameTimelineEvent.PresentType present_type = 6;</code>
       * @return The presentType.
       */
      perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.PresentType getPresentType();

      /**
       * <code>optional bool on_time_finish = 7;</code>
       * @return Whether the onTimeFinish field is set.
       */
      boolean hasOnTimeFinish();
      /**
       * <code>optional bool on_time_finish = 7;</code>
       * @return The onTimeFinish.
       */
      boolean getOnTimeFinish();

      /**
       * <code>optional bool gpu_composition = 8;</code>
       * @return Whether the gpuComposition field is set.
       */
      boolean hasGpuComposition();
      /**
       * <code>optional bool gpu_composition = 8;</code>
       * @return The gpuComposition.
       */
      boolean getGpuComposition();

      /**
       * <pre>
       * A bitmask of JankType. More than one reason can be attributed to a janky
       * frame.
       * </pre>
       *
       * <code>optional int32 jank_type = 9;</code>
       * @return Whether the jankType field is set.
       */
      boolean hasJankType();
      /**
       * <pre>
       * A bitmask of JankType. More than one reason can be attributed to a janky
       * frame.
       * </pre>
       *
       * <code>optional int32 jank_type = 9;</code>
       * @return The jankType.
       */
      int getJankType();

      /**
       * <code>optional .perfetto.protos.FrameTimelineEvent.PredictionType prediction_type = 10;</code>
       * @return Whether the predictionType field is set.
       */
      boolean hasPredictionType();
      /**
       * <code>optional .perfetto.protos.FrameTimelineEvent.PredictionType prediction_type = 10;</code>
       * @return The predictionType.
       */
      perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.PredictionType getPredictionType();

      /**
       * <code>optional bool is_buffer = 11;</code>
       * @return Whether the isBuffer field is set.
       */
      boolean hasIsBuffer();
      /**
       * <code>optional bool is_buffer = 11;</code>
       * @return The isBuffer.
       */
      boolean getIsBuffer();
    }
    /**
     * <pre>
     * Indicates the start of actual timeline slice for SurfaceFrames. Also
     * includes the jank information.
     * </pre>
     *
     * Protobuf type {@code perfetto.protos.FrameTimelineEvent.ActualSurfaceFrameStart}
     */
    public static final class ActualSurfaceFrameStart extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:perfetto.protos.FrameTimelineEvent.ActualSurfaceFrameStart)
        ActualSurfaceFrameStartOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use ActualSurfaceFrameStart.newBuilder() to construct.
      private ActualSurfaceFrameStart(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private ActualSurfaceFrameStart() {
        layerName_ = "";
        presentType_ = 0;
        predictionType_ = 0;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new ActualSurfaceFrameStart();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.FrameTimelineEventOuterClass.internal_static_perfetto_protos_FrameTimelineEvent_ActualSurfaceFrameStart_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.FrameTimelineEventOuterClass.internal_static_perfetto_protos_FrameTimelineEvent_ActualSurfaceFrameStart_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart.class, perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart.Builder.class);
      }

      private int bitField0_;
      public static final int COOKIE_FIELD_NUMBER = 1;
      private long cookie_ = 0L;
      /**
       * <pre>
       * Cookie used to correlate between the start and end messages of the same
       * frame. Since all values except the ts are same for start and end, cookie
       * helps in preventing redundant data transmission.
       * The same cookie is used only by start and end messages of a single frame
       * and is otherwise unique.
       * </pre>
       *
       * <code>optional int64 cookie = 1;</code>
       * @return Whether the cookie field is set.
       */
      @java.lang.Override
      public boolean hasCookie() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Cookie used to correlate between the start and end messages of the same
       * frame. Since all values except the ts are same for start and end, cookie
       * helps in preventing redundant data transmission.
       * The same cookie is used only by start and end messages of a single frame
       * and is otherwise unique.
       * </pre>
       *
       * <code>optional int64 cookie = 1;</code>
       * @return The cookie.
       */
      @java.lang.Override
      public long getCookie() {
        return cookie_;
      }

      public static final int TOKEN_FIELD_NUMBER = 2;
      private long token_ = 0L;
      /**
       * <pre>
       * Token received by the app for its work. Can be shared between multiple
       * layers of the same app (example: pip mode).
       * </pre>
       *
       * <code>optional int64 token = 2;</code>
       * @return Whether the token field is set.
       */
      @java.lang.Override
      public boolean hasToken() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Token received by the app for its work. Can be shared between multiple
       * layers of the same app (example: pip mode).
       * </pre>
       *
       * <code>optional int64 token = 2;</code>
       * @return The token.
       */
      @java.lang.Override
      public long getToken() {
        return token_;
      }

      public static final int DISPLAY_FRAME_TOKEN_FIELD_NUMBER = 3;
      private long displayFrameToken_ = 0L;
      /**
       * <pre>
       * The corresponding DisplayFrame token is required to link the App's work
       * with SurfaceFlinger's work. Many SurfaceFrames can be mapped to a single
       * DisplayFrame.
       * this.display_frame_token = DisplayFrame.token
       * </pre>
       *
       * <code>optional int64 display_frame_token = 3;</code>
       * @return Whether the displayFrameToken field is set.
       */
      @java.lang.Override
      public boolean hasDisplayFrameToken() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * The corresponding DisplayFrame token is required to link the App's work
       * with SurfaceFlinger's work. Many SurfaceFrames can be mapped to a single
       * DisplayFrame.
       * this.display_frame_token = DisplayFrame.token
       * </pre>
       *
       * <code>optional int64 display_frame_token = 3;</code>
       * @return The displayFrameToken.
       */
      @java.lang.Override
      public long getDisplayFrameToken() {
        return displayFrameToken_;
      }

      public static final int PID_FIELD_NUMBER = 4;
      private int pid_ = 0;
      /**
       * <pre>
       * Pid of the app. Used in creating the timeline tracks (and slices) inside
       * the respective process track group.
       * </pre>
       *
       * <code>optional int32 pid = 4;</code>
       * @return Whether the pid field is set.
       */
      @java.lang.Override
      public boolean hasPid() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Pid of the app. Used in creating the timeline tracks (and slices) inside
       * the respective process track group.
       * </pre>
       *
       * <code>optional int32 pid = 4;</code>
       * @return The pid.
       */
      @java.lang.Override
      public int getPid() {
        return pid_;
      }

      public static final int LAYER_NAME_FIELD_NUMBER = 5;
      @SuppressWarnings("serial")
      private volatile java.lang.Object layerName_ = "";
      /**
       * <code>optional string layer_name = 5;</code>
       * @return Whether the layerName field is set.
       */
      @java.lang.Override
      public boolean hasLayerName() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional string layer_name = 5;</code>
       * @return The layerName.
       */
      @java.lang.Override
      public java.lang.String getLayerName() {
        java.lang.Object ref = layerName_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            layerName_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string layer_name = 5;</code>
       * @return The bytes for layerName.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getLayerNameBytes() {
        java.lang.Object ref = layerName_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          layerName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int PRESENT_TYPE_FIELD_NUMBER = 6;
      private int presentType_ = 0;
      /**
       * <code>optional .perfetto.protos.FrameTimelineEvent.PresentType present_type = 6;</code>
       * @return Whether the presentType field is set.
       */
      @java.lang.Override public boolean hasPresentType() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional .perfetto.protos.FrameTimelineEvent.PresentType present_type = 6;</code>
       * @return The presentType.
       */
      @java.lang.Override public perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.PresentType getPresentType() {
        perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.PresentType result = perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.PresentType.forNumber(presentType_);
        return result == null ? perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.PresentType.PRESENT_UNSPECIFIED : result;
      }

      public static final int ON_TIME_FINISH_FIELD_NUMBER = 7;
      private boolean onTimeFinish_ = false;
      /**
       * <code>optional bool on_time_finish = 7;</code>
       * @return Whether the onTimeFinish field is set.
       */
      @java.lang.Override
      public boolean hasOnTimeFinish() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional bool on_time_finish = 7;</code>
       * @return The onTimeFinish.
       */
      @java.lang.Override
      public boolean getOnTimeFinish() {
        return onTimeFinish_;
      }

      public static final int GPU_COMPOSITION_FIELD_NUMBER = 8;
      private boolean gpuComposition_ = false;
      /**
       * <code>optional bool gpu_composition = 8;</code>
       * @return Whether the gpuComposition field is set.
       */
      @java.lang.Override
      public boolean hasGpuComposition() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <code>optional bool gpu_composition = 8;</code>
       * @return The gpuComposition.
       */
      @java.lang.Override
      public boolean getGpuComposition() {
        return gpuComposition_;
      }

      public static final int JANK_TYPE_FIELD_NUMBER = 9;
      private int jankType_ = 0;
      /**
       * <pre>
       * A bitmask of JankType. More than one reason can be attributed to a janky
       * frame.
       * </pre>
       *
       * <code>optional int32 jank_type = 9;</code>
       * @return Whether the jankType field is set.
       */
      @java.lang.Override
      public boolean hasJankType() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <pre>
       * A bitmask of JankType. More than one reason can be attributed to a janky
       * frame.
       * </pre>
       *
       * <code>optional int32 jank_type = 9;</code>
       * @return The jankType.
       */
      @java.lang.Override
      public int getJankType() {
        return jankType_;
      }

      public static final int PREDICTION_TYPE_FIELD_NUMBER = 10;
      private int predictionType_ = 0;
      /**
       * <code>optional .perfetto.protos.FrameTimelineEvent.PredictionType prediction_type = 10;</code>
       * @return Whether the predictionType field is set.
       */
      @java.lang.Override public boolean hasPredictionType() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <code>optional .perfetto.protos.FrameTimelineEvent.PredictionType prediction_type = 10;</code>
       * @return The predictionType.
       */
      @java.lang.Override public perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.PredictionType getPredictionType() {
        perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.PredictionType result = perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.PredictionType.forNumber(predictionType_);
        return result == null ? perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.PredictionType.PREDICTION_UNSPECIFIED : result;
      }

      public static final int IS_BUFFER_FIELD_NUMBER = 11;
      private boolean isBuffer_ = false;
      /**
       * <code>optional bool is_buffer = 11;</code>
       * @return Whether the isBuffer field is set.
       */
      @java.lang.Override
      public boolean hasIsBuffer() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <code>optional bool is_buffer = 11;</code>
       * @return The isBuffer.
       */
      @java.lang.Override
      public boolean getIsBuffer() {
        return isBuffer_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeInt64(1, cookie_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeInt64(2, token_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeInt64(3, displayFrameToken_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          output.writeInt32(4, pid_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 5, layerName_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          output.writeEnum(6, presentType_);
        }
        if (((bitField0_ & 0x00000040) != 0)) {
          output.writeBool(7, onTimeFinish_);
        }
        if (((bitField0_ & 0x00000080) != 0)) {
          output.writeBool(8, gpuComposition_);
        }
        if (((bitField0_ & 0x00000100) != 0)) {
          output.writeInt32(9, jankType_);
        }
        if (((bitField0_ & 0x00000200) != 0)) {
          output.writeEnum(10, predictionType_);
        }
        if (((bitField0_ & 0x00000400) != 0)) {
          output.writeBool(11, isBuffer_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(1, cookie_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(2, token_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(3, displayFrameToken_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(4, pid_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, layerName_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(6, presentType_);
        }
        if (((bitField0_ & 0x00000040) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(7, onTimeFinish_);
        }
        if (((bitField0_ & 0x00000080) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(8, gpuComposition_);
        }
        if (((bitField0_ & 0x00000100) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(9, jankType_);
        }
        if (((bitField0_ & 0x00000200) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(10, predictionType_);
        }
        if (((bitField0_ & 0x00000400) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(11, isBuffer_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart)) {
          return super.equals(obj);
        }
        perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart other = (perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart) obj;

        if (hasCookie() != other.hasCookie()) return false;
        if (hasCookie()) {
          if (getCookie()
              != other.getCookie()) return false;
        }
        if (hasToken() != other.hasToken()) return false;
        if (hasToken()) {
          if (getToken()
              != other.getToken()) return false;
        }
        if (hasDisplayFrameToken() != other.hasDisplayFrameToken()) return false;
        if (hasDisplayFrameToken()) {
          if (getDisplayFrameToken()
              != other.getDisplayFrameToken()) return false;
        }
        if (hasPid() != other.hasPid()) return false;
        if (hasPid()) {
          if (getPid()
              != other.getPid()) return false;
        }
        if (hasLayerName() != other.hasLayerName()) return false;
        if (hasLayerName()) {
          if (!getLayerName()
              .equals(other.getLayerName())) return false;
        }
        if (hasPresentType() != other.hasPresentType()) return false;
        if (hasPresentType()) {
          if (presentType_ != other.presentType_) return false;
        }
        if (hasOnTimeFinish() != other.hasOnTimeFinish()) return false;
        if (hasOnTimeFinish()) {
          if (getOnTimeFinish()
              != other.getOnTimeFinish()) return false;
        }
        if (hasGpuComposition() != other.hasGpuComposition()) return false;
        if (hasGpuComposition()) {
          if (getGpuComposition()
              != other.getGpuComposition()) return false;
        }
        if (hasJankType() != other.hasJankType()) return false;
        if (hasJankType()) {
          if (getJankType()
              != other.getJankType()) return false;
        }
        if (hasPredictionType() != other.hasPredictionType()) return false;
        if (hasPredictionType()) {
          if (predictionType_ != other.predictionType_) return false;
        }
        if (hasIsBuffer() != other.hasIsBuffer()) return false;
        if (hasIsBuffer()) {
          if (getIsBuffer()
              != other.getIsBuffer()) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasCookie()) {
          hash = (37 * hash) + COOKIE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getCookie());
        }
        if (hasToken()) {
          hash = (37 * hash) + TOKEN_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getToken());
        }
        if (hasDisplayFrameToken()) {
          hash = (37 * hash) + DISPLAY_FRAME_TOKEN_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getDisplayFrameToken());
        }
        if (hasPid()) {
          hash = (37 * hash) + PID_FIELD_NUMBER;
          hash = (53 * hash) + getPid();
        }
        if (hasLayerName()) {
          hash = (37 * hash) + LAYER_NAME_FIELD_NUMBER;
          hash = (53 * hash) + getLayerName().hashCode();
        }
        if (hasPresentType()) {
          hash = (37 * hash) + PRESENT_TYPE_FIELD_NUMBER;
          hash = (53 * hash) + presentType_;
        }
        if (hasOnTimeFinish()) {
          hash = (37 * hash) + ON_TIME_FINISH_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getOnTimeFinish());
        }
        if (hasGpuComposition()) {
          hash = (37 * hash) + GPU_COMPOSITION_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getGpuComposition());
        }
        if (hasJankType()) {
          hash = (37 * hash) + JANK_TYPE_FIELD_NUMBER;
          hash = (53 * hash) + getJankType();
        }
        if (hasPredictionType()) {
          hash = (37 * hash) + PREDICTION_TYPE_FIELD_NUMBER;
          hash = (53 * hash) + predictionType_;
        }
        if (hasIsBuffer()) {
          hash = (37 * hash) + IS_BUFFER_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getIsBuffer());
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Indicates the start of actual timeline slice for SurfaceFrames. Also
       * includes the jank information.
       * </pre>
       *
       * Protobuf type {@code perfetto.protos.FrameTimelineEvent.ActualSurfaceFrameStart}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:perfetto.protos.FrameTimelineEvent.ActualSurfaceFrameStart)
          perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStartOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return perfetto.protos.FrameTimelineEventOuterClass.internal_static_perfetto_protos_FrameTimelineEvent_ActualSurfaceFrameStart_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return perfetto.protos.FrameTimelineEventOuterClass.internal_static_perfetto_protos_FrameTimelineEvent_ActualSurfaceFrameStart_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart.class, perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart.Builder.class);
        }

        // Construct using perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          cookie_ = 0L;
          token_ = 0L;
          displayFrameToken_ = 0L;
          pid_ = 0;
          layerName_ = "";
          presentType_ = 0;
          onTimeFinish_ = false;
          gpuComposition_ = false;
          jankType_ = 0;
          predictionType_ = 0;
          isBuffer_ = false;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return perfetto.protos.FrameTimelineEventOuterClass.internal_static_perfetto_protos_FrameTimelineEvent_ActualSurfaceFrameStart_descriptor;
        }

        @java.lang.Override
        public perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart getDefaultInstanceForType() {
          return perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart.getDefaultInstance();
        }

        @java.lang.Override
        public perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart build() {
          perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart buildPartial() {
          perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart result = new perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.cookie_ = cookie_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.token_ = token_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.displayFrameToken_ = displayFrameToken_;
            to_bitField0_ |= 0x00000004;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.pid_ = pid_;
            to_bitField0_ |= 0x00000008;
          }
          if (((from_bitField0_ & 0x00000010) != 0)) {
            result.layerName_ = layerName_;
            to_bitField0_ |= 0x00000010;
          }
          if (((from_bitField0_ & 0x00000020) != 0)) {
            result.presentType_ = presentType_;
            to_bitField0_ |= 0x00000020;
          }
          if (((from_bitField0_ & 0x00000040) != 0)) {
            result.onTimeFinish_ = onTimeFinish_;
            to_bitField0_ |= 0x00000040;
          }
          if (((from_bitField0_ & 0x00000080) != 0)) {
            result.gpuComposition_ = gpuComposition_;
            to_bitField0_ |= 0x00000080;
          }
          if (((from_bitField0_ & 0x00000100) != 0)) {
            result.jankType_ = jankType_;
            to_bitField0_ |= 0x00000100;
          }
          if (((from_bitField0_ & 0x00000200) != 0)) {
            result.predictionType_ = predictionType_;
            to_bitField0_ |= 0x00000200;
          }
          if (((from_bitField0_ & 0x00000400) != 0)) {
            result.isBuffer_ = isBuffer_;
            to_bitField0_ |= 0x00000400;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart) {
            return mergeFrom((perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart other) {
          if (other == perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart.getDefaultInstance()) return this;
          if (other.hasCookie()) {
            setCookie(other.getCookie());
          }
          if (other.hasToken()) {
            setToken(other.getToken());
          }
          if (other.hasDisplayFrameToken()) {
            setDisplayFrameToken(other.getDisplayFrameToken());
          }
          if (other.hasPid()) {
            setPid(other.getPid());
          }
          if (other.hasLayerName()) {
            layerName_ = other.layerName_;
            bitField0_ |= 0x00000010;
            onChanged();
          }
          if (other.hasPresentType()) {
            setPresentType(other.getPresentType());
          }
          if (other.hasOnTimeFinish()) {
            setOnTimeFinish(other.getOnTimeFinish());
          }
          if (other.hasGpuComposition()) {
            setGpuComposition(other.getGpuComposition());
          }
          if (other.hasJankType()) {
            setJankType(other.getJankType());
          }
          if (other.hasPredictionType()) {
            setPredictionType(other.getPredictionType());
          }
          if (other.hasIsBuffer()) {
            setIsBuffer(other.getIsBuffer());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  cookie_ = input.readInt64();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 16: {
                  token_ = input.readInt64();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                case 24: {
                  displayFrameToken_ = input.readInt64();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 24
                case 32: {
                  pid_ = input.readInt32();
                  bitField0_ |= 0x00000008;
                  break;
                } // case 32
                case 42: {
                  layerName_ = input.readBytes();
                  bitField0_ |= 0x00000010;
                  break;
                } // case 42
                case 48: {
                  int tmpRaw = input.readEnum();
                  perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.PresentType tmpValue =
                      perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.PresentType.forNumber(tmpRaw);
                  if (tmpValue == null) {
                    mergeUnknownVarintField(6, tmpRaw);
                  } else {
                    presentType_ = tmpRaw;
                    bitField0_ |= 0x00000020;
                  }
                  break;
                } // case 48
                case 56: {
                  onTimeFinish_ = input.readBool();
                  bitField0_ |= 0x00000040;
                  break;
                } // case 56
                case 64: {
                  gpuComposition_ = input.readBool();
                  bitField0_ |= 0x00000080;
                  break;
                } // case 64
                case 72: {
                  jankType_ = input.readInt32();
                  bitField0_ |= 0x00000100;
                  break;
                } // case 72
                case 80: {
                  int tmpRaw = input.readEnum();
                  perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.PredictionType tmpValue =
                      perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.PredictionType.forNumber(tmpRaw);
                  if (tmpValue == null) {
                    mergeUnknownVarintField(10, tmpRaw);
                  } else {
                    predictionType_ = tmpRaw;
                    bitField0_ |= 0x00000200;
                  }
                  break;
                } // case 80
                case 88: {
                  isBuffer_ = input.readBool();
                  bitField0_ |= 0x00000400;
                  break;
                } // case 88
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private long cookie_ ;
        /**
         * <pre>
         * Cookie used to correlate between the start and end messages of the same
         * frame. Since all values except the ts are same for start and end, cookie
         * helps in preventing redundant data transmission.
         * The same cookie is used only by start and end messages of a single frame
         * and is otherwise unique.
         * </pre>
         *
         * <code>optional int64 cookie = 1;</code>
         * @return Whether the cookie field is set.
         */
        @java.lang.Override
        public boolean hasCookie() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * Cookie used to correlate between the start and end messages of the same
         * frame. Since all values except the ts are same for start and end, cookie
         * helps in preventing redundant data transmission.
         * The same cookie is used only by start and end messages of a single frame
         * and is otherwise unique.
         * </pre>
         *
         * <code>optional int64 cookie = 1;</code>
         * @return The cookie.
         */
        @java.lang.Override
        public long getCookie() {
          return cookie_;
        }
        /**
         * <pre>
         * Cookie used to correlate between the start and end messages of the same
         * frame. Since all values except the ts are same for start and end, cookie
         * helps in preventing redundant data transmission.
         * The same cookie is used only by start and end messages of a single frame
         * and is otherwise unique.
         * </pre>
         *
         * <code>optional int64 cookie = 1;</code>
         * @param value The cookie to set.
         * @return This builder for chaining.
         */
        public Builder setCookie(long value) {
          
          cookie_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Cookie used to correlate between the start and end messages of the same
         * frame. Since all values except the ts are same for start and end, cookie
         * helps in preventing redundant data transmission.
         * The same cookie is used only by start and end messages of a single frame
         * and is otherwise unique.
         * </pre>
         *
         * <code>optional int64 cookie = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearCookie() {
          bitField0_ = (bitField0_ & ~0x00000001);
          cookie_ = 0L;
          onChanged();
          return this;
        }

        private long token_ ;
        /**
         * <pre>
         * Token received by the app for its work. Can be shared between multiple
         * layers of the same app (example: pip mode).
         * </pre>
         *
         * <code>optional int64 token = 2;</code>
         * @return Whether the token field is set.
         */
        @java.lang.Override
        public boolean hasToken() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * Token received by the app for its work. Can be shared between multiple
         * layers of the same app (example: pip mode).
         * </pre>
         *
         * <code>optional int64 token = 2;</code>
         * @return The token.
         */
        @java.lang.Override
        public long getToken() {
          return token_;
        }
        /**
         * <pre>
         * Token received by the app for its work. Can be shared between multiple
         * layers of the same app (example: pip mode).
         * </pre>
         *
         * <code>optional int64 token = 2;</code>
         * @param value The token to set.
         * @return This builder for chaining.
         */
        public Builder setToken(long value) {
          
          token_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Token received by the app for its work. Can be shared between multiple
         * layers of the same app (example: pip mode).
         * </pre>
         *
         * <code>optional int64 token = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearToken() {
          bitField0_ = (bitField0_ & ~0x00000002);
          token_ = 0L;
          onChanged();
          return this;
        }

        private long displayFrameToken_ ;
        /**
         * <pre>
         * The corresponding DisplayFrame token is required to link the App's work
         * with SurfaceFlinger's work. Many SurfaceFrames can be mapped to a single
         * DisplayFrame.
         * this.display_frame_token = DisplayFrame.token
         * </pre>
         *
         * <code>optional int64 display_frame_token = 3;</code>
         * @return Whether the displayFrameToken field is set.
         */
        @java.lang.Override
        public boolean hasDisplayFrameToken() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         * The corresponding DisplayFrame token is required to link the App's work
         * with SurfaceFlinger's work. Many SurfaceFrames can be mapped to a single
         * DisplayFrame.
         * this.display_frame_token = DisplayFrame.token
         * </pre>
         *
         * <code>optional int64 display_frame_token = 3;</code>
         * @return The displayFrameToken.
         */
        @java.lang.Override
        public long getDisplayFrameToken() {
          return displayFrameToken_;
        }
        /**
         * <pre>
         * The corresponding DisplayFrame token is required to link the App's work
         * with SurfaceFlinger's work. Many SurfaceFrames can be mapped to a single
         * DisplayFrame.
         * this.display_frame_token = DisplayFrame.token
         * </pre>
         *
         * <code>optional int64 display_frame_token = 3;</code>
         * @param value The displayFrameToken to set.
         * @return This builder for chaining.
         */
        public Builder setDisplayFrameToken(long value) {
          
          displayFrameToken_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The corresponding DisplayFrame token is required to link the App's work
         * with SurfaceFlinger's work. Many SurfaceFrames can be mapped to a single
         * DisplayFrame.
         * this.display_frame_token = DisplayFrame.token
         * </pre>
         *
         * <code>optional int64 display_frame_token = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearDisplayFrameToken() {
          bitField0_ = (bitField0_ & ~0x00000004);
          displayFrameToken_ = 0L;
          onChanged();
          return this;
        }

        private int pid_ ;
        /**
         * <pre>
         * Pid of the app. Used in creating the timeline tracks (and slices) inside
         * the respective process track group.
         * </pre>
         *
         * <code>optional int32 pid = 4;</code>
         * @return Whether the pid field is set.
         */
        @java.lang.Override
        public boolean hasPid() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <pre>
         * Pid of the app. Used in creating the timeline tracks (and slices) inside
         * the respective process track group.
         * </pre>
         *
         * <code>optional int32 pid = 4;</code>
         * @return The pid.
         */
        @java.lang.Override
        public int getPid() {
          return pid_;
        }
        /**
         * <pre>
         * Pid of the app. Used in creating the timeline tracks (and slices) inside
         * the respective process track group.
         * </pre>
         *
         * <code>optional int32 pid = 4;</code>
         * @param value The pid to set.
         * @return This builder for chaining.
         */
        public Builder setPid(int value) {
          
          pid_ = value;
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Pid of the app. Used in creating the timeline tracks (and slices) inside
         * the respective process track group.
         * </pre>
         *
         * <code>optional int32 pid = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearPid() {
          bitField0_ = (bitField0_ & ~0x00000008);
          pid_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object layerName_ = "";
        /**
         * <code>optional string layer_name = 5;</code>
         * @return Whether the layerName field is set.
         */
        public boolean hasLayerName() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <code>optional string layer_name = 5;</code>
         * @return The layerName.
         */
        public java.lang.String getLayerName() {
          java.lang.Object ref = layerName_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              layerName_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string layer_name = 5;</code>
         * @return The bytes for layerName.
         */
        public com.google.protobuf.ByteString
            getLayerNameBytes() {
          java.lang.Object ref = layerName_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            layerName_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string layer_name = 5;</code>
         * @param value The layerName to set.
         * @return This builder for chaining.
         */
        public Builder setLayerName(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          layerName_ = value;
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <code>optional string layer_name = 5;</code>
         * @return This builder for chaining.
         */
        public Builder clearLayerName() {
          layerName_ = getDefaultInstance().getLayerName();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
          return this;
        }
        /**
         * <code>optional string layer_name = 5;</code>
         * @param value The bytes for layerName to set.
         * @return This builder for chaining.
         */
        public Builder setLayerNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          layerName_ = value;
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }

        private int presentType_ = 0;
        /**
         * <code>optional .perfetto.protos.FrameTimelineEvent.PresentType present_type = 6;</code>
         * @return Whether the presentType field is set.
         */
        @java.lang.Override public boolean hasPresentType() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        /**
         * <code>optional .perfetto.protos.FrameTimelineEvent.PresentType present_type = 6;</code>
         * @return The presentType.
         */
        @java.lang.Override
        public perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.PresentType getPresentType() {
          perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.PresentType result = perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.PresentType.forNumber(presentType_);
          return result == null ? perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.PresentType.PRESENT_UNSPECIFIED : result;
        }
        /**
         * <code>optional .perfetto.protos.FrameTimelineEvent.PresentType present_type = 6;</code>
         * @param value The presentType to set.
         * @return This builder for chaining.
         */
        public Builder setPresentType(perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.PresentType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000020;
          presentType_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>optional .perfetto.protos.FrameTimelineEvent.PresentType present_type = 6;</code>
         * @return This builder for chaining.
         */
        public Builder clearPresentType() {
          bitField0_ = (bitField0_ & ~0x00000020);
          presentType_ = 0;
          onChanged();
          return this;
        }

        private boolean onTimeFinish_ ;
        /**
         * <code>optional bool on_time_finish = 7;</code>
         * @return Whether the onTimeFinish field is set.
         */
        @java.lang.Override
        public boolean hasOnTimeFinish() {
          return ((bitField0_ & 0x00000040) != 0);
        }
        /**
         * <code>optional bool on_time_finish = 7;</code>
         * @return The onTimeFinish.
         */
        @java.lang.Override
        public boolean getOnTimeFinish() {
          return onTimeFinish_;
        }
        /**
         * <code>optional bool on_time_finish = 7;</code>
         * @param value The onTimeFinish to set.
         * @return This builder for chaining.
         */
        public Builder setOnTimeFinish(boolean value) {
          
          onTimeFinish_ = value;
          bitField0_ |= 0x00000040;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool on_time_finish = 7;</code>
         * @return This builder for chaining.
         */
        public Builder clearOnTimeFinish() {
          bitField0_ = (bitField0_ & ~0x00000040);
          onTimeFinish_ = false;
          onChanged();
          return this;
        }

        private boolean gpuComposition_ ;
        /**
         * <code>optional bool gpu_composition = 8;</code>
         * @return Whether the gpuComposition field is set.
         */
        @java.lang.Override
        public boolean hasGpuComposition() {
          return ((bitField0_ & 0x00000080) != 0);
        }
        /**
         * <code>optional bool gpu_composition = 8;</code>
         * @return The gpuComposition.
         */
        @java.lang.Override
        public boolean getGpuComposition() {
          return gpuComposition_;
        }
        /**
         * <code>optional bool gpu_composition = 8;</code>
         * @param value The gpuComposition to set.
         * @return This builder for chaining.
         */
        public Builder setGpuComposition(boolean value) {
          
          gpuComposition_ = value;
          bitField0_ |= 0x00000080;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool gpu_composition = 8;</code>
         * @return This builder for chaining.
         */
        public Builder clearGpuComposition() {
          bitField0_ = (bitField0_ & ~0x00000080);
          gpuComposition_ = false;
          onChanged();
          return this;
        }

        private int jankType_ ;
        /**
         * <pre>
         * A bitmask of JankType. More than one reason can be attributed to a janky
         * frame.
         * </pre>
         *
         * <code>optional int32 jank_type = 9;</code>
         * @return Whether the jankType field is set.
         */
        @java.lang.Override
        public boolean hasJankType() {
          return ((bitField0_ & 0x00000100) != 0);
        }
        /**
         * <pre>
         * A bitmask of JankType. More than one reason can be attributed to a janky
         * frame.
         * </pre>
         *
         * <code>optional int32 jank_type = 9;</code>
         * @return The jankType.
         */
        @java.lang.Override
        public int getJankType() {
          return jankType_;
        }
        /**
         * <pre>
         * A bitmask of JankType. More than one reason can be attributed to a janky
         * frame.
         * </pre>
         *
         * <code>optional int32 jank_type = 9;</code>
         * @param value The jankType to set.
         * @return This builder for chaining.
         */
        public Builder setJankType(int value) {
          
          jankType_ = value;
          bitField0_ |= 0x00000100;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * A bitmask of JankType. More than one reason can be attributed to a janky
         * frame.
         * </pre>
         *
         * <code>optional int32 jank_type = 9;</code>
         * @return This builder for chaining.
         */
        public Builder clearJankType() {
          bitField0_ = (bitField0_ & ~0x00000100);
          jankType_ = 0;
          onChanged();
          return this;
        }

        private int predictionType_ = 0;
        /**
         * <code>optional .perfetto.protos.FrameTimelineEvent.PredictionType prediction_type = 10;</code>
         * @return Whether the predictionType field is set.
         */
        @java.lang.Override public boolean hasPredictionType() {
          return ((bitField0_ & 0x00000200) != 0);
        }
        /**
         * <code>optional .perfetto.protos.FrameTimelineEvent.PredictionType prediction_type = 10;</code>
         * @return The predictionType.
         */
        @java.lang.Override
        public perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.PredictionType getPredictionType() {
          perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.PredictionType result = perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.PredictionType.forNumber(predictionType_);
          return result == null ? perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.PredictionType.PREDICTION_UNSPECIFIED : result;
        }
        /**
         * <code>optional .perfetto.protos.FrameTimelineEvent.PredictionType prediction_type = 10;</code>
         * @param value The predictionType to set.
         * @return This builder for chaining.
         */
        public Builder setPredictionType(perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.PredictionType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000200;
          predictionType_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>optional .perfetto.protos.FrameTimelineEvent.PredictionType prediction_type = 10;</code>
         * @return This builder for chaining.
         */
        public Builder clearPredictionType() {
          bitField0_ = (bitField0_ & ~0x00000200);
          predictionType_ = 0;
          onChanged();
          return this;
        }

        private boolean isBuffer_ ;
        /**
         * <code>optional bool is_buffer = 11;</code>
         * @return Whether the isBuffer field is set.
         */
        @java.lang.Override
        public boolean hasIsBuffer() {
          return ((bitField0_ & 0x00000400) != 0);
        }
        /**
         * <code>optional bool is_buffer = 11;</code>
         * @return The isBuffer.
         */
        @java.lang.Override
        public boolean getIsBuffer() {
          return isBuffer_;
        }
        /**
         * <code>optional bool is_buffer = 11;</code>
         * @param value The isBuffer to set.
         * @return This builder for chaining.
         */
        public Builder setIsBuffer(boolean value) {
          
          isBuffer_ = value;
          bitField0_ |= 0x00000400;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool is_buffer = 11;</code>
         * @return This builder for chaining.
         */
        public Builder clearIsBuffer() {
          bitField0_ = (bitField0_ & ~0x00000400);
          isBuffer_ = false;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:perfetto.protos.FrameTimelineEvent.ActualSurfaceFrameStart)
      }

      // @@protoc_insertion_point(class_scope:perfetto.protos.FrameTimelineEvent.ActualSurfaceFrameStart)
      private static final perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart();
      }

      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<ActualSurfaceFrameStart>
          PARSER = new com.google.protobuf.AbstractParser<ActualSurfaceFrameStart>() {
        @java.lang.Override
        public ActualSurfaceFrameStart parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<ActualSurfaceFrameStart> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<ActualSurfaceFrameStart> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface ExpectedDisplayFrameStartOrBuilder extends
        // @@protoc_insertion_point(interface_extends:perfetto.protos.FrameTimelineEvent.ExpectedDisplayFrameStart)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Cookie used to correlate between the start and end messages of the same
       * frame. Since all values except the ts are same for start and end, cookie
       * helps in preventing redundant data transmission.
       * The same cookie is used only by start and end messages of a single frame
       * and is otherwise unique.
       * </pre>
       *
       * <code>optional int64 cookie = 1;</code>
       * @return Whether the cookie field is set.
       */
      boolean hasCookie();
      /**
       * <pre>
       * Cookie used to correlate between the start and end messages of the same
       * frame. Since all values except the ts are same for start and end, cookie
       * helps in preventing redundant data transmission.
       * The same cookie is used only by start and end messages of a single frame
       * and is otherwise unique.
       * </pre>
       *
       * <code>optional int64 cookie = 1;</code>
       * @return The cookie.
       */
      long getCookie();

      /**
       * <pre>
       * Token received by SurfaceFlinger for its work
       * this.token = SurfaceFrame.display_frame_token
       * </pre>
       *
       * <code>optional int64 token = 2;</code>
       * @return Whether the token field is set.
       */
      boolean hasToken();
      /**
       * <pre>
       * Token received by SurfaceFlinger for its work
       * this.token = SurfaceFrame.display_frame_token
       * </pre>
       *
       * <code>optional int64 token = 2;</code>
       * @return The token.
       */
      long getToken();

      /**
       * <pre>
       * Pid of SurfaceFlinger. Used in creating the timeline tracks (and slices)
       * inside the SurfaceFlinger process group.
       * </pre>
       *
       * <code>optional int32 pid = 3;</code>
       * @return Whether the pid field is set.
       */
      boolean hasPid();
      /**
       * <pre>
       * Pid of SurfaceFlinger. Used in creating the timeline tracks (and slices)
       * inside the SurfaceFlinger process group.
       * </pre>
       *
       * <code>optional int32 pid = 3;</code>
       * @return The pid.
       */
      int getPid();
    }
    /**
     * <pre>
     * Indicates the start of expected timeline slice for DisplayFrames.
     * </pre>
     *
     * Protobuf type {@code perfetto.protos.FrameTimelineEvent.ExpectedDisplayFrameStart}
     */
    public static final class ExpectedDisplayFrameStart extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:perfetto.protos.FrameTimelineEvent.ExpectedDisplayFrameStart)
        ExpectedDisplayFrameStartOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use ExpectedDisplayFrameStart.newBuilder() to construct.
      private ExpectedDisplayFrameStart(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private ExpectedDisplayFrameStart() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new ExpectedDisplayFrameStart();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.FrameTimelineEventOuterClass.internal_static_perfetto_protos_FrameTimelineEvent_ExpectedDisplayFrameStart_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.FrameTimelineEventOuterClass.internal_static_perfetto_protos_FrameTimelineEvent_ExpectedDisplayFrameStart_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart.class, perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart.Builder.class);
      }

      private int bitField0_;
      public static final int COOKIE_FIELD_NUMBER = 1;
      private long cookie_ = 0L;
      /**
       * <pre>
       * Cookie used to correlate between the start and end messages of the same
       * frame. Since all values except the ts are same for start and end, cookie
       * helps in preventing redundant data transmission.
       * The same cookie is used only by start and end messages of a single frame
       * and is otherwise unique.
       * </pre>
       *
       * <code>optional int64 cookie = 1;</code>
       * @return Whether the cookie field is set.
       */
      @java.lang.Override
      public boolean hasCookie() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Cookie used to correlate between the start and end messages of the same
       * frame. Since all values except the ts are same for start and end, cookie
       * helps in preventing redundant data transmission.
       * The same cookie is used only by start and end messages of a single frame
       * and is otherwise unique.
       * </pre>
       *
       * <code>optional int64 cookie = 1;</code>
       * @return The cookie.
       */
      @java.lang.Override
      public long getCookie() {
        return cookie_;
      }

      public static final int TOKEN_FIELD_NUMBER = 2;
      private long token_ = 0L;
      /**
       * <pre>
       * Token received by SurfaceFlinger for its work
       * this.token = SurfaceFrame.display_frame_token
       * </pre>
       *
       * <code>optional int64 token = 2;</code>
       * @return Whether the token field is set.
       */
      @java.lang.Override
      public boolean hasToken() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Token received by SurfaceFlinger for its work
       * this.token = SurfaceFrame.display_frame_token
       * </pre>
       *
       * <code>optional int64 token = 2;</code>
       * @return The token.
       */
      @java.lang.Override
      public long getToken() {
        return token_;
      }

      public static final int PID_FIELD_NUMBER = 3;
      private int pid_ = 0;
      /**
       * <pre>
       * Pid of SurfaceFlinger. Used in creating the timeline tracks (and slices)
       * inside the SurfaceFlinger process group.
       * </pre>
       *
       * <code>optional int32 pid = 3;</code>
       * @return Whether the pid field is set.
       */
      @java.lang.Override
      public boolean hasPid() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Pid of SurfaceFlinger. Used in creating the timeline tracks (and slices)
       * inside the SurfaceFlinger process group.
       * </pre>
       *
       * <code>optional int32 pid = 3;</code>
       * @return The pid.
       */
      @java.lang.Override
      public int getPid() {
        return pid_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeInt64(1, cookie_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeInt64(2, token_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeInt32(3, pid_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(1, cookie_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(2, token_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, pid_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart)) {
          return super.equals(obj);
        }
        perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart other = (perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart) obj;

        if (hasCookie() != other.hasCookie()) return false;
        if (hasCookie()) {
          if (getCookie()
              != other.getCookie()) return false;
        }
        if (hasToken() != other.hasToken()) return false;
        if (hasToken()) {
          if (getToken()
              != other.getToken()) return false;
        }
        if (hasPid() != other.hasPid()) return false;
        if (hasPid()) {
          if (getPid()
              != other.getPid()) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasCookie()) {
          hash = (37 * hash) + COOKIE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getCookie());
        }
        if (hasToken()) {
          hash = (37 * hash) + TOKEN_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getToken());
        }
        if (hasPid()) {
          hash = (37 * hash) + PID_FIELD_NUMBER;
          hash = (53 * hash) + getPid();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Indicates the start of expected timeline slice for DisplayFrames.
       * </pre>
       *
       * Protobuf type {@code perfetto.protos.FrameTimelineEvent.ExpectedDisplayFrameStart}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:perfetto.protos.FrameTimelineEvent.ExpectedDisplayFrameStart)
          perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStartOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return perfetto.protos.FrameTimelineEventOuterClass.internal_static_perfetto_protos_FrameTimelineEvent_ExpectedDisplayFrameStart_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return perfetto.protos.FrameTimelineEventOuterClass.internal_static_perfetto_protos_FrameTimelineEvent_ExpectedDisplayFrameStart_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart.class, perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart.Builder.class);
        }

        // Construct using perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          cookie_ = 0L;
          token_ = 0L;
          pid_ = 0;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return perfetto.protos.FrameTimelineEventOuterClass.internal_static_perfetto_protos_FrameTimelineEvent_ExpectedDisplayFrameStart_descriptor;
        }

        @java.lang.Override
        public perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart getDefaultInstanceForType() {
          return perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart.getDefaultInstance();
        }

        @java.lang.Override
        public perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart build() {
          perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart buildPartial() {
          perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart result = new perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.cookie_ = cookie_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.token_ = token_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.pid_ = pid_;
            to_bitField0_ |= 0x00000004;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart) {
            return mergeFrom((perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart other) {
          if (other == perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart.getDefaultInstance()) return this;
          if (other.hasCookie()) {
            setCookie(other.getCookie());
          }
          if (other.hasToken()) {
            setToken(other.getToken());
          }
          if (other.hasPid()) {
            setPid(other.getPid());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  cookie_ = input.readInt64();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 16: {
                  token_ = input.readInt64();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                case 24: {
                  pid_ = input.readInt32();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 24
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private long cookie_ ;
        /**
         * <pre>
         * Cookie used to correlate between the start and end messages of the same
         * frame. Since all values except the ts are same for start and end, cookie
         * helps in preventing redundant data transmission.
         * The same cookie is used only by start and end messages of a single frame
         * and is otherwise unique.
         * </pre>
         *
         * <code>optional int64 cookie = 1;</code>
         * @return Whether the cookie field is set.
         */
        @java.lang.Override
        public boolean hasCookie() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * Cookie used to correlate between the start and end messages of the same
         * frame. Since all values except the ts are same for start and end, cookie
         * helps in preventing redundant data transmission.
         * The same cookie is used only by start and end messages of a single frame
         * and is otherwise unique.
         * </pre>
         *
         * <code>optional int64 cookie = 1;</code>
         * @return The cookie.
         */
        @java.lang.Override
        public long getCookie() {
          return cookie_;
        }
        /**
         * <pre>
         * Cookie used to correlate between the start and end messages of the same
         * frame. Since all values except the ts are same for start and end, cookie
         * helps in preventing redundant data transmission.
         * The same cookie is used only by start and end messages of a single frame
         * and is otherwise unique.
         * </pre>
         *
         * <code>optional int64 cookie = 1;</code>
         * @param value The cookie to set.
         * @return This builder for chaining.
         */
        public Builder setCookie(long value) {
          
          cookie_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Cookie used to correlate between the start and end messages of the same
         * frame. Since all values except the ts are same for start and end, cookie
         * helps in preventing redundant data transmission.
         * The same cookie is used only by start and end messages of a single frame
         * and is otherwise unique.
         * </pre>
         *
         * <code>optional int64 cookie = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearCookie() {
          bitField0_ = (bitField0_ & ~0x00000001);
          cookie_ = 0L;
          onChanged();
          return this;
        }

        private long token_ ;
        /**
         * <pre>
         * Token received by SurfaceFlinger for its work
         * this.token = SurfaceFrame.display_frame_token
         * </pre>
         *
         * <code>optional int64 token = 2;</code>
         * @return Whether the token field is set.
         */
        @java.lang.Override
        public boolean hasToken() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * Token received by SurfaceFlinger for its work
         * this.token = SurfaceFrame.display_frame_token
         * </pre>
         *
         * <code>optional int64 token = 2;</code>
         * @return The token.
         */
        @java.lang.Override
        public long getToken() {
          return token_;
        }
        /**
         * <pre>
         * Token received by SurfaceFlinger for its work
         * this.token = SurfaceFrame.display_frame_token
         * </pre>
         *
         * <code>optional int64 token = 2;</code>
         * @param value The token to set.
         * @return This builder for chaining.
         */
        public Builder setToken(long value) {
          
          token_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Token received by SurfaceFlinger for its work
         * this.token = SurfaceFrame.display_frame_token
         * </pre>
         *
         * <code>optional int64 token = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearToken() {
          bitField0_ = (bitField0_ & ~0x00000002);
          token_ = 0L;
          onChanged();
          return this;
        }

        private int pid_ ;
        /**
         * <pre>
         * Pid of SurfaceFlinger. Used in creating the timeline tracks (and slices)
         * inside the SurfaceFlinger process group.
         * </pre>
         *
         * <code>optional int32 pid = 3;</code>
         * @return Whether the pid field is set.
         */
        @java.lang.Override
        public boolean hasPid() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         * Pid of SurfaceFlinger. Used in creating the timeline tracks (and slices)
         * inside the SurfaceFlinger process group.
         * </pre>
         *
         * <code>optional int32 pid = 3;</code>
         * @return The pid.
         */
        @java.lang.Override
        public int getPid() {
          return pid_;
        }
        /**
         * <pre>
         * Pid of SurfaceFlinger. Used in creating the timeline tracks (and slices)
         * inside the SurfaceFlinger process group.
         * </pre>
         *
         * <code>optional int32 pid = 3;</code>
         * @param value The pid to set.
         * @return This builder for chaining.
         */
        public Builder setPid(int value) {
          
          pid_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Pid of SurfaceFlinger. Used in creating the timeline tracks (and slices)
         * inside the SurfaceFlinger process group.
         * </pre>
         *
         * <code>optional int32 pid = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearPid() {
          bitField0_ = (bitField0_ & ~0x00000004);
          pid_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:perfetto.protos.FrameTimelineEvent.ExpectedDisplayFrameStart)
      }

      // @@protoc_insertion_point(class_scope:perfetto.protos.FrameTimelineEvent.ExpectedDisplayFrameStart)
      private static final perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart();
      }

      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<ExpectedDisplayFrameStart>
          PARSER = new com.google.protobuf.AbstractParser<ExpectedDisplayFrameStart>() {
        @java.lang.Override
        public ExpectedDisplayFrameStart parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<ExpectedDisplayFrameStart> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<ExpectedDisplayFrameStart> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface ActualDisplayFrameStartOrBuilder extends
        // @@protoc_insertion_point(interface_extends:perfetto.protos.FrameTimelineEvent.ActualDisplayFrameStart)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Cookie used to correlate between the start and end messages of the same
       * frame. Since all values except the ts are same for start and end, cookie
       * helps in preventing redundant data transmission.
       * The same cookie is used only by start and end messages of a single frame
       * and is otherwise unique.
       * </pre>
       *
       * <code>optional int64 cookie = 1;</code>
       * @return Whether the cookie field is set.
       */
      boolean hasCookie();
      /**
       * <pre>
       * Cookie used to correlate between the start and end messages of the same
       * frame. Since all values except the ts are same for start and end, cookie
       * helps in preventing redundant data transmission.
       * The same cookie is used only by start and end messages of a single frame
       * and is otherwise unique.
       * </pre>
       *
       * <code>optional int64 cookie = 1;</code>
       * @return The cookie.
       */
      long getCookie();

      /**
       * <pre>
       * Token received by SurfaceFlinger for its work
       * this.token = SurfaceFrame.display_frame_token
       * </pre>
       *
       * <code>optional int64 token = 2;</code>
       * @return Whether the token field is set.
       */
      boolean hasToken();
      /**
       * <pre>
       * Token received by SurfaceFlinger for its work
       * this.token = SurfaceFrame.display_frame_token
       * </pre>
       *
       * <code>optional int64 token = 2;</code>
       * @return The token.
       */
      long getToken();

      /**
       * <pre>
       * Pid of SurfaceFlinger. Used in creating the timeline tracks (and slices)
       * inside the SurfaceFlinger process group.
       * </pre>
       *
       * <code>optional int32 pid = 3;</code>
       * @return Whether the pid field is set.
       */
      boolean hasPid();
      /**
       * <pre>
       * Pid of SurfaceFlinger. Used in creating the timeline tracks (and slices)
       * inside the SurfaceFlinger process group.
       * </pre>
       *
       * <code>optional int32 pid = 3;</code>
       * @return The pid.
       */
      int getPid();

      /**
       * <code>optional .perfetto.protos.FrameTimelineEvent.PresentType present_type = 4;</code>
       * @return Whether the presentType field is set.
       */
      boolean hasPresentType();
      /**
       * <code>optional .perfetto.protos.FrameTimelineEvent.PresentType present_type = 4;</code>
       * @return The presentType.
       */
      perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.PresentType getPresentType();

      /**
       * <code>optional bool on_time_finish = 5;</code>
       * @return Whether the onTimeFinish field is set.
       */
      boolean hasOnTimeFinish();
      /**
       * <code>optional bool on_time_finish = 5;</code>
       * @return The onTimeFinish.
       */
      boolean getOnTimeFinish();

      /**
       * <code>optional bool gpu_composition = 6;</code>
       * @return Whether the gpuComposition field is set.
       */
      boolean hasGpuComposition();
      /**
       * <code>optional bool gpu_composition = 6;</code>
       * @return The gpuComposition.
       */
      boolean getGpuComposition();

      /**
       * <pre>
       * A bitmask of JankType. More than one reason can be attributed to a janky
       * frame.
       * </pre>
       *
       * <code>optional int32 jank_type = 7;</code>
       * @return Whether the jankType field is set.
       */
      boolean hasJankType();
      /**
       * <pre>
       * A bitmask of JankType. More than one reason can be attributed to a janky
       * frame.
       * </pre>
       *
       * <code>optional int32 jank_type = 7;</code>
       * @return The jankType.
       */
      int getJankType();

      /**
       * <code>optional .perfetto.protos.FrameTimelineEvent.PredictionType prediction_type = 8;</code>
       * @return Whether the predictionType field is set.
       */
      boolean hasPredictionType();
      /**
       * <code>optional .perfetto.protos.FrameTimelineEvent.PredictionType prediction_type = 8;</code>
       * @return The predictionType.
       */
      perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.PredictionType getPredictionType();
    }
    /**
     * <pre>
     * Indicates the start of actual timeline slice for DisplayFrames. Also
     * includes the jank information.
     * </pre>
     *
     * Protobuf type {@code perfetto.protos.FrameTimelineEvent.ActualDisplayFrameStart}
     */
    public static final class ActualDisplayFrameStart extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:perfetto.protos.FrameTimelineEvent.ActualDisplayFrameStart)
        ActualDisplayFrameStartOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use ActualDisplayFrameStart.newBuilder() to construct.
      private ActualDisplayFrameStart(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private ActualDisplayFrameStart() {
        presentType_ = 0;
        predictionType_ = 0;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new ActualDisplayFrameStart();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.FrameTimelineEventOuterClass.internal_static_perfetto_protos_FrameTimelineEvent_ActualDisplayFrameStart_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.FrameTimelineEventOuterClass.internal_static_perfetto_protos_FrameTimelineEvent_ActualDisplayFrameStart_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart.class, perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart.Builder.class);
      }

      private int bitField0_;
      public static final int COOKIE_FIELD_NUMBER = 1;
      private long cookie_ = 0L;
      /**
       * <pre>
       * Cookie used to correlate between the start and end messages of the same
       * frame. Since all values except the ts are same for start and end, cookie
       * helps in preventing redundant data transmission.
       * The same cookie is used only by start and end messages of a single frame
       * and is otherwise unique.
       * </pre>
       *
       * <code>optional int64 cookie = 1;</code>
       * @return Whether the cookie field is set.
       */
      @java.lang.Override
      public boolean hasCookie() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Cookie used to correlate between the start and end messages of the same
       * frame. Since all values except the ts are same for start and end, cookie
       * helps in preventing redundant data transmission.
       * The same cookie is used only by start and end messages of a single frame
       * and is otherwise unique.
       * </pre>
       *
       * <code>optional int64 cookie = 1;</code>
       * @return The cookie.
       */
      @java.lang.Override
      public long getCookie() {
        return cookie_;
      }

      public static final int TOKEN_FIELD_NUMBER = 2;
      private long token_ = 0L;
      /**
       * <pre>
       * Token received by SurfaceFlinger for its work
       * this.token = SurfaceFrame.display_frame_token
       * </pre>
       *
       * <code>optional int64 token = 2;</code>
       * @return Whether the token field is set.
       */
      @java.lang.Override
      public boolean hasToken() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Token received by SurfaceFlinger for its work
       * this.token = SurfaceFrame.display_frame_token
       * </pre>
       *
       * <code>optional int64 token = 2;</code>
       * @return The token.
       */
      @java.lang.Override
      public long getToken() {
        return token_;
      }

      public static final int PID_FIELD_NUMBER = 3;
      private int pid_ = 0;
      /**
       * <pre>
       * Pid of SurfaceFlinger. Used in creating the timeline tracks (and slices)
       * inside the SurfaceFlinger process group.
       * </pre>
       *
       * <code>optional int32 pid = 3;</code>
       * @return Whether the pid field is set.
       */
      @java.lang.Override
      public boolean hasPid() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * Pid of SurfaceFlinger. Used in creating the timeline tracks (and slices)
       * inside the SurfaceFlinger process group.
       * </pre>
       *
       * <code>optional int32 pid = 3;</code>
       * @return The pid.
       */
      @java.lang.Override
      public int getPid() {
        return pid_;
      }

      public static final int PRESENT_TYPE_FIELD_NUMBER = 4;
      private int presentType_ = 0;
      /**
       * <code>optional .perfetto.protos.FrameTimelineEvent.PresentType present_type = 4;</code>
       * @return Whether the presentType field is set.
       */
      @java.lang.Override public boolean hasPresentType() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional .perfetto.protos.FrameTimelineEvent.PresentType present_type = 4;</code>
       * @return The presentType.
       */
      @java.lang.Override public perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.PresentType getPresentType() {
        perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.PresentType result = perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.PresentType.forNumber(presentType_);
        return result == null ? perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.PresentType.PRESENT_UNSPECIFIED : result;
      }

      public static final int ON_TIME_FINISH_FIELD_NUMBER = 5;
      private boolean onTimeFinish_ = false;
      /**
       * <code>optional bool on_time_finish = 5;</code>
       * @return Whether the onTimeFinish field is set.
       */
      @java.lang.Override
      public boolean hasOnTimeFinish() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional bool on_time_finish = 5;</code>
       * @return The onTimeFinish.
       */
      @java.lang.Override
      public boolean getOnTimeFinish() {
        return onTimeFinish_;
      }

      public static final int GPU_COMPOSITION_FIELD_NUMBER = 6;
      private boolean gpuComposition_ = false;
      /**
       * <code>optional bool gpu_composition = 6;</code>
       * @return Whether the gpuComposition field is set.
       */
      @java.lang.Override
      public boolean hasGpuComposition() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional bool gpu_composition = 6;</code>
       * @return The gpuComposition.
       */
      @java.lang.Override
      public boolean getGpuComposition() {
        return gpuComposition_;
      }

      public static final int JANK_TYPE_FIELD_NUMBER = 7;
      private int jankType_ = 0;
      /**
       * <pre>
       * A bitmask of JankType. More than one reason can be attributed to a janky
       * frame.
       * </pre>
       *
       * <code>optional int32 jank_type = 7;</code>
       * @return Whether the jankType field is set.
       */
      @java.lang.Override
      public boolean hasJankType() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       * A bitmask of JankType. More than one reason can be attributed to a janky
       * frame.
       * </pre>
       *
       * <code>optional int32 jank_type = 7;</code>
       * @return The jankType.
       */
      @java.lang.Override
      public int getJankType() {
        return jankType_;
      }

      public static final int PREDICTION_TYPE_FIELD_NUMBER = 8;
      private int predictionType_ = 0;
      /**
       * <code>optional .perfetto.protos.FrameTimelineEvent.PredictionType prediction_type = 8;</code>
       * @return Whether the predictionType field is set.
       */
      @java.lang.Override public boolean hasPredictionType() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <code>optional .perfetto.protos.FrameTimelineEvent.PredictionType prediction_type = 8;</code>
       * @return The predictionType.
       */
      @java.lang.Override public perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.PredictionType getPredictionType() {
        perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.PredictionType result = perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.PredictionType.forNumber(predictionType_);
        return result == null ? perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.PredictionType.PREDICTION_UNSPECIFIED : result;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeInt64(1, cookie_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeInt64(2, token_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeInt32(3, pid_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          output.writeEnum(4, presentType_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          output.writeBool(5, onTimeFinish_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          output.writeBool(6, gpuComposition_);
        }
        if (((bitField0_ & 0x00000040) != 0)) {
          output.writeInt32(7, jankType_);
        }
        if (((bitField0_ & 0x00000080) != 0)) {
          output.writeEnum(8, predictionType_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(1, cookie_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(2, token_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, pid_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(4, presentType_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(5, onTimeFinish_);
        }
        if (((bitField0_ & 0x00000020) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(6, gpuComposition_);
        }
        if (((bitField0_ & 0x00000040) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(7, jankType_);
        }
        if (((bitField0_ & 0x00000080) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(8, predictionType_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart)) {
          return super.equals(obj);
        }
        perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart other = (perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart) obj;

        if (hasCookie() != other.hasCookie()) return false;
        if (hasCookie()) {
          if (getCookie()
              != other.getCookie()) return false;
        }
        if (hasToken() != other.hasToken()) return false;
        if (hasToken()) {
          if (getToken()
              != other.getToken()) return false;
        }
        if (hasPid() != other.hasPid()) return false;
        if (hasPid()) {
          if (getPid()
              != other.getPid()) return false;
        }
        if (hasPresentType() != other.hasPresentType()) return false;
        if (hasPresentType()) {
          if (presentType_ != other.presentType_) return false;
        }
        if (hasOnTimeFinish() != other.hasOnTimeFinish()) return false;
        if (hasOnTimeFinish()) {
          if (getOnTimeFinish()
              != other.getOnTimeFinish()) return false;
        }
        if (hasGpuComposition() != other.hasGpuComposition()) return false;
        if (hasGpuComposition()) {
          if (getGpuComposition()
              != other.getGpuComposition()) return false;
        }
        if (hasJankType() != other.hasJankType()) return false;
        if (hasJankType()) {
          if (getJankType()
              != other.getJankType()) return false;
        }
        if (hasPredictionType() != other.hasPredictionType()) return false;
        if (hasPredictionType()) {
          if (predictionType_ != other.predictionType_) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasCookie()) {
          hash = (37 * hash) + COOKIE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getCookie());
        }
        if (hasToken()) {
          hash = (37 * hash) + TOKEN_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getToken());
        }
        if (hasPid()) {
          hash = (37 * hash) + PID_FIELD_NUMBER;
          hash = (53 * hash) + getPid();
        }
        if (hasPresentType()) {
          hash = (37 * hash) + PRESENT_TYPE_FIELD_NUMBER;
          hash = (53 * hash) + presentType_;
        }
        if (hasOnTimeFinish()) {
          hash = (37 * hash) + ON_TIME_FINISH_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getOnTimeFinish());
        }
        if (hasGpuComposition()) {
          hash = (37 * hash) + GPU_COMPOSITION_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getGpuComposition());
        }
        if (hasJankType()) {
          hash = (37 * hash) + JANK_TYPE_FIELD_NUMBER;
          hash = (53 * hash) + getJankType();
        }
        if (hasPredictionType()) {
          hash = (37 * hash) + PREDICTION_TYPE_FIELD_NUMBER;
          hash = (53 * hash) + predictionType_;
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Indicates the start of actual timeline slice for DisplayFrames. Also
       * includes the jank information.
       * </pre>
       *
       * Protobuf type {@code perfetto.protos.FrameTimelineEvent.ActualDisplayFrameStart}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:perfetto.protos.FrameTimelineEvent.ActualDisplayFrameStart)
          perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStartOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return perfetto.protos.FrameTimelineEventOuterClass.internal_static_perfetto_protos_FrameTimelineEvent_ActualDisplayFrameStart_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return perfetto.protos.FrameTimelineEventOuterClass.internal_static_perfetto_protos_FrameTimelineEvent_ActualDisplayFrameStart_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart.class, perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart.Builder.class);
        }

        // Construct using perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          cookie_ = 0L;
          token_ = 0L;
          pid_ = 0;
          presentType_ = 0;
          onTimeFinish_ = false;
          gpuComposition_ = false;
          jankType_ = 0;
          predictionType_ = 0;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return perfetto.protos.FrameTimelineEventOuterClass.internal_static_perfetto_protos_FrameTimelineEvent_ActualDisplayFrameStart_descriptor;
        }

        @java.lang.Override
        public perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart getDefaultInstanceForType() {
          return perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart.getDefaultInstance();
        }

        @java.lang.Override
        public perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart build() {
          perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart buildPartial() {
          perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart result = new perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.cookie_ = cookie_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.token_ = token_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.pid_ = pid_;
            to_bitField0_ |= 0x00000004;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.presentType_ = presentType_;
            to_bitField0_ |= 0x00000008;
          }
          if (((from_bitField0_ & 0x00000010) != 0)) {
            result.onTimeFinish_ = onTimeFinish_;
            to_bitField0_ |= 0x00000010;
          }
          if (((from_bitField0_ & 0x00000020) != 0)) {
            result.gpuComposition_ = gpuComposition_;
            to_bitField0_ |= 0x00000020;
          }
          if (((from_bitField0_ & 0x00000040) != 0)) {
            result.jankType_ = jankType_;
            to_bitField0_ |= 0x00000040;
          }
          if (((from_bitField0_ & 0x00000080) != 0)) {
            result.predictionType_ = predictionType_;
            to_bitField0_ |= 0x00000080;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart) {
            return mergeFrom((perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart other) {
          if (other == perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart.getDefaultInstance()) return this;
          if (other.hasCookie()) {
            setCookie(other.getCookie());
          }
          if (other.hasToken()) {
            setToken(other.getToken());
          }
          if (other.hasPid()) {
            setPid(other.getPid());
          }
          if (other.hasPresentType()) {
            setPresentType(other.getPresentType());
          }
          if (other.hasOnTimeFinish()) {
            setOnTimeFinish(other.getOnTimeFinish());
          }
          if (other.hasGpuComposition()) {
            setGpuComposition(other.getGpuComposition());
          }
          if (other.hasJankType()) {
            setJankType(other.getJankType());
          }
          if (other.hasPredictionType()) {
            setPredictionType(other.getPredictionType());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  cookie_ = input.readInt64();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 16: {
                  token_ = input.readInt64();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                case 24: {
                  pid_ = input.readInt32();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 24
                case 32: {
                  int tmpRaw = input.readEnum();
                  perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.PresentType tmpValue =
                      perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.PresentType.forNumber(tmpRaw);
                  if (tmpValue == null) {
                    mergeUnknownVarintField(4, tmpRaw);
                  } else {
                    presentType_ = tmpRaw;
                    bitField0_ |= 0x00000008;
                  }
                  break;
                } // case 32
                case 40: {
                  onTimeFinish_ = input.readBool();
                  bitField0_ |= 0x00000010;
                  break;
                } // case 40
                case 48: {
                  gpuComposition_ = input.readBool();
                  bitField0_ |= 0x00000020;
                  break;
                } // case 48
                case 56: {
                  jankType_ = input.readInt32();
                  bitField0_ |= 0x00000040;
                  break;
                } // case 56
                case 64: {
                  int tmpRaw = input.readEnum();
                  perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.PredictionType tmpValue =
                      perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.PredictionType.forNumber(tmpRaw);
                  if (tmpValue == null) {
                    mergeUnknownVarintField(8, tmpRaw);
                  } else {
                    predictionType_ = tmpRaw;
                    bitField0_ |= 0x00000080;
                  }
                  break;
                } // case 64
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private long cookie_ ;
        /**
         * <pre>
         * Cookie used to correlate between the start and end messages of the same
         * frame. Since all values except the ts are same for start and end, cookie
         * helps in preventing redundant data transmission.
         * The same cookie is used only by start and end messages of a single frame
         * and is otherwise unique.
         * </pre>
         *
         * <code>optional int64 cookie = 1;</code>
         * @return Whether the cookie field is set.
         */
        @java.lang.Override
        public boolean hasCookie() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * Cookie used to correlate between the start and end messages of the same
         * frame. Since all values except the ts are same for start and end, cookie
         * helps in preventing redundant data transmission.
         * The same cookie is used only by start and end messages of a single frame
         * and is otherwise unique.
         * </pre>
         *
         * <code>optional int64 cookie = 1;</code>
         * @return The cookie.
         */
        @java.lang.Override
        public long getCookie() {
          return cookie_;
        }
        /**
         * <pre>
         * Cookie used to correlate between the start and end messages of the same
         * frame. Since all values except the ts are same for start and end, cookie
         * helps in preventing redundant data transmission.
         * The same cookie is used only by start and end messages of a single frame
         * and is otherwise unique.
         * </pre>
         *
         * <code>optional int64 cookie = 1;</code>
         * @param value The cookie to set.
         * @return This builder for chaining.
         */
        public Builder setCookie(long value) {
          
          cookie_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Cookie used to correlate between the start and end messages of the same
         * frame. Since all values except the ts are same for start and end, cookie
         * helps in preventing redundant data transmission.
         * The same cookie is used only by start and end messages of a single frame
         * and is otherwise unique.
         * </pre>
         *
         * <code>optional int64 cookie = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearCookie() {
          bitField0_ = (bitField0_ & ~0x00000001);
          cookie_ = 0L;
          onChanged();
          return this;
        }

        private long token_ ;
        /**
         * <pre>
         * Token received by SurfaceFlinger for its work
         * this.token = SurfaceFrame.display_frame_token
         * </pre>
         *
         * <code>optional int64 token = 2;</code>
         * @return Whether the token field is set.
         */
        @java.lang.Override
        public boolean hasToken() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * Token received by SurfaceFlinger for its work
         * this.token = SurfaceFrame.display_frame_token
         * </pre>
         *
         * <code>optional int64 token = 2;</code>
         * @return The token.
         */
        @java.lang.Override
        public long getToken() {
          return token_;
        }
        /**
         * <pre>
         * Token received by SurfaceFlinger for its work
         * this.token = SurfaceFrame.display_frame_token
         * </pre>
         *
         * <code>optional int64 token = 2;</code>
         * @param value The token to set.
         * @return This builder for chaining.
         */
        public Builder setToken(long value) {
          
          token_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Token received by SurfaceFlinger for its work
         * this.token = SurfaceFrame.display_frame_token
         * </pre>
         *
         * <code>optional int64 token = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearToken() {
          bitField0_ = (bitField0_ & ~0x00000002);
          token_ = 0L;
          onChanged();
          return this;
        }

        private int pid_ ;
        /**
         * <pre>
         * Pid of SurfaceFlinger. Used in creating the timeline tracks (and slices)
         * inside the SurfaceFlinger process group.
         * </pre>
         *
         * <code>optional int32 pid = 3;</code>
         * @return Whether the pid field is set.
         */
        @java.lang.Override
        public boolean hasPid() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         * Pid of SurfaceFlinger. Used in creating the timeline tracks (and slices)
         * inside the SurfaceFlinger process group.
         * </pre>
         *
         * <code>optional int32 pid = 3;</code>
         * @return The pid.
         */
        @java.lang.Override
        public int getPid() {
          return pid_;
        }
        /**
         * <pre>
         * Pid of SurfaceFlinger. Used in creating the timeline tracks (and slices)
         * inside the SurfaceFlinger process group.
         * </pre>
         *
         * <code>optional int32 pid = 3;</code>
         * @param value The pid to set.
         * @return This builder for chaining.
         */
        public Builder setPid(int value) {
          
          pid_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Pid of SurfaceFlinger. Used in creating the timeline tracks (and slices)
         * inside the SurfaceFlinger process group.
         * </pre>
         *
         * <code>optional int32 pid = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearPid() {
          bitField0_ = (bitField0_ & ~0x00000004);
          pid_ = 0;
          onChanged();
          return this;
        }

        private int presentType_ = 0;
        /**
         * <code>optional .perfetto.protos.FrameTimelineEvent.PresentType present_type = 4;</code>
         * @return Whether the presentType field is set.
         */
        @java.lang.Override public boolean hasPresentType() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <code>optional .perfetto.protos.FrameTimelineEvent.PresentType present_type = 4;</code>
         * @return The presentType.
         */
        @java.lang.Override
        public perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.PresentType getPresentType() {
          perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.PresentType result = perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.PresentType.forNumber(presentType_);
          return result == null ? perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.PresentType.PRESENT_UNSPECIFIED : result;
        }
        /**
         * <code>optional .perfetto.protos.FrameTimelineEvent.PresentType present_type = 4;</code>
         * @param value The presentType to set.
         * @return This builder for chaining.
         */
        public Builder setPresentType(perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.PresentType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000008;
          presentType_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>optional .perfetto.protos.FrameTimelineEvent.PresentType present_type = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearPresentType() {
          bitField0_ = (bitField0_ & ~0x00000008);
          presentType_ = 0;
          onChanged();
          return this;
        }

        private boolean onTimeFinish_ ;
        /**
         * <code>optional bool on_time_finish = 5;</code>
         * @return Whether the onTimeFinish field is set.
         */
        @java.lang.Override
        public boolean hasOnTimeFinish() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <code>optional bool on_time_finish = 5;</code>
         * @return The onTimeFinish.
         */
        @java.lang.Override
        public boolean getOnTimeFinish() {
          return onTimeFinish_;
        }
        /**
         * <code>optional bool on_time_finish = 5;</code>
         * @param value The onTimeFinish to set.
         * @return This builder for chaining.
         */
        public Builder setOnTimeFinish(boolean value) {
          
          onTimeFinish_ = value;
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool on_time_finish = 5;</code>
         * @return This builder for chaining.
         */
        public Builder clearOnTimeFinish() {
          bitField0_ = (bitField0_ & ~0x00000010);
          onTimeFinish_ = false;
          onChanged();
          return this;
        }

        private boolean gpuComposition_ ;
        /**
         * <code>optional bool gpu_composition = 6;</code>
         * @return Whether the gpuComposition field is set.
         */
        @java.lang.Override
        public boolean hasGpuComposition() {
          return ((bitField0_ & 0x00000020) != 0);
        }
        /**
         * <code>optional bool gpu_composition = 6;</code>
         * @return The gpuComposition.
         */
        @java.lang.Override
        public boolean getGpuComposition() {
          return gpuComposition_;
        }
        /**
         * <code>optional bool gpu_composition = 6;</code>
         * @param value The gpuComposition to set.
         * @return This builder for chaining.
         */
        public Builder setGpuComposition(boolean value) {
          
          gpuComposition_ = value;
          bitField0_ |= 0x00000020;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool gpu_composition = 6;</code>
         * @return This builder for chaining.
         */
        public Builder clearGpuComposition() {
          bitField0_ = (bitField0_ & ~0x00000020);
          gpuComposition_ = false;
          onChanged();
          return this;
        }

        private int jankType_ ;
        /**
         * <pre>
         * A bitmask of JankType. More than one reason can be attributed to a janky
         * frame.
         * </pre>
         *
         * <code>optional int32 jank_type = 7;</code>
         * @return Whether the jankType field is set.
         */
        @java.lang.Override
        public boolean hasJankType() {
          return ((bitField0_ & 0x00000040) != 0);
        }
        /**
         * <pre>
         * A bitmask of JankType. More than one reason can be attributed to a janky
         * frame.
         * </pre>
         *
         * <code>optional int32 jank_type = 7;</code>
         * @return The jankType.
         */
        @java.lang.Override
        public int getJankType() {
          return jankType_;
        }
        /**
         * <pre>
         * A bitmask of JankType. More than one reason can be attributed to a janky
         * frame.
         * </pre>
         *
         * <code>optional int32 jank_type = 7;</code>
         * @param value The jankType to set.
         * @return This builder for chaining.
         */
        public Builder setJankType(int value) {
          
          jankType_ = value;
          bitField0_ |= 0x00000040;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * A bitmask of JankType. More than one reason can be attributed to a janky
         * frame.
         * </pre>
         *
         * <code>optional int32 jank_type = 7;</code>
         * @return This builder for chaining.
         */
        public Builder clearJankType() {
          bitField0_ = (bitField0_ & ~0x00000040);
          jankType_ = 0;
          onChanged();
          return this;
        }

        private int predictionType_ = 0;
        /**
         * <code>optional .perfetto.protos.FrameTimelineEvent.PredictionType prediction_type = 8;</code>
         * @return Whether the predictionType field is set.
         */
        @java.lang.Override public boolean hasPredictionType() {
          return ((bitField0_ & 0x00000080) != 0);
        }
        /**
         * <code>optional .perfetto.protos.FrameTimelineEvent.PredictionType prediction_type = 8;</code>
         * @return The predictionType.
         */
        @java.lang.Override
        public perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.PredictionType getPredictionType() {
          perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.PredictionType result = perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.PredictionType.forNumber(predictionType_);
          return result == null ? perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.PredictionType.PREDICTION_UNSPECIFIED : result;
        }
        /**
         * <code>optional .perfetto.protos.FrameTimelineEvent.PredictionType prediction_type = 8;</code>
         * @param value The predictionType to set.
         * @return This builder for chaining.
         */
        public Builder setPredictionType(perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.PredictionType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000080;
          predictionType_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>optional .perfetto.protos.FrameTimelineEvent.PredictionType prediction_type = 8;</code>
         * @return This builder for chaining.
         */
        public Builder clearPredictionType() {
          bitField0_ = (bitField0_ & ~0x00000080);
          predictionType_ = 0;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:perfetto.protos.FrameTimelineEvent.ActualDisplayFrameStart)
      }

      // @@protoc_insertion_point(class_scope:perfetto.protos.FrameTimelineEvent.ActualDisplayFrameStart)
      private static final perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart();
      }

      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<ActualDisplayFrameStart>
          PARSER = new com.google.protobuf.AbstractParser<ActualDisplayFrameStart>() {
        @java.lang.Override
        public ActualDisplayFrameStart parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<ActualDisplayFrameStart> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<ActualDisplayFrameStart> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface FrameEndOrBuilder extends
        // @@protoc_insertion_point(interface_extends:perfetto.protos.FrameTimelineEvent.FrameEnd)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int64 cookie = 1;</code>
       * @return Whether the cookie field is set.
       */
      boolean hasCookie();
      /**
       * <code>optional int64 cookie = 1;</code>
       * @return The cookie.
       */
      long getCookie();
    }
    /**
     * <pre>
     * FrameEnd just sends the cookie to indicate that the corresponding
     * &lt;display/surface&gt;frame slice's end.
     * </pre>
     *
     * Protobuf type {@code perfetto.protos.FrameTimelineEvent.FrameEnd}
     */
    public static final class FrameEnd extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:perfetto.protos.FrameTimelineEvent.FrameEnd)
        FrameEndOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use FrameEnd.newBuilder() to construct.
      private FrameEnd(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private FrameEnd() {
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new FrameEnd();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.FrameTimelineEventOuterClass.internal_static_perfetto_protos_FrameTimelineEvent_FrameEnd_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.FrameTimelineEventOuterClass.internal_static_perfetto_protos_FrameTimelineEvent_FrameEnd_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd.class, perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd.Builder.class);
      }

      private int bitField0_;
      public static final int COOKIE_FIELD_NUMBER = 1;
      private long cookie_ = 0L;
      /**
       * <code>optional int64 cookie = 1;</code>
       * @return Whether the cookie field is set.
       */
      @java.lang.Override
      public boolean hasCookie() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional int64 cookie = 1;</code>
       * @return The cookie.
       */
      @java.lang.Override
      public long getCookie() {
        return cookie_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeInt64(1, cookie_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt64Size(1, cookie_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd)) {
          return super.equals(obj);
        }
        perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd other = (perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd) obj;

        if (hasCookie() != other.hasCookie()) return false;
        if (hasCookie()) {
          if (getCookie()
              != other.getCookie()) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasCookie()) {
          hash = (37 * hash) + COOKIE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getCookie());
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * FrameEnd just sends the cookie to indicate that the corresponding
       * &lt;display/surface&gt;frame slice's end.
       * </pre>
       *
       * Protobuf type {@code perfetto.protos.FrameTimelineEvent.FrameEnd}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:perfetto.protos.FrameTimelineEvent.FrameEnd)
          perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEndOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return perfetto.protos.FrameTimelineEventOuterClass.internal_static_perfetto_protos_FrameTimelineEvent_FrameEnd_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return perfetto.protos.FrameTimelineEventOuterClass.internal_static_perfetto_protos_FrameTimelineEvent_FrameEnd_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd.class, perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd.Builder.class);
        }

        // Construct using perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          cookie_ = 0L;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return perfetto.protos.FrameTimelineEventOuterClass.internal_static_perfetto_protos_FrameTimelineEvent_FrameEnd_descriptor;
        }

        @java.lang.Override
        public perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd getDefaultInstanceForType() {
          return perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd.getDefaultInstance();
        }

        @java.lang.Override
        public perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd build() {
          perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd buildPartial() {
          perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd result = new perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.cookie_ = cookie_;
            to_bitField0_ |= 0x00000001;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd) {
            return mergeFrom((perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd other) {
          if (other == perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd.getDefaultInstance()) return this;
          if (other.hasCookie()) {
            setCookie(other.getCookie());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  cookie_ = input.readInt64();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private long cookie_ ;
        /**
         * <code>optional int64 cookie = 1;</code>
         * @return Whether the cookie field is set.
         */
        @java.lang.Override
        public boolean hasCookie() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional int64 cookie = 1;</code>
         * @return The cookie.
         */
        @java.lang.Override
        public long getCookie() {
          return cookie_;
        }
        /**
         * <code>optional int64 cookie = 1;</code>
         * @param value The cookie to set.
         * @return This builder for chaining.
         */
        public Builder setCookie(long value) {
          
          cookie_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional int64 cookie = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearCookie() {
          bitField0_ = (bitField0_ & ~0x00000001);
          cookie_ = 0L;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:perfetto.protos.FrameTimelineEvent.FrameEnd)
      }

      // @@protoc_insertion_point(class_scope:perfetto.protos.FrameTimelineEvent.FrameEnd)
      private static final perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd();
      }

      public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<FrameEnd>
          PARSER = new com.google.protobuf.AbstractParser<FrameEnd>() {
        @java.lang.Override
        public FrameEnd parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<FrameEnd> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<FrameEnd> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    private int eventCase_ = 0;
    private java.lang.Object event_;
    public enum EventCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      EXPECTED_DISPLAY_FRAME_START(1),
      ACTUAL_DISPLAY_FRAME_START(2),
      EXPECTED_SURFACE_FRAME_START(3),
      ACTUAL_SURFACE_FRAME_START(4),
      FRAME_END(5),
      EVENT_NOT_SET(0);
      private final int value;
      private EventCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static EventCase valueOf(int value) {
        return forNumber(value);
      }

      public static EventCase forNumber(int value) {
        switch (value) {
          case 1: return EXPECTED_DISPLAY_FRAME_START;
          case 2: return ACTUAL_DISPLAY_FRAME_START;
          case 3: return EXPECTED_SURFACE_FRAME_START;
          case 4: return ACTUAL_SURFACE_FRAME_START;
          case 5: return FRAME_END;
          case 0: return EVENT_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public EventCase
    getEventCase() {
      return EventCase.forNumber(
          eventCase_);
    }

    public static final int EXPECTED_DISPLAY_FRAME_START_FIELD_NUMBER = 1;
    /**
     * <code>.perfetto.protos.FrameTimelineEvent.ExpectedDisplayFrameStart expected_display_frame_start = 1;</code>
     * @return Whether the expectedDisplayFrameStart field is set.
     */
    @java.lang.Override
    public boolean hasExpectedDisplayFrameStart() {
      return eventCase_ == 1;
    }
    /**
     * <code>.perfetto.protos.FrameTimelineEvent.ExpectedDisplayFrameStart expected_display_frame_start = 1;</code>
     * @return The expectedDisplayFrameStart.
     */
    @java.lang.Override
    public perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart getExpectedDisplayFrameStart() {
      if (eventCase_ == 1) {
         return (perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart) event_;
      }
      return perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart.getDefaultInstance();
    }
    /**
     * <code>.perfetto.protos.FrameTimelineEvent.ExpectedDisplayFrameStart expected_display_frame_start = 1;</code>
     */
    @java.lang.Override
    public perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStartOrBuilder getExpectedDisplayFrameStartOrBuilder() {
      if (eventCase_ == 1) {
         return (perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart) event_;
      }
      return perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart.getDefaultInstance();
    }

    public static final int ACTUAL_DISPLAY_FRAME_START_FIELD_NUMBER = 2;
    /**
     * <code>.perfetto.protos.FrameTimelineEvent.ActualDisplayFrameStart actual_display_frame_start = 2;</code>
     * @return Whether the actualDisplayFrameStart field is set.
     */
    @java.lang.Override
    public boolean hasActualDisplayFrameStart() {
      return eventCase_ == 2;
    }
    /**
     * <code>.perfetto.protos.FrameTimelineEvent.ActualDisplayFrameStart actual_display_frame_start = 2;</code>
     * @return The actualDisplayFrameStart.
     */
    @java.lang.Override
    public perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart getActualDisplayFrameStart() {
      if (eventCase_ == 2) {
         return (perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart) event_;
      }
      return perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart.getDefaultInstance();
    }
    /**
     * <code>.perfetto.protos.FrameTimelineEvent.ActualDisplayFrameStart actual_display_frame_start = 2;</code>
     */
    @java.lang.Override
    public perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStartOrBuilder getActualDisplayFrameStartOrBuilder() {
      if (eventCase_ == 2) {
         return (perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart) event_;
      }
      return perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart.getDefaultInstance();
    }

    public static final int EXPECTED_SURFACE_FRAME_START_FIELD_NUMBER = 3;
    /**
     * <code>.perfetto.protos.FrameTimelineEvent.ExpectedSurfaceFrameStart expected_surface_frame_start = 3;</code>
     * @return Whether the expectedSurfaceFrameStart field is set.
     */
    @java.lang.Override
    public boolean hasExpectedSurfaceFrameStart() {
      return eventCase_ == 3;
    }
    /**
     * <code>.perfetto.protos.FrameTimelineEvent.ExpectedSurfaceFrameStart expected_surface_frame_start = 3;</code>
     * @return The expectedSurfaceFrameStart.
     */
    @java.lang.Override
    public perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart getExpectedSurfaceFrameStart() {
      if (eventCase_ == 3) {
         return (perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart) event_;
      }
      return perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart.getDefaultInstance();
    }
    /**
     * <code>.perfetto.protos.FrameTimelineEvent.ExpectedSurfaceFrameStart expected_surface_frame_start = 3;</code>
     */
    @java.lang.Override
    public perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStartOrBuilder getExpectedSurfaceFrameStartOrBuilder() {
      if (eventCase_ == 3) {
         return (perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart) event_;
      }
      return perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart.getDefaultInstance();
    }

    public static final int ACTUAL_SURFACE_FRAME_START_FIELD_NUMBER = 4;
    /**
     * <code>.perfetto.protos.FrameTimelineEvent.ActualSurfaceFrameStart actual_surface_frame_start = 4;</code>
     * @return Whether the actualSurfaceFrameStart field is set.
     */
    @java.lang.Override
    public boolean hasActualSurfaceFrameStart() {
      return eventCase_ == 4;
    }
    /**
     * <code>.perfetto.protos.FrameTimelineEvent.ActualSurfaceFrameStart actual_surface_frame_start = 4;</code>
     * @return The actualSurfaceFrameStart.
     */
    @java.lang.Override
    public perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart getActualSurfaceFrameStart() {
      if (eventCase_ == 4) {
         return (perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart) event_;
      }
      return perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart.getDefaultInstance();
    }
    /**
     * <code>.perfetto.protos.FrameTimelineEvent.ActualSurfaceFrameStart actual_surface_frame_start = 4;</code>
     */
    @java.lang.Override
    public perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStartOrBuilder getActualSurfaceFrameStartOrBuilder() {
      if (eventCase_ == 4) {
         return (perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart) event_;
      }
      return perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart.getDefaultInstance();
    }

    public static final int FRAME_END_FIELD_NUMBER = 5;
    /**
     * <code>.perfetto.protos.FrameTimelineEvent.FrameEnd frame_end = 5;</code>
     * @return Whether the frameEnd field is set.
     */
    @java.lang.Override
    public boolean hasFrameEnd() {
      return eventCase_ == 5;
    }
    /**
     * <code>.perfetto.protos.FrameTimelineEvent.FrameEnd frame_end = 5;</code>
     * @return The frameEnd.
     */
    @java.lang.Override
    public perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd getFrameEnd() {
      if (eventCase_ == 5) {
         return (perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd) event_;
      }
      return perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd.getDefaultInstance();
    }
    /**
     * <code>.perfetto.protos.FrameTimelineEvent.FrameEnd frame_end = 5;</code>
     */
    @java.lang.Override
    public perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEndOrBuilder getFrameEndOrBuilder() {
      if (eventCase_ == 5) {
         return (perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd) event_;
      }
      return perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (eventCase_ == 1) {
        output.writeMessage(1, (perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart) event_);
      }
      if (eventCase_ == 2) {
        output.writeMessage(2, (perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart) event_);
      }
      if (eventCase_ == 3) {
        output.writeMessage(3, (perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart) event_);
      }
      if (eventCase_ == 4) {
        output.writeMessage(4, (perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart) event_);
      }
      if (eventCase_ == 5) {
        output.writeMessage(5, (perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd) event_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (eventCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart) event_);
      }
      if (eventCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart) event_);
      }
      if (eventCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart) event_);
      }
      if (eventCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart) event_);
      }
      if (eventCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, (perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd) event_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent)) {
        return super.equals(obj);
      }
      perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent other = (perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent) obj;

      if (!getEventCase().equals(other.getEventCase())) return false;
      switch (eventCase_) {
        case 1:
          if (!getExpectedDisplayFrameStart()
              .equals(other.getExpectedDisplayFrameStart())) return false;
          break;
        case 2:
          if (!getActualDisplayFrameStart()
              .equals(other.getActualDisplayFrameStart())) return false;
          break;
        case 3:
          if (!getExpectedSurfaceFrameStart()
              .equals(other.getExpectedSurfaceFrameStart())) return false;
          break;
        case 4:
          if (!getActualSurfaceFrameStart()
              .equals(other.getActualSurfaceFrameStart())) return false;
          break;
        case 5:
          if (!getFrameEnd()
              .equals(other.getFrameEnd())) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (eventCase_) {
        case 1:
          hash = (37 * hash) + EXPECTED_DISPLAY_FRAME_START_FIELD_NUMBER;
          hash = (53 * hash) + getExpectedDisplayFrameStart().hashCode();
          break;
        case 2:
          hash = (37 * hash) + ACTUAL_DISPLAY_FRAME_START_FIELD_NUMBER;
          hash = (53 * hash) + getActualDisplayFrameStart().hashCode();
          break;
        case 3:
          hash = (37 * hash) + EXPECTED_SURFACE_FRAME_START_FIELD_NUMBER;
          hash = (53 * hash) + getExpectedSurfaceFrameStart().hashCode();
          break;
        case 4:
          hash = (37 * hash) + ACTUAL_SURFACE_FRAME_START_FIELD_NUMBER;
          hash = (53 * hash) + getActualSurfaceFrameStart().hashCode();
          break;
        case 5:
          hash = (37 * hash) + FRAME_END_FIELD_NUMBER;
          hash = (53 * hash) + getFrameEnd().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Generated by SurfaceFlinger's FrameTimeline (go/adaptive-scheduling-fr).
     * Used in comparing the expected timeline of a frame to the actual timeline.
     * Key terms:
     *    1) DisplayFrame - represents SurfaceFlinger's work on a frame(composited)
     *    2) SurfaceFrame - represents App's work on its frame
     *    3) Timeline = start to end of a component's(app/SF) work on a frame.
     * SurfaceFlinger composites frames from many apps together, so
     *    One DisplayFrame can map to N SurfaceFrame(s)
     * This relationship can be reconstructed by using
     *    DisplayFrame.token = SurfaceFrame.display_frame_token
     * </pre>
     *
     * Protobuf type {@code perfetto.protos.FrameTimelineEvent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:perfetto.protos.FrameTimelineEvent)
        perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.FrameTimelineEventOuterClass.internal_static_perfetto_protos_FrameTimelineEvent_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.FrameTimelineEventOuterClass.internal_static_perfetto_protos_FrameTimelineEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.class, perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.Builder.class);
      }

      // Construct using perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (expectedDisplayFrameStartBuilder_ != null) {
          expectedDisplayFrameStartBuilder_.clear();
        }
        if (actualDisplayFrameStartBuilder_ != null) {
          actualDisplayFrameStartBuilder_.clear();
        }
        if (expectedSurfaceFrameStartBuilder_ != null) {
          expectedSurfaceFrameStartBuilder_.clear();
        }
        if (actualSurfaceFrameStartBuilder_ != null) {
          actualSurfaceFrameStartBuilder_.clear();
        }
        if (frameEndBuilder_ != null) {
          frameEndBuilder_.clear();
        }
        eventCase_ = 0;
        event_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return perfetto.protos.FrameTimelineEventOuterClass.internal_static_perfetto_protos_FrameTimelineEvent_descriptor;
      }

      @java.lang.Override
      public perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent getDefaultInstanceForType() {
        return perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.getDefaultInstance();
      }

      @java.lang.Override
      public perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent build() {
        perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent buildPartial() {
        perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent result = new perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        buildPartialOneofs(result);
        onBuilt();
        return result;
      }

      private void buildPartial0(perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent result) {
        int from_bitField0_ = bitField0_;
      }

      private void buildPartialOneofs(perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent result) {
        result.eventCase_ = eventCase_;
        result.event_ = this.event_;
        if (eventCase_ == 1 &&
            expectedDisplayFrameStartBuilder_ != null) {
          result.event_ = expectedDisplayFrameStartBuilder_.build();
        }
        if (eventCase_ == 2 &&
            actualDisplayFrameStartBuilder_ != null) {
          result.event_ = actualDisplayFrameStartBuilder_.build();
        }
        if (eventCase_ == 3 &&
            expectedSurfaceFrameStartBuilder_ != null) {
          result.event_ = expectedSurfaceFrameStartBuilder_.build();
        }
        if (eventCase_ == 4 &&
            actualSurfaceFrameStartBuilder_ != null) {
          result.event_ = actualSurfaceFrameStartBuilder_.build();
        }
        if (eventCase_ == 5 &&
            frameEndBuilder_ != null) {
          result.event_ = frameEndBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent) {
          return mergeFrom((perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent other) {
        if (other == perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.getDefaultInstance()) return this;
        switch (other.getEventCase()) {
          case EXPECTED_DISPLAY_FRAME_START: {
            mergeExpectedDisplayFrameStart(other.getExpectedDisplayFrameStart());
            break;
          }
          case ACTUAL_DISPLAY_FRAME_START: {
            mergeActualDisplayFrameStart(other.getActualDisplayFrameStart());
            break;
          }
          case EXPECTED_SURFACE_FRAME_START: {
            mergeExpectedSurfaceFrameStart(other.getExpectedSurfaceFrameStart());
            break;
          }
          case ACTUAL_SURFACE_FRAME_START: {
            mergeActualSurfaceFrameStart(other.getActualSurfaceFrameStart());
            break;
          }
          case FRAME_END: {
            mergeFrameEnd(other.getFrameEnd());
            break;
          }
          case EVENT_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getExpectedDisplayFrameStartFieldBuilder().getBuilder(),
                    extensionRegistry);
                eventCase_ = 1;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getActualDisplayFrameStartFieldBuilder().getBuilder(),
                    extensionRegistry);
                eventCase_ = 2;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getExpectedSurfaceFrameStartFieldBuilder().getBuilder(),
                    extensionRegistry);
                eventCase_ = 3;
                break;
              } // case 26
              case 34: {
                input.readMessage(
                    getActualSurfaceFrameStartFieldBuilder().getBuilder(),
                    extensionRegistry);
                eventCase_ = 4;
                break;
              } // case 34
              case 42: {
                input.readMessage(
                    getFrameEndFieldBuilder().getBuilder(),
                    extensionRegistry);
                eventCase_ = 5;
                break;
              } // case 42
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int eventCase_ = 0;
      private java.lang.Object event_;
      public EventCase
          getEventCase() {
        return EventCase.forNumber(
            eventCase_);
      }

      public Builder clearEvent() {
        eventCase_ = 0;
        event_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private com.google.protobuf.SingleFieldBuilderV3<
          perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart, perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart.Builder, perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStartOrBuilder> expectedDisplayFrameStartBuilder_;
      /**
       * <code>.perfetto.protos.FrameTimelineEvent.ExpectedDisplayFrameStart expected_display_frame_start = 1;</code>
       * @return Whether the expectedDisplayFrameStart field is set.
       */
      @java.lang.Override
      public boolean hasExpectedDisplayFrameStart() {
        return eventCase_ == 1;
      }
      /**
       * <code>.perfetto.protos.FrameTimelineEvent.ExpectedDisplayFrameStart expected_display_frame_start = 1;</code>
       * @return The expectedDisplayFrameStart.
       */
      @java.lang.Override
      public perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart getExpectedDisplayFrameStart() {
        if (expectedDisplayFrameStartBuilder_ == null) {
          if (eventCase_ == 1) {
            return (perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart) event_;
          }
          return perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart.getDefaultInstance();
        } else {
          if (eventCase_ == 1) {
            return expectedDisplayFrameStartBuilder_.getMessage();
          }
          return perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart.getDefaultInstance();
        }
      }
      /**
       * <code>.perfetto.protos.FrameTimelineEvent.ExpectedDisplayFrameStart expected_display_frame_start = 1;</code>
       */
      public Builder setExpectedDisplayFrameStart(perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart value) {
        if (expectedDisplayFrameStartBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          event_ = value;
          onChanged();
        } else {
          expectedDisplayFrameStartBuilder_.setMessage(value);
        }
        eventCase_ = 1;
        return this;
      }
      /**
       * <code>.perfetto.protos.FrameTimelineEvent.ExpectedDisplayFrameStart expected_display_frame_start = 1;</code>
       */
      public Builder setExpectedDisplayFrameStart(
          perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart.Builder builderForValue) {
        if (expectedDisplayFrameStartBuilder_ == null) {
          event_ = builderForValue.build();
          onChanged();
        } else {
          expectedDisplayFrameStartBuilder_.setMessage(builderForValue.build());
        }
        eventCase_ = 1;
        return this;
      }
      /**
       * <code>.perfetto.protos.FrameTimelineEvent.ExpectedDisplayFrameStart expected_display_frame_start = 1;</code>
       */
      public Builder mergeExpectedDisplayFrameStart(perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart value) {
        if (expectedDisplayFrameStartBuilder_ == null) {
          if (eventCase_ == 1 &&
              event_ != perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart.getDefaultInstance()) {
            event_ = perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart.newBuilder((perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart) event_)
                .mergeFrom(value).buildPartial();
          } else {
            event_ = value;
          }
          onChanged();
        } else {
          if (eventCase_ == 1) {
            expectedDisplayFrameStartBuilder_.mergeFrom(value);
          } else {
            expectedDisplayFrameStartBuilder_.setMessage(value);
          }
        }
        eventCase_ = 1;
        return this;
      }
      /**
       * <code>.perfetto.protos.FrameTimelineEvent.ExpectedDisplayFrameStart expected_display_frame_start = 1;</code>
       */
      public Builder clearExpectedDisplayFrameStart() {
        if (expectedDisplayFrameStartBuilder_ == null) {
          if (eventCase_ == 1) {
            eventCase_ = 0;
            event_ = null;
            onChanged();
          }
        } else {
          if (eventCase_ == 1) {
            eventCase_ = 0;
            event_ = null;
          }
          expectedDisplayFrameStartBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.perfetto.protos.FrameTimelineEvent.ExpectedDisplayFrameStart expected_display_frame_start = 1;</code>
       */
      public perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart.Builder getExpectedDisplayFrameStartBuilder() {
        return getExpectedDisplayFrameStartFieldBuilder().getBuilder();
      }
      /**
       * <code>.perfetto.protos.FrameTimelineEvent.ExpectedDisplayFrameStart expected_display_frame_start = 1;</code>
       */
      @java.lang.Override
      public perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStartOrBuilder getExpectedDisplayFrameStartOrBuilder() {
        if ((eventCase_ == 1) && (expectedDisplayFrameStartBuilder_ != null)) {
          return expectedDisplayFrameStartBuilder_.getMessageOrBuilder();
        } else {
          if (eventCase_ == 1) {
            return (perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart) event_;
          }
          return perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart.getDefaultInstance();
        }
      }
      /**
       * <code>.perfetto.protos.FrameTimelineEvent.ExpectedDisplayFrameStart expected_display_frame_start = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart, perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart.Builder, perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStartOrBuilder> 
          getExpectedDisplayFrameStartFieldBuilder() {
        if (expectedDisplayFrameStartBuilder_ == null) {
          if (!(eventCase_ == 1)) {
            event_ = perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart.getDefaultInstance();
          }
          expectedDisplayFrameStartBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart, perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart.Builder, perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStartOrBuilder>(
                  (perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedDisplayFrameStart) event_,
                  getParentForChildren(),
                  isClean());
          event_ = null;
        }
        eventCase_ = 1;
        onChanged();
        return expectedDisplayFrameStartBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart, perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart.Builder, perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStartOrBuilder> actualDisplayFrameStartBuilder_;
      /**
       * <code>.perfetto.protos.FrameTimelineEvent.ActualDisplayFrameStart actual_display_frame_start = 2;</code>
       * @return Whether the actualDisplayFrameStart field is set.
       */
      @java.lang.Override
      public boolean hasActualDisplayFrameStart() {
        return eventCase_ == 2;
      }
      /**
       * <code>.perfetto.protos.FrameTimelineEvent.ActualDisplayFrameStart actual_display_frame_start = 2;</code>
       * @return The actualDisplayFrameStart.
       */
      @java.lang.Override
      public perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart getActualDisplayFrameStart() {
        if (actualDisplayFrameStartBuilder_ == null) {
          if (eventCase_ == 2) {
            return (perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart) event_;
          }
          return perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart.getDefaultInstance();
        } else {
          if (eventCase_ == 2) {
            return actualDisplayFrameStartBuilder_.getMessage();
          }
          return perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart.getDefaultInstance();
        }
      }
      /**
       * <code>.perfetto.protos.FrameTimelineEvent.ActualDisplayFrameStart actual_display_frame_start = 2;</code>
       */
      public Builder setActualDisplayFrameStart(perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart value) {
        if (actualDisplayFrameStartBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          event_ = value;
          onChanged();
        } else {
          actualDisplayFrameStartBuilder_.setMessage(value);
        }
        eventCase_ = 2;
        return this;
      }
      /**
       * <code>.perfetto.protos.FrameTimelineEvent.ActualDisplayFrameStart actual_display_frame_start = 2;</code>
       */
      public Builder setActualDisplayFrameStart(
          perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart.Builder builderForValue) {
        if (actualDisplayFrameStartBuilder_ == null) {
          event_ = builderForValue.build();
          onChanged();
        } else {
          actualDisplayFrameStartBuilder_.setMessage(builderForValue.build());
        }
        eventCase_ = 2;
        return this;
      }
      /**
       * <code>.perfetto.protos.FrameTimelineEvent.ActualDisplayFrameStart actual_display_frame_start = 2;</code>
       */
      public Builder mergeActualDisplayFrameStart(perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart value) {
        if (actualDisplayFrameStartBuilder_ == null) {
          if (eventCase_ == 2 &&
              event_ != perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart.getDefaultInstance()) {
            event_ = perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart.newBuilder((perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart) event_)
                .mergeFrom(value).buildPartial();
          } else {
            event_ = value;
          }
          onChanged();
        } else {
          if (eventCase_ == 2) {
            actualDisplayFrameStartBuilder_.mergeFrom(value);
          } else {
            actualDisplayFrameStartBuilder_.setMessage(value);
          }
        }
        eventCase_ = 2;
        return this;
      }
      /**
       * <code>.perfetto.protos.FrameTimelineEvent.ActualDisplayFrameStart actual_display_frame_start = 2;</code>
       */
      public Builder clearActualDisplayFrameStart() {
        if (actualDisplayFrameStartBuilder_ == null) {
          if (eventCase_ == 2) {
            eventCase_ = 0;
            event_ = null;
            onChanged();
          }
        } else {
          if (eventCase_ == 2) {
            eventCase_ = 0;
            event_ = null;
          }
          actualDisplayFrameStartBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.perfetto.protos.FrameTimelineEvent.ActualDisplayFrameStart actual_display_frame_start = 2;</code>
       */
      public perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart.Builder getActualDisplayFrameStartBuilder() {
        return getActualDisplayFrameStartFieldBuilder().getBuilder();
      }
      /**
       * <code>.perfetto.protos.FrameTimelineEvent.ActualDisplayFrameStart actual_display_frame_start = 2;</code>
       */
      @java.lang.Override
      public perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStartOrBuilder getActualDisplayFrameStartOrBuilder() {
        if ((eventCase_ == 2) && (actualDisplayFrameStartBuilder_ != null)) {
          return actualDisplayFrameStartBuilder_.getMessageOrBuilder();
        } else {
          if (eventCase_ == 2) {
            return (perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart) event_;
          }
          return perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart.getDefaultInstance();
        }
      }
      /**
       * <code>.perfetto.protos.FrameTimelineEvent.ActualDisplayFrameStart actual_display_frame_start = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart, perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart.Builder, perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStartOrBuilder> 
          getActualDisplayFrameStartFieldBuilder() {
        if (actualDisplayFrameStartBuilder_ == null) {
          if (!(eventCase_ == 2)) {
            event_ = perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart.getDefaultInstance();
          }
          actualDisplayFrameStartBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart, perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart.Builder, perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStartOrBuilder>(
                  (perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualDisplayFrameStart) event_,
                  getParentForChildren(),
                  isClean());
          event_ = null;
        }
        eventCase_ = 2;
        onChanged();
        return actualDisplayFrameStartBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart, perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart.Builder, perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStartOrBuilder> expectedSurfaceFrameStartBuilder_;
      /**
       * <code>.perfetto.protos.FrameTimelineEvent.ExpectedSurfaceFrameStart expected_surface_frame_start = 3;</code>
       * @return Whether the expectedSurfaceFrameStart field is set.
       */
      @java.lang.Override
      public boolean hasExpectedSurfaceFrameStart() {
        return eventCase_ == 3;
      }
      /**
       * <code>.perfetto.protos.FrameTimelineEvent.ExpectedSurfaceFrameStart expected_surface_frame_start = 3;</code>
       * @return The expectedSurfaceFrameStart.
       */
      @java.lang.Override
      public perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart getExpectedSurfaceFrameStart() {
        if (expectedSurfaceFrameStartBuilder_ == null) {
          if (eventCase_ == 3) {
            return (perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart) event_;
          }
          return perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart.getDefaultInstance();
        } else {
          if (eventCase_ == 3) {
            return expectedSurfaceFrameStartBuilder_.getMessage();
          }
          return perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart.getDefaultInstance();
        }
      }
      /**
       * <code>.perfetto.protos.FrameTimelineEvent.ExpectedSurfaceFrameStart expected_surface_frame_start = 3;</code>
       */
      public Builder setExpectedSurfaceFrameStart(perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart value) {
        if (expectedSurfaceFrameStartBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          event_ = value;
          onChanged();
        } else {
          expectedSurfaceFrameStartBuilder_.setMessage(value);
        }
        eventCase_ = 3;
        return this;
      }
      /**
       * <code>.perfetto.protos.FrameTimelineEvent.ExpectedSurfaceFrameStart expected_surface_frame_start = 3;</code>
       */
      public Builder setExpectedSurfaceFrameStart(
          perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart.Builder builderForValue) {
        if (expectedSurfaceFrameStartBuilder_ == null) {
          event_ = builderForValue.build();
          onChanged();
        } else {
          expectedSurfaceFrameStartBuilder_.setMessage(builderForValue.build());
        }
        eventCase_ = 3;
        return this;
      }
      /**
       * <code>.perfetto.protos.FrameTimelineEvent.ExpectedSurfaceFrameStart expected_surface_frame_start = 3;</code>
       */
      public Builder mergeExpectedSurfaceFrameStart(perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart value) {
        if (expectedSurfaceFrameStartBuilder_ == null) {
          if (eventCase_ == 3 &&
              event_ != perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart.getDefaultInstance()) {
            event_ = perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart.newBuilder((perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart) event_)
                .mergeFrom(value).buildPartial();
          } else {
            event_ = value;
          }
          onChanged();
        } else {
          if (eventCase_ == 3) {
            expectedSurfaceFrameStartBuilder_.mergeFrom(value);
          } else {
            expectedSurfaceFrameStartBuilder_.setMessage(value);
          }
        }
        eventCase_ = 3;
        return this;
      }
      /**
       * <code>.perfetto.protos.FrameTimelineEvent.ExpectedSurfaceFrameStart expected_surface_frame_start = 3;</code>
       */
      public Builder clearExpectedSurfaceFrameStart() {
        if (expectedSurfaceFrameStartBuilder_ == null) {
          if (eventCase_ == 3) {
            eventCase_ = 0;
            event_ = null;
            onChanged();
          }
        } else {
          if (eventCase_ == 3) {
            eventCase_ = 0;
            event_ = null;
          }
          expectedSurfaceFrameStartBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.perfetto.protos.FrameTimelineEvent.ExpectedSurfaceFrameStart expected_surface_frame_start = 3;</code>
       */
      public perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart.Builder getExpectedSurfaceFrameStartBuilder() {
        return getExpectedSurfaceFrameStartFieldBuilder().getBuilder();
      }
      /**
       * <code>.perfetto.protos.FrameTimelineEvent.ExpectedSurfaceFrameStart expected_surface_frame_start = 3;</code>
       */
      @java.lang.Override
      public perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStartOrBuilder getExpectedSurfaceFrameStartOrBuilder() {
        if ((eventCase_ == 3) && (expectedSurfaceFrameStartBuilder_ != null)) {
          return expectedSurfaceFrameStartBuilder_.getMessageOrBuilder();
        } else {
          if (eventCase_ == 3) {
            return (perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart) event_;
          }
          return perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart.getDefaultInstance();
        }
      }
      /**
       * <code>.perfetto.protos.FrameTimelineEvent.ExpectedSurfaceFrameStart expected_surface_frame_start = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart, perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart.Builder, perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStartOrBuilder> 
          getExpectedSurfaceFrameStartFieldBuilder() {
        if (expectedSurfaceFrameStartBuilder_ == null) {
          if (!(eventCase_ == 3)) {
            event_ = perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart.getDefaultInstance();
          }
          expectedSurfaceFrameStartBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart, perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart.Builder, perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStartOrBuilder>(
                  (perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ExpectedSurfaceFrameStart) event_,
                  getParentForChildren(),
                  isClean());
          event_ = null;
        }
        eventCase_ = 3;
        onChanged();
        return expectedSurfaceFrameStartBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart, perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart.Builder, perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStartOrBuilder> actualSurfaceFrameStartBuilder_;
      /**
       * <code>.perfetto.protos.FrameTimelineEvent.ActualSurfaceFrameStart actual_surface_frame_start = 4;</code>
       * @return Whether the actualSurfaceFrameStart field is set.
       */
      @java.lang.Override
      public boolean hasActualSurfaceFrameStart() {
        return eventCase_ == 4;
      }
      /**
       * <code>.perfetto.protos.FrameTimelineEvent.ActualSurfaceFrameStart actual_surface_frame_start = 4;</code>
       * @return The actualSurfaceFrameStart.
       */
      @java.lang.Override
      public perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart getActualSurfaceFrameStart() {
        if (actualSurfaceFrameStartBuilder_ == null) {
          if (eventCase_ == 4) {
            return (perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart) event_;
          }
          return perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart.getDefaultInstance();
        } else {
          if (eventCase_ == 4) {
            return actualSurfaceFrameStartBuilder_.getMessage();
          }
          return perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart.getDefaultInstance();
        }
      }
      /**
       * <code>.perfetto.protos.FrameTimelineEvent.ActualSurfaceFrameStart actual_surface_frame_start = 4;</code>
       */
      public Builder setActualSurfaceFrameStart(perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart value) {
        if (actualSurfaceFrameStartBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          event_ = value;
          onChanged();
        } else {
          actualSurfaceFrameStartBuilder_.setMessage(value);
        }
        eventCase_ = 4;
        return this;
      }
      /**
       * <code>.perfetto.protos.FrameTimelineEvent.ActualSurfaceFrameStart actual_surface_frame_start = 4;</code>
       */
      public Builder setActualSurfaceFrameStart(
          perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart.Builder builderForValue) {
        if (actualSurfaceFrameStartBuilder_ == null) {
          event_ = builderForValue.build();
          onChanged();
        } else {
          actualSurfaceFrameStartBuilder_.setMessage(builderForValue.build());
        }
        eventCase_ = 4;
        return this;
      }
      /**
       * <code>.perfetto.protos.FrameTimelineEvent.ActualSurfaceFrameStart actual_surface_frame_start = 4;</code>
       */
      public Builder mergeActualSurfaceFrameStart(perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart value) {
        if (actualSurfaceFrameStartBuilder_ == null) {
          if (eventCase_ == 4 &&
              event_ != perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart.getDefaultInstance()) {
            event_ = perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart.newBuilder((perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart) event_)
                .mergeFrom(value).buildPartial();
          } else {
            event_ = value;
          }
          onChanged();
        } else {
          if (eventCase_ == 4) {
            actualSurfaceFrameStartBuilder_.mergeFrom(value);
          } else {
            actualSurfaceFrameStartBuilder_.setMessage(value);
          }
        }
        eventCase_ = 4;
        return this;
      }
      /**
       * <code>.perfetto.protos.FrameTimelineEvent.ActualSurfaceFrameStart actual_surface_frame_start = 4;</code>
       */
      public Builder clearActualSurfaceFrameStart() {
        if (actualSurfaceFrameStartBuilder_ == null) {
          if (eventCase_ == 4) {
            eventCase_ = 0;
            event_ = null;
            onChanged();
          }
        } else {
          if (eventCase_ == 4) {
            eventCase_ = 0;
            event_ = null;
          }
          actualSurfaceFrameStartBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.perfetto.protos.FrameTimelineEvent.ActualSurfaceFrameStart actual_surface_frame_start = 4;</code>
       */
      public perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart.Builder getActualSurfaceFrameStartBuilder() {
        return getActualSurfaceFrameStartFieldBuilder().getBuilder();
      }
      /**
       * <code>.perfetto.protos.FrameTimelineEvent.ActualSurfaceFrameStart actual_surface_frame_start = 4;</code>
       */
      @java.lang.Override
      public perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStartOrBuilder getActualSurfaceFrameStartOrBuilder() {
        if ((eventCase_ == 4) && (actualSurfaceFrameStartBuilder_ != null)) {
          return actualSurfaceFrameStartBuilder_.getMessageOrBuilder();
        } else {
          if (eventCase_ == 4) {
            return (perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart) event_;
          }
          return perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart.getDefaultInstance();
        }
      }
      /**
       * <code>.perfetto.protos.FrameTimelineEvent.ActualSurfaceFrameStart actual_surface_frame_start = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart, perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart.Builder, perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStartOrBuilder> 
          getActualSurfaceFrameStartFieldBuilder() {
        if (actualSurfaceFrameStartBuilder_ == null) {
          if (!(eventCase_ == 4)) {
            event_ = perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart.getDefaultInstance();
          }
          actualSurfaceFrameStartBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart, perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart.Builder, perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStartOrBuilder>(
                  (perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.ActualSurfaceFrameStart) event_,
                  getParentForChildren(),
                  isClean());
          event_ = null;
        }
        eventCase_ = 4;
        onChanged();
        return actualSurfaceFrameStartBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd, perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd.Builder, perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEndOrBuilder> frameEndBuilder_;
      /**
       * <code>.perfetto.protos.FrameTimelineEvent.FrameEnd frame_end = 5;</code>
       * @return Whether the frameEnd field is set.
       */
      @java.lang.Override
      public boolean hasFrameEnd() {
        return eventCase_ == 5;
      }
      /**
       * <code>.perfetto.protos.FrameTimelineEvent.FrameEnd frame_end = 5;</code>
       * @return The frameEnd.
       */
      @java.lang.Override
      public perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd getFrameEnd() {
        if (frameEndBuilder_ == null) {
          if (eventCase_ == 5) {
            return (perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd) event_;
          }
          return perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd.getDefaultInstance();
        } else {
          if (eventCase_ == 5) {
            return frameEndBuilder_.getMessage();
          }
          return perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd.getDefaultInstance();
        }
      }
      /**
       * <code>.perfetto.protos.FrameTimelineEvent.FrameEnd frame_end = 5;</code>
       */
      public Builder setFrameEnd(perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd value) {
        if (frameEndBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          event_ = value;
          onChanged();
        } else {
          frameEndBuilder_.setMessage(value);
        }
        eventCase_ = 5;
        return this;
      }
      /**
       * <code>.perfetto.protos.FrameTimelineEvent.FrameEnd frame_end = 5;</code>
       */
      public Builder setFrameEnd(
          perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd.Builder builderForValue) {
        if (frameEndBuilder_ == null) {
          event_ = builderForValue.build();
          onChanged();
        } else {
          frameEndBuilder_.setMessage(builderForValue.build());
        }
        eventCase_ = 5;
        return this;
      }
      /**
       * <code>.perfetto.protos.FrameTimelineEvent.FrameEnd frame_end = 5;</code>
       */
      public Builder mergeFrameEnd(perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd value) {
        if (frameEndBuilder_ == null) {
          if (eventCase_ == 5 &&
              event_ != perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd.getDefaultInstance()) {
            event_ = perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd.newBuilder((perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd) event_)
                .mergeFrom(value).buildPartial();
          } else {
            event_ = value;
          }
          onChanged();
        } else {
          if (eventCase_ == 5) {
            frameEndBuilder_.mergeFrom(value);
          } else {
            frameEndBuilder_.setMessage(value);
          }
        }
        eventCase_ = 5;
        return this;
      }
      /**
       * <code>.perfetto.protos.FrameTimelineEvent.FrameEnd frame_end = 5;</code>
       */
      public Builder clearFrameEnd() {
        if (frameEndBuilder_ == null) {
          if (eventCase_ == 5) {
            eventCase_ = 0;
            event_ = null;
            onChanged();
          }
        } else {
          if (eventCase_ == 5) {
            eventCase_ = 0;
            event_ = null;
          }
          frameEndBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.perfetto.protos.FrameTimelineEvent.FrameEnd frame_end = 5;</code>
       */
      public perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd.Builder getFrameEndBuilder() {
        return getFrameEndFieldBuilder().getBuilder();
      }
      /**
       * <code>.perfetto.protos.FrameTimelineEvent.FrameEnd frame_end = 5;</code>
       */
      @java.lang.Override
      public perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEndOrBuilder getFrameEndOrBuilder() {
        if ((eventCase_ == 5) && (frameEndBuilder_ != null)) {
          return frameEndBuilder_.getMessageOrBuilder();
        } else {
          if (eventCase_ == 5) {
            return (perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd) event_;
          }
          return perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd.getDefaultInstance();
        }
      }
      /**
       * <code>.perfetto.protos.FrameTimelineEvent.FrameEnd frame_end = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd, perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd.Builder, perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEndOrBuilder> 
          getFrameEndFieldBuilder() {
        if (frameEndBuilder_ == null) {
          if (!(eventCase_ == 5)) {
            event_ = perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd.getDefaultInstance();
          }
          frameEndBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd, perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd.Builder, perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEndOrBuilder>(
                  (perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent.FrameEnd) event_,
                  getParentForChildren(),
                  isClean());
          event_ = null;
        }
        eventCase_ = 5;
        onChanged();
        return frameEndBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:perfetto.protos.FrameTimelineEvent)
    }

    // @@protoc_insertion_point(class_scope:perfetto.protos.FrameTimelineEvent)
    private static final perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent();
    }

    public static perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<FrameTimelineEvent>
        PARSER = new com.google.protobuf.AbstractParser<FrameTimelineEvent>() {
      @java.lang.Override
      public FrameTimelineEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<FrameTimelineEvent> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FrameTimelineEvent> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public perfetto.protos.FrameTimelineEventOuterClass.FrameTimelineEvent getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_FrameTimelineEvent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_perfetto_protos_FrameTimelineEvent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_FrameTimelineEvent_ExpectedSurfaceFrameStart_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_perfetto_protos_FrameTimelineEvent_ExpectedSurfaceFrameStart_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_FrameTimelineEvent_ActualSurfaceFrameStart_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_perfetto_protos_FrameTimelineEvent_ActualSurfaceFrameStart_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_FrameTimelineEvent_ExpectedDisplayFrameStart_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_perfetto_protos_FrameTimelineEvent_ExpectedDisplayFrameStart_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_FrameTimelineEvent_ActualDisplayFrameStart_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_perfetto_protos_FrameTimelineEvent_ActualDisplayFrameStart_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_FrameTimelineEvent_FrameEnd_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_perfetto_protos_FrameTimelineEvent_FrameEnd_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n8protos/perfetto/trace/android/frame_ti" +
      "meline_event.proto\022\017perfetto.protos\"\370\016\n\022" +
      "FrameTimelineEvent\022e\n\034expected_display_f" +
      "rame_start\030\001 \001(\0132=.perfetto.protos.Frame" +
      "TimelineEvent.ExpectedDisplayFrameStartH" +
      "\000\022a\n\032actual_display_frame_start\030\002 \001(\0132;." +
      "perfetto.protos.FrameTimelineEvent.Actua" +
      "lDisplayFrameStartH\000\022e\n\034expected_surface" +
      "_frame_start\030\003 \001(\0132=.perfetto.protos.Fra" +
      "meTimelineEvent.ExpectedSurfaceFrameStar" +
      "tH\000\022a\n\032actual_surface_frame_start\030\004 \001(\0132" +
      ";.perfetto.protos.FrameTimelineEvent.Act" +
      "ualSurfaceFrameStartH\000\022A\n\tframe_end\030\005 \001(" +
      "\0132,.perfetto.protos.FrameTimelineEvent.F" +
      "rameEndH\000\032x\n\031ExpectedSurfaceFrameStart\022\016" +
      "\n\006cookie\030\001 \001(\003\022\r\n\005token\030\002 \001(\003\022\033\n\023display" +
      "_frame_token\030\003 \001(\003\022\013\n\003pid\030\004 \001(\005\022\022\n\nlayer" +
      "_name\030\005 \001(\t\032\341\002\n\027ActualSurfaceFrameStart\022" +
      "\016\n\006cookie\030\001 \001(\003\022\r\n\005token\030\002 \001(\003\022\033\n\023displa" +
      "y_frame_token\030\003 \001(\003\022\013\n\003pid\030\004 \001(\005\022\022\n\nlaye" +
      "r_name\030\005 \001(\t\022E\n\014present_type\030\006 \001(\0162/.per" +
      "fetto.protos.FrameTimelineEvent.PresentT" +
      "ype\022\026\n\016on_time_finish\030\007 \001(\010\022\027\n\017gpu_compo" +
      "sition\030\010 \001(\010\022\021\n\tjank_type\030\t \001(\005\022K\n\017predi" +
      "ction_type\030\n \001(\01622.perfetto.protos.Frame" +
      "TimelineEvent.PredictionType\022\021\n\tis_buffe" +
      "r\030\013 \001(\010\032G\n\031ExpectedDisplayFrameStart\022\016\n\006" +
      "cookie\030\001 \001(\003\022\r\n\005token\030\002 \001(\003\022\013\n\003pid\030\003 \001(\005" +
      "\032\235\002\n\027ActualDisplayFrameStart\022\016\n\006cookie\030\001" +
      " \001(\003\022\r\n\005token\030\002 \001(\003\022\013\n\003pid\030\003 \001(\005\022E\n\014pres" +
      "ent_type\030\004 \001(\0162/.perfetto.protos.FrameTi" +
      "melineEvent.PresentType\022\026\n\016on_time_finis" +
      "h\030\005 \001(\010\022\027\n\017gpu_composition\030\006 \001(\010\022\021\n\tjank" +
      "_type\030\007 \001(\005\022K\n\017prediction_type\030\010 \001(\01622.p" +
      "erfetto.protos.FrameTimelineEvent.Predic" +
      "tionType\032\032\n\010FrameEnd\022\016\n\006cookie\030\001 \001(\003\"\235\002\n" +
      "\010JankType\022\024\n\020JANK_UNSPECIFIED\020\000\022\r\n\tJANK_" +
      "NONE\020\001\022\026\n\022JANK_SF_SCHEDULING\020\002\022\031\n\025JANK_P" +
      "REDICTION_ERROR\020\004\022\024\n\020JANK_DISPLAY_HAL\020\010\022" +
      "\037\n\033JANK_SF_CPU_DEADLINE_MISSED\020\020\022\037\n\033JANK" +
      "_SF_GPU_DEADLINE_MISSED\020 \022\034\n\030JANK_APP_DE" +
      "ADLINE_MISSED\020@\022\031\n\024JANK_BUFFER_STUFFING\020" +
      "\200\001\022\021\n\014JANK_UNKNOWN\020\200\002\022\025\n\020JANK_SF_STUFFIN" +
      "G\020\200\004\"\212\001\n\013PresentType\022\027\n\023PRESENT_UNSPECIF" +
      "IED\020\000\022\023\n\017PRESENT_ON_TIME\020\001\022\020\n\014PRESENT_LA" +
      "TE\020\002\022\021\n\rPRESENT_EARLY\020\003\022\023\n\017PRESENT_DROPP" +
      "ED\020\004\022\023\n\017PRESENT_UNKNOWN\020\005\"r\n\016PredictionT" +
      "ype\022\032\n\026PREDICTION_UNSPECIFIED\020\000\022\024\n\020PREDI" +
      "CTION_VALID\020\001\022\026\n\022PREDICTION_EXPIRED\020\002\022\026\n" +
      "\022PREDICTION_UNKNOWN\020\003B\007\n\005event"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_perfetto_protos_FrameTimelineEvent_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_perfetto_protos_FrameTimelineEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_perfetto_protos_FrameTimelineEvent_descriptor,
        new java.lang.String[] { "ExpectedDisplayFrameStart", "ActualDisplayFrameStart", "ExpectedSurfaceFrameStart", "ActualSurfaceFrameStart", "FrameEnd", "Event", });
    internal_static_perfetto_protos_FrameTimelineEvent_ExpectedSurfaceFrameStart_descriptor =
      internal_static_perfetto_protos_FrameTimelineEvent_descriptor.getNestedTypes().get(0);
    internal_static_perfetto_protos_FrameTimelineEvent_ExpectedSurfaceFrameStart_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_perfetto_protos_FrameTimelineEvent_ExpectedSurfaceFrameStart_descriptor,
        new java.lang.String[] { "Cookie", "Token", "DisplayFrameToken", "Pid", "LayerName", });
    internal_static_perfetto_protos_FrameTimelineEvent_ActualSurfaceFrameStart_descriptor =
      internal_static_perfetto_protos_FrameTimelineEvent_descriptor.getNestedTypes().get(1);
    internal_static_perfetto_protos_FrameTimelineEvent_ActualSurfaceFrameStart_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_perfetto_protos_FrameTimelineEvent_ActualSurfaceFrameStart_descriptor,
        new java.lang.String[] { "Cookie", "Token", "DisplayFrameToken", "Pid", "LayerName", "PresentType", "OnTimeFinish", "GpuComposition", "JankType", "PredictionType", "IsBuffer", });
    internal_static_perfetto_protos_FrameTimelineEvent_ExpectedDisplayFrameStart_descriptor =
      internal_static_perfetto_protos_FrameTimelineEvent_descriptor.getNestedTypes().get(2);
    internal_static_perfetto_protos_FrameTimelineEvent_ExpectedDisplayFrameStart_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_perfetto_protos_FrameTimelineEvent_ExpectedDisplayFrameStart_descriptor,
        new java.lang.String[] { "Cookie", "Token", "Pid", });
    internal_static_perfetto_protos_FrameTimelineEvent_ActualDisplayFrameStart_descriptor =
      internal_static_perfetto_protos_FrameTimelineEvent_descriptor.getNestedTypes().get(3);
    internal_static_perfetto_protos_FrameTimelineEvent_ActualDisplayFrameStart_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_perfetto_protos_FrameTimelineEvent_ActualDisplayFrameStart_descriptor,
        new java.lang.String[] { "Cookie", "Token", "Pid", "PresentType", "OnTimeFinish", "GpuComposition", "JankType", "PredictionType", });
    internal_static_perfetto_protos_FrameTimelineEvent_FrameEnd_descriptor =
      internal_static_perfetto_protos_FrameTimelineEvent_descriptor.getNestedTypes().get(4);
    internal_static_perfetto_protos_FrameTimelineEvent_FrameEnd_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_perfetto_protos_FrameTimelineEvent_FrameEnd_descriptor,
        new java.lang.String[] { "Cookie", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
