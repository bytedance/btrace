// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/perfetto/trace/android/network_trace.proto

package perfetto.protos;

public final class NetworkTrace {
  private NetworkTrace() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code perfetto.protos.TrafficDirection}
   */
  public enum TrafficDirection
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DIR_UNSPECIFIED = 0;</code>
     */
    DIR_UNSPECIFIED(0),
    /**
     * <code>DIR_INGRESS = 1;</code>
     */
    DIR_INGRESS(1),
    /**
     * <code>DIR_EGRESS = 2;</code>
     */
    DIR_EGRESS(2),
    ;

    /**
     * <code>DIR_UNSPECIFIED = 0;</code>
     */
    public static final int DIR_UNSPECIFIED_VALUE = 0;
    /**
     * <code>DIR_INGRESS = 1;</code>
     */
    public static final int DIR_INGRESS_VALUE = 1;
    /**
     * <code>DIR_EGRESS = 2;</code>
     */
    public static final int DIR_EGRESS_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TrafficDirection valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static TrafficDirection forNumber(int value) {
      switch (value) {
        case 0: return DIR_UNSPECIFIED;
        case 1: return DIR_INGRESS;
        case 2: return DIR_EGRESS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TrafficDirection>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TrafficDirection> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TrafficDirection>() {
            public TrafficDirection findValueByNumber(int number) {
              return TrafficDirection.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return perfetto.protos.NetworkTrace.getDescriptor().getEnumTypes().get(0);
    }

    private static final TrafficDirection[] VALUES = values();

    public static TrafficDirection valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TrafficDirection(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:perfetto.protos.TrafficDirection)
  }

  public interface NetworkPacketEventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:perfetto.protos.NetworkPacketEvent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The direction traffic is flowing for this event.
     * </pre>
     *
     * <code>optional .perfetto.protos.TrafficDirection direction = 1;</code>
     * @return Whether the direction field is set.
     */
    boolean hasDirection();
    /**
     * <pre>
     * The direction traffic is flowing for this event.
     * </pre>
     *
     * <code>optional .perfetto.protos.TrafficDirection direction = 1;</code>
     * @return The direction.
     */
    perfetto.protos.NetworkTrace.TrafficDirection getDirection();

    /**
     * <pre>
     * The name of the interface if available (e.g. 'rmnet0').
     * </pre>
     *
     * <code>optional string interface = 2;</code>
     * @return Whether the interface field is set.
     */
    boolean hasInterface();
    /**
     * <pre>
     * The name of the interface if available (e.g. 'rmnet0').
     * </pre>
     *
     * <code>optional string interface = 2;</code>
     * @return The interface.
     */
    java.lang.String getInterface();
    /**
     * <pre>
     * The name of the interface if available (e.g. 'rmnet0').
     * </pre>
     *
     * <code>optional string interface = 2;</code>
     * @return The bytes for interface.
     */
    com.google.protobuf.ByteString
        getInterfaceBytes();

    /**
     * <pre>
     * The length of the packet in bytes (wire_size - L2_header_size).
     * </pre>
     *
     * <code>optional uint32 length = 3;</code>
     * @return Whether the length field is set.
     */
    boolean hasLength();
    /**
     * <pre>
     * The length of the packet in bytes (wire_size - L2_header_size).
     * </pre>
     *
     * <code>optional uint32 length = 3;</code>
     * @return The length.
     */
    int getLength();

    /**
     * <pre>
     * The Linux user id associated with the packet's socket.
     * </pre>
     *
     * <code>optional uint32 uid = 4;</code>
     * @return Whether the uid field is set.
     */
    boolean hasUid();
    /**
     * <pre>
     * The Linux user id associated with the packet's socket.
     * </pre>
     *
     * <code>optional uint32 uid = 4;</code>
     * @return The uid.
     */
    int getUid();

    /**
     * <pre>
     * The Android network tag associated with the packet's socket.
     * </pre>
     *
     * <code>optional uint32 tag = 5;</code>
     * @return Whether the tag field is set.
     */
    boolean hasTag();
    /**
     * <pre>
     * The Android network tag associated with the packet's socket.
     * </pre>
     *
     * <code>optional uint32 tag = 5;</code>
     * @return The tag.
     */
    int getTag();

    /**
     * <pre>
     * The packet's IP protocol (TCP=6, UDP=17, etc).
     * </pre>
     *
     * <code>optional uint32 ip_proto = 6;</code>
     * @return Whether the ipProto field is set.
     */
    boolean hasIpProto();
    /**
     * <pre>
     * The packet's IP protocol (TCP=6, UDP=17, etc).
     * </pre>
     *
     * <code>optional uint32 ip_proto = 6;</code>
     * @return The ipProto.
     */
    int getIpProto();

    /**
     * <pre>
     * The packet's TCP flags as a bitmask (FIN=0x1, SYN=0x2, RST=0x4, etc).
     * </pre>
     *
     * <code>optional uint32 tcp_flags = 7;</code>
     * @return Whether the tcpFlags field is set.
     */
    boolean hasTcpFlags();
    /**
     * <pre>
     * The packet's TCP flags as a bitmask (FIN=0x1, SYN=0x2, RST=0x4, etc).
     * </pre>
     *
     * <code>optional uint32 tcp_flags = 7;</code>
     * @return The tcpFlags.
     */
    int getTcpFlags();

    /**
     * <pre>
     * The local udp/tcp port of the packet.
     * </pre>
     *
     * <code>optional uint32 local_port = 8;</code>
     * @return Whether the localPort field is set.
     */
    boolean hasLocalPort();
    /**
     * <pre>
     * The local udp/tcp port of the packet.
     * </pre>
     *
     * <code>optional uint32 local_port = 8;</code>
     * @return The localPort.
     */
    int getLocalPort();

    /**
     * <pre>
     * The remote udp/tcp port of the packet.
     * </pre>
     *
     * <code>optional uint32 remote_port = 9;</code>
     * @return Whether the remotePort field is set.
     */
    boolean hasRemotePort();
    /**
     * <pre>
     * The remote udp/tcp port of the packet.
     * </pre>
     *
     * <code>optional uint32 remote_port = 9;</code>
     * @return The remotePort.
     */
    int getRemotePort();
  }
  /**
   * <pre>
   * NetworkPacketEvent records the details of a single packet sent or received
   * on the network (in Linux kernel terminology, one sk_buff struct).
   * </pre>
   *
   * Protobuf type {@code perfetto.protos.NetworkPacketEvent}
   */
  public static final class NetworkPacketEvent extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:perfetto.protos.NetworkPacketEvent)
      NetworkPacketEventOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use NetworkPacketEvent.newBuilder() to construct.
    private NetworkPacketEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NetworkPacketEvent() {
      direction_ = 0;
      interface_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new NetworkPacketEvent();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return perfetto.protos.NetworkTrace.internal_static_perfetto_protos_NetworkPacketEvent_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return perfetto.protos.NetworkTrace.internal_static_perfetto_protos_NetworkPacketEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              perfetto.protos.NetworkTrace.NetworkPacketEvent.class, perfetto.protos.NetworkTrace.NetworkPacketEvent.Builder.class);
    }

    private int bitField0_;
    public static final int DIRECTION_FIELD_NUMBER = 1;
    private int direction_ = 0;
    /**
     * <pre>
     * The direction traffic is flowing for this event.
     * </pre>
     *
     * <code>optional .perfetto.protos.TrafficDirection direction = 1;</code>
     * @return Whether the direction field is set.
     */
    @java.lang.Override public boolean hasDirection() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The direction traffic is flowing for this event.
     * </pre>
     *
     * <code>optional .perfetto.protos.TrafficDirection direction = 1;</code>
     * @return The direction.
     */
    @java.lang.Override public perfetto.protos.NetworkTrace.TrafficDirection getDirection() {
      perfetto.protos.NetworkTrace.TrafficDirection result = perfetto.protos.NetworkTrace.TrafficDirection.forNumber(direction_);
      return result == null ? perfetto.protos.NetworkTrace.TrafficDirection.DIR_UNSPECIFIED : result;
    }

    public static final int INTERFACE_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object interface_ = "";
    /**
     * <pre>
     * The name of the interface if available (e.g. 'rmnet0').
     * </pre>
     *
     * <code>optional string interface = 2;</code>
     * @return Whether the interface field is set.
     */
    @java.lang.Override
    public boolean hasInterface() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The name of the interface if available (e.g. 'rmnet0').
     * </pre>
     *
     * <code>optional string interface = 2;</code>
     * @return The interface.
     */
    @java.lang.Override
    public java.lang.String getInterface() {
      java.lang.Object ref = interface_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          interface_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * The name of the interface if available (e.g. 'rmnet0').
     * </pre>
     *
     * <code>optional string interface = 2;</code>
     * @return The bytes for interface.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getInterfaceBytes() {
      java.lang.Object ref = interface_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        interface_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LENGTH_FIELD_NUMBER = 3;
    private int length_ = 0;
    /**
     * <pre>
     * The length of the packet in bytes (wire_size - L2_header_size).
     * </pre>
     *
     * <code>optional uint32 length = 3;</code>
     * @return Whether the length field is set.
     */
    @java.lang.Override
    public boolean hasLength() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * The length of the packet in bytes (wire_size - L2_header_size).
     * </pre>
     *
     * <code>optional uint32 length = 3;</code>
     * @return The length.
     */
    @java.lang.Override
    public int getLength() {
      return length_;
    }

    public static final int UID_FIELD_NUMBER = 4;
    private int uid_ = 0;
    /**
     * <pre>
     * The Linux user id associated with the packet's socket.
     * </pre>
     *
     * <code>optional uint32 uid = 4;</code>
     * @return Whether the uid field is set.
     */
    @java.lang.Override
    public boolean hasUid() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * The Linux user id associated with the packet's socket.
     * </pre>
     *
     * <code>optional uint32 uid = 4;</code>
     * @return The uid.
     */
    @java.lang.Override
    public int getUid() {
      return uid_;
    }

    public static final int TAG_FIELD_NUMBER = 5;
    private int tag_ = 0;
    /**
     * <pre>
     * The Android network tag associated with the packet's socket.
     * </pre>
     *
     * <code>optional uint32 tag = 5;</code>
     * @return Whether the tag field is set.
     */
    @java.lang.Override
    public boolean hasTag() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * The Android network tag associated with the packet's socket.
     * </pre>
     *
     * <code>optional uint32 tag = 5;</code>
     * @return The tag.
     */
    @java.lang.Override
    public int getTag() {
      return tag_;
    }

    public static final int IP_PROTO_FIELD_NUMBER = 6;
    private int ipProto_ = 0;
    /**
     * <pre>
     * The packet's IP protocol (TCP=6, UDP=17, etc).
     * </pre>
     *
     * <code>optional uint32 ip_proto = 6;</code>
     * @return Whether the ipProto field is set.
     */
    @java.lang.Override
    public boolean hasIpProto() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * The packet's IP protocol (TCP=6, UDP=17, etc).
     * </pre>
     *
     * <code>optional uint32 ip_proto = 6;</code>
     * @return The ipProto.
     */
    @java.lang.Override
    public int getIpProto() {
      return ipProto_;
    }

    public static final int TCP_FLAGS_FIELD_NUMBER = 7;
    private int tcpFlags_ = 0;
    /**
     * <pre>
     * The packet's TCP flags as a bitmask (FIN=0x1, SYN=0x2, RST=0x4, etc).
     * </pre>
     *
     * <code>optional uint32 tcp_flags = 7;</code>
     * @return Whether the tcpFlags field is set.
     */
    @java.lang.Override
    public boolean hasTcpFlags() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * The packet's TCP flags as a bitmask (FIN=0x1, SYN=0x2, RST=0x4, etc).
     * </pre>
     *
     * <code>optional uint32 tcp_flags = 7;</code>
     * @return The tcpFlags.
     */
    @java.lang.Override
    public int getTcpFlags() {
      return tcpFlags_;
    }

    public static final int LOCAL_PORT_FIELD_NUMBER = 8;
    private int localPort_ = 0;
    /**
     * <pre>
     * The local udp/tcp port of the packet.
     * </pre>
     *
     * <code>optional uint32 local_port = 8;</code>
     * @return Whether the localPort field is set.
     */
    @java.lang.Override
    public boolean hasLocalPort() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * The local udp/tcp port of the packet.
     * </pre>
     *
     * <code>optional uint32 local_port = 8;</code>
     * @return The localPort.
     */
    @java.lang.Override
    public int getLocalPort() {
      return localPort_;
    }

    public static final int REMOTE_PORT_FIELD_NUMBER = 9;
    private int remotePort_ = 0;
    /**
     * <pre>
     * The remote udp/tcp port of the packet.
     * </pre>
     *
     * <code>optional uint32 remote_port = 9;</code>
     * @return Whether the remotePort field is set.
     */
    @java.lang.Override
    public boolean hasRemotePort() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <pre>
     * The remote udp/tcp port of the packet.
     * </pre>
     *
     * <code>optional uint32 remote_port = 9;</code>
     * @return The remotePort.
     */
    @java.lang.Override
    public int getRemotePort() {
      return remotePort_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeEnum(1, direction_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, interface_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeUInt32(3, length_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeUInt32(4, uid_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeUInt32(5, tag_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeUInt32(6, ipProto_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeUInt32(7, tcpFlags_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeUInt32(8, localPort_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        output.writeUInt32(9, remotePort_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, direction_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, interface_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, length_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, uid_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, tag_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, ipProto_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, tcpFlags_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, localPort_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, remotePort_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof perfetto.protos.NetworkTrace.NetworkPacketEvent)) {
        return super.equals(obj);
      }
      perfetto.protos.NetworkTrace.NetworkPacketEvent other = (perfetto.protos.NetworkTrace.NetworkPacketEvent) obj;

      if (hasDirection() != other.hasDirection()) return false;
      if (hasDirection()) {
        if (direction_ != other.direction_) return false;
      }
      if (hasInterface() != other.hasInterface()) return false;
      if (hasInterface()) {
        if (!getInterface()
            .equals(other.getInterface())) return false;
      }
      if (hasLength() != other.hasLength()) return false;
      if (hasLength()) {
        if (getLength()
            != other.getLength()) return false;
      }
      if (hasUid() != other.hasUid()) return false;
      if (hasUid()) {
        if (getUid()
            != other.getUid()) return false;
      }
      if (hasTag() != other.hasTag()) return false;
      if (hasTag()) {
        if (getTag()
            != other.getTag()) return false;
      }
      if (hasIpProto() != other.hasIpProto()) return false;
      if (hasIpProto()) {
        if (getIpProto()
            != other.getIpProto()) return false;
      }
      if (hasTcpFlags() != other.hasTcpFlags()) return false;
      if (hasTcpFlags()) {
        if (getTcpFlags()
            != other.getTcpFlags()) return false;
      }
      if (hasLocalPort() != other.hasLocalPort()) return false;
      if (hasLocalPort()) {
        if (getLocalPort()
            != other.getLocalPort()) return false;
      }
      if (hasRemotePort() != other.hasRemotePort()) return false;
      if (hasRemotePort()) {
        if (getRemotePort()
            != other.getRemotePort()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasDirection()) {
        hash = (37 * hash) + DIRECTION_FIELD_NUMBER;
        hash = (53 * hash) + direction_;
      }
      if (hasInterface()) {
        hash = (37 * hash) + INTERFACE_FIELD_NUMBER;
        hash = (53 * hash) + getInterface().hashCode();
      }
      if (hasLength()) {
        hash = (37 * hash) + LENGTH_FIELD_NUMBER;
        hash = (53 * hash) + getLength();
      }
      if (hasUid()) {
        hash = (37 * hash) + UID_FIELD_NUMBER;
        hash = (53 * hash) + getUid();
      }
      if (hasTag()) {
        hash = (37 * hash) + TAG_FIELD_NUMBER;
        hash = (53 * hash) + getTag();
      }
      if (hasIpProto()) {
        hash = (37 * hash) + IP_PROTO_FIELD_NUMBER;
        hash = (53 * hash) + getIpProto();
      }
      if (hasTcpFlags()) {
        hash = (37 * hash) + TCP_FLAGS_FIELD_NUMBER;
        hash = (53 * hash) + getTcpFlags();
      }
      if (hasLocalPort()) {
        hash = (37 * hash) + LOCAL_PORT_FIELD_NUMBER;
        hash = (53 * hash) + getLocalPort();
      }
      if (hasRemotePort()) {
        hash = (37 * hash) + REMOTE_PORT_FIELD_NUMBER;
        hash = (53 * hash) + getRemotePort();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static perfetto.protos.NetworkTrace.NetworkPacketEvent parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.NetworkTrace.NetworkPacketEvent parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.NetworkTrace.NetworkPacketEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.NetworkTrace.NetworkPacketEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.NetworkTrace.NetworkPacketEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.NetworkTrace.NetworkPacketEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.NetworkTrace.NetworkPacketEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.NetworkTrace.NetworkPacketEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.NetworkTrace.NetworkPacketEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static perfetto.protos.NetworkTrace.NetworkPacketEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.NetworkTrace.NetworkPacketEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.NetworkTrace.NetworkPacketEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(perfetto.protos.NetworkTrace.NetworkPacketEvent prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * NetworkPacketEvent records the details of a single packet sent or received
     * on the network (in Linux kernel terminology, one sk_buff struct).
     * </pre>
     *
     * Protobuf type {@code perfetto.protos.NetworkPacketEvent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:perfetto.protos.NetworkPacketEvent)
        perfetto.protos.NetworkTrace.NetworkPacketEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.NetworkTrace.internal_static_perfetto_protos_NetworkPacketEvent_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.NetworkTrace.internal_static_perfetto_protos_NetworkPacketEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.NetworkTrace.NetworkPacketEvent.class, perfetto.protos.NetworkTrace.NetworkPacketEvent.Builder.class);
      }

      // Construct using perfetto.protos.NetworkTrace.NetworkPacketEvent.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        direction_ = 0;
        interface_ = "";
        length_ = 0;
        uid_ = 0;
        tag_ = 0;
        ipProto_ = 0;
        tcpFlags_ = 0;
        localPort_ = 0;
        remotePort_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return perfetto.protos.NetworkTrace.internal_static_perfetto_protos_NetworkPacketEvent_descriptor;
      }

      @java.lang.Override
      public perfetto.protos.NetworkTrace.NetworkPacketEvent getDefaultInstanceForType() {
        return perfetto.protos.NetworkTrace.NetworkPacketEvent.getDefaultInstance();
      }

      @java.lang.Override
      public perfetto.protos.NetworkTrace.NetworkPacketEvent build() {
        perfetto.protos.NetworkTrace.NetworkPacketEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public perfetto.protos.NetworkTrace.NetworkPacketEvent buildPartial() {
        perfetto.protos.NetworkTrace.NetworkPacketEvent result = new perfetto.protos.NetworkTrace.NetworkPacketEvent(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(perfetto.protos.NetworkTrace.NetworkPacketEvent result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.direction_ = direction_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.interface_ = interface_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.length_ = length_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.uid_ = uid_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.tag_ = tag_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.ipProto_ = ipProto_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.tcpFlags_ = tcpFlags_;
          to_bitField0_ |= 0x00000040;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.localPort_ = localPort_;
          to_bitField0_ |= 0x00000080;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.remotePort_ = remotePort_;
          to_bitField0_ |= 0x00000100;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof perfetto.protos.NetworkTrace.NetworkPacketEvent) {
          return mergeFrom((perfetto.protos.NetworkTrace.NetworkPacketEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(perfetto.protos.NetworkTrace.NetworkPacketEvent other) {
        if (other == perfetto.protos.NetworkTrace.NetworkPacketEvent.getDefaultInstance()) return this;
        if (other.hasDirection()) {
          setDirection(other.getDirection());
        }
        if (other.hasInterface()) {
          interface_ = other.interface_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (other.hasLength()) {
          setLength(other.getLength());
        }
        if (other.hasUid()) {
          setUid(other.getUid());
        }
        if (other.hasTag()) {
          setTag(other.getTag());
        }
        if (other.hasIpProto()) {
          setIpProto(other.getIpProto());
        }
        if (other.hasTcpFlags()) {
          setTcpFlags(other.getTcpFlags());
        }
        if (other.hasLocalPort()) {
          setLocalPort(other.getLocalPort());
        }
        if (other.hasRemotePort()) {
          setRemotePort(other.getRemotePort());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int tmpRaw = input.readEnum();
                perfetto.protos.NetworkTrace.TrafficDirection tmpValue =
                    perfetto.protos.NetworkTrace.TrafficDirection.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(1, tmpRaw);
                } else {
                  direction_ = tmpRaw;
                  bitField0_ |= 0x00000001;
                }
                break;
              } // case 8
              case 18: {
                interface_ = input.readBytes();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 24: {
                length_ = input.readUInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                uid_ = input.readUInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                tag_ = input.readUInt32();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                ipProto_ = input.readUInt32();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 56: {
                tcpFlags_ = input.readUInt32();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
              case 64: {
                localPort_ = input.readUInt32();
                bitField0_ |= 0x00000080;
                break;
              } // case 64
              case 72: {
                remotePort_ = input.readUInt32();
                bitField0_ |= 0x00000100;
                break;
              } // case 72
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int direction_ = 0;
      /**
       * <pre>
       * The direction traffic is flowing for this event.
       * </pre>
       *
       * <code>optional .perfetto.protos.TrafficDirection direction = 1;</code>
       * @return Whether the direction field is set.
       */
      @java.lang.Override public boolean hasDirection() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * The direction traffic is flowing for this event.
       * </pre>
       *
       * <code>optional .perfetto.protos.TrafficDirection direction = 1;</code>
       * @return The direction.
       */
      @java.lang.Override
      public perfetto.protos.NetworkTrace.TrafficDirection getDirection() {
        perfetto.protos.NetworkTrace.TrafficDirection result = perfetto.protos.NetworkTrace.TrafficDirection.forNumber(direction_);
        return result == null ? perfetto.protos.NetworkTrace.TrafficDirection.DIR_UNSPECIFIED : result;
      }
      /**
       * <pre>
       * The direction traffic is flowing for this event.
       * </pre>
       *
       * <code>optional .perfetto.protos.TrafficDirection direction = 1;</code>
       * @param value The direction to set.
       * @return This builder for chaining.
       */
      public Builder setDirection(perfetto.protos.NetworkTrace.TrafficDirection value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        direction_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The direction traffic is flowing for this event.
       * </pre>
       *
       * <code>optional .perfetto.protos.TrafficDirection direction = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDirection() {
        bitField0_ = (bitField0_ & ~0x00000001);
        direction_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object interface_ = "";
      /**
       * <pre>
       * The name of the interface if available (e.g. 'rmnet0').
       * </pre>
       *
       * <code>optional string interface = 2;</code>
       * @return Whether the interface field is set.
       */
      public boolean hasInterface() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * The name of the interface if available (e.g. 'rmnet0').
       * </pre>
       *
       * <code>optional string interface = 2;</code>
       * @return The interface.
       */
      public java.lang.String getInterface() {
        java.lang.Object ref = interface_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            interface_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The name of the interface if available (e.g. 'rmnet0').
       * </pre>
       *
       * <code>optional string interface = 2;</code>
       * @return The bytes for interface.
       */
      public com.google.protobuf.ByteString
          getInterfaceBytes() {
        java.lang.Object ref = interface_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          interface_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The name of the interface if available (e.g. 'rmnet0').
       * </pre>
       *
       * <code>optional string interface = 2;</code>
       * @param value The interface to set.
       * @return This builder for chaining.
       */
      public Builder setInterface(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        interface_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the interface if available (e.g. 'rmnet0').
       * </pre>
       *
       * <code>optional string interface = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearInterface() {
        interface_ = getDefaultInstance().getInterface();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the interface if available (e.g. 'rmnet0').
       * </pre>
       *
       * <code>optional string interface = 2;</code>
       * @param value The bytes for interface to set.
       * @return This builder for chaining.
       */
      public Builder setInterfaceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        interface_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private int length_ ;
      /**
       * <pre>
       * The length of the packet in bytes (wire_size - L2_header_size).
       * </pre>
       *
       * <code>optional uint32 length = 3;</code>
       * @return Whether the length field is set.
       */
      @java.lang.Override
      public boolean hasLength() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * The length of the packet in bytes (wire_size - L2_header_size).
       * </pre>
       *
       * <code>optional uint32 length = 3;</code>
       * @return The length.
       */
      @java.lang.Override
      public int getLength() {
        return length_;
      }
      /**
       * <pre>
       * The length of the packet in bytes (wire_size - L2_header_size).
       * </pre>
       *
       * <code>optional uint32 length = 3;</code>
       * @param value The length to set.
       * @return This builder for chaining.
       */
      public Builder setLength(int value) {
        
        length_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The length of the packet in bytes (wire_size - L2_header_size).
       * </pre>
       *
       * <code>optional uint32 length = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearLength() {
        bitField0_ = (bitField0_ & ~0x00000004);
        length_ = 0;
        onChanged();
        return this;
      }

      private int uid_ ;
      /**
       * <pre>
       * The Linux user id associated with the packet's socket.
       * </pre>
       *
       * <code>optional uint32 uid = 4;</code>
       * @return Whether the uid field is set.
       */
      @java.lang.Override
      public boolean hasUid() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * The Linux user id associated with the packet's socket.
       * </pre>
       *
       * <code>optional uint32 uid = 4;</code>
       * @return The uid.
       */
      @java.lang.Override
      public int getUid() {
        return uid_;
      }
      /**
       * <pre>
       * The Linux user id associated with the packet's socket.
       * </pre>
       *
       * <code>optional uint32 uid = 4;</code>
       * @param value The uid to set.
       * @return This builder for chaining.
       */
      public Builder setUid(int value) {
        
        uid_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The Linux user id associated with the packet's socket.
       * </pre>
       *
       * <code>optional uint32 uid = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearUid() {
        bitField0_ = (bitField0_ & ~0x00000008);
        uid_ = 0;
        onChanged();
        return this;
      }

      private int tag_ ;
      /**
       * <pre>
       * The Android network tag associated with the packet's socket.
       * </pre>
       *
       * <code>optional uint32 tag = 5;</code>
       * @return Whether the tag field is set.
       */
      @java.lang.Override
      public boolean hasTag() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * The Android network tag associated with the packet's socket.
       * </pre>
       *
       * <code>optional uint32 tag = 5;</code>
       * @return The tag.
       */
      @java.lang.Override
      public int getTag() {
        return tag_;
      }
      /**
       * <pre>
       * The Android network tag associated with the packet's socket.
       * </pre>
       *
       * <code>optional uint32 tag = 5;</code>
       * @param value The tag to set.
       * @return This builder for chaining.
       */
      public Builder setTag(int value) {
        
        tag_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The Android network tag associated with the packet's socket.
       * </pre>
       *
       * <code>optional uint32 tag = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearTag() {
        bitField0_ = (bitField0_ & ~0x00000010);
        tag_ = 0;
        onChanged();
        return this;
      }

      private int ipProto_ ;
      /**
       * <pre>
       * The packet's IP protocol (TCP=6, UDP=17, etc).
       * </pre>
       *
       * <code>optional uint32 ip_proto = 6;</code>
       * @return Whether the ipProto field is set.
       */
      @java.lang.Override
      public boolean hasIpProto() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * The packet's IP protocol (TCP=6, UDP=17, etc).
       * </pre>
       *
       * <code>optional uint32 ip_proto = 6;</code>
       * @return The ipProto.
       */
      @java.lang.Override
      public int getIpProto() {
        return ipProto_;
      }
      /**
       * <pre>
       * The packet's IP protocol (TCP=6, UDP=17, etc).
       * </pre>
       *
       * <code>optional uint32 ip_proto = 6;</code>
       * @param value The ipProto to set.
       * @return This builder for chaining.
       */
      public Builder setIpProto(int value) {
        
        ipProto_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The packet's IP protocol (TCP=6, UDP=17, etc).
       * </pre>
       *
       * <code>optional uint32 ip_proto = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearIpProto() {
        bitField0_ = (bitField0_ & ~0x00000020);
        ipProto_ = 0;
        onChanged();
        return this;
      }

      private int tcpFlags_ ;
      /**
       * <pre>
       * The packet's TCP flags as a bitmask (FIN=0x1, SYN=0x2, RST=0x4, etc).
       * </pre>
       *
       * <code>optional uint32 tcp_flags = 7;</code>
       * @return Whether the tcpFlags field is set.
       */
      @java.lang.Override
      public boolean hasTcpFlags() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       * The packet's TCP flags as a bitmask (FIN=0x1, SYN=0x2, RST=0x4, etc).
       * </pre>
       *
       * <code>optional uint32 tcp_flags = 7;</code>
       * @return The tcpFlags.
       */
      @java.lang.Override
      public int getTcpFlags() {
        return tcpFlags_;
      }
      /**
       * <pre>
       * The packet's TCP flags as a bitmask (FIN=0x1, SYN=0x2, RST=0x4, etc).
       * </pre>
       *
       * <code>optional uint32 tcp_flags = 7;</code>
       * @param value The tcpFlags to set.
       * @return This builder for chaining.
       */
      public Builder setTcpFlags(int value) {
        
        tcpFlags_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The packet's TCP flags as a bitmask (FIN=0x1, SYN=0x2, RST=0x4, etc).
       * </pre>
       *
       * <code>optional uint32 tcp_flags = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearTcpFlags() {
        bitField0_ = (bitField0_ & ~0x00000040);
        tcpFlags_ = 0;
        onChanged();
        return this;
      }

      private int localPort_ ;
      /**
       * <pre>
       * The local udp/tcp port of the packet.
       * </pre>
       *
       * <code>optional uint32 local_port = 8;</code>
       * @return Whether the localPort field is set.
       */
      @java.lang.Override
      public boolean hasLocalPort() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <pre>
       * The local udp/tcp port of the packet.
       * </pre>
       *
       * <code>optional uint32 local_port = 8;</code>
       * @return The localPort.
       */
      @java.lang.Override
      public int getLocalPort() {
        return localPort_;
      }
      /**
       * <pre>
       * The local udp/tcp port of the packet.
       * </pre>
       *
       * <code>optional uint32 local_port = 8;</code>
       * @param value The localPort to set.
       * @return This builder for chaining.
       */
      public Builder setLocalPort(int value) {
        
        localPort_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The local udp/tcp port of the packet.
       * </pre>
       *
       * <code>optional uint32 local_port = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearLocalPort() {
        bitField0_ = (bitField0_ & ~0x00000080);
        localPort_ = 0;
        onChanged();
        return this;
      }

      private int remotePort_ ;
      /**
       * <pre>
       * The remote udp/tcp port of the packet.
       * </pre>
       *
       * <code>optional uint32 remote_port = 9;</code>
       * @return Whether the remotePort field is set.
       */
      @java.lang.Override
      public boolean hasRemotePort() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <pre>
       * The remote udp/tcp port of the packet.
       * </pre>
       *
       * <code>optional uint32 remote_port = 9;</code>
       * @return The remotePort.
       */
      @java.lang.Override
      public int getRemotePort() {
        return remotePort_;
      }
      /**
       * <pre>
       * The remote udp/tcp port of the packet.
       * </pre>
       *
       * <code>optional uint32 remote_port = 9;</code>
       * @param value The remotePort to set.
       * @return This builder for chaining.
       */
      public Builder setRemotePort(int value) {
        
        remotePort_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The remote udp/tcp port of the packet.
       * </pre>
       *
       * <code>optional uint32 remote_port = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearRemotePort() {
        bitField0_ = (bitField0_ & ~0x00000100);
        remotePort_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:perfetto.protos.NetworkPacketEvent)
    }

    // @@protoc_insertion_point(class_scope:perfetto.protos.NetworkPacketEvent)
    private static final perfetto.protos.NetworkTrace.NetworkPacketEvent DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new perfetto.protos.NetworkTrace.NetworkPacketEvent();
    }

    public static perfetto.protos.NetworkTrace.NetworkPacketEvent getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<NetworkPacketEvent>
        PARSER = new com.google.protobuf.AbstractParser<NetworkPacketEvent>() {
      @java.lang.Override
      public NetworkPacketEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<NetworkPacketEvent> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NetworkPacketEvent> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public perfetto.protos.NetworkTrace.NetworkPacketEvent getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_NetworkPacketEvent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_perfetto_protos_NetworkPacketEvent_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n1protos/perfetto/trace/android/network_" +
      "trace.proto\022\017perfetto.protos\"\325\001\n\022Network" +
      "PacketEvent\0224\n\tdirection\030\001 \001(\0162!.perfett" +
      "o.protos.TrafficDirection\022\021\n\tinterface\030\002" +
      " \001(\t\022\016\n\006length\030\003 \001(\r\022\013\n\003uid\030\004 \001(\r\022\013\n\003tag" +
      "\030\005 \001(\r\022\020\n\010ip_proto\030\006 \001(\r\022\021\n\ttcp_flags\030\007 " +
      "\001(\r\022\022\n\nlocal_port\030\010 \001(\r\022\023\n\013remote_port\030\t" +
      " \001(\r*H\n\020TrafficDirection\022\023\n\017DIR_UNSPECIF" +
      "IED\020\000\022\017\n\013DIR_INGRESS\020\001\022\016\n\nDIR_EGRESS\020\002"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_perfetto_protos_NetworkPacketEvent_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_perfetto_protos_NetworkPacketEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_perfetto_protos_NetworkPacketEvent_descriptor,
        new java.lang.String[] { "Direction", "Interface", "Length", "Uid", "Tag", "IpProto", "TcpFlags", "LocalPort", "RemotePort", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
