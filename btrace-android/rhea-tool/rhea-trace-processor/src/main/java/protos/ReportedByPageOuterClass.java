// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protos/perfetto/metrics/chrome/reported_by_page.proto

package perfetto.protos;

public final class ReportedByPageOuterClass {
  private ReportedByPageOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ReportedByPageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:perfetto.protos.ReportedByPage)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Time from navigation start to telemetry:reported_by_page:viewable.
     * </pre>
     *
     * <code>repeated double time_to_viewable = 1 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
     * @return A list containing the timeToViewable.
     */
    java.util.List<java.lang.Double> getTimeToViewableList();
    /**
     * <pre>
     * Time from navigation start to telemetry:reported_by_page:viewable.
     * </pre>
     *
     * <code>repeated double time_to_viewable = 1 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
     * @return The count of timeToViewable.
     */
    int getTimeToViewableCount();
    /**
     * <pre>
     * Time from navigation start to telemetry:reported_by_page:viewable.
     * </pre>
     *
     * <code>repeated double time_to_viewable = 1 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
     * @param index The index of the element to return.
     * @return The timeToViewable at the given index.
     */
    double getTimeToViewable(int index);

    /**
     * <pre>
     * Time from navigation start to telemetry:reported_by_page:interactive.
     * </pre>
     *
     * <code>repeated double time_to_interactive = 2 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
     * @return A list containing the timeToInteractive.
     */
    java.util.List<java.lang.Double> getTimeToInteractiveList();
    /**
     * <pre>
     * Time from navigation start to telemetry:reported_by_page:interactive.
     * </pre>
     *
     * <code>repeated double time_to_interactive = 2 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
     * @return The count of timeToInteractive.
     */
    int getTimeToInteractiveCount();
    /**
     * <pre>
     * Time from navigation start to telemetry:reported_by_page:interactive.
     * </pre>
     *
     * <code>repeated double time_to_interactive = 2 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
     * @param index The index of the element to return.
     * @return The timeToInteractive at the given index.
     */
    double getTimeToInteractive(int index);

    /**
     * <pre>
     * Time from telemetry:reported_by_page:benchmark_begin to
     * telemetry:reported_by_page:benchmark_end.
     * </pre>
     *
     * <code>repeated double benchmark_time = 3 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
     * @return A list containing the benchmarkTime.
     */
    java.util.List<java.lang.Double> getBenchmarkTimeList();
    /**
     * <pre>
     * Time from telemetry:reported_by_page:benchmark_begin to
     * telemetry:reported_by_page:benchmark_end.
     * </pre>
     *
     * <code>repeated double benchmark_time = 3 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
     * @return The count of benchmarkTime.
     */
    int getBenchmarkTimeCount();
    /**
     * <pre>
     * Time from telemetry:reported_by_page:benchmark_begin to
     * telemetry:reported_by_page:benchmark_end.
     * </pre>
     *
     * <code>repeated double benchmark_time = 3 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
     * @param index The index of the element to return.
     * @return The benchmarkTime at the given index.
     */
    double getBenchmarkTime(int index);
  }
  /**
   * Protobuf type {@code perfetto.protos.ReportedByPage}
   */
  public static final class ReportedByPage extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:perfetto.protos.ReportedByPage)
      ReportedByPageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ReportedByPage.newBuilder() to construct.
    private ReportedByPage(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ReportedByPage() {
      timeToViewable_ = emptyDoubleList();
      timeToInteractive_ = emptyDoubleList();
      benchmarkTime_ = emptyDoubleList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ReportedByPage();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return perfetto.protos.ReportedByPageOuterClass.internal_static_perfetto_protos_ReportedByPage_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return perfetto.protos.ReportedByPageOuterClass.internal_static_perfetto_protos_ReportedByPage_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              perfetto.protos.ReportedByPageOuterClass.ReportedByPage.class, perfetto.protos.ReportedByPageOuterClass.ReportedByPage.Builder.class);
    }

    public static final int TIME_TO_VIEWABLE_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.DoubleList timeToViewable_;
    /**
     * <pre>
     * Time from navigation start to telemetry:reported_by_page:viewable.
     * </pre>
     *
     * <code>repeated double time_to_viewable = 1 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
     * @return A list containing the timeToViewable.
     */
    @java.lang.Override
    public java.util.List<java.lang.Double>
        getTimeToViewableList() {
      return timeToViewable_;
    }
    /**
     * <pre>
     * Time from navigation start to telemetry:reported_by_page:viewable.
     * </pre>
     *
     * <code>repeated double time_to_viewable = 1 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
     * @return The count of timeToViewable.
     */
    public int getTimeToViewableCount() {
      return timeToViewable_.size();
    }
    /**
     * <pre>
     * Time from navigation start to telemetry:reported_by_page:viewable.
     * </pre>
     *
     * <code>repeated double time_to_viewable = 1 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
     * @param index The index of the element to return.
     * @return The timeToViewable at the given index.
     */
    public double getTimeToViewable(int index) {
      return timeToViewable_.getDouble(index);
    }

    public static final int TIME_TO_INTERACTIVE_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.DoubleList timeToInteractive_;
    /**
     * <pre>
     * Time from navigation start to telemetry:reported_by_page:interactive.
     * </pre>
     *
     * <code>repeated double time_to_interactive = 2 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
     * @return A list containing the timeToInteractive.
     */
    @java.lang.Override
    public java.util.List<java.lang.Double>
        getTimeToInteractiveList() {
      return timeToInteractive_;
    }
    /**
     * <pre>
     * Time from navigation start to telemetry:reported_by_page:interactive.
     * </pre>
     *
     * <code>repeated double time_to_interactive = 2 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
     * @return The count of timeToInteractive.
     */
    public int getTimeToInteractiveCount() {
      return timeToInteractive_.size();
    }
    /**
     * <pre>
     * Time from navigation start to telemetry:reported_by_page:interactive.
     * </pre>
     *
     * <code>repeated double time_to_interactive = 2 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
     * @param index The index of the element to return.
     * @return The timeToInteractive at the given index.
     */
    public double getTimeToInteractive(int index) {
      return timeToInteractive_.getDouble(index);
    }

    public static final int BENCHMARK_TIME_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.DoubleList benchmarkTime_;
    /**
     * <pre>
     * Time from telemetry:reported_by_page:benchmark_begin to
     * telemetry:reported_by_page:benchmark_end.
     * </pre>
     *
     * <code>repeated double benchmark_time = 3 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
     * @return A list containing the benchmarkTime.
     */
    @java.lang.Override
    public java.util.List<java.lang.Double>
        getBenchmarkTimeList() {
      return benchmarkTime_;
    }
    /**
     * <pre>
     * Time from telemetry:reported_by_page:benchmark_begin to
     * telemetry:reported_by_page:benchmark_end.
     * </pre>
     *
     * <code>repeated double benchmark_time = 3 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
     * @return The count of benchmarkTime.
     */
    public int getBenchmarkTimeCount() {
      return benchmarkTime_.size();
    }
    /**
     * <pre>
     * Time from telemetry:reported_by_page:benchmark_begin to
     * telemetry:reported_by_page:benchmark_end.
     * </pre>
     *
     * <code>repeated double benchmark_time = 3 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
     * @param index The index of the element to return.
     * @return The benchmarkTime at the given index.
     */
    public double getBenchmarkTime(int index) {
      return benchmarkTime_.getDouble(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < timeToViewable_.size(); i++) {
        output.writeDouble(1, timeToViewable_.getDouble(i));
      }
      for (int i = 0; i < timeToInteractive_.size(); i++) {
        output.writeDouble(2, timeToInteractive_.getDouble(i));
      }
      for (int i = 0; i < benchmarkTime_.size(); i++) {
        output.writeDouble(3, benchmarkTime_.getDouble(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        dataSize = 8 * getTimeToViewableList().size();
        size += dataSize;
        size += 1 * getTimeToViewableList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getTimeToInteractiveList().size();
        size += dataSize;
        size += 1 * getTimeToInteractiveList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getBenchmarkTimeList().size();
        size += dataSize;
        size += 1 * getBenchmarkTimeList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof perfetto.protos.ReportedByPageOuterClass.ReportedByPage)) {
        return super.equals(obj);
      }
      perfetto.protos.ReportedByPageOuterClass.ReportedByPage other = (perfetto.protos.ReportedByPageOuterClass.ReportedByPage) obj;

      if (!getTimeToViewableList()
          .equals(other.getTimeToViewableList())) return false;
      if (!getTimeToInteractiveList()
          .equals(other.getTimeToInteractiveList())) return false;
      if (!getBenchmarkTimeList()
          .equals(other.getBenchmarkTimeList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getTimeToViewableCount() > 0) {
        hash = (37 * hash) + TIME_TO_VIEWABLE_FIELD_NUMBER;
        hash = (53 * hash) + getTimeToViewableList().hashCode();
      }
      if (getTimeToInteractiveCount() > 0) {
        hash = (37 * hash) + TIME_TO_INTERACTIVE_FIELD_NUMBER;
        hash = (53 * hash) + getTimeToInteractiveList().hashCode();
      }
      if (getBenchmarkTimeCount() > 0) {
        hash = (37 * hash) + BENCHMARK_TIME_FIELD_NUMBER;
        hash = (53 * hash) + getBenchmarkTimeList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static perfetto.protos.ReportedByPageOuterClass.ReportedByPage parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.ReportedByPageOuterClass.ReportedByPage parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.ReportedByPageOuterClass.ReportedByPage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.ReportedByPageOuterClass.ReportedByPage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.ReportedByPageOuterClass.ReportedByPage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.ReportedByPageOuterClass.ReportedByPage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.ReportedByPageOuterClass.ReportedByPage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.ReportedByPageOuterClass.ReportedByPage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.ReportedByPageOuterClass.ReportedByPage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static perfetto.protos.ReportedByPageOuterClass.ReportedByPage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.ReportedByPageOuterClass.ReportedByPage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.ReportedByPageOuterClass.ReportedByPage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(perfetto.protos.ReportedByPageOuterClass.ReportedByPage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code perfetto.protos.ReportedByPage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:perfetto.protos.ReportedByPage)
        perfetto.protos.ReportedByPageOuterClass.ReportedByPageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.ReportedByPageOuterClass.internal_static_perfetto_protos_ReportedByPage_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.ReportedByPageOuterClass.internal_static_perfetto_protos_ReportedByPage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.ReportedByPageOuterClass.ReportedByPage.class, perfetto.protos.ReportedByPageOuterClass.ReportedByPage.Builder.class);
      }

      // Construct using perfetto.protos.ReportedByPageOuterClass.ReportedByPage.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        timeToViewable_ = emptyDoubleList();
        timeToInteractive_ = emptyDoubleList();
        benchmarkTime_ = emptyDoubleList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return perfetto.protos.ReportedByPageOuterClass.internal_static_perfetto_protos_ReportedByPage_descriptor;
      }

      @java.lang.Override
      public perfetto.protos.ReportedByPageOuterClass.ReportedByPage getDefaultInstanceForType() {
        return perfetto.protos.ReportedByPageOuterClass.ReportedByPage.getDefaultInstance();
      }

      @java.lang.Override
      public perfetto.protos.ReportedByPageOuterClass.ReportedByPage build() {
        perfetto.protos.ReportedByPageOuterClass.ReportedByPage result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public perfetto.protos.ReportedByPageOuterClass.ReportedByPage buildPartial() {
        perfetto.protos.ReportedByPageOuterClass.ReportedByPage result = new perfetto.protos.ReportedByPageOuterClass.ReportedByPage(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(perfetto.protos.ReportedByPageOuterClass.ReportedByPage result) {
        if (((bitField0_ & 0x00000001) != 0)) {
          timeToViewable_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.timeToViewable_ = timeToViewable_;
        if (((bitField0_ & 0x00000002) != 0)) {
          timeToInteractive_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.timeToInteractive_ = timeToInteractive_;
        if (((bitField0_ & 0x00000004) != 0)) {
          benchmarkTime_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.benchmarkTime_ = benchmarkTime_;
      }

      private void buildPartial0(perfetto.protos.ReportedByPageOuterClass.ReportedByPage result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof perfetto.protos.ReportedByPageOuterClass.ReportedByPage) {
          return mergeFrom((perfetto.protos.ReportedByPageOuterClass.ReportedByPage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(perfetto.protos.ReportedByPageOuterClass.ReportedByPage other) {
        if (other == perfetto.protos.ReportedByPageOuterClass.ReportedByPage.getDefaultInstance()) return this;
        if (!other.timeToViewable_.isEmpty()) {
          if (timeToViewable_.isEmpty()) {
            timeToViewable_ = other.timeToViewable_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureTimeToViewableIsMutable();
            timeToViewable_.addAll(other.timeToViewable_);
          }
          onChanged();
        }
        if (!other.timeToInteractive_.isEmpty()) {
          if (timeToInteractive_.isEmpty()) {
            timeToInteractive_ = other.timeToInteractive_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureTimeToInteractiveIsMutable();
            timeToInteractive_.addAll(other.timeToInteractive_);
          }
          onChanged();
        }
        if (!other.benchmarkTime_.isEmpty()) {
          if (benchmarkTime_.isEmpty()) {
            benchmarkTime_ = other.benchmarkTime_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureBenchmarkTimeIsMutable();
            benchmarkTime_.addAll(other.benchmarkTime_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 9: {
                double v = input.readDouble();
                ensureTimeToViewableIsMutable();
                timeToViewable_.addDouble(v);
                break;
              } // case 9
              case 10: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureTimeToViewableIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  timeToViewable_.addDouble(input.readDouble());
                }
                input.popLimit(limit);
                break;
              } // case 10
              case 17: {
                double v = input.readDouble();
                ensureTimeToInteractiveIsMutable();
                timeToInteractive_.addDouble(v);
                break;
              } // case 17
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureTimeToInteractiveIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  timeToInteractive_.addDouble(input.readDouble());
                }
                input.popLimit(limit);
                break;
              } // case 18
              case 25: {
                double v = input.readDouble();
                ensureBenchmarkTimeIsMutable();
                benchmarkTime_.addDouble(v);
                break;
              } // case 25
              case 26: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureBenchmarkTimeIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  benchmarkTime_.addDouble(input.readDouble());
                }
                input.popLimit(limit);
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.DoubleList timeToViewable_ = emptyDoubleList();
      private void ensureTimeToViewableIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          timeToViewable_ = mutableCopy(timeToViewable_);
          bitField0_ |= 0x00000001;
        }
      }
      /**
       * <pre>
       * Time from navigation start to telemetry:reported_by_page:viewable.
       * </pre>
       *
       * <code>repeated double time_to_viewable = 1 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
       * @return A list containing the timeToViewable.
       */
      public java.util.List<java.lang.Double>
          getTimeToViewableList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(timeToViewable_) : timeToViewable_;
      }
      /**
       * <pre>
       * Time from navigation start to telemetry:reported_by_page:viewable.
       * </pre>
       *
       * <code>repeated double time_to_viewable = 1 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
       * @return The count of timeToViewable.
       */
      public int getTimeToViewableCount() {
        return timeToViewable_.size();
      }
      /**
       * <pre>
       * Time from navigation start to telemetry:reported_by_page:viewable.
       * </pre>
       *
       * <code>repeated double time_to_viewable = 1 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
       * @param index The index of the element to return.
       * @return The timeToViewable at the given index.
       */
      public double getTimeToViewable(int index) {
        return timeToViewable_.getDouble(index);
      }
      /**
       * <pre>
       * Time from navigation start to telemetry:reported_by_page:viewable.
       * </pre>
       *
       * <code>repeated double time_to_viewable = 1 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
       * @param index The index to set the value at.
       * @param value The timeToViewable to set.
       * @return This builder for chaining.
       */
      public Builder setTimeToViewable(
          int index, double value) {
        
        ensureTimeToViewableIsMutable();
        timeToViewable_.setDouble(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Time from navigation start to telemetry:reported_by_page:viewable.
       * </pre>
       *
       * <code>repeated double time_to_viewable = 1 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
       * @param value The timeToViewable to add.
       * @return This builder for chaining.
       */
      public Builder addTimeToViewable(double value) {
        
        ensureTimeToViewableIsMutable();
        timeToViewable_.addDouble(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Time from navigation start to telemetry:reported_by_page:viewable.
       * </pre>
       *
       * <code>repeated double time_to_viewable = 1 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
       * @param values The timeToViewable to add.
       * @return This builder for chaining.
       */
      public Builder addAllTimeToViewable(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureTimeToViewableIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, timeToViewable_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Time from navigation start to telemetry:reported_by_page:viewable.
       * </pre>
       *
       * <code>repeated double time_to_viewable = 1 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
       * @return This builder for chaining.
       */
      public Builder clearTimeToViewable() {
        timeToViewable_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.DoubleList timeToInteractive_ = emptyDoubleList();
      private void ensureTimeToInteractiveIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          timeToInteractive_ = mutableCopy(timeToInteractive_);
          bitField0_ |= 0x00000002;
        }
      }
      /**
       * <pre>
       * Time from navigation start to telemetry:reported_by_page:interactive.
       * </pre>
       *
       * <code>repeated double time_to_interactive = 2 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
       * @return A list containing the timeToInteractive.
       */
      public java.util.List<java.lang.Double>
          getTimeToInteractiveList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(timeToInteractive_) : timeToInteractive_;
      }
      /**
       * <pre>
       * Time from navigation start to telemetry:reported_by_page:interactive.
       * </pre>
       *
       * <code>repeated double time_to_interactive = 2 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
       * @return The count of timeToInteractive.
       */
      public int getTimeToInteractiveCount() {
        return timeToInteractive_.size();
      }
      /**
       * <pre>
       * Time from navigation start to telemetry:reported_by_page:interactive.
       * </pre>
       *
       * <code>repeated double time_to_interactive = 2 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
       * @param index The index of the element to return.
       * @return The timeToInteractive at the given index.
       */
      public double getTimeToInteractive(int index) {
        return timeToInteractive_.getDouble(index);
      }
      /**
       * <pre>
       * Time from navigation start to telemetry:reported_by_page:interactive.
       * </pre>
       *
       * <code>repeated double time_to_interactive = 2 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
       * @param index The index to set the value at.
       * @param value The timeToInteractive to set.
       * @return This builder for chaining.
       */
      public Builder setTimeToInteractive(
          int index, double value) {
        
        ensureTimeToInteractiveIsMutable();
        timeToInteractive_.setDouble(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Time from navigation start to telemetry:reported_by_page:interactive.
       * </pre>
       *
       * <code>repeated double time_to_interactive = 2 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
       * @param value The timeToInteractive to add.
       * @return This builder for chaining.
       */
      public Builder addTimeToInteractive(double value) {
        
        ensureTimeToInteractiveIsMutable();
        timeToInteractive_.addDouble(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Time from navigation start to telemetry:reported_by_page:interactive.
       * </pre>
       *
       * <code>repeated double time_to_interactive = 2 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
       * @param values The timeToInteractive to add.
       * @return This builder for chaining.
       */
      public Builder addAllTimeToInteractive(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureTimeToInteractiveIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, timeToInteractive_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Time from navigation start to telemetry:reported_by_page:interactive.
       * </pre>
       *
       * <code>repeated double time_to_interactive = 2 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
       * @return This builder for chaining.
       */
      public Builder clearTimeToInteractive() {
        timeToInteractive_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.DoubleList benchmarkTime_ = emptyDoubleList();
      private void ensureBenchmarkTimeIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          benchmarkTime_ = mutableCopy(benchmarkTime_);
          bitField0_ |= 0x00000004;
        }
      }
      /**
       * <pre>
       * Time from telemetry:reported_by_page:benchmark_begin to
       * telemetry:reported_by_page:benchmark_end.
       * </pre>
       *
       * <code>repeated double benchmark_time = 3 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
       * @return A list containing the benchmarkTime.
       */
      public java.util.List<java.lang.Double>
          getBenchmarkTimeList() {
        return ((bitField0_ & 0x00000004) != 0) ?
                 java.util.Collections.unmodifiableList(benchmarkTime_) : benchmarkTime_;
      }
      /**
       * <pre>
       * Time from telemetry:reported_by_page:benchmark_begin to
       * telemetry:reported_by_page:benchmark_end.
       * </pre>
       *
       * <code>repeated double benchmark_time = 3 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
       * @return The count of benchmarkTime.
       */
      public int getBenchmarkTimeCount() {
        return benchmarkTime_.size();
      }
      /**
       * <pre>
       * Time from telemetry:reported_by_page:benchmark_begin to
       * telemetry:reported_by_page:benchmark_end.
       * </pre>
       *
       * <code>repeated double benchmark_time = 3 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
       * @param index The index of the element to return.
       * @return The benchmarkTime at the given index.
       */
      public double getBenchmarkTime(int index) {
        return benchmarkTime_.getDouble(index);
      }
      /**
       * <pre>
       * Time from telemetry:reported_by_page:benchmark_begin to
       * telemetry:reported_by_page:benchmark_end.
       * </pre>
       *
       * <code>repeated double benchmark_time = 3 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
       * @param index The index to set the value at.
       * @param value The benchmarkTime to set.
       * @return This builder for chaining.
       */
      public Builder setBenchmarkTime(
          int index, double value) {
        
        ensureBenchmarkTimeIsMutable();
        benchmarkTime_.setDouble(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Time from telemetry:reported_by_page:benchmark_begin to
       * telemetry:reported_by_page:benchmark_end.
       * </pre>
       *
       * <code>repeated double benchmark_time = 3 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
       * @param value The benchmarkTime to add.
       * @return This builder for chaining.
       */
      public Builder addBenchmarkTime(double value) {
        
        ensureBenchmarkTimeIsMutable();
        benchmarkTime_.addDouble(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Time from telemetry:reported_by_page:benchmark_begin to
       * telemetry:reported_by_page:benchmark_end.
       * </pre>
       *
       * <code>repeated double benchmark_time = 3 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
       * @param values The benchmarkTime to add.
       * @return This builder for chaining.
       */
      public Builder addAllBenchmarkTime(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureBenchmarkTimeIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, benchmarkTime_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Time from telemetry:reported_by_page:benchmark_begin to
       * telemetry:reported_by_page:benchmark_end.
       * </pre>
       *
       * <code>repeated double benchmark_time = 3 [(.perfetto.protos.unit) = "ms_smallerIsBetter"];</code>
       * @return This builder for chaining.
       */
      public Builder clearBenchmarkTime() {
        benchmarkTime_ = emptyDoubleList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:perfetto.protos.ReportedByPage)
    }

    // @@protoc_insertion_point(class_scope:perfetto.protos.ReportedByPage)
    private static final perfetto.protos.ReportedByPageOuterClass.ReportedByPage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new perfetto.protos.ReportedByPageOuterClass.ReportedByPage();
    }

    public static perfetto.protos.ReportedByPageOuterClass.ReportedByPage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ReportedByPage>
        PARSER = new com.google.protobuf.AbstractParser<ReportedByPage>() {
      @java.lang.Override
      public ReportedByPage parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ReportedByPage> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ReportedByPage> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public perfetto.protos.ReportedByPageOuterClass.ReportedByPage getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_ReportedByPage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_perfetto_protos_ReportedByPage_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n5protos/perfetto/metrics/chrome/reporte" +
      "d_by_page.proto\022\017perfetto.protos\032,protos" +
      "/perfetto/metrics/custom_options.proto\"\247" +
      "\001\n\016ReportedByPage\0220\n\020time_to_viewable\030\001 " +
      "\003(\001B\026\212\265\030\022ms_smallerIsBetter\0223\n\023time_to_i" +
      "nteractive\030\002 \003(\001B\026\212\265\030\022ms_smallerIsBetter" +
      "\022.\n\016benchmark_time\030\003 \003(\001B\026\212\265\030\022ms_smaller" +
      "IsBetter"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          perfetto.protos.CustomOptions.getDescriptor(),
        });
    internal_static_perfetto_protos_ReportedByPage_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_perfetto_protos_ReportedByPage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_perfetto_protos_ReportedByPage_descriptor,
        new java.lang.String[] { "TimeToViewable", "TimeToInteractive", "BenchmarkTime", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(perfetto.protos.CustomOptions.unit);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    perfetto.protos.CustomOptions.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
