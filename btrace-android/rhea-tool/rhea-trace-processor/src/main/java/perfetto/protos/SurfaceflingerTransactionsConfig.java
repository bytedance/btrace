// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: protos/perfetto/config/android/surfaceflinger_transactions_config.proto
// Protobuf Java Version: 4.29.3

package perfetto.protos;

public final class SurfaceflingerTransactionsConfig {
  private SurfaceflingerTransactionsConfig() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 3,
      /* suffix= */ "",
      SurfaceflingerTransactionsConfig.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface SurfaceFlingerTransactionsConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:perfetto.protos.SurfaceFlingerTransactionsConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .perfetto.protos.SurfaceFlingerTransactionsConfig.Mode mode = 1;</code>
     * @return Whether the mode field is set.
     */
    boolean hasMode();
    /**
     * <code>optional .perfetto.protos.SurfaceFlingerTransactionsConfig.Mode mode = 1;</code>
     * @return The mode.
     */
    perfetto.protos.SurfaceflingerTransactionsConfig.SurfaceFlingerTransactionsConfig.Mode getMode();
  }
  /**
   * <pre>
   * Custom configuration for the "android.surfaceflinger.transactions" data
   * source.
   * </pre>
   *
   * Protobuf type {@code perfetto.protos.SurfaceFlingerTransactionsConfig}
   */
  public static final class SurfaceFlingerTransactionsConfig extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:perfetto.protos.SurfaceFlingerTransactionsConfig)
      SurfaceFlingerTransactionsConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 3,
        /* suffix= */ "",
        SurfaceFlingerTransactionsConfig.class.getName());
    }
    // Use SurfaceFlingerTransactionsConfig.newBuilder() to construct.
    private SurfaceFlingerTransactionsConfig(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private SurfaceFlingerTransactionsConfig() {
      mode_ = 0;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return perfetto.protos.SurfaceflingerTransactionsConfig.internal_static_perfetto_protos_SurfaceFlingerTransactionsConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return perfetto.protos.SurfaceflingerTransactionsConfig.internal_static_perfetto_protos_SurfaceFlingerTransactionsConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              perfetto.protos.SurfaceflingerTransactionsConfig.SurfaceFlingerTransactionsConfig.class, perfetto.protos.SurfaceflingerTransactionsConfig.SurfaceFlingerTransactionsConfig.Builder.class);
    }

    /**
     * Protobuf enum {@code perfetto.protos.SurfaceFlingerTransactionsConfig.Mode}
     */
    public enum Mode
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>MODE_UNSPECIFIED = 0;</code>
       */
      MODE_UNSPECIFIED(0),
      /**
       * <pre>
       * Default mode (applied by SurfaceFlinger if no mode is specified).
       * SurfaceFlinger writes its internal ring buffer of transactions every time
       * the data source is flushed. The ring buffer contains the SurfaceFlinger's
       * initial state and the latest transactions.
       * </pre>
       *
       * <code>MODE_CONTINUOUS = 1;</code>
       */
      MODE_CONTINUOUS(1),
      /**
       * <pre>
       * SurfaceFlinger writes the initial state and then each incoming
       * transaction until the data source is stopped.
       * </pre>
       *
       * <code>MODE_ACTIVE = 2;</code>
       */
      MODE_ACTIVE(2),
      ;

      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 29,
          /* patch= */ 3,
          /* suffix= */ "",
          Mode.class.getName());
      }
      /**
       * <code>MODE_UNSPECIFIED = 0;</code>
       */
      public static final int MODE_UNSPECIFIED_VALUE = 0;
      /**
       * <pre>
       * Default mode (applied by SurfaceFlinger if no mode is specified).
       * SurfaceFlinger writes its internal ring buffer of transactions every time
       * the data source is flushed. The ring buffer contains the SurfaceFlinger's
       * initial state and the latest transactions.
       * </pre>
       *
       * <code>MODE_CONTINUOUS = 1;</code>
       */
      public static final int MODE_CONTINUOUS_VALUE = 1;
      /**
       * <pre>
       * SurfaceFlinger writes the initial state and then each incoming
       * transaction until the data source is stopped.
       * </pre>
       *
       * <code>MODE_ACTIVE = 2;</code>
       */
      public static final int MODE_ACTIVE_VALUE = 2;


      public final int getNumber() {
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Mode valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Mode forNumber(int value) {
        switch (value) {
          case 0: return MODE_UNSPECIFIED;
          case 1: return MODE_CONTINUOUS;
          case 2: return MODE_ACTIVE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Mode>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Mode> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Mode>() {
              public Mode findValueByNumber(int number) {
                return Mode.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return perfetto.protos.SurfaceflingerTransactionsConfig.SurfaceFlingerTransactionsConfig.getDescriptor().getEnumTypes().get(0);
      }

      private static final Mode[] VALUES = values();

      public static Mode valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Mode(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:perfetto.protos.SurfaceFlingerTransactionsConfig.Mode)
    }

    private int bitField0_;
    public static final int MODE_FIELD_NUMBER = 1;
    private int mode_ = 0;
    /**
     * <code>optional .perfetto.protos.SurfaceFlingerTransactionsConfig.Mode mode = 1;</code>
     * @return Whether the mode field is set.
     */
    @java.lang.Override public boolean hasMode() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional .perfetto.protos.SurfaceFlingerTransactionsConfig.Mode mode = 1;</code>
     * @return The mode.
     */
    @java.lang.Override public perfetto.protos.SurfaceflingerTransactionsConfig.SurfaceFlingerTransactionsConfig.Mode getMode() {
      perfetto.protos.SurfaceflingerTransactionsConfig.SurfaceFlingerTransactionsConfig.Mode result = perfetto.protos.SurfaceflingerTransactionsConfig.SurfaceFlingerTransactionsConfig.Mode.forNumber(mode_);
      return result == null ? perfetto.protos.SurfaceflingerTransactionsConfig.SurfaceFlingerTransactionsConfig.Mode.MODE_UNSPECIFIED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeEnum(1, mode_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, mode_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof perfetto.protos.SurfaceflingerTransactionsConfig.SurfaceFlingerTransactionsConfig)) {
        return super.equals(obj);
      }
      perfetto.protos.SurfaceflingerTransactionsConfig.SurfaceFlingerTransactionsConfig other = (perfetto.protos.SurfaceflingerTransactionsConfig.SurfaceFlingerTransactionsConfig) obj;

      if (hasMode() != other.hasMode()) return false;
      if (hasMode()) {
        if (mode_ != other.mode_) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMode()) {
        hash = (37 * hash) + MODE_FIELD_NUMBER;
        hash = (53 * hash) + mode_;
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static perfetto.protos.SurfaceflingerTransactionsConfig.SurfaceFlingerTransactionsConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.SurfaceflingerTransactionsConfig.SurfaceFlingerTransactionsConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.SurfaceflingerTransactionsConfig.SurfaceFlingerTransactionsConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.SurfaceflingerTransactionsConfig.SurfaceFlingerTransactionsConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.SurfaceflingerTransactionsConfig.SurfaceFlingerTransactionsConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.SurfaceflingerTransactionsConfig.SurfaceFlingerTransactionsConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.SurfaceflingerTransactionsConfig.SurfaceFlingerTransactionsConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.SurfaceflingerTransactionsConfig.SurfaceFlingerTransactionsConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static perfetto.protos.SurfaceflingerTransactionsConfig.SurfaceFlingerTransactionsConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static perfetto.protos.SurfaceflingerTransactionsConfig.SurfaceFlingerTransactionsConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.SurfaceflingerTransactionsConfig.SurfaceFlingerTransactionsConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.SurfaceflingerTransactionsConfig.SurfaceFlingerTransactionsConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(perfetto.protos.SurfaceflingerTransactionsConfig.SurfaceFlingerTransactionsConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Custom configuration for the "android.surfaceflinger.transactions" data
     * source.
     * </pre>
     *
     * Protobuf type {@code perfetto.protos.SurfaceFlingerTransactionsConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:perfetto.protos.SurfaceFlingerTransactionsConfig)
        perfetto.protos.SurfaceflingerTransactionsConfig.SurfaceFlingerTransactionsConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.SurfaceflingerTransactionsConfig.internal_static_perfetto_protos_SurfaceFlingerTransactionsConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.SurfaceflingerTransactionsConfig.internal_static_perfetto_protos_SurfaceFlingerTransactionsConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.SurfaceflingerTransactionsConfig.SurfaceFlingerTransactionsConfig.class, perfetto.protos.SurfaceflingerTransactionsConfig.SurfaceFlingerTransactionsConfig.Builder.class);
      }

      // Construct using perfetto.protos.SurfaceflingerTransactionsConfig.SurfaceFlingerTransactionsConfig.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        mode_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return perfetto.protos.SurfaceflingerTransactionsConfig.internal_static_perfetto_protos_SurfaceFlingerTransactionsConfig_descriptor;
      }

      @java.lang.Override
      public perfetto.protos.SurfaceflingerTransactionsConfig.SurfaceFlingerTransactionsConfig getDefaultInstanceForType() {
        return perfetto.protos.SurfaceflingerTransactionsConfig.SurfaceFlingerTransactionsConfig.getDefaultInstance();
      }

      @java.lang.Override
      public perfetto.protos.SurfaceflingerTransactionsConfig.SurfaceFlingerTransactionsConfig build() {
        perfetto.protos.SurfaceflingerTransactionsConfig.SurfaceFlingerTransactionsConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public perfetto.protos.SurfaceflingerTransactionsConfig.SurfaceFlingerTransactionsConfig buildPartial() {
        perfetto.protos.SurfaceflingerTransactionsConfig.SurfaceFlingerTransactionsConfig result = new perfetto.protos.SurfaceflingerTransactionsConfig.SurfaceFlingerTransactionsConfig(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(perfetto.protos.SurfaceflingerTransactionsConfig.SurfaceFlingerTransactionsConfig result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.mode_ = mode_;
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof perfetto.protos.SurfaceflingerTransactionsConfig.SurfaceFlingerTransactionsConfig) {
          return mergeFrom((perfetto.protos.SurfaceflingerTransactionsConfig.SurfaceFlingerTransactionsConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(perfetto.protos.SurfaceflingerTransactionsConfig.SurfaceFlingerTransactionsConfig other) {
        if (other == perfetto.protos.SurfaceflingerTransactionsConfig.SurfaceFlingerTransactionsConfig.getDefaultInstance()) return this;
        if (other.hasMode()) {
          setMode(other.getMode());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int tmpRaw = input.readEnum();
                perfetto.protos.SurfaceflingerTransactionsConfig.SurfaceFlingerTransactionsConfig.Mode tmpValue =
                    perfetto.protos.SurfaceflingerTransactionsConfig.SurfaceFlingerTransactionsConfig.Mode.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(1, tmpRaw);
                } else {
                  mode_ = tmpRaw;
                  bitField0_ |= 0x00000001;
                }
                break;
              } // case 8
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int mode_ = 0;
      /**
       * <code>optional .perfetto.protos.SurfaceFlingerTransactionsConfig.Mode mode = 1;</code>
       * @return Whether the mode field is set.
       */
      @java.lang.Override public boolean hasMode() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional .perfetto.protos.SurfaceFlingerTransactionsConfig.Mode mode = 1;</code>
       * @return The mode.
       */
      @java.lang.Override
      public perfetto.protos.SurfaceflingerTransactionsConfig.SurfaceFlingerTransactionsConfig.Mode getMode() {
        perfetto.protos.SurfaceflingerTransactionsConfig.SurfaceFlingerTransactionsConfig.Mode result = perfetto.protos.SurfaceflingerTransactionsConfig.SurfaceFlingerTransactionsConfig.Mode.forNumber(mode_);
        return result == null ? perfetto.protos.SurfaceflingerTransactionsConfig.SurfaceFlingerTransactionsConfig.Mode.MODE_UNSPECIFIED : result;
      }
      /**
       * <code>optional .perfetto.protos.SurfaceFlingerTransactionsConfig.Mode mode = 1;</code>
       * @param value The mode to set.
       * @return This builder for chaining.
       */
      public Builder setMode(perfetto.protos.SurfaceflingerTransactionsConfig.SurfaceFlingerTransactionsConfig.Mode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        mode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .perfetto.protos.SurfaceFlingerTransactionsConfig.Mode mode = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearMode() {
        bitField0_ = (bitField0_ & ~0x00000001);
        mode_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:perfetto.protos.SurfaceFlingerTransactionsConfig)
    }

    // @@protoc_insertion_point(class_scope:perfetto.protos.SurfaceFlingerTransactionsConfig)
    private static final perfetto.protos.SurfaceflingerTransactionsConfig.SurfaceFlingerTransactionsConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new perfetto.protos.SurfaceflingerTransactionsConfig.SurfaceFlingerTransactionsConfig();
    }

    public static perfetto.protos.SurfaceflingerTransactionsConfig.SurfaceFlingerTransactionsConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SurfaceFlingerTransactionsConfig>
        PARSER = new com.google.protobuf.AbstractParser<SurfaceFlingerTransactionsConfig>() {
      @java.lang.Override
      public SurfaceFlingerTransactionsConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<SurfaceFlingerTransactionsConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SurfaceFlingerTransactionsConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public perfetto.protos.SurfaceflingerTransactionsConfig.SurfaceFlingerTransactionsConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_SurfaceFlingerTransactionsConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_perfetto_protos_SurfaceFlingerTransactionsConfig_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\nGprotos/perfetto/config/android/surface" +
      "flinger_transactions_config.proto\022\017perfe" +
      "tto.protos\"\254\001\n SurfaceFlingerTransaction" +
      "sConfig\022D\n\004mode\030\001 \001(\01626.perfetto.protos." +
      "SurfaceFlingerTransactionsConfig.Mode\"B\n" +
      "\004Mode\022\024\n\020MODE_UNSPECIFIED\020\000\022\023\n\017MODE_CONT" +
      "INUOUS\020\001\022\017\n\013MODE_ACTIVE\020\002"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_perfetto_protos_SurfaceFlingerTransactionsConfig_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_perfetto_protos_SurfaceFlingerTransactionsConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_perfetto_protos_SurfaceFlingerTransactionsConfig_descriptor,
        new java.lang.String[] { "Mode", });
    descriptor.resolveAllFeaturesImmutable();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
