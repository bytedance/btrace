// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: protos/perfetto/trace/ftrace/perf_trace_counters.proto
// Protobuf Java Version: 4.29.3

package perfetto.protos;

public final class PerfTraceCounters {
  private PerfTraceCounters() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 3,
      /* suffix= */ "",
      PerfTraceCounters.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface SchedSwitchWithCtrsFtraceEventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:perfetto.protos.SchedSwitchWithCtrsFtraceEvent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 old_pid = 1;</code>
     * @return Whether the oldPid field is set.
     */
    boolean hasOldPid();
    /**
     * <code>optional int32 old_pid = 1;</code>
     * @return The oldPid.
     */
    int getOldPid();

    /**
     * <code>optional int32 new_pid = 2;</code>
     * @return Whether the newPid field is set.
     */
    boolean hasNewPid();
    /**
     * <code>optional int32 new_pid = 2;</code>
     * @return The newPid.
     */
    int getNewPid();

    /**
     * <code>optional uint64 cctr = 3;</code>
     * @return Whether the cctr field is set.
     */
    boolean hasCctr();
    /**
     * <code>optional uint64 cctr = 3;</code>
     * @return The cctr.
     */
    long getCctr();

    /**
     * <code>optional uint64 ctr0 = 4;</code>
     * @return Whether the ctr0 field is set.
     */
    boolean hasCtr0();
    /**
     * <code>optional uint64 ctr0 = 4;</code>
     * @return The ctr0.
     */
    long getCtr0();

    /**
     * <code>optional uint64 ctr1 = 5;</code>
     * @return Whether the ctr1 field is set.
     */
    boolean hasCtr1();
    /**
     * <code>optional uint64 ctr1 = 5;</code>
     * @return The ctr1.
     */
    long getCtr1();

    /**
     * <code>optional uint64 ctr2 = 6;</code>
     * @return Whether the ctr2 field is set.
     */
    boolean hasCtr2();
    /**
     * <code>optional uint64 ctr2 = 6;</code>
     * @return The ctr2.
     */
    long getCtr2();

    /**
     * <code>optional uint64 ctr3 = 7;</code>
     * @return Whether the ctr3 field is set.
     */
    boolean hasCtr3();
    /**
     * <code>optional uint64 ctr3 = 7;</code>
     * @return The ctr3.
     */
    long getCtr3();

    /**
     * <code>optional uint32 lctr0 = 8;</code>
     * @return Whether the lctr0 field is set.
     */
    boolean hasLctr0();
    /**
     * <code>optional uint32 lctr0 = 8;</code>
     * @return The lctr0.
     */
    int getLctr0();

    /**
     * <code>optional uint32 lctr1 = 9;</code>
     * @return Whether the lctr1 field is set.
     */
    boolean hasLctr1();
    /**
     * <code>optional uint32 lctr1 = 9;</code>
     * @return The lctr1.
     */
    int getLctr1();

    /**
     * <code>optional uint64 ctr4 = 10;</code>
     * @return Whether the ctr4 field is set.
     */
    boolean hasCtr4();
    /**
     * <code>optional uint64 ctr4 = 10;</code>
     * @return The ctr4.
     */
    long getCtr4();

    /**
     * <code>optional uint64 ctr5 = 11;</code>
     * @return Whether the ctr5 field is set.
     */
    boolean hasCtr5();
    /**
     * <code>optional uint64 ctr5 = 11;</code>
     * @return The ctr5.
     */
    long getCtr5();

    /**
     * <code>optional string prev_comm = 12;</code>
     * @return Whether the prevComm field is set.
     */
    boolean hasPrevComm();
    /**
     * <code>optional string prev_comm = 12;</code>
     * @return The prevComm.
     */
    java.lang.String getPrevComm();
    /**
     * <code>optional string prev_comm = 12;</code>
     * @return The bytes for prevComm.
     */
    com.google.protobuf.ByteString
        getPrevCommBytes();

    /**
     * <code>optional int32 prev_pid = 13;</code>
     * @return Whether the prevPid field is set.
     */
    boolean hasPrevPid();
    /**
     * <code>optional int32 prev_pid = 13;</code>
     * @return The prevPid.
     */
    int getPrevPid();

    /**
     * <code>optional uint32 cyc = 14;</code>
     * @return Whether the cyc field is set.
     */
    boolean hasCyc();
    /**
     * <code>optional uint32 cyc = 14;</code>
     * @return The cyc.
     */
    int getCyc();

    /**
     * <code>optional uint32 inst = 15;</code>
     * @return Whether the inst field is set.
     */
    boolean hasInst();
    /**
     * <code>optional uint32 inst = 15;</code>
     * @return The inst.
     */
    int getInst();

    /**
     * <code>optional uint32 stallbm = 16;</code>
     * @return Whether the stallbm field is set.
     */
    boolean hasStallbm();
    /**
     * <code>optional uint32 stallbm = 16;</code>
     * @return The stallbm.
     */
    int getStallbm();

    /**
     * <code>optional uint32 l3dm = 17;</code>
     * @return Whether the l3dm field is set.
     */
    boolean hasL3Dm();
    /**
     * <code>optional uint32 l3dm = 17;</code>
     * @return The l3dm.
     */
    int getL3Dm();

    /**
     * <code>optional int32 next_pid = 18;</code>
     * @return Whether the nextPid field is set.
     */
    boolean hasNextPid();
    /**
     * <code>optional int32 next_pid = 18;</code>
     * @return The nextPid.
     */
    int getNextPid();

    /**
     * <code>optional string next_comm = 19;</code>
     * @return Whether the nextComm field is set.
     */
    boolean hasNextComm();
    /**
     * <code>optional string next_comm = 19;</code>
     * @return The nextComm.
     */
    java.lang.String getNextComm();
    /**
     * <code>optional string next_comm = 19;</code>
     * @return The bytes for nextComm.
     */
    com.google.protobuf.ByteString
        getNextCommBytes();

    /**
     * <code>optional int64 prev_state = 20;</code>
     * @return Whether the prevState field is set.
     */
    boolean hasPrevState();
    /**
     * <code>optional int64 prev_state = 20;</code>
     * @return The prevState.
     */
    long getPrevState();

    /**
     * <code>optional uint64 amu0 = 21;</code>
     * @return Whether the amu0 field is set.
     */
    boolean hasAmu0();
    /**
     * <code>optional uint64 amu0 = 21;</code>
     * @return The amu0.
     */
    long getAmu0();

    /**
     * <code>optional uint64 amu1 = 22;</code>
     * @return Whether the amu1 field is set.
     */
    boolean hasAmu1();
    /**
     * <code>optional uint64 amu1 = 22;</code>
     * @return The amu1.
     */
    long getAmu1();

    /**
     * <code>optional uint64 amu2 = 23;</code>
     * @return Whether the amu2 field is set.
     */
    boolean hasAmu2();
    /**
     * <code>optional uint64 amu2 = 23;</code>
     * @return The amu2.
     */
    long getAmu2();
  }
  /**
   * Protobuf type {@code perfetto.protos.SchedSwitchWithCtrsFtraceEvent}
   */
  public static final class SchedSwitchWithCtrsFtraceEvent extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:perfetto.protos.SchedSwitchWithCtrsFtraceEvent)
      SchedSwitchWithCtrsFtraceEventOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 3,
        /* suffix= */ "",
        SchedSwitchWithCtrsFtraceEvent.class.getName());
    }
    // Use SchedSwitchWithCtrsFtraceEvent.newBuilder() to construct.
    private SchedSwitchWithCtrsFtraceEvent(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private SchedSwitchWithCtrsFtraceEvent() {
      prevComm_ = "";
      nextComm_ = "";
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return perfetto.protos.PerfTraceCounters.internal_static_perfetto_protos_SchedSwitchWithCtrsFtraceEvent_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return perfetto.protos.PerfTraceCounters.internal_static_perfetto_protos_SchedSwitchWithCtrsFtraceEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              perfetto.protos.PerfTraceCounters.SchedSwitchWithCtrsFtraceEvent.class, perfetto.protos.PerfTraceCounters.SchedSwitchWithCtrsFtraceEvent.Builder.class);
    }

    private int bitField0_;
    public static final int OLD_PID_FIELD_NUMBER = 1;
    private int oldPid_ = 0;
    /**
     * <code>optional int32 old_pid = 1;</code>
     * @return Whether the oldPid field is set.
     */
    @java.lang.Override
    public boolean hasOldPid() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional int32 old_pid = 1;</code>
     * @return The oldPid.
     */
    @java.lang.Override
    public int getOldPid() {
      return oldPid_;
    }

    public static final int NEW_PID_FIELD_NUMBER = 2;
    private int newPid_ = 0;
    /**
     * <code>optional int32 new_pid = 2;</code>
     * @return Whether the newPid field is set.
     */
    @java.lang.Override
    public boolean hasNewPid() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional int32 new_pid = 2;</code>
     * @return The newPid.
     */
    @java.lang.Override
    public int getNewPid() {
      return newPid_;
    }

    public static final int CCTR_FIELD_NUMBER = 3;
    private long cctr_ = 0L;
    /**
     * <code>optional uint64 cctr = 3;</code>
     * @return Whether the cctr field is set.
     */
    @java.lang.Override
    public boolean hasCctr() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional uint64 cctr = 3;</code>
     * @return The cctr.
     */
    @java.lang.Override
    public long getCctr() {
      return cctr_;
    }

    public static final int CTR0_FIELD_NUMBER = 4;
    private long ctr0_ = 0L;
    /**
     * <code>optional uint64 ctr0 = 4;</code>
     * @return Whether the ctr0 field is set.
     */
    @java.lang.Override
    public boolean hasCtr0() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional uint64 ctr0 = 4;</code>
     * @return The ctr0.
     */
    @java.lang.Override
    public long getCtr0() {
      return ctr0_;
    }

    public static final int CTR1_FIELD_NUMBER = 5;
    private long ctr1_ = 0L;
    /**
     * <code>optional uint64 ctr1 = 5;</code>
     * @return Whether the ctr1 field is set.
     */
    @java.lang.Override
    public boolean hasCtr1() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional uint64 ctr1 = 5;</code>
     * @return The ctr1.
     */
    @java.lang.Override
    public long getCtr1() {
      return ctr1_;
    }

    public static final int CTR2_FIELD_NUMBER = 6;
    private long ctr2_ = 0L;
    /**
     * <code>optional uint64 ctr2 = 6;</code>
     * @return Whether the ctr2 field is set.
     */
    @java.lang.Override
    public boolean hasCtr2() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>optional uint64 ctr2 = 6;</code>
     * @return The ctr2.
     */
    @java.lang.Override
    public long getCtr2() {
      return ctr2_;
    }

    public static final int CTR3_FIELD_NUMBER = 7;
    private long ctr3_ = 0L;
    /**
     * <code>optional uint64 ctr3 = 7;</code>
     * @return Whether the ctr3 field is set.
     */
    @java.lang.Override
    public boolean hasCtr3() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <code>optional uint64 ctr3 = 7;</code>
     * @return The ctr3.
     */
    @java.lang.Override
    public long getCtr3() {
      return ctr3_;
    }

    public static final int LCTR0_FIELD_NUMBER = 8;
    private int lctr0_ = 0;
    /**
     * <code>optional uint32 lctr0 = 8;</code>
     * @return Whether the lctr0 field is set.
     */
    @java.lang.Override
    public boolean hasLctr0() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <code>optional uint32 lctr0 = 8;</code>
     * @return The lctr0.
     */
    @java.lang.Override
    public int getLctr0() {
      return lctr0_;
    }

    public static final int LCTR1_FIELD_NUMBER = 9;
    private int lctr1_ = 0;
    /**
     * <code>optional uint32 lctr1 = 9;</code>
     * @return Whether the lctr1 field is set.
     */
    @java.lang.Override
    public boolean hasLctr1() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <code>optional uint32 lctr1 = 9;</code>
     * @return The lctr1.
     */
    @java.lang.Override
    public int getLctr1() {
      return lctr1_;
    }

    public static final int CTR4_FIELD_NUMBER = 10;
    private long ctr4_ = 0L;
    /**
     * <code>optional uint64 ctr4 = 10;</code>
     * @return Whether the ctr4 field is set.
     */
    @java.lang.Override
    public boolean hasCtr4() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <code>optional uint64 ctr4 = 10;</code>
     * @return The ctr4.
     */
    @java.lang.Override
    public long getCtr4() {
      return ctr4_;
    }

    public static final int CTR5_FIELD_NUMBER = 11;
    private long ctr5_ = 0L;
    /**
     * <code>optional uint64 ctr5 = 11;</code>
     * @return Whether the ctr5 field is set.
     */
    @java.lang.Override
    public boolean hasCtr5() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <code>optional uint64 ctr5 = 11;</code>
     * @return The ctr5.
     */
    @java.lang.Override
    public long getCtr5() {
      return ctr5_;
    }

    public static final int PREV_COMM_FIELD_NUMBER = 12;
    @SuppressWarnings("serial")
    private volatile java.lang.Object prevComm_ = "";
    /**
     * <code>optional string prev_comm = 12;</code>
     * @return Whether the prevComm field is set.
     */
    @java.lang.Override
    public boolean hasPrevComm() {
      return ((bitField0_ & 0x00000800) != 0);
    }
    /**
     * <code>optional string prev_comm = 12;</code>
     * @return The prevComm.
     */
    @java.lang.Override
    public java.lang.String getPrevComm() {
      java.lang.Object ref = prevComm_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          prevComm_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string prev_comm = 12;</code>
     * @return The bytes for prevComm.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getPrevCommBytes() {
      java.lang.Object ref = prevComm_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        prevComm_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PREV_PID_FIELD_NUMBER = 13;
    private int prevPid_ = 0;
    /**
     * <code>optional int32 prev_pid = 13;</code>
     * @return Whether the prevPid field is set.
     */
    @java.lang.Override
    public boolean hasPrevPid() {
      return ((bitField0_ & 0x00001000) != 0);
    }
    /**
     * <code>optional int32 prev_pid = 13;</code>
     * @return The prevPid.
     */
    @java.lang.Override
    public int getPrevPid() {
      return prevPid_;
    }

    public static final int CYC_FIELD_NUMBER = 14;
    private int cyc_ = 0;
    /**
     * <code>optional uint32 cyc = 14;</code>
     * @return Whether the cyc field is set.
     */
    @java.lang.Override
    public boolean hasCyc() {
      return ((bitField0_ & 0x00002000) != 0);
    }
    /**
     * <code>optional uint32 cyc = 14;</code>
     * @return The cyc.
     */
    @java.lang.Override
    public int getCyc() {
      return cyc_;
    }

    public static final int INST_FIELD_NUMBER = 15;
    private int inst_ = 0;
    /**
     * <code>optional uint32 inst = 15;</code>
     * @return Whether the inst field is set.
     */
    @java.lang.Override
    public boolean hasInst() {
      return ((bitField0_ & 0x00004000) != 0);
    }
    /**
     * <code>optional uint32 inst = 15;</code>
     * @return The inst.
     */
    @java.lang.Override
    public int getInst() {
      return inst_;
    }

    public static final int STALLBM_FIELD_NUMBER = 16;
    private int stallbm_ = 0;
    /**
     * <code>optional uint32 stallbm = 16;</code>
     * @return Whether the stallbm field is set.
     */
    @java.lang.Override
    public boolean hasStallbm() {
      return ((bitField0_ & 0x00008000) != 0);
    }
    /**
     * <code>optional uint32 stallbm = 16;</code>
     * @return The stallbm.
     */
    @java.lang.Override
    public int getStallbm() {
      return stallbm_;
    }

    public static final int L3DM_FIELD_NUMBER = 17;
    private int l3Dm_ = 0;
    /**
     * <code>optional uint32 l3dm = 17;</code>
     * @return Whether the l3dm field is set.
     */
    @java.lang.Override
    public boolean hasL3Dm() {
      return ((bitField0_ & 0x00010000) != 0);
    }
    /**
     * <code>optional uint32 l3dm = 17;</code>
     * @return The l3dm.
     */
    @java.lang.Override
    public int getL3Dm() {
      return l3Dm_;
    }

    public static final int NEXT_PID_FIELD_NUMBER = 18;
    private int nextPid_ = 0;
    /**
     * <code>optional int32 next_pid = 18;</code>
     * @return Whether the nextPid field is set.
     */
    @java.lang.Override
    public boolean hasNextPid() {
      return ((bitField0_ & 0x00020000) != 0);
    }
    /**
     * <code>optional int32 next_pid = 18;</code>
     * @return The nextPid.
     */
    @java.lang.Override
    public int getNextPid() {
      return nextPid_;
    }

    public static final int NEXT_COMM_FIELD_NUMBER = 19;
    @SuppressWarnings("serial")
    private volatile java.lang.Object nextComm_ = "";
    /**
     * <code>optional string next_comm = 19;</code>
     * @return Whether the nextComm field is set.
     */
    @java.lang.Override
    public boolean hasNextComm() {
      return ((bitField0_ & 0x00040000) != 0);
    }
    /**
     * <code>optional string next_comm = 19;</code>
     * @return The nextComm.
     */
    @java.lang.Override
    public java.lang.String getNextComm() {
      java.lang.Object ref = nextComm_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          nextComm_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string next_comm = 19;</code>
     * @return The bytes for nextComm.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNextCommBytes() {
      java.lang.Object ref = nextComm_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nextComm_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PREV_STATE_FIELD_NUMBER = 20;
    private long prevState_ = 0L;
    /**
     * <code>optional int64 prev_state = 20;</code>
     * @return Whether the prevState field is set.
     */
    @java.lang.Override
    public boolean hasPrevState() {
      return ((bitField0_ & 0x00080000) != 0);
    }
    /**
     * <code>optional int64 prev_state = 20;</code>
     * @return The prevState.
     */
    @java.lang.Override
    public long getPrevState() {
      return prevState_;
    }

    public static final int AMU0_FIELD_NUMBER = 21;
    private long amu0_ = 0L;
    /**
     * <code>optional uint64 amu0 = 21;</code>
     * @return Whether the amu0 field is set.
     */
    @java.lang.Override
    public boolean hasAmu0() {
      return ((bitField0_ & 0x00100000) != 0);
    }
    /**
     * <code>optional uint64 amu0 = 21;</code>
     * @return The amu0.
     */
    @java.lang.Override
    public long getAmu0() {
      return amu0_;
    }

    public static final int AMU1_FIELD_NUMBER = 22;
    private long amu1_ = 0L;
    /**
     * <code>optional uint64 amu1 = 22;</code>
     * @return Whether the amu1 field is set.
     */
    @java.lang.Override
    public boolean hasAmu1() {
      return ((bitField0_ & 0x00200000) != 0);
    }
    /**
     * <code>optional uint64 amu1 = 22;</code>
     * @return The amu1.
     */
    @java.lang.Override
    public long getAmu1() {
      return amu1_;
    }

    public static final int AMU2_FIELD_NUMBER = 23;
    private long amu2_ = 0L;
    /**
     * <code>optional uint64 amu2 = 23;</code>
     * @return Whether the amu2 field is set.
     */
    @java.lang.Override
    public boolean hasAmu2() {
      return ((bitField0_ & 0x00400000) != 0);
    }
    /**
     * <code>optional uint64 amu2 = 23;</code>
     * @return The amu2.
     */
    @java.lang.Override
    public long getAmu2() {
      return amu2_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, oldPid_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(2, newPid_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeUInt64(3, cctr_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeUInt64(4, ctr0_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeUInt64(5, ctr1_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeUInt64(6, ctr2_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeUInt64(7, ctr3_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeUInt32(8, lctr0_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        output.writeUInt32(9, lctr1_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        output.writeUInt64(10, ctr4_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        output.writeUInt64(11, ctr5_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 12, prevComm_);
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        output.writeInt32(13, prevPid_);
      }
      if (((bitField0_ & 0x00002000) != 0)) {
        output.writeUInt32(14, cyc_);
      }
      if (((bitField0_ & 0x00004000) != 0)) {
        output.writeUInt32(15, inst_);
      }
      if (((bitField0_ & 0x00008000) != 0)) {
        output.writeUInt32(16, stallbm_);
      }
      if (((bitField0_ & 0x00010000) != 0)) {
        output.writeUInt32(17, l3Dm_);
      }
      if (((bitField0_ & 0x00020000) != 0)) {
        output.writeInt32(18, nextPid_);
      }
      if (((bitField0_ & 0x00040000) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 19, nextComm_);
      }
      if (((bitField0_ & 0x00080000) != 0)) {
        output.writeInt64(20, prevState_);
      }
      if (((bitField0_ & 0x00100000) != 0)) {
        output.writeUInt64(21, amu0_);
      }
      if (((bitField0_ & 0x00200000) != 0)) {
        output.writeUInt64(22, amu1_);
      }
      if (((bitField0_ & 0x00400000) != 0)) {
        output.writeUInt64(23, amu2_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, oldPid_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, newPid_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, cctr_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(4, ctr0_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, ctr1_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, ctr2_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(7, ctr3_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, lctr0_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, lctr1_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(10, ctr4_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(11, ctr5_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(12, prevComm_);
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, prevPid_);
      }
      if (((bitField0_ & 0x00002000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(14, cyc_);
      }
      if (((bitField0_ & 0x00004000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(15, inst_);
      }
      if (((bitField0_ & 0x00008000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(16, stallbm_);
      }
      if (((bitField0_ & 0x00010000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(17, l3Dm_);
      }
      if (((bitField0_ & 0x00020000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, nextPid_);
      }
      if (((bitField0_ & 0x00040000) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(19, nextComm_);
      }
      if (((bitField0_ & 0x00080000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(20, prevState_);
      }
      if (((bitField0_ & 0x00100000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(21, amu0_);
      }
      if (((bitField0_ & 0x00200000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(22, amu1_);
      }
      if (((bitField0_ & 0x00400000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(23, amu2_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof perfetto.protos.PerfTraceCounters.SchedSwitchWithCtrsFtraceEvent)) {
        return super.equals(obj);
      }
      perfetto.protos.PerfTraceCounters.SchedSwitchWithCtrsFtraceEvent other = (perfetto.protos.PerfTraceCounters.SchedSwitchWithCtrsFtraceEvent) obj;

      if (hasOldPid() != other.hasOldPid()) return false;
      if (hasOldPid()) {
        if (getOldPid()
            != other.getOldPid()) return false;
      }
      if (hasNewPid() != other.hasNewPid()) return false;
      if (hasNewPid()) {
        if (getNewPid()
            != other.getNewPid()) return false;
      }
      if (hasCctr() != other.hasCctr()) return false;
      if (hasCctr()) {
        if (getCctr()
            != other.getCctr()) return false;
      }
      if (hasCtr0() != other.hasCtr0()) return false;
      if (hasCtr0()) {
        if (getCtr0()
            != other.getCtr0()) return false;
      }
      if (hasCtr1() != other.hasCtr1()) return false;
      if (hasCtr1()) {
        if (getCtr1()
            != other.getCtr1()) return false;
      }
      if (hasCtr2() != other.hasCtr2()) return false;
      if (hasCtr2()) {
        if (getCtr2()
            != other.getCtr2()) return false;
      }
      if (hasCtr3() != other.hasCtr3()) return false;
      if (hasCtr3()) {
        if (getCtr3()
            != other.getCtr3()) return false;
      }
      if (hasLctr0() != other.hasLctr0()) return false;
      if (hasLctr0()) {
        if (getLctr0()
            != other.getLctr0()) return false;
      }
      if (hasLctr1() != other.hasLctr1()) return false;
      if (hasLctr1()) {
        if (getLctr1()
            != other.getLctr1()) return false;
      }
      if (hasCtr4() != other.hasCtr4()) return false;
      if (hasCtr4()) {
        if (getCtr4()
            != other.getCtr4()) return false;
      }
      if (hasCtr5() != other.hasCtr5()) return false;
      if (hasCtr5()) {
        if (getCtr5()
            != other.getCtr5()) return false;
      }
      if (hasPrevComm() != other.hasPrevComm()) return false;
      if (hasPrevComm()) {
        if (!getPrevComm()
            .equals(other.getPrevComm())) return false;
      }
      if (hasPrevPid() != other.hasPrevPid()) return false;
      if (hasPrevPid()) {
        if (getPrevPid()
            != other.getPrevPid()) return false;
      }
      if (hasCyc() != other.hasCyc()) return false;
      if (hasCyc()) {
        if (getCyc()
            != other.getCyc()) return false;
      }
      if (hasInst() != other.hasInst()) return false;
      if (hasInst()) {
        if (getInst()
            != other.getInst()) return false;
      }
      if (hasStallbm() != other.hasStallbm()) return false;
      if (hasStallbm()) {
        if (getStallbm()
            != other.getStallbm()) return false;
      }
      if (hasL3Dm() != other.hasL3Dm()) return false;
      if (hasL3Dm()) {
        if (getL3Dm()
            != other.getL3Dm()) return false;
      }
      if (hasNextPid() != other.hasNextPid()) return false;
      if (hasNextPid()) {
        if (getNextPid()
            != other.getNextPid()) return false;
      }
      if (hasNextComm() != other.hasNextComm()) return false;
      if (hasNextComm()) {
        if (!getNextComm()
            .equals(other.getNextComm())) return false;
      }
      if (hasPrevState() != other.hasPrevState()) return false;
      if (hasPrevState()) {
        if (getPrevState()
            != other.getPrevState()) return false;
      }
      if (hasAmu0() != other.hasAmu0()) return false;
      if (hasAmu0()) {
        if (getAmu0()
            != other.getAmu0()) return false;
      }
      if (hasAmu1() != other.hasAmu1()) return false;
      if (hasAmu1()) {
        if (getAmu1()
            != other.getAmu1()) return false;
      }
      if (hasAmu2() != other.hasAmu2()) return false;
      if (hasAmu2()) {
        if (getAmu2()
            != other.getAmu2()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasOldPid()) {
        hash = (37 * hash) + OLD_PID_FIELD_NUMBER;
        hash = (53 * hash) + getOldPid();
      }
      if (hasNewPid()) {
        hash = (37 * hash) + NEW_PID_FIELD_NUMBER;
        hash = (53 * hash) + getNewPid();
      }
      if (hasCctr()) {
        hash = (37 * hash) + CCTR_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getCctr());
      }
      if (hasCtr0()) {
        hash = (37 * hash) + CTR0_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getCtr0());
      }
      if (hasCtr1()) {
        hash = (37 * hash) + CTR1_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getCtr1());
      }
      if (hasCtr2()) {
        hash = (37 * hash) + CTR2_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getCtr2());
      }
      if (hasCtr3()) {
        hash = (37 * hash) + CTR3_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getCtr3());
      }
      if (hasLctr0()) {
        hash = (37 * hash) + LCTR0_FIELD_NUMBER;
        hash = (53 * hash) + getLctr0();
      }
      if (hasLctr1()) {
        hash = (37 * hash) + LCTR1_FIELD_NUMBER;
        hash = (53 * hash) + getLctr1();
      }
      if (hasCtr4()) {
        hash = (37 * hash) + CTR4_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getCtr4());
      }
      if (hasCtr5()) {
        hash = (37 * hash) + CTR5_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getCtr5());
      }
      if (hasPrevComm()) {
        hash = (37 * hash) + PREV_COMM_FIELD_NUMBER;
        hash = (53 * hash) + getPrevComm().hashCode();
      }
      if (hasPrevPid()) {
        hash = (37 * hash) + PREV_PID_FIELD_NUMBER;
        hash = (53 * hash) + getPrevPid();
      }
      if (hasCyc()) {
        hash = (37 * hash) + CYC_FIELD_NUMBER;
        hash = (53 * hash) + getCyc();
      }
      if (hasInst()) {
        hash = (37 * hash) + INST_FIELD_NUMBER;
        hash = (53 * hash) + getInst();
      }
      if (hasStallbm()) {
        hash = (37 * hash) + STALLBM_FIELD_NUMBER;
        hash = (53 * hash) + getStallbm();
      }
      if (hasL3Dm()) {
        hash = (37 * hash) + L3DM_FIELD_NUMBER;
        hash = (53 * hash) + getL3Dm();
      }
      if (hasNextPid()) {
        hash = (37 * hash) + NEXT_PID_FIELD_NUMBER;
        hash = (53 * hash) + getNextPid();
      }
      if (hasNextComm()) {
        hash = (37 * hash) + NEXT_COMM_FIELD_NUMBER;
        hash = (53 * hash) + getNextComm().hashCode();
      }
      if (hasPrevState()) {
        hash = (37 * hash) + PREV_STATE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getPrevState());
      }
      if (hasAmu0()) {
        hash = (37 * hash) + AMU0_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getAmu0());
      }
      if (hasAmu1()) {
        hash = (37 * hash) + AMU1_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getAmu1());
      }
      if (hasAmu2()) {
        hash = (37 * hash) + AMU2_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getAmu2());
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static perfetto.protos.PerfTraceCounters.SchedSwitchWithCtrsFtraceEvent parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.PerfTraceCounters.SchedSwitchWithCtrsFtraceEvent parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.PerfTraceCounters.SchedSwitchWithCtrsFtraceEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.PerfTraceCounters.SchedSwitchWithCtrsFtraceEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.PerfTraceCounters.SchedSwitchWithCtrsFtraceEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.PerfTraceCounters.SchedSwitchWithCtrsFtraceEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.PerfTraceCounters.SchedSwitchWithCtrsFtraceEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.PerfTraceCounters.SchedSwitchWithCtrsFtraceEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static perfetto.protos.PerfTraceCounters.SchedSwitchWithCtrsFtraceEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static perfetto.protos.PerfTraceCounters.SchedSwitchWithCtrsFtraceEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.PerfTraceCounters.SchedSwitchWithCtrsFtraceEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.PerfTraceCounters.SchedSwitchWithCtrsFtraceEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(perfetto.protos.PerfTraceCounters.SchedSwitchWithCtrsFtraceEvent prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code perfetto.protos.SchedSwitchWithCtrsFtraceEvent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:perfetto.protos.SchedSwitchWithCtrsFtraceEvent)
        perfetto.protos.PerfTraceCounters.SchedSwitchWithCtrsFtraceEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.PerfTraceCounters.internal_static_perfetto_protos_SchedSwitchWithCtrsFtraceEvent_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.PerfTraceCounters.internal_static_perfetto_protos_SchedSwitchWithCtrsFtraceEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.PerfTraceCounters.SchedSwitchWithCtrsFtraceEvent.class, perfetto.protos.PerfTraceCounters.SchedSwitchWithCtrsFtraceEvent.Builder.class);
      }

      // Construct using perfetto.protos.PerfTraceCounters.SchedSwitchWithCtrsFtraceEvent.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        oldPid_ = 0;
        newPid_ = 0;
        cctr_ = 0L;
        ctr0_ = 0L;
        ctr1_ = 0L;
        ctr2_ = 0L;
        ctr3_ = 0L;
        lctr0_ = 0;
        lctr1_ = 0;
        ctr4_ = 0L;
        ctr5_ = 0L;
        prevComm_ = "";
        prevPid_ = 0;
        cyc_ = 0;
        inst_ = 0;
        stallbm_ = 0;
        l3Dm_ = 0;
        nextPid_ = 0;
        nextComm_ = "";
        prevState_ = 0L;
        amu0_ = 0L;
        amu1_ = 0L;
        amu2_ = 0L;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return perfetto.protos.PerfTraceCounters.internal_static_perfetto_protos_SchedSwitchWithCtrsFtraceEvent_descriptor;
      }

      @java.lang.Override
      public perfetto.protos.PerfTraceCounters.SchedSwitchWithCtrsFtraceEvent getDefaultInstanceForType() {
        return perfetto.protos.PerfTraceCounters.SchedSwitchWithCtrsFtraceEvent.getDefaultInstance();
      }

      @java.lang.Override
      public perfetto.protos.PerfTraceCounters.SchedSwitchWithCtrsFtraceEvent build() {
        perfetto.protos.PerfTraceCounters.SchedSwitchWithCtrsFtraceEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public perfetto.protos.PerfTraceCounters.SchedSwitchWithCtrsFtraceEvent buildPartial() {
        perfetto.protos.PerfTraceCounters.SchedSwitchWithCtrsFtraceEvent result = new perfetto.protos.PerfTraceCounters.SchedSwitchWithCtrsFtraceEvent(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(perfetto.protos.PerfTraceCounters.SchedSwitchWithCtrsFtraceEvent result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.oldPid_ = oldPid_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.newPid_ = newPid_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.cctr_ = cctr_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.ctr0_ = ctr0_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.ctr1_ = ctr1_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.ctr2_ = ctr2_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.ctr3_ = ctr3_;
          to_bitField0_ |= 0x00000040;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.lctr0_ = lctr0_;
          to_bitField0_ |= 0x00000080;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.lctr1_ = lctr1_;
          to_bitField0_ |= 0x00000100;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.ctr4_ = ctr4_;
          to_bitField0_ |= 0x00000200;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.ctr5_ = ctr5_;
          to_bitField0_ |= 0x00000400;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.prevComm_ = prevComm_;
          to_bitField0_ |= 0x00000800;
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          result.prevPid_ = prevPid_;
          to_bitField0_ |= 0x00001000;
        }
        if (((from_bitField0_ & 0x00002000) != 0)) {
          result.cyc_ = cyc_;
          to_bitField0_ |= 0x00002000;
        }
        if (((from_bitField0_ & 0x00004000) != 0)) {
          result.inst_ = inst_;
          to_bitField0_ |= 0x00004000;
        }
        if (((from_bitField0_ & 0x00008000) != 0)) {
          result.stallbm_ = stallbm_;
          to_bitField0_ |= 0x00008000;
        }
        if (((from_bitField0_ & 0x00010000) != 0)) {
          result.l3Dm_ = l3Dm_;
          to_bitField0_ |= 0x00010000;
        }
        if (((from_bitField0_ & 0x00020000) != 0)) {
          result.nextPid_ = nextPid_;
          to_bitField0_ |= 0x00020000;
        }
        if (((from_bitField0_ & 0x00040000) != 0)) {
          result.nextComm_ = nextComm_;
          to_bitField0_ |= 0x00040000;
        }
        if (((from_bitField0_ & 0x00080000) != 0)) {
          result.prevState_ = prevState_;
          to_bitField0_ |= 0x00080000;
        }
        if (((from_bitField0_ & 0x00100000) != 0)) {
          result.amu0_ = amu0_;
          to_bitField0_ |= 0x00100000;
        }
        if (((from_bitField0_ & 0x00200000) != 0)) {
          result.amu1_ = amu1_;
          to_bitField0_ |= 0x00200000;
        }
        if (((from_bitField0_ & 0x00400000) != 0)) {
          result.amu2_ = amu2_;
          to_bitField0_ |= 0x00400000;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof perfetto.protos.PerfTraceCounters.SchedSwitchWithCtrsFtraceEvent) {
          return mergeFrom((perfetto.protos.PerfTraceCounters.SchedSwitchWithCtrsFtraceEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(perfetto.protos.PerfTraceCounters.SchedSwitchWithCtrsFtraceEvent other) {
        if (other == perfetto.protos.PerfTraceCounters.SchedSwitchWithCtrsFtraceEvent.getDefaultInstance()) return this;
        if (other.hasOldPid()) {
          setOldPid(other.getOldPid());
        }
        if (other.hasNewPid()) {
          setNewPid(other.getNewPid());
        }
        if (other.hasCctr()) {
          setCctr(other.getCctr());
        }
        if (other.hasCtr0()) {
          setCtr0(other.getCtr0());
        }
        if (other.hasCtr1()) {
          setCtr1(other.getCtr1());
        }
        if (other.hasCtr2()) {
          setCtr2(other.getCtr2());
        }
        if (other.hasCtr3()) {
          setCtr3(other.getCtr3());
        }
        if (other.hasLctr0()) {
          setLctr0(other.getLctr0());
        }
        if (other.hasLctr1()) {
          setLctr1(other.getLctr1());
        }
        if (other.hasCtr4()) {
          setCtr4(other.getCtr4());
        }
        if (other.hasCtr5()) {
          setCtr5(other.getCtr5());
        }
        if (other.hasPrevComm()) {
          prevComm_ = other.prevComm_;
          bitField0_ |= 0x00000800;
          onChanged();
        }
        if (other.hasPrevPid()) {
          setPrevPid(other.getPrevPid());
        }
        if (other.hasCyc()) {
          setCyc(other.getCyc());
        }
        if (other.hasInst()) {
          setInst(other.getInst());
        }
        if (other.hasStallbm()) {
          setStallbm(other.getStallbm());
        }
        if (other.hasL3Dm()) {
          setL3Dm(other.getL3Dm());
        }
        if (other.hasNextPid()) {
          setNextPid(other.getNextPid());
        }
        if (other.hasNextComm()) {
          nextComm_ = other.nextComm_;
          bitField0_ |= 0x00040000;
          onChanged();
        }
        if (other.hasPrevState()) {
          setPrevState(other.getPrevState());
        }
        if (other.hasAmu0()) {
          setAmu0(other.getAmu0());
        }
        if (other.hasAmu1()) {
          setAmu1(other.getAmu1());
        }
        if (other.hasAmu2()) {
          setAmu2(other.getAmu2());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                oldPid_ = input.readInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                newPid_ = input.readInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                cctr_ = input.readUInt64();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                ctr0_ = input.readUInt64();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                ctr1_ = input.readUInt64();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                ctr2_ = input.readUInt64();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 56: {
                ctr3_ = input.readUInt64();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
              case 64: {
                lctr0_ = input.readUInt32();
                bitField0_ |= 0x00000080;
                break;
              } // case 64
              case 72: {
                lctr1_ = input.readUInt32();
                bitField0_ |= 0x00000100;
                break;
              } // case 72
              case 80: {
                ctr4_ = input.readUInt64();
                bitField0_ |= 0x00000200;
                break;
              } // case 80
              case 88: {
                ctr5_ = input.readUInt64();
                bitField0_ |= 0x00000400;
                break;
              } // case 88
              case 98: {
                prevComm_ = input.readBytes();
                bitField0_ |= 0x00000800;
                break;
              } // case 98
              case 104: {
                prevPid_ = input.readInt32();
                bitField0_ |= 0x00001000;
                break;
              } // case 104
              case 112: {
                cyc_ = input.readUInt32();
                bitField0_ |= 0x00002000;
                break;
              } // case 112
              case 120: {
                inst_ = input.readUInt32();
                bitField0_ |= 0x00004000;
                break;
              } // case 120
              case 128: {
                stallbm_ = input.readUInt32();
                bitField0_ |= 0x00008000;
                break;
              } // case 128
              case 136: {
                l3Dm_ = input.readUInt32();
                bitField0_ |= 0x00010000;
                break;
              } // case 136
              case 144: {
                nextPid_ = input.readInt32();
                bitField0_ |= 0x00020000;
                break;
              } // case 144
              case 154: {
                nextComm_ = input.readBytes();
                bitField0_ |= 0x00040000;
                break;
              } // case 154
              case 160: {
                prevState_ = input.readInt64();
                bitField0_ |= 0x00080000;
                break;
              } // case 160
              case 168: {
                amu0_ = input.readUInt64();
                bitField0_ |= 0x00100000;
                break;
              } // case 168
              case 176: {
                amu1_ = input.readUInt64();
                bitField0_ |= 0x00200000;
                break;
              } // case 176
              case 184: {
                amu2_ = input.readUInt64();
                bitField0_ |= 0x00400000;
                break;
              } // case 184
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int oldPid_ ;
      /**
       * <code>optional int32 old_pid = 1;</code>
       * @return Whether the oldPid field is set.
       */
      @java.lang.Override
      public boolean hasOldPid() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional int32 old_pid = 1;</code>
       * @return The oldPid.
       */
      @java.lang.Override
      public int getOldPid() {
        return oldPid_;
      }
      /**
       * <code>optional int32 old_pid = 1;</code>
       * @param value The oldPid to set.
       * @return This builder for chaining.
       */
      public Builder setOldPid(int value) {

        oldPid_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 old_pid = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearOldPid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        oldPid_ = 0;
        onChanged();
        return this;
      }

      private int newPid_ ;
      /**
       * <code>optional int32 new_pid = 2;</code>
       * @return Whether the newPid field is set.
       */
      @java.lang.Override
      public boolean hasNewPid() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional int32 new_pid = 2;</code>
       * @return The newPid.
       */
      @java.lang.Override
      public int getNewPid() {
        return newPid_;
      }
      /**
       * <code>optional int32 new_pid = 2;</code>
       * @param value The newPid to set.
       * @return This builder for chaining.
       */
      public Builder setNewPid(int value) {

        newPid_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 new_pid = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearNewPid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        newPid_ = 0;
        onChanged();
        return this;
      }

      private long cctr_ ;
      /**
       * <code>optional uint64 cctr = 3;</code>
       * @return Whether the cctr field is set.
       */
      @java.lang.Override
      public boolean hasCctr() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional uint64 cctr = 3;</code>
       * @return The cctr.
       */
      @java.lang.Override
      public long getCctr() {
        return cctr_;
      }
      /**
       * <code>optional uint64 cctr = 3;</code>
       * @param value The cctr to set.
       * @return This builder for chaining.
       */
      public Builder setCctr(long value) {

        cctr_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 cctr = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearCctr() {
        bitField0_ = (bitField0_ & ~0x00000004);
        cctr_ = 0L;
        onChanged();
        return this;
      }

      private long ctr0_ ;
      /**
       * <code>optional uint64 ctr0 = 4;</code>
       * @return Whether the ctr0 field is set.
       */
      @java.lang.Override
      public boolean hasCtr0() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional uint64 ctr0 = 4;</code>
       * @return The ctr0.
       */
      @java.lang.Override
      public long getCtr0() {
        return ctr0_;
      }
      /**
       * <code>optional uint64 ctr0 = 4;</code>
       * @param value The ctr0 to set.
       * @return This builder for chaining.
       */
      public Builder setCtr0(long value) {

        ctr0_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 ctr0 = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearCtr0() {
        bitField0_ = (bitField0_ & ~0x00000008);
        ctr0_ = 0L;
        onChanged();
        return this;
      }

      private long ctr1_ ;
      /**
       * <code>optional uint64 ctr1 = 5;</code>
       * @return Whether the ctr1 field is set.
       */
      @java.lang.Override
      public boolean hasCtr1() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional uint64 ctr1 = 5;</code>
       * @return The ctr1.
       */
      @java.lang.Override
      public long getCtr1() {
        return ctr1_;
      }
      /**
       * <code>optional uint64 ctr1 = 5;</code>
       * @param value The ctr1 to set.
       * @return This builder for chaining.
       */
      public Builder setCtr1(long value) {

        ctr1_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 ctr1 = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearCtr1() {
        bitField0_ = (bitField0_ & ~0x00000010);
        ctr1_ = 0L;
        onChanged();
        return this;
      }

      private long ctr2_ ;
      /**
       * <code>optional uint64 ctr2 = 6;</code>
       * @return Whether the ctr2 field is set.
       */
      @java.lang.Override
      public boolean hasCtr2() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional uint64 ctr2 = 6;</code>
       * @return The ctr2.
       */
      @java.lang.Override
      public long getCtr2() {
        return ctr2_;
      }
      /**
       * <code>optional uint64 ctr2 = 6;</code>
       * @param value The ctr2 to set.
       * @return This builder for chaining.
       */
      public Builder setCtr2(long value) {

        ctr2_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 ctr2 = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearCtr2() {
        bitField0_ = (bitField0_ & ~0x00000020);
        ctr2_ = 0L;
        onChanged();
        return this;
      }

      private long ctr3_ ;
      /**
       * <code>optional uint64 ctr3 = 7;</code>
       * @return Whether the ctr3 field is set.
       */
      @java.lang.Override
      public boolean hasCtr3() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional uint64 ctr3 = 7;</code>
       * @return The ctr3.
       */
      @java.lang.Override
      public long getCtr3() {
        return ctr3_;
      }
      /**
       * <code>optional uint64 ctr3 = 7;</code>
       * @param value The ctr3 to set.
       * @return This builder for chaining.
       */
      public Builder setCtr3(long value) {

        ctr3_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 ctr3 = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearCtr3() {
        bitField0_ = (bitField0_ & ~0x00000040);
        ctr3_ = 0L;
        onChanged();
        return this;
      }

      private int lctr0_ ;
      /**
       * <code>optional uint32 lctr0 = 8;</code>
       * @return Whether the lctr0 field is set.
       */
      @java.lang.Override
      public boolean hasLctr0() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <code>optional uint32 lctr0 = 8;</code>
       * @return The lctr0.
       */
      @java.lang.Override
      public int getLctr0() {
        return lctr0_;
      }
      /**
       * <code>optional uint32 lctr0 = 8;</code>
       * @param value The lctr0 to set.
       * @return This builder for chaining.
       */
      public Builder setLctr0(int value) {

        lctr0_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 lctr0 = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearLctr0() {
        bitField0_ = (bitField0_ & ~0x00000080);
        lctr0_ = 0;
        onChanged();
        return this;
      }

      private int lctr1_ ;
      /**
       * <code>optional uint32 lctr1 = 9;</code>
       * @return Whether the lctr1 field is set.
       */
      @java.lang.Override
      public boolean hasLctr1() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <code>optional uint32 lctr1 = 9;</code>
       * @return The lctr1.
       */
      @java.lang.Override
      public int getLctr1() {
        return lctr1_;
      }
      /**
       * <code>optional uint32 lctr1 = 9;</code>
       * @param value The lctr1 to set.
       * @return This builder for chaining.
       */
      public Builder setLctr1(int value) {

        lctr1_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 lctr1 = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearLctr1() {
        bitField0_ = (bitField0_ & ~0x00000100);
        lctr1_ = 0;
        onChanged();
        return this;
      }

      private long ctr4_ ;
      /**
       * <code>optional uint64 ctr4 = 10;</code>
       * @return Whether the ctr4 field is set.
       */
      @java.lang.Override
      public boolean hasCtr4() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <code>optional uint64 ctr4 = 10;</code>
       * @return The ctr4.
       */
      @java.lang.Override
      public long getCtr4() {
        return ctr4_;
      }
      /**
       * <code>optional uint64 ctr4 = 10;</code>
       * @param value The ctr4 to set.
       * @return This builder for chaining.
       */
      public Builder setCtr4(long value) {

        ctr4_ = value;
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 ctr4 = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearCtr4() {
        bitField0_ = (bitField0_ & ~0x00000200);
        ctr4_ = 0L;
        onChanged();
        return this;
      }

      private long ctr5_ ;
      /**
       * <code>optional uint64 ctr5 = 11;</code>
       * @return Whether the ctr5 field is set.
       */
      @java.lang.Override
      public boolean hasCtr5() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <code>optional uint64 ctr5 = 11;</code>
       * @return The ctr5.
       */
      @java.lang.Override
      public long getCtr5() {
        return ctr5_;
      }
      /**
       * <code>optional uint64 ctr5 = 11;</code>
       * @param value The ctr5 to set.
       * @return This builder for chaining.
       */
      public Builder setCtr5(long value) {

        ctr5_ = value;
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 ctr5 = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearCtr5() {
        bitField0_ = (bitField0_ & ~0x00000400);
        ctr5_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object prevComm_ = "";
      /**
       * <code>optional string prev_comm = 12;</code>
       * @return Whether the prevComm field is set.
       */
      public boolean hasPrevComm() {
        return ((bitField0_ & 0x00000800) != 0);
      }
      /**
       * <code>optional string prev_comm = 12;</code>
       * @return The prevComm.
       */
      public java.lang.String getPrevComm() {
        java.lang.Object ref = prevComm_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            prevComm_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string prev_comm = 12;</code>
       * @return The bytes for prevComm.
       */
      public com.google.protobuf.ByteString
          getPrevCommBytes() {
        java.lang.Object ref = prevComm_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          prevComm_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string prev_comm = 12;</code>
       * @param value The prevComm to set.
       * @return This builder for chaining.
       */
      public Builder setPrevComm(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        prevComm_ = value;
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <code>optional string prev_comm = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearPrevComm() {
        prevComm_ = getDefaultInstance().getPrevComm();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }
      /**
       * <code>optional string prev_comm = 12;</code>
       * @param value The bytes for prevComm to set.
       * @return This builder for chaining.
       */
      public Builder setPrevCommBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        prevComm_ = value;
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }

      private int prevPid_ ;
      /**
       * <code>optional int32 prev_pid = 13;</code>
       * @return Whether the prevPid field is set.
       */
      @java.lang.Override
      public boolean hasPrevPid() {
        return ((bitField0_ & 0x00001000) != 0);
      }
      /**
       * <code>optional int32 prev_pid = 13;</code>
       * @return The prevPid.
       */
      @java.lang.Override
      public int getPrevPid() {
        return prevPid_;
      }
      /**
       * <code>optional int32 prev_pid = 13;</code>
       * @param value The prevPid to set.
       * @return This builder for chaining.
       */
      public Builder setPrevPid(int value) {

        prevPid_ = value;
        bitField0_ |= 0x00001000;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 prev_pid = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearPrevPid() {
        bitField0_ = (bitField0_ & ~0x00001000);
        prevPid_ = 0;
        onChanged();
        return this;
      }

      private int cyc_ ;
      /**
       * <code>optional uint32 cyc = 14;</code>
       * @return Whether the cyc field is set.
       */
      @java.lang.Override
      public boolean hasCyc() {
        return ((bitField0_ & 0x00002000) != 0);
      }
      /**
       * <code>optional uint32 cyc = 14;</code>
       * @return The cyc.
       */
      @java.lang.Override
      public int getCyc() {
        return cyc_;
      }
      /**
       * <code>optional uint32 cyc = 14;</code>
       * @param value The cyc to set.
       * @return This builder for chaining.
       */
      public Builder setCyc(int value) {

        cyc_ = value;
        bitField0_ |= 0x00002000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 cyc = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearCyc() {
        bitField0_ = (bitField0_ & ~0x00002000);
        cyc_ = 0;
        onChanged();
        return this;
      }

      private int inst_ ;
      /**
       * <code>optional uint32 inst = 15;</code>
       * @return Whether the inst field is set.
       */
      @java.lang.Override
      public boolean hasInst() {
        return ((bitField0_ & 0x00004000) != 0);
      }
      /**
       * <code>optional uint32 inst = 15;</code>
       * @return The inst.
       */
      @java.lang.Override
      public int getInst() {
        return inst_;
      }
      /**
       * <code>optional uint32 inst = 15;</code>
       * @param value The inst to set.
       * @return This builder for chaining.
       */
      public Builder setInst(int value) {

        inst_ = value;
        bitField0_ |= 0x00004000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 inst = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearInst() {
        bitField0_ = (bitField0_ & ~0x00004000);
        inst_ = 0;
        onChanged();
        return this;
      }

      private int stallbm_ ;
      /**
       * <code>optional uint32 stallbm = 16;</code>
       * @return Whether the stallbm field is set.
       */
      @java.lang.Override
      public boolean hasStallbm() {
        return ((bitField0_ & 0x00008000) != 0);
      }
      /**
       * <code>optional uint32 stallbm = 16;</code>
       * @return The stallbm.
       */
      @java.lang.Override
      public int getStallbm() {
        return stallbm_;
      }
      /**
       * <code>optional uint32 stallbm = 16;</code>
       * @param value The stallbm to set.
       * @return This builder for chaining.
       */
      public Builder setStallbm(int value) {

        stallbm_ = value;
        bitField0_ |= 0x00008000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 stallbm = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearStallbm() {
        bitField0_ = (bitField0_ & ~0x00008000);
        stallbm_ = 0;
        onChanged();
        return this;
      }

      private int l3Dm_ ;
      /**
       * <code>optional uint32 l3dm = 17;</code>
       * @return Whether the l3dm field is set.
       */
      @java.lang.Override
      public boolean hasL3Dm() {
        return ((bitField0_ & 0x00010000) != 0);
      }
      /**
       * <code>optional uint32 l3dm = 17;</code>
       * @return The l3dm.
       */
      @java.lang.Override
      public int getL3Dm() {
        return l3Dm_;
      }
      /**
       * <code>optional uint32 l3dm = 17;</code>
       * @param value The l3dm to set.
       * @return This builder for chaining.
       */
      public Builder setL3Dm(int value) {

        l3Dm_ = value;
        bitField0_ |= 0x00010000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 l3dm = 17;</code>
       * @return This builder for chaining.
       */
      public Builder clearL3Dm() {
        bitField0_ = (bitField0_ & ~0x00010000);
        l3Dm_ = 0;
        onChanged();
        return this;
      }

      private int nextPid_ ;
      /**
       * <code>optional int32 next_pid = 18;</code>
       * @return Whether the nextPid field is set.
       */
      @java.lang.Override
      public boolean hasNextPid() {
        return ((bitField0_ & 0x00020000) != 0);
      }
      /**
       * <code>optional int32 next_pid = 18;</code>
       * @return The nextPid.
       */
      @java.lang.Override
      public int getNextPid() {
        return nextPid_;
      }
      /**
       * <code>optional int32 next_pid = 18;</code>
       * @param value The nextPid to set.
       * @return This builder for chaining.
       */
      public Builder setNextPid(int value) {

        nextPid_ = value;
        bitField0_ |= 0x00020000;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 next_pid = 18;</code>
       * @return This builder for chaining.
       */
      public Builder clearNextPid() {
        bitField0_ = (bitField0_ & ~0x00020000);
        nextPid_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object nextComm_ = "";
      /**
       * <code>optional string next_comm = 19;</code>
       * @return Whether the nextComm field is set.
       */
      public boolean hasNextComm() {
        return ((bitField0_ & 0x00040000) != 0);
      }
      /**
       * <code>optional string next_comm = 19;</code>
       * @return The nextComm.
       */
      public java.lang.String getNextComm() {
        java.lang.Object ref = nextComm_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            nextComm_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string next_comm = 19;</code>
       * @return The bytes for nextComm.
       */
      public com.google.protobuf.ByteString
          getNextCommBytes() {
        java.lang.Object ref = nextComm_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          nextComm_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string next_comm = 19;</code>
       * @param value The nextComm to set.
       * @return This builder for chaining.
       */
      public Builder setNextComm(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        nextComm_ = value;
        bitField0_ |= 0x00040000;
        onChanged();
        return this;
      }
      /**
       * <code>optional string next_comm = 19;</code>
       * @return This builder for chaining.
       */
      public Builder clearNextComm() {
        nextComm_ = getDefaultInstance().getNextComm();
        bitField0_ = (bitField0_ & ~0x00040000);
        onChanged();
        return this;
      }
      /**
       * <code>optional string next_comm = 19;</code>
       * @param value The bytes for nextComm to set.
       * @return This builder for chaining.
       */
      public Builder setNextCommBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        nextComm_ = value;
        bitField0_ |= 0x00040000;
        onChanged();
        return this;
      }

      private long prevState_ ;
      /**
       * <code>optional int64 prev_state = 20;</code>
       * @return Whether the prevState field is set.
       */
      @java.lang.Override
      public boolean hasPrevState() {
        return ((bitField0_ & 0x00080000) != 0);
      }
      /**
       * <code>optional int64 prev_state = 20;</code>
       * @return The prevState.
       */
      @java.lang.Override
      public long getPrevState() {
        return prevState_;
      }
      /**
       * <code>optional int64 prev_state = 20;</code>
       * @param value The prevState to set.
       * @return This builder for chaining.
       */
      public Builder setPrevState(long value) {

        prevState_ = value;
        bitField0_ |= 0x00080000;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 prev_state = 20;</code>
       * @return This builder for chaining.
       */
      public Builder clearPrevState() {
        bitField0_ = (bitField0_ & ~0x00080000);
        prevState_ = 0L;
        onChanged();
        return this;
      }

      private long amu0_ ;
      /**
       * <code>optional uint64 amu0 = 21;</code>
       * @return Whether the amu0 field is set.
       */
      @java.lang.Override
      public boolean hasAmu0() {
        return ((bitField0_ & 0x00100000) != 0);
      }
      /**
       * <code>optional uint64 amu0 = 21;</code>
       * @return The amu0.
       */
      @java.lang.Override
      public long getAmu0() {
        return amu0_;
      }
      /**
       * <code>optional uint64 amu0 = 21;</code>
       * @param value The amu0 to set.
       * @return This builder for chaining.
       */
      public Builder setAmu0(long value) {

        amu0_ = value;
        bitField0_ |= 0x00100000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 amu0 = 21;</code>
       * @return This builder for chaining.
       */
      public Builder clearAmu0() {
        bitField0_ = (bitField0_ & ~0x00100000);
        amu0_ = 0L;
        onChanged();
        return this;
      }

      private long amu1_ ;
      /**
       * <code>optional uint64 amu1 = 22;</code>
       * @return Whether the amu1 field is set.
       */
      @java.lang.Override
      public boolean hasAmu1() {
        return ((bitField0_ & 0x00200000) != 0);
      }
      /**
       * <code>optional uint64 amu1 = 22;</code>
       * @return The amu1.
       */
      @java.lang.Override
      public long getAmu1() {
        return amu1_;
      }
      /**
       * <code>optional uint64 amu1 = 22;</code>
       * @param value The amu1 to set.
       * @return This builder for chaining.
       */
      public Builder setAmu1(long value) {

        amu1_ = value;
        bitField0_ |= 0x00200000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 amu1 = 22;</code>
       * @return This builder for chaining.
       */
      public Builder clearAmu1() {
        bitField0_ = (bitField0_ & ~0x00200000);
        amu1_ = 0L;
        onChanged();
        return this;
      }

      private long amu2_ ;
      /**
       * <code>optional uint64 amu2 = 23;</code>
       * @return Whether the amu2 field is set.
       */
      @java.lang.Override
      public boolean hasAmu2() {
        return ((bitField0_ & 0x00400000) != 0);
      }
      /**
       * <code>optional uint64 amu2 = 23;</code>
       * @return The amu2.
       */
      @java.lang.Override
      public long getAmu2() {
        return amu2_;
      }
      /**
       * <code>optional uint64 amu2 = 23;</code>
       * @param value The amu2 to set.
       * @return This builder for chaining.
       */
      public Builder setAmu2(long value) {

        amu2_ = value;
        bitField0_ |= 0x00400000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 amu2 = 23;</code>
       * @return This builder for chaining.
       */
      public Builder clearAmu2() {
        bitField0_ = (bitField0_ & ~0x00400000);
        amu2_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:perfetto.protos.SchedSwitchWithCtrsFtraceEvent)
    }

    // @@protoc_insertion_point(class_scope:perfetto.protos.SchedSwitchWithCtrsFtraceEvent)
    private static final perfetto.protos.PerfTraceCounters.SchedSwitchWithCtrsFtraceEvent DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new perfetto.protos.PerfTraceCounters.SchedSwitchWithCtrsFtraceEvent();
    }

    public static perfetto.protos.PerfTraceCounters.SchedSwitchWithCtrsFtraceEvent getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SchedSwitchWithCtrsFtraceEvent>
        PARSER = new com.google.protobuf.AbstractParser<SchedSwitchWithCtrsFtraceEvent>() {
      @java.lang.Override
      public SchedSwitchWithCtrsFtraceEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<SchedSwitchWithCtrsFtraceEvent> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SchedSwitchWithCtrsFtraceEvent> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public perfetto.protos.PerfTraceCounters.SchedSwitchWithCtrsFtraceEvent getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_SchedSwitchWithCtrsFtraceEvent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_perfetto_protos_SchedSwitchWithCtrsFtraceEvent_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n6protos/perfetto/trace/ftrace/perf_trac" +
      "e_counters.proto\022\017perfetto.protos\"\204\003\n\036Sc" +
      "hedSwitchWithCtrsFtraceEvent\022\017\n\007old_pid\030" +
      "\001 \001(\005\022\017\n\007new_pid\030\002 \001(\005\022\014\n\004cctr\030\003 \001(\004\022\014\n\004" +
      "ctr0\030\004 \001(\004\022\014\n\004ctr1\030\005 \001(\004\022\014\n\004ctr2\030\006 \001(\004\022\014" +
      "\n\004ctr3\030\007 \001(\004\022\r\n\005lctr0\030\010 \001(\r\022\r\n\005lctr1\030\t \001" +
      "(\r\022\014\n\004ctr4\030\n \001(\004\022\014\n\004ctr5\030\013 \001(\004\022\021\n\tprev_c" +
      "omm\030\014 \001(\t\022\020\n\010prev_pid\030\r \001(\005\022\013\n\003cyc\030\016 \001(\r" +
      "\022\014\n\004inst\030\017 \001(\r\022\017\n\007stallbm\030\020 \001(\r\022\014\n\004l3dm\030" +
      "\021 \001(\r\022\020\n\010next_pid\030\022 \001(\005\022\021\n\tnext_comm\030\023 \001" +
      "(\t\022\022\n\nprev_state\030\024 \001(\003\022\014\n\004amu0\030\025 \001(\004\022\014\n\004" +
      "amu1\030\026 \001(\004\022\014\n\004amu2\030\027 \001(\004"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_perfetto_protos_SchedSwitchWithCtrsFtraceEvent_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_perfetto_protos_SchedSwitchWithCtrsFtraceEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_perfetto_protos_SchedSwitchWithCtrsFtraceEvent_descriptor,
        new java.lang.String[] { "OldPid", "NewPid", "Cctr", "Ctr0", "Ctr1", "Ctr2", "Ctr3", "Lctr0", "Lctr1", "Ctr4", "Ctr5", "PrevComm", "PrevPid", "Cyc", "Inst", "Stallbm", "L3Dm", "NextPid", "NextComm", "PrevState", "Amu0", "Amu1", "Amu2", });
    descriptor.resolveAllFeaturesImmutable();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
