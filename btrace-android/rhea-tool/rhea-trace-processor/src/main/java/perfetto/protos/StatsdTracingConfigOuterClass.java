// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: protos/perfetto/config/statsd/statsd_tracing_config.proto
// Protobuf Java Version: 4.29.3

package perfetto.protos;

public final class StatsdTracingConfigOuterClass {
  private StatsdTracingConfigOuterClass() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 3,
      /* suffix= */ "",
      StatsdTracingConfigOuterClass.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface StatsdTracingConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:perfetto.protos.StatsdTracingConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * This is for the common case of the atom id being known in the enum AtomId.
     * </pre>
     *
     * <code>repeated .perfetto.protos.AtomId push_atom_id = 1;</code>
     * @return A list containing the pushAtomId.
     */
    java.util.List<perfetto.protos.AtomIds.AtomId> getPushAtomIdList();
    /**
     * <pre>
     * This is for the common case of the atom id being known in the enum AtomId.
     * </pre>
     *
     * <code>repeated .perfetto.protos.AtomId push_atom_id = 1;</code>
     * @return The count of pushAtomId.
     */
    int getPushAtomIdCount();
    /**
     * <pre>
     * This is for the common case of the atom id being known in the enum AtomId.
     * </pre>
     *
     * <code>repeated .perfetto.protos.AtomId push_atom_id = 1;</code>
     * @param index The index of the element to return.
     * @return The pushAtomId at the given index.
     */
    perfetto.protos.AtomIds.AtomId getPushAtomId(int index);

    /**
     * <pre>
     * Escape hatch for Atom IDs that are not yet in the AtomId enum
     * (e.g. non-upstream atoms that don't exist in AOSP).
     * </pre>
     *
     * <code>repeated int32 raw_push_atom_id = 2;</code>
     * @return A list containing the rawPushAtomId.
     */
    java.util.List<java.lang.Integer> getRawPushAtomIdList();
    /**
     * <pre>
     * Escape hatch for Atom IDs that are not yet in the AtomId enum
     * (e.g. non-upstream atoms that don't exist in AOSP).
     * </pre>
     *
     * <code>repeated int32 raw_push_atom_id = 2;</code>
     * @return The count of rawPushAtomId.
     */
    int getRawPushAtomIdCount();
    /**
     * <pre>
     * Escape hatch for Atom IDs that are not yet in the AtomId enum
     * (e.g. non-upstream atoms that don't exist in AOSP).
     * </pre>
     *
     * <code>repeated int32 raw_push_atom_id = 2;</code>
     * @param index The index of the element to return.
     * @return The rawPushAtomId at the given index.
     */
    int getRawPushAtomId(int index);

    /**
     * <code>repeated .perfetto.protos.StatsdPullAtomConfig pull_config = 3;</code>
     */
    java.util.List<perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig> 
        getPullConfigList();
    /**
     * <code>repeated .perfetto.protos.StatsdPullAtomConfig pull_config = 3;</code>
     */
    perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig getPullConfig(int index);
    /**
     * <code>repeated .perfetto.protos.StatsdPullAtomConfig pull_config = 3;</code>
     */
    int getPullConfigCount();
    /**
     * <code>repeated .perfetto.protos.StatsdPullAtomConfig pull_config = 3;</code>
     */
    java.util.List<? extends perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfigOrBuilder> 
        getPullConfigOrBuilderList();
    /**
     * <code>repeated .perfetto.protos.StatsdPullAtomConfig pull_config = 3;</code>
     */
    perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfigOrBuilder getPullConfigOrBuilder(
        int index);
  }
  /**
   * <pre>
   * This file is named 'statsd_tracing_config.proto' rather than
   * 'statsd_config.proto' (which would be more consistent with the other
   * config protos) so it doesn't show up and confuse folks looking for
   * the existing statsd_config.proto for configuring statsd itself.
   * Same for the config proto itself.
   * </pre>
   *
   * Protobuf type {@code perfetto.protos.StatsdTracingConfig}
   */
  public static final class StatsdTracingConfig extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:perfetto.protos.StatsdTracingConfig)
      StatsdTracingConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 3,
        /* suffix= */ "",
        StatsdTracingConfig.class.getName());
    }
    // Use StatsdTracingConfig.newBuilder() to construct.
    private StatsdTracingConfig(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private StatsdTracingConfig() {
      pushAtomId_ = emptyIntList();
      rawPushAtomId_ = emptyIntList();
      pullConfig_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return perfetto.protos.StatsdTracingConfigOuterClass.internal_static_perfetto_protos_StatsdTracingConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return perfetto.protos.StatsdTracingConfigOuterClass.internal_static_perfetto_protos_StatsdTracingConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              perfetto.protos.StatsdTracingConfigOuterClass.StatsdTracingConfig.class, perfetto.protos.StatsdTracingConfigOuterClass.StatsdTracingConfig.Builder.class);
    }

    public static final int PUSH_ATOM_ID_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList pushAtomId_;
    private static final com.google.protobuf.Internal.IntListAdapter.IntConverter<
        perfetto.protos.AtomIds.AtomId> pushAtomId_converter_ =
            new com.google.protobuf.Internal.IntListAdapter.IntConverter<
                perfetto.protos.AtomIds.AtomId>() {
              public perfetto.protos.AtomIds.AtomId convert(int from) {
                perfetto.protos.AtomIds.AtomId result = perfetto.protos.AtomIds.AtomId.forNumber(from);
                return result == null ? perfetto.protos.AtomIds.AtomId.ATOM_UNSPECIFIED : result;
              }
            };
    /**
     * <pre>
     * This is for the common case of the atom id being known in the enum AtomId.
     * </pre>
     *
     * <code>repeated .perfetto.protos.AtomId push_atom_id = 1;</code>
     * @return A list containing the pushAtomId.
     */
    @java.lang.Override
    public java.util.List<perfetto.protos.AtomIds.AtomId> getPushAtomIdList() {
      return new com.google.protobuf.Internal.IntListAdapter<
          perfetto.protos.AtomIds.AtomId>(pushAtomId_, pushAtomId_converter_);
    }
    /**
     * <pre>
     * This is for the common case of the atom id being known in the enum AtomId.
     * </pre>
     *
     * <code>repeated .perfetto.protos.AtomId push_atom_id = 1;</code>
     * @return The count of pushAtomId.
     */
    @java.lang.Override
    public int getPushAtomIdCount() {
      return pushAtomId_.size();
    }
    /**
     * <pre>
     * This is for the common case of the atom id being known in the enum AtomId.
     * </pre>
     *
     * <code>repeated .perfetto.protos.AtomId push_atom_id = 1;</code>
     * @param index The index of the element to return.
     * @return The pushAtomId at the given index.
     */
    @java.lang.Override
    public perfetto.protos.AtomIds.AtomId getPushAtomId(int index) {
      return pushAtomId_converter_.convert(pushAtomId_.getInt(index));
    }

    public static final int RAW_PUSH_ATOM_ID_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList rawPushAtomId_ =
        emptyIntList();
    /**
     * <pre>
     * Escape hatch for Atom IDs that are not yet in the AtomId enum
     * (e.g. non-upstream atoms that don't exist in AOSP).
     * </pre>
     *
     * <code>repeated int32 raw_push_atom_id = 2;</code>
     * @return A list containing the rawPushAtomId.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getRawPushAtomIdList() {
      return rawPushAtomId_;
    }
    /**
     * <pre>
     * Escape hatch for Atom IDs that are not yet in the AtomId enum
     * (e.g. non-upstream atoms that don't exist in AOSP).
     * </pre>
     *
     * <code>repeated int32 raw_push_atom_id = 2;</code>
     * @return The count of rawPushAtomId.
     */
    public int getRawPushAtomIdCount() {
      return rawPushAtomId_.size();
    }
    /**
     * <pre>
     * Escape hatch for Atom IDs that are not yet in the AtomId enum
     * (e.g. non-upstream atoms that don't exist in AOSP).
     * </pre>
     *
     * <code>repeated int32 raw_push_atom_id = 2;</code>
     * @param index The index of the element to return.
     * @return The rawPushAtomId at the given index.
     */
    public int getRawPushAtomId(int index) {
      return rawPushAtomId_.getInt(index);
    }

    public static final int PULL_CONFIG_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private java.util.List<perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig> pullConfig_;
    /**
     * <code>repeated .perfetto.protos.StatsdPullAtomConfig pull_config = 3;</code>
     */
    @java.lang.Override
    public java.util.List<perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig> getPullConfigList() {
      return pullConfig_;
    }
    /**
     * <code>repeated .perfetto.protos.StatsdPullAtomConfig pull_config = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfigOrBuilder> 
        getPullConfigOrBuilderList() {
      return pullConfig_;
    }
    /**
     * <code>repeated .perfetto.protos.StatsdPullAtomConfig pull_config = 3;</code>
     */
    @java.lang.Override
    public int getPullConfigCount() {
      return pullConfig_.size();
    }
    /**
     * <code>repeated .perfetto.protos.StatsdPullAtomConfig pull_config = 3;</code>
     */
    @java.lang.Override
    public perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig getPullConfig(int index) {
      return pullConfig_.get(index);
    }
    /**
     * <code>repeated .perfetto.protos.StatsdPullAtomConfig pull_config = 3;</code>
     */
    @java.lang.Override
    public perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfigOrBuilder getPullConfigOrBuilder(
        int index) {
      return pullConfig_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < pushAtomId_.size(); i++) {
        output.writeEnum(1, pushAtomId_.getInt(i));
      }
      for (int i = 0; i < rawPushAtomId_.size(); i++) {
        output.writeInt32(2, rawPushAtomId_.getInt(i));
      }
      for (int i = 0; i < pullConfig_.size(); i++) {
        output.writeMessage(3, pullConfig_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < pushAtomId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(pushAtomId_.getInt(i));
        }
        size += dataSize;
        size += 1 * pushAtomId_.size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < rawPushAtomId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(rawPushAtomId_.getInt(i));
        }
        size += dataSize;
        size += 1 * getRawPushAtomIdList().size();
      }
      for (int i = 0; i < pullConfig_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, pullConfig_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof perfetto.protos.StatsdTracingConfigOuterClass.StatsdTracingConfig)) {
        return super.equals(obj);
      }
      perfetto.protos.StatsdTracingConfigOuterClass.StatsdTracingConfig other = (perfetto.protos.StatsdTracingConfigOuterClass.StatsdTracingConfig) obj;

      if (!pushAtomId_.equals(other.pushAtomId_)) return false;
      if (!getRawPushAtomIdList()
          .equals(other.getRawPushAtomIdList())) return false;
      if (!getPullConfigList()
          .equals(other.getPullConfigList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getPushAtomIdCount() > 0) {
        hash = (37 * hash) + PUSH_ATOM_ID_FIELD_NUMBER;
        hash = (53 * hash) + pushAtomId_.hashCode();
      }
      if (getRawPushAtomIdCount() > 0) {
        hash = (37 * hash) + RAW_PUSH_ATOM_ID_FIELD_NUMBER;
        hash = (53 * hash) + getRawPushAtomIdList().hashCode();
      }
      if (getPullConfigCount() > 0) {
        hash = (37 * hash) + PULL_CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getPullConfigList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static perfetto.protos.StatsdTracingConfigOuterClass.StatsdTracingConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.StatsdTracingConfigOuterClass.StatsdTracingConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.StatsdTracingConfigOuterClass.StatsdTracingConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.StatsdTracingConfigOuterClass.StatsdTracingConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.StatsdTracingConfigOuterClass.StatsdTracingConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.StatsdTracingConfigOuterClass.StatsdTracingConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.StatsdTracingConfigOuterClass.StatsdTracingConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.StatsdTracingConfigOuterClass.StatsdTracingConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static perfetto.protos.StatsdTracingConfigOuterClass.StatsdTracingConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static perfetto.protos.StatsdTracingConfigOuterClass.StatsdTracingConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.StatsdTracingConfigOuterClass.StatsdTracingConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.StatsdTracingConfigOuterClass.StatsdTracingConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(perfetto.protos.StatsdTracingConfigOuterClass.StatsdTracingConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * This file is named 'statsd_tracing_config.proto' rather than
     * 'statsd_config.proto' (which would be more consistent with the other
     * config protos) so it doesn't show up and confuse folks looking for
     * the existing statsd_config.proto for configuring statsd itself.
     * Same for the config proto itself.
     * </pre>
     *
     * Protobuf type {@code perfetto.protos.StatsdTracingConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:perfetto.protos.StatsdTracingConfig)
        perfetto.protos.StatsdTracingConfigOuterClass.StatsdTracingConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.StatsdTracingConfigOuterClass.internal_static_perfetto_protos_StatsdTracingConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.StatsdTracingConfigOuterClass.internal_static_perfetto_protos_StatsdTracingConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.StatsdTracingConfigOuterClass.StatsdTracingConfig.class, perfetto.protos.StatsdTracingConfigOuterClass.StatsdTracingConfig.Builder.class);
      }

      // Construct using perfetto.protos.StatsdTracingConfigOuterClass.StatsdTracingConfig.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        pushAtomId_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        rawPushAtomId_ = emptyIntList();
        if (pullConfigBuilder_ == null) {
          pullConfig_ = java.util.Collections.emptyList();
        } else {
          pullConfig_ = null;
          pullConfigBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return perfetto.protos.StatsdTracingConfigOuterClass.internal_static_perfetto_protos_StatsdTracingConfig_descriptor;
      }

      @java.lang.Override
      public perfetto.protos.StatsdTracingConfigOuterClass.StatsdTracingConfig getDefaultInstanceForType() {
        return perfetto.protos.StatsdTracingConfigOuterClass.StatsdTracingConfig.getDefaultInstance();
      }

      @java.lang.Override
      public perfetto.protos.StatsdTracingConfigOuterClass.StatsdTracingConfig build() {
        perfetto.protos.StatsdTracingConfigOuterClass.StatsdTracingConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public perfetto.protos.StatsdTracingConfigOuterClass.StatsdTracingConfig buildPartial() {
        perfetto.protos.StatsdTracingConfigOuterClass.StatsdTracingConfig result = new perfetto.protos.StatsdTracingConfigOuterClass.StatsdTracingConfig(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(perfetto.protos.StatsdTracingConfigOuterClass.StatsdTracingConfig result) {
        if (((bitField0_ & 0x00000001) != 0)) {
          pushAtomId_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.pushAtomId_ = pushAtomId_;
        if (pullConfigBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            pullConfig_ = java.util.Collections.unmodifiableList(pullConfig_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.pullConfig_ = pullConfig_;
        } else {
          result.pullConfig_ = pullConfigBuilder_.build();
        }
      }

      private void buildPartial0(perfetto.protos.StatsdTracingConfigOuterClass.StatsdTracingConfig result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          rawPushAtomId_.makeImmutable();
          result.rawPushAtomId_ = rawPushAtomId_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof perfetto.protos.StatsdTracingConfigOuterClass.StatsdTracingConfig) {
          return mergeFrom((perfetto.protos.StatsdTracingConfigOuterClass.StatsdTracingConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(perfetto.protos.StatsdTracingConfigOuterClass.StatsdTracingConfig other) {
        if (other == perfetto.protos.StatsdTracingConfigOuterClass.StatsdTracingConfig.getDefaultInstance()) return this;
        if (!other.pushAtomId_.isEmpty()) {
          if (pushAtomId_.isEmpty()) {
            pushAtomId_ = other.pushAtomId_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensurePushAtomIdIsMutable();
            pushAtomId_.addAll(other.pushAtomId_);
          }
          onChanged();
        }
        if (!other.rawPushAtomId_.isEmpty()) {
          if (rawPushAtomId_.isEmpty()) {
            rawPushAtomId_ = other.rawPushAtomId_;
            rawPushAtomId_.makeImmutable();
            bitField0_ |= 0x00000002;
          } else {
            ensureRawPushAtomIdIsMutable();
            rawPushAtomId_.addAll(other.rawPushAtomId_);
          }
          onChanged();
        }
        if (pullConfigBuilder_ == null) {
          if (!other.pullConfig_.isEmpty()) {
            if (pullConfig_.isEmpty()) {
              pullConfig_ = other.pullConfig_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensurePullConfigIsMutable();
              pullConfig_.addAll(other.pullConfig_);
            }
            onChanged();
          }
        } else {
          if (!other.pullConfig_.isEmpty()) {
            if (pullConfigBuilder_.isEmpty()) {
              pullConfigBuilder_.dispose();
              pullConfigBuilder_ = null;
              pullConfig_ = other.pullConfig_;
              bitField0_ = (bitField0_ & ~0x00000004);
              pullConfigBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPullConfigFieldBuilder() : null;
            } else {
              pullConfigBuilder_.addAllMessages(other.pullConfig_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int tmpRaw = input.readEnum();
                perfetto.protos.AtomIds.AtomId tmpValue =
                    perfetto.protos.AtomIds.AtomId.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(1, tmpRaw);
                } else {
                  ensurePushAtomIdIsMutable();
                  pushAtomId_.addInt(tmpRaw);
                }
                break;
              } // case 8
              case 10: {
                int length = input.readRawVarint32();
                int oldLimit = input.pushLimit(length);
                while(input.getBytesUntilLimit() > 0) {
                  int tmpRaw = input.readEnum();
                  perfetto.protos.AtomIds.AtomId tmpValue =
                      perfetto.protos.AtomIds.AtomId.forNumber(tmpRaw);
                  if (tmpValue == null) {
                    mergeUnknownVarintField(1, tmpRaw);
                  } else {
                    ensurePushAtomIdIsMutable();
                    pushAtomId_.addInt(tmpRaw);
                  }
                }
                input.popLimit(oldLimit);
                break;
              } // case 10
              case 16: {
                int v = input.readInt32();
                ensureRawPushAtomIdIsMutable();
                rawPushAtomId_.addInt(v);
                break;
              } // case 16
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureRawPushAtomIdIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  rawPushAtomId_.addInt(input.readInt32());
                }
                input.popLimit(limit);
                break;
              } // case 18
              case 26: {
                perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig m =
                    input.readMessage(
                        perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig.parser(),
                        extensionRegistry);
                if (pullConfigBuilder_ == null) {
                  ensurePullConfigIsMutable();
                  pullConfig_.add(m);
                } else {
                  pullConfigBuilder_.addMessage(m);
                }
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.IntList pushAtomId_ =
        emptyIntList();
      private void ensurePushAtomIdIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          pushAtomId_ = makeMutableCopy(pushAtomId_);
          bitField0_ |= 0x00000001;
        }
      }
      /**
       * <pre>
       * This is for the common case of the atom id being known in the enum AtomId.
       * </pre>
       *
       * <code>repeated .perfetto.protos.AtomId push_atom_id = 1;</code>
       * @return A list containing the pushAtomId.
       */
      public java.util.List<perfetto.protos.AtomIds.AtomId> getPushAtomIdList() {
        return new com.google.protobuf.Internal.IntListAdapter<
            perfetto.protos.AtomIds.AtomId>(pushAtomId_, pushAtomId_converter_);
      }
      /**
       * <pre>
       * This is for the common case of the atom id being known in the enum AtomId.
       * </pre>
       *
       * <code>repeated .perfetto.protos.AtomId push_atom_id = 1;</code>
       * @return The count of pushAtomId.
       */
      public int getPushAtomIdCount() {
        return pushAtomId_.size();
      }
      /**
       * <pre>
       * This is for the common case of the atom id being known in the enum AtomId.
       * </pre>
       *
       * <code>repeated .perfetto.protos.AtomId push_atom_id = 1;</code>
       * @param index The index of the element to return.
       * @return The pushAtomId at the given index.
       */
      public perfetto.protos.AtomIds.AtomId getPushAtomId(int index) {
        return pushAtomId_converter_.convert(pushAtomId_.getInt(index));
      }
      /**
       * <pre>
       * This is for the common case of the atom id being known in the enum AtomId.
       * </pre>
       *
       * <code>repeated .perfetto.protos.AtomId push_atom_id = 1;</code>
       * @param index The index to set the value at.
       * @param value The pushAtomId to set.
       * @return This builder for chaining.
       */
      public Builder setPushAtomId(
          int index, perfetto.protos.AtomIds.AtomId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePushAtomIdIsMutable();
        pushAtomId_.setInt(index, value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This is for the common case of the atom id being known in the enum AtomId.
       * </pre>
       *
       * <code>repeated .perfetto.protos.AtomId push_atom_id = 1;</code>
       * @param value The pushAtomId to add.
       * @return This builder for chaining.
       */
      public Builder addPushAtomId(perfetto.protos.AtomIds.AtomId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePushAtomIdIsMutable();
        pushAtomId_.addInt(value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This is for the common case of the atom id being known in the enum AtomId.
       * </pre>
       *
       * <code>repeated .perfetto.protos.AtomId push_atom_id = 1;</code>
       * @param values The pushAtomId to add.
       * @return This builder for chaining.
       */
      public Builder addAllPushAtomId(
          java.lang.Iterable<? extends perfetto.protos.AtomIds.AtomId> values) {
        ensurePushAtomIdIsMutable();
        for (perfetto.protos.AtomIds.AtomId value : values) {
          pushAtomId_.addInt(value.getNumber());
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This is for the common case of the atom id being known in the enum AtomId.
       * </pre>
       *
       * <code>repeated .perfetto.protos.AtomId push_atom_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearPushAtomId() {
        pushAtomId_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList rawPushAtomId_ = emptyIntList();
      private void ensureRawPushAtomIdIsMutable() {
        if (!rawPushAtomId_.isModifiable()) {
          rawPushAtomId_ = makeMutableCopy(rawPushAtomId_);
        }
        bitField0_ |= 0x00000002;
      }
      /**
       * <pre>
       * Escape hatch for Atom IDs that are not yet in the AtomId enum
       * (e.g. non-upstream atoms that don't exist in AOSP).
       * </pre>
       *
       * <code>repeated int32 raw_push_atom_id = 2;</code>
       * @return A list containing the rawPushAtomId.
       */
      public java.util.List<java.lang.Integer>
          getRawPushAtomIdList() {
        rawPushAtomId_.makeImmutable();
        return rawPushAtomId_;
      }
      /**
       * <pre>
       * Escape hatch for Atom IDs that are not yet in the AtomId enum
       * (e.g. non-upstream atoms that don't exist in AOSP).
       * </pre>
       *
       * <code>repeated int32 raw_push_atom_id = 2;</code>
       * @return The count of rawPushAtomId.
       */
      public int getRawPushAtomIdCount() {
        return rawPushAtomId_.size();
      }
      /**
       * <pre>
       * Escape hatch for Atom IDs that are not yet in the AtomId enum
       * (e.g. non-upstream atoms that don't exist in AOSP).
       * </pre>
       *
       * <code>repeated int32 raw_push_atom_id = 2;</code>
       * @param index The index of the element to return.
       * @return The rawPushAtomId at the given index.
       */
      public int getRawPushAtomId(int index) {
        return rawPushAtomId_.getInt(index);
      }
      /**
       * <pre>
       * Escape hatch for Atom IDs that are not yet in the AtomId enum
       * (e.g. non-upstream atoms that don't exist in AOSP).
       * </pre>
       *
       * <code>repeated int32 raw_push_atom_id = 2;</code>
       * @param index The index to set the value at.
       * @param value The rawPushAtomId to set.
       * @return This builder for chaining.
       */
      public Builder setRawPushAtomId(
          int index, int value) {

        ensureRawPushAtomIdIsMutable();
        rawPushAtomId_.setInt(index, value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Escape hatch for Atom IDs that are not yet in the AtomId enum
       * (e.g. non-upstream atoms that don't exist in AOSP).
       * </pre>
       *
       * <code>repeated int32 raw_push_atom_id = 2;</code>
       * @param value The rawPushAtomId to add.
       * @return This builder for chaining.
       */
      public Builder addRawPushAtomId(int value) {

        ensureRawPushAtomIdIsMutable();
        rawPushAtomId_.addInt(value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Escape hatch for Atom IDs that are not yet in the AtomId enum
       * (e.g. non-upstream atoms that don't exist in AOSP).
       * </pre>
       *
       * <code>repeated int32 raw_push_atom_id = 2;</code>
       * @param values The rawPushAtomId to add.
       * @return This builder for chaining.
       */
      public Builder addAllRawPushAtomId(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRawPushAtomIdIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, rawPushAtomId_);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Escape hatch for Atom IDs that are not yet in the AtomId enum
       * (e.g. non-upstream atoms that don't exist in AOSP).
       * </pre>
       *
       * <code>repeated int32 raw_push_atom_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearRawPushAtomId() {
        rawPushAtomId_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private java.util.List<perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig> pullConfig_ =
        java.util.Collections.emptyList();
      private void ensurePullConfigIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          pullConfig_ = new java.util.ArrayList<perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig>(pullConfig_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig, perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig.Builder, perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfigOrBuilder> pullConfigBuilder_;

      /**
       * <code>repeated .perfetto.protos.StatsdPullAtomConfig pull_config = 3;</code>
       */
      public java.util.List<perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig> getPullConfigList() {
        if (pullConfigBuilder_ == null) {
          return java.util.Collections.unmodifiableList(pullConfig_);
        } else {
          return pullConfigBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .perfetto.protos.StatsdPullAtomConfig pull_config = 3;</code>
       */
      public int getPullConfigCount() {
        if (pullConfigBuilder_ == null) {
          return pullConfig_.size();
        } else {
          return pullConfigBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .perfetto.protos.StatsdPullAtomConfig pull_config = 3;</code>
       */
      public perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig getPullConfig(int index) {
        if (pullConfigBuilder_ == null) {
          return pullConfig_.get(index);
        } else {
          return pullConfigBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .perfetto.protos.StatsdPullAtomConfig pull_config = 3;</code>
       */
      public Builder setPullConfig(
          int index, perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig value) {
        if (pullConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePullConfigIsMutable();
          pullConfig_.set(index, value);
          onChanged();
        } else {
          pullConfigBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.StatsdPullAtomConfig pull_config = 3;</code>
       */
      public Builder setPullConfig(
          int index, perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig.Builder builderForValue) {
        if (pullConfigBuilder_ == null) {
          ensurePullConfigIsMutable();
          pullConfig_.set(index, builderForValue.build());
          onChanged();
        } else {
          pullConfigBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.StatsdPullAtomConfig pull_config = 3;</code>
       */
      public Builder addPullConfig(perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig value) {
        if (pullConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePullConfigIsMutable();
          pullConfig_.add(value);
          onChanged();
        } else {
          pullConfigBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.StatsdPullAtomConfig pull_config = 3;</code>
       */
      public Builder addPullConfig(
          int index, perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig value) {
        if (pullConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePullConfigIsMutable();
          pullConfig_.add(index, value);
          onChanged();
        } else {
          pullConfigBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.StatsdPullAtomConfig pull_config = 3;</code>
       */
      public Builder addPullConfig(
          perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig.Builder builderForValue) {
        if (pullConfigBuilder_ == null) {
          ensurePullConfigIsMutable();
          pullConfig_.add(builderForValue.build());
          onChanged();
        } else {
          pullConfigBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.StatsdPullAtomConfig pull_config = 3;</code>
       */
      public Builder addPullConfig(
          int index, perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig.Builder builderForValue) {
        if (pullConfigBuilder_ == null) {
          ensurePullConfigIsMutable();
          pullConfig_.add(index, builderForValue.build());
          onChanged();
        } else {
          pullConfigBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.StatsdPullAtomConfig pull_config = 3;</code>
       */
      public Builder addAllPullConfig(
          java.lang.Iterable<? extends perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig> values) {
        if (pullConfigBuilder_ == null) {
          ensurePullConfigIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, pullConfig_);
          onChanged();
        } else {
          pullConfigBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.StatsdPullAtomConfig pull_config = 3;</code>
       */
      public Builder clearPullConfig() {
        if (pullConfigBuilder_ == null) {
          pullConfig_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          pullConfigBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.StatsdPullAtomConfig pull_config = 3;</code>
       */
      public Builder removePullConfig(int index) {
        if (pullConfigBuilder_ == null) {
          ensurePullConfigIsMutable();
          pullConfig_.remove(index);
          onChanged();
        } else {
          pullConfigBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.StatsdPullAtomConfig pull_config = 3;</code>
       */
      public perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig.Builder getPullConfigBuilder(
          int index) {
        return getPullConfigFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .perfetto.protos.StatsdPullAtomConfig pull_config = 3;</code>
       */
      public perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfigOrBuilder getPullConfigOrBuilder(
          int index) {
        if (pullConfigBuilder_ == null) {
          return pullConfig_.get(index);  } else {
          return pullConfigBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .perfetto.protos.StatsdPullAtomConfig pull_config = 3;</code>
       */
      public java.util.List<? extends perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfigOrBuilder> 
           getPullConfigOrBuilderList() {
        if (pullConfigBuilder_ != null) {
          return pullConfigBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(pullConfig_);
        }
      }
      /**
       * <code>repeated .perfetto.protos.StatsdPullAtomConfig pull_config = 3;</code>
       */
      public perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig.Builder addPullConfigBuilder() {
        return getPullConfigFieldBuilder().addBuilder(
            perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig.getDefaultInstance());
      }
      /**
       * <code>repeated .perfetto.protos.StatsdPullAtomConfig pull_config = 3;</code>
       */
      public perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig.Builder addPullConfigBuilder(
          int index) {
        return getPullConfigFieldBuilder().addBuilder(
            index, perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig.getDefaultInstance());
      }
      /**
       * <code>repeated .perfetto.protos.StatsdPullAtomConfig pull_config = 3;</code>
       */
      public java.util.List<perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig.Builder> 
           getPullConfigBuilderList() {
        return getPullConfigFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig, perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig.Builder, perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfigOrBuilder> 
          getPullConfigFieldBuilder() {
        if (pullConfigBuilder_ == null) {
          pullConfigBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig, perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig.Builder, perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfigOrBuilder>(
                  pullConfig_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          pullConfig_ = null;
        }
        return pullConfigBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:perfetto.protos.StatsdTracingConfig)
    }

    // @@protoc_insertion_point(class_scope:perfetto.protos.StatsdTracingConfig)
    private static final perfetto.protos.StatsdTracingConfigOuterClass.StatsdTracingConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new perfetto.protos.StatsdTracingConfigOuterClass.StatsdTracingConfig();
    }

    public static perfetto.protos.StatsdTracingConfigOuterClass.StatsdTracingConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<StatsdTracingConfig>
        PARSER = new com.google.protobuf.AbstractParser<StatsdTracingConfig>() {
      @java.lang.Override
      public StatsdTracingConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<StatsdTracingConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<StatsdTracingConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public perfetto.protos.StatsdTracingConfigOuterClass.StatsdTracingConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface StatsdPullAtomConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:perfetto.protos.StatsdPullAtomConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .perfetto.protos.AtomId pull_atom_id = 1;</code>
     * @return A list containing the pullAtomId.
     */
    java.util.List<perfetto.protos.AtomIds.AtomId> getPullAtomIdList();
    /**
     * <code>repeated .perfetto.protos.AtomId pull_atom_id = 1;</code>
     * @return The count of pullAtomId.
     */
    int getPullAtomIdCount();
    /**
     * <code>repeated .perfetto.protos.AtomId pull_atom_id = 1;</code>
     * @param index The index of the element to return.
     * @return The pullAtomId at the given index.
     */
    perfetto.protos.AtomIds.AtomId getPullAtomId(int index);

    /**
     * <code>repeated int32 raw_pull_atom_id = 2;</code>
     * @return A list containing the rawPullAtomId.
     */
    java.util.List<java.lang.Integer> getRawPullAtomIdList();
    /**
     * <code>repeated int32 raw_pull_atom_id = 2;</code>
     * @return The count of rawPullAtomId.
     */
    int getRawPullAtomIdCount();
    /**
     * <code>repeated int32 raw_pull_atom_id = 2;</code>
     * @param index The index of the element to return.
     * @return The rawPullAtomId at the given index.
     */
    int getRawPullAtomId(int index);

    /**
     * <code>optional int32 pull_frequency_ms = 3;</code>
     * @return Whether the pullFrequencyMs field is set.
     */
    boolean hasPullFrequencyMs();
    /**
     * <code>optional int32 pull_frequency_ms = 3;</code>
     * @return The pullFrequencyMs.
     */
    int getPullFrequencyMs();

    /**
     * <code>repeated string packages = 4;</code>
     * @return A list containing the packages.
     */
    java.util.List<java.lang.String>
        getPackagesList();
    /**
     * <code>repeated string packages = 4;</code>
     * @return The count of packages.
     */
    int getPackagesCount();
    /**
     * <code>repeated string packages = 4;</code>
     * @param index The index of the element to return.
     * @return The packages at the given index.
     */
    java.lang.String getPackages(int index);
    /**
     * <code>repeated string packages = 4;</code>
     * @param index The index of the value to return.
     * @return The bytes of the packages at the given index.
     */
    com.google.protobuf.ByteString
        getPackagesBytes(int index);
  }
  /**
   * Protobuf type {@code perfetto.protos.StatsdPullAtomConfig}
   */
  public static final class StatsdPullAtomConfig extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:perfetto.protos.StatsdPullAtomConfig)
      StatsdPullAtomConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 3,
        /* suffix= */ "",
        StatsdPullAtomConfig.class.getName());
    }
    // Use StatsdPullAtomConfig.newBuilder() to construct.
    private StatsdPullAtomConfig(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private StatsdPullAtomConfig() {
      pullAtomId_ = emptyIntList();
      rawPullAtomId_ = emptyIntList();
      packages_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return perfetto.protos.StatsdTracingConfigOuterClass.internal_static_perfetto_protos_StatsdPullAtomConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return perfetto.protos.StatsdTracingConfigOuterClass.internal_static_perfetto_protos_StatsdPullAtomConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig.class, perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig.Builder.class);
    }

    private int bitField0_;
    public static final int PULL_ATOM_ID_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList pullAtomId_;
    private static final com.google.protobuf.Internal.IntListAdapter.IntConverter<
        perfetto.protos.AtomIds.AtomId> pullAtomId_converter_ =
            new com.google.protobuf.Internal.IntListAdapter.IntConverter<
                perfetto.protos.AtomIds.AtomId>() {
              public perfetto.protos.AtomIds.AtomId convert(int from) {
                perfetto.protos.AtomIds.AtomId result = perfetto.protos.AtomIds.AtomId.forNumber(from);
                return result == null ? perfetto.protos.AtomIds.AtomId.ATOM_UNSPECIFIED : result;
              }
            };
    /**
     * <code>repeated .perfetto.protos.AtomId pull_atom_id = 1;</code>
     * @return A list containing the pullAtomId.
     */
    @java.lang.Override
    public java.util.List<perfetto.protos.AtomIds.AtomId> getPullAtomIdList() {
      return new com.google.protobuf.Internal.IntListAdapter<
          perfetto.protos.AtomIds.AtomId>(pullAtomId_, pullAtomId_converter_);
    }
    /**
     * <code>repeated .perfetto.protos.AtomId pull_atom_id = 1;</code>
     * @return The count of pullAtomId.
     */
    @java.lang.Override
    public int getPullAtomIdCount() {
      return pullAtomId_.size();
    }
    /**
     * <code>repeated .perfetto.protos.AtomId pull_atom_id = 1;</code>
     * @param index The index of the element to return.
     * @return The pullAtomId at the given index.
     */
    @java.lang.Override
    public perfetto.protos.AtomIds.AtomId getPullAtomId(int index) {
      return pullAtomId_converter_.convert(pullAtomId_.getInt(index));
    }

    public static final int RAW_PULL_ATOM_ID_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList rawPullAtomId_ =
        emptyIntList();
    /**
     * <code>repeated int32 raw_pull_atom_id = 2;</code>
     * @return A list containing the rawPullAtomId.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getRawPullAtomIdList() {
      return rawPullAtomId_;
    }
    /**
     * <code>repeated int32 raw_pull_atom_id = 2;</code>
     * @return The count of rawPullAtomId.
     */
    public int getRawPullAtomIdCount() {
      return rawPullAtomId_.size();
    }
    /**
     * <code>repeated int32 raw_pull_atom_id = 2;</code>
     * @param index The index of the element to return.
     * @return The rawPullAtomId at the given index.
     */
    public int getRawPullAtomId(int index) {
      return rawPullAtomId_.getInt(index);
    }

    public static final int PULL_FREQUENCY_MS_FIELD_NUMBER = 3;
    private int pullFrequencyMs_ = 0;
    /**
     * <code>optional int32 pull_frequency_ms = 3;</code>
     * @return Whether the pullFrequencyMs field is set.
     */
    @java.lang.Override
    public boolean hasPullFrequencyMs() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional int32 pull_frequency_ms = 3;</code>
     * @return The pullFrequencyMs.
     */
    @java.lang.Override
    public int getPullFrequencyMs() {
      return pullFrequencyMs_;
    }

    public static final int PACKAGES_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringArrayList packages_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    /**
     * <code>repeated string packages = 4;</code>
     * @return A list containing the packages.
     */
    public com.google.protobuf.ProtocolStringList
        getPackagesList() {
      return packages_;
    }
    /**
     * <code>repeated string packages = 4;</code>
     * @return The count of packages.
     */
    public int getPackagesCount() {
      return packages_.size();
    }
    /**
     * <code>repeated string packages = 4;</code>
     * @param index The index of the element to return.
     * @return The packages at the given index.
     */
    public java.lang.String getPackages(int index) {
      return packages_.get(index);
    }
    /**
     * <code>repeated string packages = 4;</code>
     * @param index The index of the value to return.
     * @return The bytes of the packages at the given index.
     */
    public com.google.protobuf.ByteString
        getPackagesBytes(int index) {
      return packages_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < pullAtomId_.size(); i++) {
        output.writeEnum(1, pullAtomId_.getInt(i));
      }
      for (int i = 0; i < rawPullAtomId_.size(); i++) {
        output.writeInt32(2, rawPullAtomId_.getInt(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(3, pullFrequencyMs_);
      }
      for (int i = 0; i < packages_.size(); i++) {
        com.google.protobuf.GeneratedMessage.writeString(output, 4, packages_.getRaw(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < pullAtomId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(pullAtomId_.getInt(i));
        }
        size += dataSize;
        size += 1 * pullAtomId_.size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < rawPullAtomId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(rawPullAtomId_.getInt(i));
        }
        size += dataSize;
        size += 1 * getRawPullAtomIdList().size();
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, pullFrequencyMs_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < packages_.size(); i++) {
          dataSize += computeStringSizeNoTag(packages_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getPackagesList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig)) {
        return super.equals(obj);
      }
      perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig other = (perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig) obj;

      if (!pullAtomId_.equals(other.pullAtomId_)) return false;
      if (!getRawPullAtomIdList()
          .equals(other.getRawPullAtomIdList())) return false;
      if (hasPullFrequencyMs() != other.hasPullFrequencyMs()) return false;
      if (hasPullFrequencyMs()) {
        if (getPullFrequencyMs()
            != other.getPullFrequencyMs()) return false;
      }
      if (!getPackagesList()
          .equals(other.getPackagesList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getPullAtomIdCount() > 0) {
        hash = (37 * hash) + PULL_ATOM_ID_FIELD_NUMBER;
        hash = (53 * hash) + pullAtomId_.hashCode();
      }
      if (getRawPullAtomIdCount() > 0) {
        hash = (37 * hash) + RAW_PULL_ATOM_ID_FIELD_NUMBER;
        hash = (53 * hash) + getRawPullAtomIdList().hashCode();
      }
      if (hasPullFrequencyMs()) {
        hash = (37 * hash) + PULL_FREQUENCY_MS_FIELD_NUMBER;
        hash = (53 * hash) + getPullFrequencyMs();
      }
      if (getPackagesCount() > 0) {
        hash = (37 * hash) + PACKAGES_FIELD_NUMBER;
        hash = (53 * hash) + getPackagesList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code perfetto.protos.StatsdPullAtomConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:perfetto.protos.StatsdPullAtomConfig)
        perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.StatsdTracingConfigOuterClass.internal_static_perfetto_protos_StatsdPullAtomConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.StatsdTracingConfigOuterClass.internal_static_perfetto_protos_StatsdPullAtomConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig.class, perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig.Builder.class);
      }

      // Construct using perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        pullAtomId_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        rawPullAtomId_ = emptyIntList();
        pullFrequencyMs_ = 0;
        packages_ =
            com.google.protobuf.LazyStringArrayList.emptyList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return perfetto.protos.StatsdTracingConfigOuterClass.internal_static_perfetto_protos_StatsdPullAtomConfig_descriptor;
      }

      @java.lang.Override
      public perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig getDefaultInstanceForType() {
        return perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig.getDefaultInstance();
      }

      @java.lang.Override
      public perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig build() {
        perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig buildPartial() {
        perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig result = new perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig result) {
        if (((bitField0_ & 0x00000001) != 0)) {
          pullAtomId_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.pullAtomId_ = pullAtomId_;
      }

      private void buildPartial0(perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          rawPullAtomId_.makeImmutable();
          result.rawPullAtomId_ = rawPullAtomId_;
        }
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.pullFrequencyMs_ = pullFrequencyMs_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          packages_.makeImmutable();
          result.packages_ = packages_;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig) {
          return mergeFrom((perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig other) {
        if (other == perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig.getDefaultInstance()) return this;
        if (!other.pullAtomId_.isEmpty()) {
          if (pullAtomId_.isEmpty()) {
            pullAtomId_ = other.pullAtomId_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensurePullAtomIdIsMutable();
            pullAtomId_.addAll(other.pullAtomId_);
          }
          onChanged();
        }
        if (!other.rawPullAtomId_.isEmpty()) {
          if (rawPullAtomId_.isEmpty()) {
            rawPullAtomId_ = other.rawPullAtomId_;
            rawPullAtomId_.makeImmutable();
            bitField0_ |= 0x00000002;
          } else {
            ensureRawPullAtomIdIsMutable();
            rawPullAtomId_.addAll(other.rawPullAtomId_);
          }
          onChanged();
        }
        if (other.hasPullFrequencyMs()) {
          setPullFrequencyMs(other.getPullFrequencyMs());
        }
        if (!other.packages_.isEmpty()) {
          if (packages_.isEmpty()) {
            packages_ = other.packages_;
            bitField0_ |= 0x00000008;
          } else {
            ensurePackagesIsMutable();
            packages_.addAll(other.packages_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int tmpRaw = input.readEnum();
                perfetto.protos.AtomIds.AtomId tmpValue =
                    perfetto.protos.AtomIds.AtomId.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(1, tmpRaw);
                } else {
                  ensurePullAtomIdIsMutable();
                  pullAtomId_.addInt(tmpRaw);
                }
                break;
              } // case 8
              case 10: {
                int length = input.readRawVarint32();
                int oldLimit = input.pushLimit(length);
                while(input.getBytesUntilLimit() > 0) {
                  int tmpRaw = input.readEnum();
                  perfetto.protos.AtomIds.AtomId tmpValue =
                      perfetto.protos.AtomIds.AtomId.forNumber(tmpRaw);
                  if (tmpValue == null) {
                    mergeUnknownVarintField(1, tmpRaw);
                  } else {
                    ensurePullAtomIdIsMutable();
                    pullAtomId_.addInt(tmpRaw);
                  }
                }
                input.popLimit(oldLimit);
                break;
              } // case 10
              case 16: {
                int v = input.readInt32();
                ensureRawPullAtomIdIsMutable();
                rawPullAtomId_.addInt(v);
                break;
              } // case 16
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureRawPullAtomIdIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  rawPullAtomId_.addInt(input.readInt32());
                }
                input.popLimit(limit);
                break;
              } // case 18
              case 24: {
                pullFrequencyMs_ = input.readInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 34: {
                com.google.protobuf.ByteString bs = input.readBytes();
                ensurePackagesIsMutable();
                packages_.add(bs);
                break;
              } // case 34
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.IntList pullAtomId_ =
        emptyIntList();
      private void ensurePullAtomIdIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          pullAtomId_ = makeMutableCopy(pullAtomId_);
          bitField0_ |= 0x00000001;
        }
      }
      /**
       * <code>repeated .perfetto.protos.AtomId pull_atom_id = 1;</code>
       * @return A list containing the pullAtomId.
       */
      public java.util.List<perfetto.protos.AtomIds.AtomId> getPullAtomIdList() {
        return new com.google.protobuf.Internal.IntListAdapter<
            perfetto.protos.AtomIds.AtomId>(pullAtomId_, pullAtomId_converter_);
      }
      /**
       * <code>repeated .perfetto.protos.AtomId pull_atom_id = 1;</code>
       * @return The count of pullAtomId.
       */
      public int getPullAtomIdCount() {
        return pullAtomId_.size();
      }
      /**
       * <code>repeated .perfetto.protos.AtomId pull_atom_id = 1;</code>
       * @param index The index of the element to return.
       * @return The pullAtomId at the given index.
       */
      public perfetto.protos.AtomIds.AtomId getPullAtomId(int index) {
        return pullAtomId_converter_.convert(pullAtomId_.getInt(index));
      }
      /**
       * <code>repeated .perfetto.protos.AtomId pull_atom_id = 1;</code>
       * @param index The index to set the value at.
       * @param value The pullAtomId to set.
       * @return This builder for chaining.
       */
      public Builder setPullAtomId(
          int index, perfetto.protos.AtomIds.AtomId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePullAtomIdIsMutable();
        pullAtomId_.setInt(index, value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.AtomId pull_atom_id = 1;</code>
       * @param value The pullAtomId to add.
       * @return This builder for chaining.
       */
      public Builder addPullAtomId(perfetto.protos.AtomIds.AtomId value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePullAtomIdIsMutable();
        pullAtomId_.addInt(value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.AtomId pull_atom_id = 1;</code>
       * @param values The pullAtomId to add.
       * @return This builder for chaining.
       */
      public Builder addAllPullAtomId(
          java.lang.Iterable<? extends perfetto.protos.AtomIds.AtomId> values) {
        ensurePullAtomIdIsMutable();
        for (perfetto.protos.AtomIds.AtomId value : values) {
          pullAtomId_.addInt(value.getNumber());
        }
        onChanged();
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.AtomId pull_atom_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearPullAtomId() {
        pullAtomId_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList rawPullAtomId_ = emptyIntList();
      private void ensureRawPullAtomIdIsMutable() {
        if (!rawPullAtomId_.isModifiable()) {
          rawPullAtomId_ = makeMutableCopy(rawPullAtomId_);
        }
        bitField0_ |= 0x00000002;
      }
      /**
       * <code>repeated int32 raw_pull_atom_id = 2;</code>
       * @return A list containing the rawPullAtomId.
       */
      public java.util.List<java.lang.Integer>
          getRawPullAtomIdList() {
        rawPullAtomId_.makeImmutable();
        return rawPullAtomId_;
      }
      /**
       * <code>repeated int32 raw_pull_atom_id = 2;</code>
       * @return The count of rawPullAtomId.
       */
      public int getRawPullAtomIdCount() {
        return rawPullAtomId_.size();
      }
      /**
       * <code>repeated int32 raw_pull_atom_id = 2;</code>
       * @param index The index of the element to return.
       * @return The rawPullAtomId at the given index.
       */
      public int getRawPullAtomId(int index) {
        return rawPullAtomId_.getInt(index);
      }
      /**
       * <code>repeated int32 raw_pull_atom_id = 2;</code>
       * @param index The index to set the value at.
       * @param value The rawPullAtomId to set.
       * @return This builder for chaining.
       */
      public Builder setRawPullAtomId(
          int index, int value) {

        ensureRawPullAtomIdIsMutable();
        rawPullAtomId_.setInt(index, value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 raw_pull_atom_id = 2;</code>
       * @param value The rawPullAtomId to add.
       * @return This builder for chaining.
       */
      public Builder addRawPullAtomId(int value) {

        ensureRawPullAtomIdIsMutable();
        rawPullAtomId_.addInt(value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 raw_pull_atom_id = 2;</code>
       * @param values The rawPullAtomId to add.
       * @return This builder for chaining.
       */
      public Builder addAllRawPullAtomId(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRawPullAtomIdIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, rawPullAtomId_);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 raw_pull_atom_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearRawPullAtomId() {
        rawPullAtomId_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private int pullFrequencyMs_ ;
      /**
       * <code>optional int32 pull_frequency_ms = 3;</code>
       * @return Whether the pullFrequencyMs field is set.
       */
      @java.lang.Override
      public boolean hasPullFrequencyMs() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional int32 pull_frequency_ms = 3;</code>
       * @return The pullFrequencyMs.
       */
      @java.lang.Override
      public int getPullFrequencyMs() {
        return pullFrequencyMs_;
      }
      /**
       * <code>optional int32 pull_frequency_ms = 3;</code>
       * @param value The pullFrequencyMs to set.
       * @return This builder for chaining.
       */
      public Builder setPullFrequencyMs(int value) {

        pullFrequencyMs_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pull_frequency_ms = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearPullFrequencyMs() {
        bitField0_ = (bitField0_ & ~0x00000004);
        pullFrequencyMs_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringArrayList packages_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      private void ensurePackagesIsMutable() {
        if (!packages_.isModifiable()) {
          packages_ = new com.google.protobuf.LazyStringArrayList(packages_);
        }
        bitField0_ |= 0x00000008;
      }
      /**
       * <code>repeated string packages = 4;</code>
       * @return A list containing the packages.
       */
      public com.google.protobuf.ProtocolStringList
          getPackagesList() {
        packages_.makeImmutable();
        return packages_;
      }
      /**
       * <code>repeated string packages = 4;</code>
       * @return The count of packages.
       */
      public int getPackagesCount() {
        return packages_.size();
      }
      /**
       * <code>repeated string packages = 4;</code>
       * @param index The index of the element to return.
       * @return The packages at the given index.
       */
      public java.lang.String getPackages(int index) {
        return packages_.get(index);
      }
      /**
       * <code>repeated string packages = 4;</code>
       * @param index The index of the value to return.
       * @return The bytes of the packages at the given index.
       */
      public com.google.protobuf.ByteString
          getPackagesBytes(int index) {
        return packages_.getByteString(index);
      }
      /**
       * <code>repeated string packages = 4;</code>
       * @param index The index to set the value at.
       * @param value The packages to set.
       * @return This builder for chaining.
       */
      public Builder setPackages(
          int index, java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensurePackagesIsMutable();
        packages_.set(index, value);
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>repeated string packages = 4;</code>
       * @param value The packages to add.
       * @return This builder for chaining.
       */
      public Builder addPackages(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensurePackagesIsMutable();
        packages_.add(value);
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>repeated string packages = 4;</code>
       * @param values The packages to add.
       * @return This builder for chaining.
       */
      public Builder addAllPackages(
          java.lang.Iterable<java.lang.String> values) {
        ensurePackagesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, packages_);
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>repeated string packages = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearPackages() {
        packages_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);;
        onChanged();
        return this;
      }
      /**
       * <code>repeated string packages = 4;</code>
       * @param value The bytes of the packages to add.
       * @return This builder for chaining.
       */
      public Builder addPackagesBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        ensurePackagesIsMutable();
        packages_.add(value);
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:perfetto.protos.StatsdPullAtomConfig)
    }

    // @@protoc_insertion_point(class_scope:perfetto.protos.StatsdPullAtomConfig)
    private static final perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig();
    }

    public static perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<StatsdPullAtomConfig>
        PARSER = new com.google.protobuf.AbstractParser<StatsdPullAtomConfig>() {
      @java.lang.Override
      public StatsdPullAtomConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<StatsdPullAtomConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<StatsdPullAtomConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public perfetto.protos.StatsdTracingConfigOuterClass.StatsdPullAtomConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_StatsdTracingConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_perfetto_protos_StatsdTracingConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_StatsdPullAtomConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_perfetto_protos_StatsdPullAtomConfig_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n9protos/perfetto/config/statsd/statsd_t" +
      "racing_config.proto\022\017perfetto.protos\032,pr" +
      "otos/perfetto/config/statsd/atom_ids.pro" +
      "to\"\232\001\n\023StatsdTracingConfig\022-\n\014push_atom_" +
      "id\030\001 \003(\0162\027.perfetto.protos.AtomId\022\030\n\020raw" +
      "_push_atom_id\030\002 \003(\005\022:\n\013pull_config\030\003 \003(\013" +
      "2%.perfetto.protos.StatsdPullAtomConfig\"" +
      "\214\001\n\024StatsdPullAtomConfig\022-\n\014pull_atom_id" +
      "\030\001 \003(\0162\027.perfetto.protos.AtomId\022\030\n\020raw_p" +
      "ull_atom_id\030\002 \003(\005\022\031\n\021pull_frequency_ms\030\003" +
      " \001(\005\022\020\n\010packages\030\004 \003(\t"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          perfetto.protos.AtomIds.getDescriptor(),
        });
    internal_static_perfetto_protos_StatsdTracingConfig_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_perfetto_protos_StatsdTracingConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_perfetto_protos_StatsdTracingConfig_descriptor,
        new java.lang.String[] { "PushAtomId", "RawPushAtomId", "PullConfig", });
    internal_static_perfetto_protos_StatsdPullAtomConfig_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_perfetto_protos_StatsdPullAtomConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_perfetto_protos_StatsdPullAtomConfig_descriptor,
        new java.lang.String[] { "PullAtomId", "RawPullAtomId", "PullFrequencyMs", "Packages", });
    descriptor.resolveAllFeaturesImmutable();
    perfetto.protos.AtomIds.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
