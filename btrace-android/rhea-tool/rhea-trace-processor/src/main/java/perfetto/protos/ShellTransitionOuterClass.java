// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: protos/perfetto/trace/android/shell_transition.proto
// Protobuf Java Version: 4.29.3

package perfetto.protos;

public final class ShellTransitionOuterClass {
  private ShellTransitionOuterClass() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 3,
      /* suffix= */ "",
      ShellTransitionOuterClass.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ShellTransitionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:perfetto.protos.ShellTransition)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The unique identifier of the transition.
     * </pre>
     *
     * <code>optional int32 id = 1;</code>
     * @return Whether the id field is set.
     */
    boolean hasId();
    /**
     * <pre>
     * The unique identifier of the transition.
     * </pre>
     *
     * <code>optional int32 id = 1;</code>
     * @return The id.
     */
    int getId();

    /**
     * <pre>
     * The time the transition was created on the WM side
     * (using SystemClock.elapsedRealtimeNanos())
     * </pre>
     *
     * <code>optional int64 create_time_ns = 2;</code>
     * @return Whether the createTimeNs field is set.
     */
    boolean hasCreateTimeNs();
    /**
     * <pre>
     * The time the transition was created on the WM side
     * (using SystemClock.elapsedRealtimeNanos())
     * </pre>
     *
     * <code>optional int64 create_time_ns = 2;</code>
     * @return The createTimeNs.
     */
    long getCreateTimeNs();

    /**
     * <pre>
     * The time the transition was sent from the WM side to shell
     * (using SystemClock.elapsedRealtimeNanos())
     * </pre>
     *
     * <code>optional int64 send_time_ns = 3;</code>
     * @return Whether the sendTimeNs field is set.
     */
    boolean hasSendTimeNs();
    /**
     * <pre>
     * The time the transition was sent from the WM side to shell
     * (using SystemClock.elapsedRealtimeNanos())
     * </pre>
     *
     * <code>optional int64 send_time_ns = 3;</code>
     * @return The sendTimeNs.
     */
    long getSendTimeNs();

    /**
     * <pre>
     * The time the transition was dispatched by shell to execute
     * (using SystemClock.elapsedRealtimeNanos())
     * </pre>
     *
     * <code>optional int64 dispatch_time_ns = 4;</code>
     * @return Whether the dispatchTimeNs field is set.
     */
    boolean hasDispatchTimeNs();
    /**
     * <pre>
     * The time the transition was dispatched by shell to execute
     * (using SystemClock.elapsedRealtimeNanos())
     * </pre>
     *
     * <code>optional int64 dispatch_time_ns = 4;</code>
     * @return The dispatchTimeNs.
     */
    long getDispatchTimeNs();

    /**
     * <pre>
     * If the transition merge was accepted by the transition handler, this
     * contains the time the transition was merged into transition with id
     * `merge_target`.
     * (using SystemClock.elapsedRealtimeNanos())
     * </pre>
     *
     * <code>optional int64 merge_time_ns = 5;</code>
     * @return Whether the mergeTimeNs field is set.
     */
    boolean hasMergeTimeNs();
    /**
     * <pre>
     * If the transition merge was accepted by the transition handler, this
     * contains the time the transition was merged into transition with id
     * `merge_target`.
     * (using SystemClock.elapsedRealtimeNanos())
     * </pre>
     *
     * <code>optional int64 merge_time_ns = 5;</code>
     * @return The mergeTimeNs.
     */
    long getMergeTimeNs();

    /**
     * <pre>
     * The time shell proposed the transition should be merged to the transition
     * handler into transition with id `merge_target`.
     * (using SystemClock.elapsedRealtimeNanos()).
     * </pre>
     *
     * <code>optional int64 merge_request_time_ns = 6;</code>
     * @return Whether the mergeRequestTimeNs field is set.
     */
    boolean hasMergeRequestTimeNs();
    /**
     * <pre>
     * The time shell proposed the transition should be merged to the transition
     * handler into transition with id `merge_target`.
     * (using SystemClock.elapsedRealtimeNanos()).
     * </pre>
     *
     * <code>optional int64 merge_request_time_ns = 6;</code>
     * @return The mergeRequestTimeNs.
     */
    long getMergeRequestTimeNs();

    /**
     * <pre>
     * If the transition was aborted on the shell side, this is the time that
     * occurred.
     * (using SystemClock.elapsedRealtimeNanos())
     * </pre>
     *
     * <code>optional int64 shell_abort_time_ns = 7;</code>
     * @return Whether the shellAbortTimeNs field is set.
     */
    boolean hasShellAbortTimeNs();
    /**
     * <pre>
     * If the transition was aborted on the shell side, this is the time that
     * occurred.
     * (using SystemClock.elapsedRealtimeNanos())
     * </pre>
     *
     * <code>optional int64 shell_abort_time_ns = 7;</code>
     * @return The shellAbortTimeNs.
     */
    long getShellAbortTimeNs();

    /**
     * <pre>
     * If the transition was aborted on the wm side, this is the time that
     * occurred.
     * (using SystemClock.elapsedRealtimeNanos())
     * </pre>
     *
     * <code>optional int64 wm_abort_time_ns = 8;</code>
     * @return Whether the wmAbortTimeNs field is set.
     */
    boolean hasWmAbortTimeNs();
    /**
     * <pre>
     * If the transition was aborted on the wm side, this is the time that
     * occurred.
     * (using SystemClock.elapsedRealtimeNanos())
     * </pre>
     *
     * <code>optional int64 wm_abort_time_ns = 8;</code>
     * @return The wmAbortTimeNs.
     */
    long getWmAbortTimeNs();

    /**
     * <pre>
     * The time WM considers the transition to be complete.
     * (using SystemClock.elapsedRealtimeNanos())
     * </pre>
     *
     * <code>optional int64 finish_time_ns = 9;</code>
     * @return Whether the finishTimeNs field is set.
     */
    boolean hasFinishTimeNs();
    /**
     * <pre>
     * The time WM considers the transition to be complete.
     * (using SystemClock.elapsedRealtimeNanos())
     * </pre>
     *
     * <code>optional int64 finish_time_ns = 9;</code>
     * @return The finishTimeNs.
     */
    long getFinishTimeNs();

    /**
     * <pre>
     * The id of the transaction that WM proposed to use as the starting
     * transaction. It contains all the layer changes required to setup the
     * transition and should be executed right at the start of the transition
     * by the transition handler.
     * </pre>
     *
     * <code>optional uint64 start_transaction_id = 10;</code>
     * @return Whether the startTransactionId field is set.
     */
    boolean hasStartTransactionId();
    /**
     * <pre>
     * The id of the transaction that WM proposed to use as the starting
     * transaction. It contains all the layer changes required to setup the
     * transition and should be executed right at the start of the transition
     * by the transition handler.
     * </pre>
     *
     * <code>optional uint64 start_transaction_id = 10;</code>
     * @return The startTransactionId.
     */
    long getStartTransactionId();

    /**
     * <pre>
     * The if of the transaction that WM proposed to use as the finish
     * transaction. It contains all the layer changes required to set the final
     * state of the transition.
     * </pre>
     *
     * <code>optional uint64 finish_transaction_id = 11;</code>
     * @return Whether the finishTransactionId field is set.
     */
    boolean hasFinishTransactionId();
    /**
     * <pre>
     * The if of the transaction that WM proposed to use as the finish
     * transaction. It contains all the layer changes required to set the final
     * state of the transition.
     * </pre>
     *
     * <code>optional uint64 finish_transaction_id = 11;</code>
     * @return The finishTransactionId.
     */
    long getFinishTransactionId();

    /**
     * <pre>
     * The id of the handler that executed the transition. A HandlerMappings
     * message in the trace will contain the mapping of id to a string
     * representation of the handler.
     * </pre>
     *
     * <code>optional int32 handler = 12;</code>
     * @return Whether the handler field is set.
     */
    boolean hasHandler();
    /**
     * <pre>
     * The id of the handler that executed the transition. A HandlerMappings
     * message in the trace will contain the mapping of id to a string
     * representation of the handler.
     * </pre>
     *
     * <code>optional int32 handler = 12;</code>
     * @return The handler.
     */
    int getHandler();

    /**
     * <pre>
     * The transition type of this transition (e.g. TO_FRONT, OPEN, CLOSE).
     * </pre>
     *
     * <code>optional int32 type = 13;</code>
     * @return Whether the type field is set.
     */
    boolean hasType();
    /**
     * <pre>
     * The transition type of this transition (e.g. TO_FRONT, OPEN, CLOSE).
     * </pre>
     *
     * <code>optional int32 type = 13;</code>
     * @return The type.
     */
    int getType();

    /**
     * <pre>
     * The list of targets that are part of this transition.
     * </pre>
     *
     * <code>repeated .perfetto.protos.ShellTransition.Target targets = 14;</code>
     */
    java.util.List<perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target> 
        getTargetsList();
    /**
     * <pre>
     * The list of targets that are part of this transition.
     * </pre>
     *
     * <code>repeated .perfetto.protos.ShellTransition.Target targets = 14;</code>
     */
    perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target getTargets(int index);
    /**
     * <pre>
     * The list of targets that are part of this transition.
     * </pre>
     *
     * <code>repeated .perfetto.protos.ShellTransition.Target targets = 14;</code>
     */
    int getTargetsCount();
    /**
     * <pre>
     * The list of targets that are part of this transition.
     * </pre>
     *
     * <code>repeated .perfetto.protos.ShellTransition.Target targets = 14;</code>
     */
    java.util.List<? extends perfetto.protos.ShellTransitionOuterClass.ShellTransition.TargetOrBuilder> 
        getTargetsOrBuilderList();
    /**
     * <pre>
     * The list of targets that are part of this transition.
     * </pre>
     *
     * <code>repeated .perfetto.protos.ShellTransition.Target targets = 14;</code>
     */
    perfetto.protos.ShellTransitionOuterClass.ShellTransition.TargetOrBuilder getTargetsOrBuilder(
        int index);

    /**
     * <pre>
     * The id of the transition we have requested to merge or have merged this
     * transition into.
     * </pre>
     *
     * <code>optional int32 merge_target = 15;</code>
     * @return Whether the mergeTarget field is set.
     */
    boolean hasMergeTarget();
    /**
     * <pre>
     * The id of the transition we have requested to merge or have merged this
     * transition into.
     * </pre>
     *
     * <code>optional int32 merge_target = 15;</code>
     * @return The mergeTarget.
     */
    int getMergeTarget();

    /**
     * <pre>
     * The flags set on this transition.
     * </pre>
     *
     * <code>optional int32 flags = 16;</code>
     * @return Whether the flags field is set.
     */
    boolean hasFlags();
    /**
     * <pre>
     * The flags set on this transition.
     * </pre>
     *
     * <code>optional int32 flags = 16;</code>
     * @return The flags.
     */
    int getFlags();

    /**
     * <pre>
     * The time the starting window was removed. Tracked because this can
     * happen after the transition finishes, but the app may not yet be visible
     * until the starting window is removed. So in a sense the transition is not
     * finished until the starting window is removed. (b/284302118)
     * (using SystemClock.elapsedRealtimeNanos())
     * </pre>
     *
     * <code>optional int64 starting_window_remove_time_ns = 17;</code>
     * @return Whether the startingWindowRemoveTimeNs field is set.
     */
    boolean hasStartingWindowRemoveTimeNs();
    /**
     * <pre>
     * The time the starting window was removed. Tracked because this can
     * happen after the transition finishes, but the app may not yet be visible
     * until the starting window is removed. So in a sense the transition is not
     * finished until the starting window is removed. (b/284302118)
     * (using SystemClock.elapsedRealtimeNanos())
     * </pre>
     *
     * <code>optional int64 starting_window_remove_time_ns = 17;</code>
     * @return The startingWindowRemoveTimeNs.
     */
    long getStartingWindowRemoveTimeNs();
  }
  /**
   * <pre>
   * ShellTransition messages record information about the shell transitions in
   * the system. This is used to track the animations that are created and execute
   * through the shell transition system.
   * </pre>
   *
   * Protobuf type {@code perfetto.protos.ShellTransition}
   */
  public static final class ShellTransition extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:perfetto.protos.ShellTransition)
      ShellTransitionOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 3,
        /* suffix= */ "",
        ShellTransition.class.getName());
    }
    // Use ShellTransition.newBuilder() to construct.
    private ShellTransition(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private ShellTransition() {
      targets_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return perfetto.protos.ShellTransitionOuterClass.internal_static_perfetto_protos_ShellTransition_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return perfetto.protos.ShellTransitionOuterClass.internal_static_perfetto_protos_ShellTransition_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              perfetto.protos.ShellTransitionOuterClass.ShellTransition.class, perfetto.protos.ShellTransitionOuterClass.ShellTransition.Builder.class);
    }

    public interface TargetOrBuilder extends
        // @@protoc_insertion_point(interface_extends:perfetto.protos.ShellTransition.Target)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * The transition mode of this target (e.g. TO_FRONT, CLOSE...)
       * </pre>
       *
       * <code>optional int32 mode = 1;</code>
       * @return Whether the mode field is set.
       */
      boolean hasMode();
      /**
       * <pre>
       * The transition mode of this target (e.g. TO_FRONT, CLOSE...)
       * </pre>
       *
       * <code>optional int32 mode = 1;</code>
       * @return The mode.
       */
      int getMode();

      /**
       * <pre>
       * The layer id of this target.
       * </pre>
       *
       * <code>optional int32 layer_id = 2;</code>
       * @return Whether the layerId field is set.
       */
      boolean hasLayerId();
      /**
       * <pre>
       * The layer id of this target.
       * </pre>
       *
       * <code>optional int32 layer_id = 2;</code>
       * @return The layerId.
       */
      int getLayerId();

      /**
       * <pre>
       * The window id of this target.
       * </pre>
       *
       * <code>optional int32 window_id = 3;</code>
       * @return Whether the windowId field is set.
       */
      boolean hasWindowId();
      /**
       * <pre>
       * The window id of this target.
       * </pre>
       *
       * <code>optional int32 window_id = 3;</code>
       * @return The windowId.
       */
      int getWindowId();

      /**
       * <pre>
       * The flags set on this target.
       * </pre>
       *
       * <code>optional int32 flags = 4;</code>
       * @return Whether the flags field is set.
       */
      boolean hasFlags();
      /**
       * <pre>
       * The flags set on this target.
       * </pre>
       *
       * <code>optional int32 flags = 4;</code>
       * @return The flags.
       */
      int getFlags();
    }
    /**
     * <pre>
     * Contains the information about the windows targeted in a transition.
     * </pre>
     *
     * Protobuf type {@code perfetto.protos.ShellTransition.Target}
     */
    public static final class Target extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:perfetto.protos.ShellTransition.Target)
        TargetOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 29,
          /* patch= */ 3,
          /* suffix= */ "",
          Target.class.getName());
      }
      // Use Target.newBuilder() to construct.
      private Target(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private Target() {
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.ShellTransitionOuterClass.internal_static_perfetto_protos_ShellTransition_Target_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.ShellTransitionOuterClass.internal_static_perfetto_protos_ShellTransition_Target_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target.class, perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target.Builder.class);
      }

      private int bitField0_;
      public static final int MODE_FIELD_NUMBER = 1;
      private int mode_ = 0;
      /**
       * <pre>
       * The transition mode of this target (e.g. TO_FRONT, CLOSE...)
       * </pre>
       *
       * <code>optional int32 mode = 1;</code>
       * @return Whether the mode field is set.
       */
      @java.lang.Override
      public boolean hasMode() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * The transition mode of this target (e.g. TO_FRONT, CLOSE...)
       * </pre>
       *
       * <code>optional int32 mode = 1;</code>
       * @return The mode.
       */
      @java.lang.Override
      public int getMode() {
        return mode_;
      }

      public static final int LAYER_ID_FIELD_NUMBER = 2;
      private int layerId_ = 0;
      /**
       * <pre>
       * The layer id of this target.
       * </pre>
       *
       * <code>optional int32 layer_id = 2;</code>
       * @return Whether the layerId field is set.
       */
      @java.lang.Override
      public boolean hasLayerId() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * The layer id of this target.
       * </pre>
       *
       * <code>optional int32 layer_id = 2;</code>
       * @return The layerId.
       */
      @java.lang.Override
      public int getLayerId() {
        return layerId_;
      }

      public static final int WINDOW_ID_FIELD_NUMBER = 3;
      private int windowId_ = 0;
      /**
       * <pre>
       * The window id of this target.
       * </pre>
       *
       * <code>optional int32 window_id = 3;</code>
       * @return Whether the windowId field is set.
       */
      @java.lang.Override
      public boolean hasWindowId() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * The window id of this target.
       * </pre>
       *
       * <code>optional int32 window_id = 3;</code>
       * @return The windowId.
       */
      @java.lang.Override
      public int getWindowId() {
        return windowId_;
      }

      public static final int FLAGS_FIELD_NUMBER = 4;
      private int flags_ = 0;
      /**
       * <pre>
       * The flags set on this target.
       * </pre>
       *
       * <code>optional int32 flags = 4;</code>
       * @return Whether the flags field is set.
       */
      @java.lang.Override
      public boolean hasFlags() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * The flags set on this target.
       * </pre>
       *
       * <code>optional int32 flags = 4;</code>
       * @return The flags.
       */
      @java.lang.Override
      public int getFlags() {
        return flags_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeInt32(1, mode_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeInt32(2, layerId_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeInt32(3, windowId_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          output.writeInt32(4, flags_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, mode_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, layerId_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, windowId_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(4, flags_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target)) {
          return super.equals(obj);
        }
        perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target other = (perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target) obj;

        if (hasMode() != other.hasMode()) return false;
        if (hasMode()) {
          if (getMode()
              != other.getMode()) return false;
        }
        if (hasLayerId() != other.hasLayerId()) return false;
        if (hasLayerId()) {
          if (getLayerId()
              != other.getLayerId()) return false;
        }
        if (hasWindowId() != other.hasWindowId()) return false;
        if (hasWindowId()) {
          if (getWindowId()
              != other.getWindowId()) return false;
        }
        if (hasFlags() != other.hasFlags()) return false;
        if (hasFlags()) {
          if (getFlags()
              != other.getFlags()) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasMode()) {
          hash = (37 * hash) + MODE_FIELD_NUMBER;
          hash = (53 * hash) + getMode();
        }
        if (hasLayerId()) {
          hash = (37 * hash) + LAYER_ID_FIELD_NUMBER;
          hash = (53 * hash) + getLayerId();
        }
        if (hasWindowId()) {
          hash = (37 * hash) + WINDOW_ID_FIELD_NUMBER;
          hash = (53 * hash) + getWindowId();
        }
        if (hasFlags()) {
          hash = (37 * hash) + FLAGS_FIELD_NUMBER;
          hash = (53 * hash) + getFlags();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Contains the information about the windows targeted in a transition.
       * </pre>
       *
       * Protobuf type {@code perfetto.protos.ShellTransition.Target}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:perfetto.protos.ShellTransition.Target)
          perfetto.protos.ShellTransitionOuterClass.ShellTransition.TargetOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return perfetto.protos.ShellTransitionOuterClass.internal_static_perfetto_protos_ShellTransition_Target_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return perfetto.protos.ShellTransitionOuterClass.internal_static_perfetto_protos_ShellTransition_Target_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target.class, perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target.Builder.class);
        }

        // Construct using perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          mode_ = 0;
          layerId_ = 0;
          windowId_ = 0;
          flags_ = 0;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return perfetto.protos.ShellTransitionOuterClass.internal_static_perfetto_protos_ShellTransition_Target_descriptor;
        }

        @java.lang.Override
        public perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target getDefaultInstanceForType() {
          return perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target.getDefaultInstance();
        }

        @java.lang.Override
        public perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target build() {
          perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target buildPartial() {
          perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target result = new perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.mode_ = mode_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.layerId_ = layerId_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.windowId_ = windowId_;
            to_bitField0_ |= 0x00000004;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.flags_ = flags_;
            to_bitField0_ |= 0x00000008;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target) {
            return mergeFrom((perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target other) {
          if (other == perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target.getDefaultInstance()) return this;
          if (other.hasMode()) {
            setMode(other.getMode());
          }
          if (other.hasLayerId()) {
            setLayerId(other.getLayerId());
          }
          if (other.hasWindowId()) {
            setWindowId(other.getWindowId());
          }
          if (other.hasFlags()) {
            setFlags(other.getFlags());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  mode_ = input.readInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 16: {
                  layerId_ = input.readInt32();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                case 24: {
                  windowId_ = input.readInt32();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 24
                case 32: {
                  flags_ = input.readInt32();
                  bitField0_ |= 0x00000008;
                  break;
                } // case 32
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int mode_ ;
        /**
         * <pre>
         * The transition mode of this target (e.g. TO_FRONT, CLOSE...)
         * </pre>
         *
         * <code>optional int32 mode = 1;</code>
         * @return Whether the mode field is set.
         */
        @java.lang.Override
        public boolean hasMode() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * The transition mode of this target (e.g. TO_FRONT, CLOSE...)
         * </pre>
         *
         * <code>optional int32 mode = 1;</code>
         * @return The mode.
         */
        @java.lang.Override
        public int getMode() {
          return mode_;
        }
        /**
         * <pre>
         * The transition mode of this target (e.g. TO_FRONT, CLOSE...)
         * </pre>
         *
         * <code>optional int32 mode = 1;</code>
         * @param value The mode to set.
         * @return This builder for chaining.
         */
        public Builder setMode(int value) {

          mode_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The transition mode of this target (e.g. TO_FRONT, CLOSE...)
         * </pre>
         *
         * <code>optional int32 mode = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearMode() {
          bitField0_ = (bitField0_ & ~0x00000001);
          mode_ = 0;
          onChanged();
          return this;
        }

        private int layerId_ ;
        /**
         * <pre>
         * The layer id of this target.
         * </pre>
         *
         * <code>optional int32 layer_id = 2;</code>
         * @return Whether the layerId field is set.
         */
        @java.lang.Override
        public boolean hasLayerId() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * The layer id of this target.
         * </pre>
         *
         * <code>optional int32 layer_id = 2;</code>
         * @return The layerId.
         */
        @java.lang.Override
        public int getLayerId() {
          return layerId_;
        }
        /**
         * <pre>
         * The layer id of this target.
         * </pre>
         *
         * <code>optional int32 layer_id = 2;</code>
         * @param value The layerId to set.
         * @return This builder for chaining.
         */
        public Builder setLayerId(int value) {

          layerId_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The layer id of this target.
         * </pre>
         *
         * <code>optional int32 layer_id = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearLayerId() {
          bitField0_ = (bitField0_ & ~0x00000002);
          layerId_ = 0;
          onChanged();
          return this;
        }

        private int windowId_ ;
        /**
         * <pre>
         * The window id of this target.
         * </pre>
         *
         * <code>optional int32 window_id = 3;</code>
         * @return Whether the windowId field is set.
         */
        @java.lang.Override
        public boolean hasWindowId() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         * The window id of this target.
         * </pre>
         *
         * <code>optional int32 window_id = 3;</code>
         * @return The windowId.
         */
        @java.lang.Override
        public int getWindowId() {
          return windowId_;
        }
        /**
         * <pre>
         * The window id of this target.
         * </pre>
         *
         * <code>optional int32 window_id = 3;</code>
         * @param value The windowId to set.
         * @return This builder for chaining.
         */
        public Builder setWindowId(int value) {

          windowId_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The window id of this target.
         * </pre>
         *
         * <code>optional int32 window_id = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearWindowId() {
          bitField0_ = (bitField0_ & ~0x00000004);
          windowId_ = 0;
          onChanged();
          return this;
        }

        private int flags_ ;
        /**
         * <pre>
         * The flags set on this target.
         * </pre>
         *
         * <code>optional int32 flags = 4;</code>
         * @return Whether the flags field is set.
         */
        @java.lang.Override
        public boolean hasFlags() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <pre>
         * The flags set on this target.
         * </pre>
         *
         * <code>optional int32 flags = 4;</code>
         * @return The flags.
         */
        @java.lang.Override
        public int getFlags() {
          return flags_;
        }
        /**
         * <pre>
         * The flags set on this target.
         * </pre>
         *
         * <code>optional int32 flags = 4;</code>
         * @param value The flags to set.
         * @return This builder for chaining.
         */
        public Builder setFlags(int value) {

          flags_ = value;
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * The flags set on this target.
         * </pre>
         *
         * <code>optional int32 flags = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearFlags() {
          bitField0_ = (bitField0_ & ~0x00000008);
          flags_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:perfetto.protos.ShellTransition.Target)
      }

      // @@protoc_insertion_point(class_scope:perfetto.protos.ShellTransition.Target)
      private static final perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target();
      }

      public static perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Target>
          PARSER = new com.google.protobuf.AbstractParser<Target>() {
        @java.lang.Override
        public Target parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<Target> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Target> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_ = 0;
    /**
     * <pre>
     * The unique identifier of the transition.
     * </pre>
     *
     * <code>optional int32 id = 1;</code>
     * @return Whether the id field is set.
     */
    @java.lang.Override
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The unique identifier of the transition.
     * </pre>
     *
     * <code>optional int32 id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public int getId() {
      return id_;
    }

    public static final int CREATE_TIME_NS_FIELD_NUMBER = 2;
    private long createTimeNs_ = 0L;
    /**
     * <pre>
     * The time the transition was created on the WM side
     * (using SystemClock.elapsedRealtimeNanos())
     * </pre>
     *
     * <code>optional int64 create_time_ns = 2;</code>
     * @return Whether the createTimeNs field is set.
     */
    @java.lang.Override
    public boolean hasCreateTimeNs() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The time the transition was created on the WM side
     * (using SystemClock.elapsedRealtimeNanos())
     * </pre>
     *
     * <code>optional int64 create_time_ns = 2;</code>
     * @return The createTimeNs.
     */
    @java.lang.Override
    public long getCreateTimeNs() {
      return createTimeNs_;
    }

    public static final int SEND_TIME_NS_FIELD_NUMBER = 3;
    private long sendTimeNs_ = 0L;
    /**
     * <pre>
     * The time the transition was sent from the WM side to shell
     * (using SystemClock.elapsedRealtimeNanos())
     * </pre>
     *
     * <code>optional int64 send_time_ns = 3;</code>
     * @return Whether the sendTimeNs field is set.
     */
    @java.lang.Override
    public boolean hasSendTimeNs() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * The time the transition was sent from the WM side to shell
     * (using SystemClock.elapsedRealtimeNanos())
     * </pre>
     *
     * <code>optional int64 send_time_ns = 3;</code>
     * @return The sendTimeNs.
     */
    @java.lang.Override
    public long getSendTimeNs() {
      return sendTimeNs_;
    }

    public static final int DISPATCH_TIME_NS_FIELD_NUMBER = 4;
    private long dispatchTimeNs_ = 0L;
    /**
     * <pre>
     * The time the transition was dispatched by shell to execute
     * (using SystemClock.elapsedRealtimeNanos())
     * </pre>
     *
     * <code>optional int64 dispatch_time_ns = 4;</code>
     * @return Whether the dispatchTimeNs field is set.
     */
    @java.lang.Override
    public boolean hasDispatchTimeNs() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * The time the transition was dispatched by shell to execute
     * (using SystemClock.elapsedRealtimeNanos())
     * </pre>
     *
     * <code>optional int64 dispatch_time_ns = 4;</code>
     * @return The dispatchTimeNs.
     */
    @java.lang.Override
    public long getDispatchTimeNs() {
      return dispatchTimeNs_;
    }

    public static final int MERGE_TIME_NS_FIELD_NUMBER = 5;
    private long mergeTimeNs_ = 0L;
    /**
     * <pre>
     * If the transition merge was accepted by the transition handler, this
     * contains the time the transition was merged into transition with id
     * `merge_target`.
     * (using SystemClock.elapsedRealtimeNanos())
     * </pre>
     *
     * <code>optional int64 merge_time_ns = 5;</code>
     * @return Whether the mergeTimeNs field is set.
     */
    @java.lang.Override
    public boolean hasMergeTimeNs() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * If the transition merge was accepted by the transition handler, this
     * contains the time the transition was merged into transition with id
     * `merge_target`.
     * (using SystemClock.elapsedRealtimeNanos())
     * </pre>
     *
     * <code>optional int64 merge_time_ns = 5;</code>
     * @return The mergeTimeNs.
     */
    @java.lang.Override
    public long getMergeTimeNs() {
      return mergeTimeNs_;
    }

    public static final int MERGE_REQUEST_TIME_NS_FIELD_NUMBER = 6;
    private long mergeRequestTimeNs_ = 0L;
    /**
     * <pre>
     * The time shell proposed the transition should be merged to the transition
     * handler into transition with id `merge_target`.
     * (using SystemClock.elapsedRealtimeNanos()).
     * </pre>
     *
     * <code>optional int64 merge_request_time_ns = 6;</code>
     * @return Whether the mergeRequestTimeNs field is set.
     */
    @java.lang.Override
    public boolean hasMergeRequestTimeNs() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * The time shell proposed the transition should be merged to the transition
     * handler into transition with id `merge_target`.
     * (using SystemClock.elapsedRealtimeNanos()).
     * </pre>
     *
     * <code>optional int64 merge_request_time_ns = 6;</code>
     * @return The mergeRequestTimeNs.
     */
    @java.lang.Override
    public long getMergeRequestTimeNs() {
      return mergeRequestTimeNs_;
    }

    public static final int SHELL_ABORT_TIME_NS_FIELD_NUMBER = 7;
    private long shellAbortTimeNs_ = 0L;
    /**
     * <pre>
     * If the transition was aborted on the shell side, this is the time that
     * occurred.
     * (using SystemClock.elapsedRealtimeNanos())
     * </pre>
     *
     * <code>optional int64 shell_abort_time_ns = 7;</code>
     * @return Whether the shellAbortTimeNs field is set.
     */
    @java.lang.Override
    public boolean hasShellAbortTimeNs() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * If the transition was aborted on the shell side, this is the time that
     * occurred.
     * (using SystemClock.elapsedRealtimeNanos())
     * </pre>
     *
     * <code>optional int64 shell_abort_time_ns = 7;</code>
     * @return The shellAbortTimeNs.
     */
    @java.lang.Override
    public long getShellAbortTimeNs() {
      return shellAbortTimeNs_;
    }

    public static final int WM_ABORT_TIME_NS_FIELD_NUMBER = 8;
    private long wmAbortTimeNs_ = 0L;
    /**
     * <pre>
     * If the transition was aborted on the wm side, this is the time that
     * occurred.
     * (using SystemClock.elapsedRealtimeNanos())
     * </pre>
     *
     * <code>optional int64 wm_abort_time_ns = 8;</code>
     * @return Whether the wmAbortTimeNs field is set.
     */
    @java.lang.Override
    public boolean hasWmAbortTimeNs() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * If the transition was aborted on the wm side, this is the time that
     * occurred.
     * (using SystemClock.elapsedRealtimeNanos())
     * </pre>
     *
     * <code>optional int64 wm_abort_time_ns = 8;</code>
     * @return The wmAbortTimeNs.
     */
    @java.lang.Override
    public long getWmAbortTimeNs() {
      return wmAbortTimeNs_;
    }

    public static final int FINISH_TIME_NS_FIELD_NUMBER = 9;
    private long finishTimeNs_ = 0L;
    /**
     * <pre>
     * The time WM considers the transition to be complete.
     * (using SystemClock.elapsedRealtimeNanos())
     * </pre>
     *
     * <code>optional int64 finish_time_ns = 9;</code>
     * @return Whether the finishTimeNs field is set.
     */
    @java.lang.Override
    public boolean hasFinishTimeNs() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <pre>
     * The time WM considers the transition to be complete.
     * (using SystemClock.elapsedRealtimeNanos())
     * </pre>
     *
     * <code>optional int64 finish_time_ns = 9;</code>
     * @return The finishTimeNs.
     */
    @java.lang.Override
    public long getFinishTimeNs() {
      return finishTimeNs_;
    }

    public static final int START_TRANSACTION_ID_FIELD_NUMBER = 10;
    private long startTransactionId_ = 0L;
    /**
     * <pre>
     * The id of the transaction that WM proposed to use as the starting
     * transaction. It contains all the layer changes required to setup the
     * transition and should be executed right at the start of the transition
     * by the transition handler.
     * </pre>
     *
     * <code>optional uint64 start_transaction_id = 10;</code>
     * @return Whether the startTransactionId field is set.
     */
    @java.lang.Override
    public boolean hasStartTransactionId() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <pre>
     * The id of the transaction that WM proposed to use as the starting
     * transaction. It contains all the layer changes required to setup the
     * transition and should be executed right at the start of the transition
     * by the transition handler.
     * </pre>
     *
     * <code>optional uint64 start_transaction_id = 10;</code>
     * @return The startTransactionId.
     */
    @java.lang.Override
    public long getStartTransactionId() {
      return startTransactionId_;
    }

    public static final int FINISH_TRANSACTION_ID_FIELD_NUMBER = 11;
    private long finishTransactionId_ = 0L;
    /**
     * <pre>
     * The if of the transaction that WM proposed to use as the finish
     * transaction. It contains all the layer changes required to set the final
     * state of the transition.
     * </pre>
     *
     * <code>optional uint64 finish_transaction_id = 11;</code>
     * @return Whether the finishTransactionId field is set.
     */
    @java.lang.Override
    public boolean hasFinishTransactionId() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <pre>
     * The if of the transaction that WM proposed to use as the finish
     * transaction. It contains all the layer changes required to set the final
     * state of the transition.
     * </pre>
     *
     * <code>optional uint64 finish_transaction_id = 11;</code>
     * @return The finishTransactionId.
     */
    @java.lang.Override
    public long getFinishTransactionId() {
      return finishTransactionId_;
    }

    public static final int HANDLER_FIELD_NUMBER = 12;
    private int handler_ = 0;
    /**
     * <pre>
     * The id of the handler that executed the transition. A HandlerMappings
     * message in the trace will contain the mapping of id to a string
     * representation of the handler.
     * </pre>
     *
     * <code>optional int32 handler = 12;</code>
     * @return Whether the handler field is set.
     */
    @java.lang.Override
    public boolean hasHandler() {
      return ((bitField0_ & 0x00000800) != 0);
    }
    /**
     * <pre>
     * The id of the handler that executed the transition. A HandlerMappings
     * message in the trace will contain the mapping of id to a string
     * representation of the handler.
     * </pre>
     *
     * <code>optional int32 handler = 12;</code>
     * @return The handler.
     */
    @java.lang.Override
    public int getHandler() {
      return handler_;
    }

    public static final int TYPE_FIELD_NUMBER = 13;
    private int type_ = 0;
    /**
     * <pre>
     * The transition type of this transition (e.g. TO_FRONT, OPEN, CLOSE).
     * </pre>
     *
     * <code>optional int32 type = 13;</code>
     * @return Whether the type field is set.
     */
    @java.lang.Override
    public boolean hasType() {
      return ((bitField0_ & 0x00001000) != 0);
    }
    /**
     * <pre>
     * The transition type of this transition (e.g. TO_FRONT, OPEN, CLOSE).
     * </pre>
     *
     * <code>optional int32 type = 13;</code>
     * @return The type.
     */
    @java.lang.Override
    public int getType() {
      return type_;
    }

    public static final int TARGETS_FIELD_NUMBER = 14;
    @SuppressWarnings("serial")
    private java.util.List<perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target> targets_;
    /**
     * <pre>
     * The list of targets that are part of this transition.
     * </pre>
     *
     * <code>repeated .perfetto.protos.ShellTransition.Target targets = 14;</code>
     */
    @java.lang.Override
    public java.util.List<perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target> getTargetsList() {
      return targets_;
    }
    /**
     * <pre>
     * The list of targets that are part of this transition.
     * </pre>
     *
     * <code>repeated .perfetto.protos.ShellTransition.Target targets = 14;</code>
     */
    @java.lang.Override
    public java.util.List<? extends perfetto.protos.ShellTransitionOuterClass.ShellTransition.TargetOrBuilder> 
        getTargetsOrBuilderList() {
      return targets_;
    }
    /**
     * <pre>
     * The list of targets that are part of this transition.
     * </pre>
     *
     * <code>repeated .perfetto.protos.ShellTransition.Target targets = 14;</code>
     */
    @java.lang.Override
    public int getTargetsCount() {
      return targets_.size();
    }
    /**
     * <pre>
     * The list of targets that are part of this transition.
     * </pre>
     *
     * <code>repeated .perfetto.protos.ShellTransition.Target targets = 14;</code>
     */
    @java.lang.Override
    public perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target getTargets(int index) {
      return targets_.get(index);
    }
    /**
     * <pre>
     * The list of targets that are part of this transition.
     * </pre>
     *
     * <code>repeated .perfetto.protos.ShellTransition.Target targets = 14;</code>
     */
    @java.lang.Override
    public perfetto.protos.ShellTransitionOuterClass.ShellTransition.TargetOrBuilder getTargetsOrBuilder(
        int index) {
      return targets_.get(index);
    }

    public static final int MERGE_TARGET_FIELD_NUMBER = 15;
    private int mergeTarget_ = 0;
    /**
     * <pre>
     * The id of the transition we have requested to merge or have merged this
     * transition into.
     * </pre>
     *
     * <code>optional int32 merge_target = 15;</code>
     * @return Whether the mergeTarget field is set.
     */
    @java.lang.Override
    public boolean hasMergeTarget() {
      return ((bitField0_ & 0x00002000) != 0);
    }
    /**
     * <pre>
     * The id of the transition we have requested to merge or have merged this
     * transition into.
     * </pre>
     *
     * <code>optional int32 merge_target = 15;</code>
     * @return The mergeTarget.
     */
    @java.lang.Override
    public int getMergeTarget() {
      return mergeTarget_;
    }

    public static final int FLAGS_FIELD_NUMBER = 16;
    private int flags_ = 0;
    /**
     * <pre>
     * The flags set on this transition.
     * </pre>
     *
     * <code>optional int32 flags = 16;</code>
     * @return Whether the flags field is set.
     */
    @java.lang.Override
    public boolean hasFlags() {
      return ((bitField0_ & 0x00004000) != 0);
    }
    /**
     * <pre>
     * The flags set on this transition.
     * </pre>
     *
     * <code>optional int32 flags = 16;</code>
     * @return The flags.
     */
    @java.lang.Override
    public int getFlags() {
      return flags_;
    }

    public static final int STARTING_WINDOW_REMOVE_TIME_NS_FIELD_NUMBER = 17;
    private long startingWindowRemoveTimeNs_ = 0L;
    /**
     * <pre>
     * The time the starting window was removed. Tracked because this can
     * happen after the transition finishes, but the app may not yet be visible
     * until the starting window is removed. So in a sense the transition is not
     * finished until the starting window is removed. (b/284302118)
     * (using SystemClock.elapsedRealtimeNanos())
     * </pre>
     *
     * <code>optional int64 starting_window_remove_time_ns = 17;</code>
     * @return Whether the startingWindowRemoveTimeNs field is set.
     */
    @java.lang.Override
    public boolean hasStartingWindowRemoveTimeNs() {
      return ((bitField0_ & 0x00008000) != 0);
    }
    /**
     * <pre>
     * The time the starting window was removed. Tracked because this can
     * happen after the transition finishes, but the app may not yet be visible
     * until the starting window is removed. So in a sense the transition is not
     * finished until the starting window is removed. (b/284302118)
     * (using SystemClock.elapsedRealtimeNanos())
     * </pre>
     *
     * <code>optional int64 starting_window_remove_time_ns = 17;</code>
     * @return The startingWindowRemoveTimeNs.
     */
    @java.lang.Override
    public long getStartingWindowRemoveTimeNs() {
      return startingWindowRemoveTimeNs_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt64(2, createTimeNs_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeInt64(3, sendTimeNs_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeInt64(4, dispatchTimeNs_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeInt64(5, mergeTimeNs_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeInt64(6, mergeRequestTimeNs_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeInt64(7, shellAbortTimeNs_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeInt64(8, wmAbortTimeNs_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        output.writeInt64(9, finishTimeNs_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        output.writeUInt64(10, startTransactionId_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        output.writeUInt64(11, finishTransactionId_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        output.writeInt32(12, handler_);
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        output.writeInt32(13, type_);
      }
      for (int i = 0; i < targets_.size(); i++) {
        output.writeMessage(14, targets_.get(i));
      }
      if (((bitField0_ & 0x00002000) != 0)) {
        output.writeInt32(15, mergeTarget_);
      }
      if (((bitField0_ & 0x00004000) != 0)) {
        output.writeInt32(16, flags_);
      }
      if (((bitField0_ & 0x00008000) != 0)) {
        output.writeInt64(17, startingWindowRemoveTimeNs_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, createTimeNs_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, sendTimeNs_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, dispatchTimeNs_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, mergeTimeNs_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, mergeRequestTimeNs_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(7, shellAbortTimeNs_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(8, wmAbortTimeNs_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(9, finishTimeNs_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(10, startTransactionId_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(11, finishTransactionId_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, handler_);
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, type_);
      }
      for (int i = 0; i < targets_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, targets_.get(i));
      }
      if (((bitField0_ & 0x00002000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, mergeTarget_);
      }
      if (((bitField0_ & 0x00004000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, flags_);
      }
      if (((bitField0_ & 0x00008000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(17, startingWindowRemoveTimeNs_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof perfetto.protos.ShellTransitionOuterClass.ShellTransition)) {
        return super.equals(obj);
      }
      perfetto.protos.ShellTransitionOuterClass.ShellTransition other = (perfetto.protos.ShellTransitionOuterClass.ShellTransition) obj;

      if (hasId() != other.hasId()) return false;
      if (hasId()) {
        if (getId()
            != other.getId()) return false;
      }
      if (hasCreateTimeNs() != other.hasCreateTimeNs()) return false;
      if (hasCreateTimeNs()) {
        if (getCreateTimeNs()
            != other.getCreateTimeNs()) return false;
      }
      if (hasSendTimeNs() != other.hasSendTimeNs()) return false;
      if (hasSendTimeNs()) {
        if (getSendTimeNs()
            != other.getSendTimeNs()) return false;
      }
      if (hasDispatchTimeNs() != other.hasDispatchTimeNs()) return false;
      if (hasDispatchTimeNs()) {
        if (getDispatchTimeNs()
            != other.getDispatchTimeNs()) return false;
      }
      if (hasMergeTimeNs() != other.hasMergeTimeNs()) return false;
      if (hasMergeTimeNs()) {
        if (getMergeTimeNs()
            != other.getMergeTimeNs()) return false;
      }
      if (hasMergeRequestTimeNs() != other.hasMergeRequestTimeNs()) return false;
      if (hasMergeRequestTimeNs()) {
        if (getMergeRequestTimeNs()
            != other.getMergeRequestTimeNs()) return false;
      }
      if (hasShellAbortTimeNs() != other.hasShellAbortTimeNs()) return false;
      if (hasShellAbortTimeNs()) {
        if (getShellAbortTimeNs()
            != other.getShellAbortTimeNs()) return false;
      }
      if (hasWmAbortTimeNs() != other.hasWmAbortTimeNs()) return false;
      if (hasWmAbortTimeNs()) {
        if (getWmAbortTimeNs()
            != other.getWmAbortTimeNs()) return false;
      }
      if (hasFinishTimeNs() != other.hasFinishTimeNs()) return false;
      if (hasFinishTimeNs()) {
        if (getFinishTimeNs()
            != other.getFinishTimeNs()) return false;
      }
      if (hasStartTransactionId() != other.hasStartTransactionId()) return false;
      if (hasStartTransactionId()) {
        if (getStartTransactionId()
            != other.getStartTransactionId()) return false;
      }
      if (hasFinishTransactionId() != other.hasFinishTransactionId()) return false;
      if (hasFinishTransactionId()) {
        if (getFinishTransactionId()
            != other.getFinishTransactionId()) return false;
      }
      if (hasHandler() != other.hasHandler()) return false;
      if (hasHandler()) {
        if (getHandler()
            != other.getHandler()) return false;
      }
      if (hasType() != other.hasType()) return false;
      if (hasType()) {
        if (getType()
            != other.getType()) return false;
      }
      if (!getTargetsList()
          .equals(other.getTargetsList())) return false;
      if (hasMergeTarget() != other.hasMergeTarget()) return false;
      if (hasMergeTarget()) {
        if (getMergeTarget()
            != other.getMergeTarget()) return false;
      }
      if (hasFlags() != other.hasFlags()) return false;
      if (hasFlags()) {
        if (getFlags()
            != other.getFlags()) return false;
      }
      if (hasStartingWindowRemoveTimeNs() != other.hasStartingWindowRemoveTimeNs()) return false;
      if (hasStartingWindowRemoveTimeNs()) {
        if (getStartingWindowRemoveTimeNs()
            != other.getStartingWindowRemoveTimeNs()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasId()) {
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + getId();
      }
      if (hasCreateTimeNs()) {
        hash = (37 * hash) + CREATE_TIME_NS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getCreateTimeNs());
      }
      if (hasSendTimeNs()) {
        hash = (37 * hash) + SEND_TIME_NS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getSendTimeNs());
      }
      if (hasDispatchTimeNs()) {
        hash = (37 * hash) + DISPATCH_TIME_NS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getDispatchTimeNs());
      }
      if (hasMergeTimeNs()) {
        hash = (37 * hash) + MERGE_TIME_NS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getMergeTimeNs());
      }
      if (hasMergeRequestTimeNs()) {
        hash = (37 * hash) + MERGE_REQUEST_TIME_NS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getMergeRequestTimeNs());
      }
      if (hasShellAbortTimeNs()) {
        hash = (37 * hash) + SHELL_ABORT_TIME_NS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getShellAbortTimeNs());
      }
      if (hasWmAbortTimeNs()) {
        hash = (37 * hash) + WM_ABORT_TIME_NS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getWmAbortTimeNs());
      }
      if (hasFinishTimeNs()) {
        hash = (37 * hash) + FINISH_TIME_NS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getFinishTimeNs());
      }
      if (hasStartTransactionId()) {
        hash = (37 * hash) + START_TRANSACTION_ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getStartTransactionId());
      }
      if (hasFinishTransactionId()) {
        hash = (37 * hash) + FINISH_TRANSACTION_ID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getFinishTransactionId());
      }
      if (hasHandler()) {
        hash = (37 * hash) + HANDLER_FIELD_NUMBER;
        hash = (53 * hash) + getHandler();
      }
      if (hasType()) {
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getType();
      }
      if (getTargetsCount() > 0) {
        hash = (37 * hash) + TARGETS_FIELD_NUMBER;
        hash = (53 * hash) + getTargetsList().hashCode();
      }
      if (hasMergeTarget()) {
        hash = (37 * hash) + MERGE_TARGET_FIELD_NUMBER;
        hash = (53 * hash) + getMergeTarget();
      }
      if (hasFlags()) {
        hash = (37 * hash) + FLAGS_FIELD_NUMBER;
        hash = (53 * hash) + getFlags();
      }
      if (hasStartingWindowRemoveTimeNs()) {
        hash = (37 * hash) + STARTING_WINDOW_REMOVE_TIME_NS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getStartingWindowRemoveTimeNs());
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static perfetto.protos.ShellTransitionOuterClass.ShellTransition parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.ShellTransitionOuterClass.ShellTransition parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.ShellTransitionOuterClass.ShellTransition parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.ShellTransitionOuterClass.ShellTransition parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.ShellTransitionOuterClass.ShellTransition parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.ShellTransitionOuterClass.ShellTransition parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.ShellTransitionOuterClass.ShellTransition parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.ShellTransitionOuterClass.ShellTransition parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static perfetto.protos.ShellTransitionOuterClass.ShellTransition parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static perfetto.protos.ShellTransitionOuterClass.ShellTransition parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.ShellTransitionOuterClass.ShellTransition parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.ShellTransitionOuterClass.ShellTransition parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(perfetto.protos.ShellTransitionOuterClass.ShellTransition prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * ShellTransition messages record information about the shell transitions in
     * the system. This is used to track the animations that are created and execute
     * through the shell transition system.
     * </pre>
     *
     * Protobuf type {@code perfetto.protos.ShellTransition}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:perfetto.protos.ShellTransition)
        perfetto.protos.ShellTransitionOuterClass.ShellTransitionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.ShellTransitionOuterClass.internal_static_perfetto_protos_ShellTransition_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.ShellTransitionOuterClass.internal_static_perfetto_protos_ShellTransition_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.ShellTransitionOuterClass.ShellTransition.class, perfetto.protos.ShellTransitionOuterClass.ShellTransition.Builder.class);
      }

      // Construct using perfetto.protos.ShellTransitionOuterClass.ShellTransition.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        id_ = 0;
        createTimeNs_ = 0L;
        sendTimeNs_ = 0L;
        dispatchTimeNs_ = 0L;
        mergeTimeNs_ = 0L;
        mergeRequestTimeNs_ = 0L;
        shellAbortTimeNs_ = 0L;
        wmAbortTimeNs_ = 0L;
        finishTimeNs_ = 0L;
        startTransactionId_ = 0L;
        finishTransactionId_ = 0L;
        handler_ = 0;
        type_ = 0;
        if (targetsBuilder_ == null) {
          targets_ = java.util.Collections.emptyList();
        } else {
          targets_ = null;
          targetsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        mergeTarget_ = 0;
        flags_ = 0;
        startingWindowRemoveTimeNs_ = 0L;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return perfetto.protos.ShellTransitionOuterClass.internal_static_perfetto_protos_ShellTransition_descriptor;
      }

      @java.lang.Override
      public perfetto.protos.ShellTransitionOuterClass.ShellTransition getDefaultInstanceForType() {
        return perfetto.protos.ShellTransitionOuterClass.ShellTransition.getDefaultInstance();
      }

      @java.lang.Override
      public perfetto.protos.ShellTransitionOuterClass.ShellTransition build() {
        perfetto.protos.ShellTransitionOuterClass.ShellTransition result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public perfetto.protos.ShellTransitionOuterClass.ShellTransition buildPartial() {
        perfetto.protos.ShellTransitionOuterClass.ShellTransition result = new perfetto.protos.ShellTransitionOuterClass.ShellTransition(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(perfetto.protos.ShellTransitionOuterClass.ShellTransition result) {
        if (targetsBuilder_ == null) {
          if (((bitField0_ & 0x00002000) != 0)) {
            targets_ = java.util.Collections.unmodifiableList(targets_);
            bitField0_ = (bitField0_ & ~0x00002000);
          }
          result.targets_ = targets_;
        } else {
          result.targets_ = targetsBuilder_.build();
        }
      }

      private void buildPartial0(perfetto.protos.ShellTransitionOuterClass.ShellTransition result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.id_ = id_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.createTimeNs_ = createTimeNs_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.sendTimeNs_ = sendTimeNs_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.dispatchTimeNs_ = dispatchTimeNs_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.mergeTimeNs_ = mergeTimeNs_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.mergeRequestTimeNs_ = mergeRequestTimeNs_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.shellAbortTimeNs_ = shellAbortTimeNs_;
          to_bitField0_ |= 0x00000040;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.wmAbortTimeNs_ = wmAbortTimeNs_;
          to_bitField0_ |= 0x00000080;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.finishTimeNs_ = finishTimeNs_;
          to_bitField0_ |= 0x00000100;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.startTransactionId_ = startTransactionId_;
          to_bitField0_ |= 0x00000200;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.finishTransactionId_ = finishTransactionId_;
          to_bitField0_ |= 0x00000400;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.handler_ = handler_;
          to_bitField0_ |= 0x00000800;
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          result.type_ = type_;
          to_bitField0_ |= 0x00001000;
        }
        if (((from_bitField0_ & 0x00004000) != 0)) {
          result.mergeTarget_ = mergeTarget_;
          to_bitField0_ |= 0x00002000;
        }
        if (((from_bitField0_ & 0x00008000) != 0)) {
          result.flags_ = flags_;
          to_bitField0_ |= 0x00004000;
        }
        if (((from_bitField0_ & 0x00010000) != 0)) {
          result.startingWindowRemoveTimeNs_ = startingWindowRemoveTimeNs_;
          to_bitField0_ |= 0x00008000;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof perfetto.protos.ShellTransitionOuterClass.ShellTransition) {
          return mergeFrom((perfetto.protos.ShellTransitionOuterClass.ShellTransition)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(perfetto.protos.ShellTransitionOuterClass.ShellTransition other) {
        if (other == perfetto.protos.ShellTransitionOuterClass.ShellTransition.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasCreateTimeNs()) {
          setCreateTimeNs(other.getCreateTimeNs());
        }
        if (other.hasSendTimeNs()) {
          setSendTimeNs(other.getSendTimeNs());
        }
        if (other.hasDispatchTimeNs()) {
          setDispatchTimeNs(other.getDispatchTimeNs());
        }
        if (other.hasMergeTimeNs()) {
          setMergeTimeNs(other.getMergeTimeNs());
        }
        if (other.hasMergeRequestTimeNs()) {
          setMergeRequestTimeNs(other.getMergeRequestTimeNs());
        }
        if (other.hasShellAbortTimeNs()) {
          setShellAbortTimeNs(other.getShellAbortTimeNs());
        }
        if (other.hasWmAbortTimeNs()) {
          setWmAbortTimeNs(other.getWmAbortTimeNs());
        }
        if (other.hasFinishTimeNs()) {
          setFinishTimeNs(other.getFinishTimeNs());
        }
        if (other.hasStartTransactionId()) {
          setStartTransactionId(other.getStartTransactionId());
        }
        if (other.hasFinishTransactionId()) {
          setFinishTransactionId(other.getFinishTransactionId());
        }
        if (other.hasHandler()) {
          setHandler(other.getHandler());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (targetsBuilder_ == null) {
          if (!other.targets_.isEmpty()) {
            if (targets_.isEmpty()) {
              targets_ = other.targets_;
              bitField0_ = (bitField0_ & ~0x00002000);
            } else {
              ensureTargetsIsMutable();
              targets_.addAll(other.targets_);
            }
            onChanged();
          }
        } else {
          if (!other.targets_.isEmpty()) {
            if (targetsBuilder_.isEmpty()) {
              targetsBuilder_.dispose();
              targetsBuilder_ = null;
              targets_ = other.targets_;
              bitField0_ = (bitField0_ & ~0x00002000);
              targetsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTargetsFieldBuilder() : null;
            } else {
              targetsBuilder_.addAllMessages(other.targets_);
            }
          }
        }
        if (other.hasMergeTarget()) {
          setMergeTarget(other.getMergeTarget());
        }
        if (other.hasFlags()) {
          setFlags(other.getFlags());
        }
        if (other.hasStartingWindowRemoveTimeNs()) {
          setStartingWindowRemoveTimeNs(other.getStartingWindowRemoveTimeNs());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                id_ = input.readInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                createTimeNs_ = input.readInt64();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                sendTimeNs_ = input.readInt64();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                dispatchTimeNs_ = input.readInt64();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                mergeTimeNs_ = input.readInt64();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                mergeRequestTimeNs_ = input.readInt64();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 56: {
                shellAbortTimeNs_ = input.readInt64();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
              case 64: {
                wmAbortTimeNs_ = input.readInt64();
                bitField0_ |= 0x00000080;
                break;
              } // case 64
              case 72: {
                finishTimeNs_ = input.readInt64();
                bitField0_ |= 0x00000100;
                break;
              } // case 72
              case 80: {
                startTransactionId_ = input.readUInt64();
                bitField0_ |= 0x00000200;
                break;
              } // case 80
              case 88: {
                finishTransactionId_ = input.readUInt64();
                bitField0_ |= 0x00000400;
                break;
              } // case 88
              case 96: {
                handler_ = input.readInt32();
                bitField0_ |= 0x00000800;
                break;
              } // case 96
              case 104: {
                type_ = input.readInt32();
                bitField0_ |= 0x00001000;
                break;
              } // case 104
              case 114: {
                perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target m =
                    input.readMessage(
                        perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target.parser(),
                        extensionRegistry);
                if (targetsBuilder_ == null) {
                  ensureTargetsIsMutable();
                  targets_.add(m);
                } else {
                  targetsBuilder_.addMessage(m);
                }
                break;
              } // case 114
              case 120: {
                mergeTarget_ = input.readInt32();
                bitField0_ |= 0x00004000;
                break;
              } // case 120
              case 128: {
                flags_ = input.readInt32();
                bitField0_ |= 0x00008000;
                break;
              } // case 128
              case 136: {
                startingWindowRemoveTimeNs_ = input.readInt64();
                bitField0_ |= 0x00010000;
                break;
              } // case 136
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int id_ ;
      /**
       * <pre>
       * The unique identifier of the transition.
       * </pre>
       *
       * <code>optional int32 id = 1;</code>
       * @return Whether the id field is set.
       */
      @java.lang.Override
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * The unique identifier of the transition.
       * </pre>
       *
       * <code>optional int32 id = 1;</code>
       * @return The id.
       */
      @java.lang.Override
      public int getId() {
        return id_;
      }
      /**
       * <pre>
       * The unique identifier of the transition.
       * </pre>
       *
       * <code>optional int32 id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(int value) {

        id_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The unique identifier of the transition.
       * </pre>
       *
       * <code>optional int32 id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      private long createTimeNs_ ;
      /**
       * <pre>
       * The time the transition was created on the WM side
       * (using SystemClock.elapsedRealtimeNanos())
       * </pre>
       *
       * <code>optional int64 create_time_ns = 2;</code>
       * @return Whether the createTimeNs field is set.
       */
      @java.lang.Override
      public boolean hasCreateTimeNs() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * The time the transition was created on the WM side
       * (using SystemClock.elapsedRealtimeNanos())
       * </pre>
       *
       * <code>optional int64 create_time_ns = 2;</code>
       * @return The createTimeNs.
       */
      @java.lang.Override
      public long getCreateTimeNs() {
        return createTimeNs_;
      }
      /**
       * <pre>
       * The time the transition was created on the WM side
       * (using SystemClock.elapsedRealtimeNanos())
       * </pre>
       *
       * <code>optional int64 create_time_ns = 2;</code>
       * @param value The createTimeNs to set.
       * @return This builder for chaining.
       */
      public Builder setCreateTimeNs(long value) {

        createTimeNs_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The time the transition was created on the WM side
       * (using SystemClock.elapsedRealtimeNanos())
       * </pre>
       *
       * <code>optional int64 create_time_ns = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearCreateTimeNs() {
        bitField0_ = (bitField0_ & ~0x00000002);
        createTimeNs_ = 0L;
        onChanged();
        return this;
      }

      private long sendTimeNs_ ;
      /**
       * <pre>
       * The time the transition was sent from the WM side to shell
       * (using SystemClock.elapsedRealtimeNanos())
       * </pre>
       *
       * <code>optional int64 send_time_ns = 3;</code>
       * @return Whether the sendTimeNs field is set.
       */
      @java.lang.Override
      public boolean hasSendTimeNs() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * The time the transition was sent from the WM side to shell
       * (using SystemClock.elapsedRealtimeNanos())
       * </pre>
       *
       * <code>optional int64 send_time_ns = 3;</code>
       * @return The sendTimeNs.
       */
      @java.lang.Override
      public long getSendTimeNs() {
        return sendTimeNs_;
      }
      /**
       * <pre>
       * The time the transition was sent from the WM side to shell
       * (using SystemClock.elapsedRealtimeNanos())
       * </pre>
       *
       * <code>optional int64 send_time_ns = 3;</code>
       * @param value The sendTimeNs to set.
       * @return This builder for chaining.
       */
      public Builder setSendTimeNs(long value) {

        sendTimeNs_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The time the transition was sent from the WM side to shell
       * (using SystemClock.elapsedRealtimeNanos())
       * </pre>
       *
       * <code>optional int64 send_time_ns = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearSendTimeNs() {
        bitField0_ = (bitField0_ & ~0x00000004);
        sendTimeNs_ = 0L;
        onChanged();
        return this;
      }

      private long dispatchTimeNs_ ;
      /**
       * <pre>
       * The time the transition was dispatched by shell to execute
       * (using SystemClock.elapsedRealtimeNanos())
       * </pre>
       *
       * <code>optional int64 dispatch_time_ns = 4;</code>
       * @return Whether the dispatchTimeNs field is set.
       */
      @java.lang.Override
      public boolean hasDispatchTimeNs() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * The time the transition was dispatched by shell to execute
       * (using SystemClock.elapsedRealtimeNanos())
       * </pre>
       *
       * <code>optional int64 dispatch_time_ns = 4;</code>
       * @return The dispatchTimeNs.
       */
      @java.lang.Override
      public long getDispatchTimeNs() {
        return dispatchTimeNs_;
      }
      /**
       * <pre>
       * The time the transition was dispatched by shell to execute
       * (using SystemClock.elapsedRealtimeNanos())
       * </pre>
       *
       * <code>optional int64 dispatch_time_ns = 4;</code>
       * @param value The dispatchTimeNs to set.
       * @return This builder for chaining.
       */
      public Builder setDispatchTimeNs(long value) {

        dispatchTimeNs_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The time the transition was dispatched by shell to execute
       * (using SystemClock.elapsedRealtimeNanos())
       * </pre>
       *
       * <code>optional int64 dispatch_time_ns = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearDispatchTimeNs() {
        bitField0_ = (bitField0_ & ~0x00000008);
        dispatchTimeNs_ = 0L;
        onChanged();
        return this;
      }

      private long mergeTimeNs_ ;
      /**
       * <pre>
       * If the transition merge was accepted by the transition handler, this
       * contains the time the transition was merged into transition with id
       * `merge_target`.
       * (using SystemClock.elapsedRealtimeNanos())
       * </pre>
       *
       * <code>optional int64 merge_time_ns = 5;</code>
       * @return Whether the mergeTimeNs field is set.
       */
      @java.lang.Override
      public boolean hasMergeTimeNs() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * If the transition merge was accepted by the transition handler, this
       * contains the time the transition was merged into transition with id
       * `merge_target`.
       * (using SystemClock.elapsedRealtimeNanos())
       * </pre>
       *
       * <code>optional int64 merge_time_ns = 5;</code>
       * @return The mergeTimeNs.
       */
      @java.lang.Override
      public long getMergeTimeNs() {
        return mergeTimeNs_;
      }
      /**
       * <pre>
       * If the transition merge was accepted by the transition handler, this
       * contains the time the transition was merged into transition with id
       * `merge_target`.
       * (using SystemClock.elapsedRealtimeNanos())
       * </pre>
       *
       * <code>optional int64 merge_time_ns = 5;</code>
       * @param value The mergeTimeNs to set.
       * @return This builder for chaining.
       */
      public Builder setMergeTimeNs(long value) {

        mergeTimeNs_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If the transition merge was accepted by the transition handler, this
       * contains the time the transition was merged into transition with id
       * `merge_target`.
       * (using SystemClock.elapsedRealtimeNanos())
       * </pre>
       *
       * <code>optional int64 merge_time_ns = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearMergeTimeNs() {
        bitField0_ = (bitField0_ & ~0x00000010);
        mergeTimeNs_ = 0L;
        onChanged();
        return this;
      }

      private long mergeRequestTimeNs_ ;
      /**
       * <pre>
       * The time shell proposed the transition should be merged to the transition
       * handler into transition with id `merge_target`.
       * (using SystemClock.elapsedRealtimeNanos()).
       * </pre>
       *
       * <code>optional int64 merge_request_time_ns = 6;</code>
       * @return Whether the mergeRequestTimeNs field is set.
       */
      @java.lang.Override
      public boolean hasMergeRequestTimeNs() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * The time shell proposed the transition should be merged to the transition
       * handler into transition with id `merge_target`.
       * (using SystemClock.elapsedRealtimeNanos()).
       * </pre>
       *
       * <code>optional int64 merge_request_time_ns = 6;</code>
       * @return The mergeRequestTimeNs.
       */
      @java.lang.Override
      public long getMergeRequestTimeNs() {
        return mergeRequestTimeNs_;
      }
      /**
       * <pre>
       * The time shell proposed the transition should be merged to the transition
       * handler into transition with id `merge_target`.
       * (using SystemClock.elapsedRealtimeNanos()).
       * </pre>
       *
       * <code>optional int64 merge_request_time_ns = 6;</code>
       * @param value The mergeRequestTimeNs to set.
       * @return This builder for chaining.
       */
      public Builder setMergeRequestTimeNs(long value) {

        mergeRequestTimeNs_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The time shell proposed the transition should be merged to the transition
       * handler into transition with id `merge_target`.
       * (using SystemClock.elapsedRealtimeNanos()).
       * </pre>
       *
       * <code>optional int64 merge_request_time_ns = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearMergeRequestTimeNs() {
        bitField0_ = (bitField0_ & ~0x00000020);
        mergeRequestTimeNs_ = 0L;
        onChanged();
        return this;
      }

      private long shellAbortTimeNs_ ;
      /**
       * <pre>
       * If the transition was aborted on the shell side, this is the time that
       * occurred.
       * (using SystemClock.elapsedRealtimeNanos())
       * </pre>
       *
       * <code>optional int64 shell_abort_time_ns = 7;</code>
       * @return Whether the shellAbortTimeNs field is set.
       */
      @java.lang.Override
      public boolean hasShellAbortTimeNs() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       * If the transition was aborted on the shell side, this is the time that
       * occurred.
       * (using SystemClock.elapsedRealtimeNanos())
       * </pre>
       *
       * <code>optional int64 shell_abort_time_ns = 7;</code>
       * @return The shellAbortTimeNs.
       */
      @java.lang.Override
      public long getShellAbortTimeNs() {
        return shellAbortTimeNs_;
      }
      /**
       * <pre>
       * If the transition was aborted on the shell side, this is the time that
       * occurred.
       * (using SystemClock.elapsedRealtimeNanos())
       * </pre>
       *
       * <code>optional int64 shell_abort_time_ns = 7;</code>
       * @param value The shellAbortTimeNs to set.
       * @return This builder for chaining.
       */
      public Builder setShellAbortTimeNs(long value) {

        shellAbortTimeNs_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If the transition was aborted on the shell side, this is the time that
       * occurred.
       * (using SystemClock.elapsedRealtimeNanos())
       * </pre>
       *
       * <code>optional int64 shell_abort_time_ns = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearShellAbortTimeNs() {
        bitField0_ = (bitField0_ & ~0x00000040);
        shellAbortTimeNs_ = 0L;
        onChanged();
        return this;
      }

      private long wmAbortTimeNs_ ;
      /**
       * <pre>
       * If the transition was aborted on the wm side, this is the time that
       * occurred.
       * (using SystemClock.elapsedRealtimeNanos())
       * </pre>
       *
       * <code>optional int64 wm_abort_time_ns = 8;</code>
       * @return Whether the wmAbortTimeNs field is set.
       */
      @java.lang.Override
      public boolean hasWmAbortTimeNs() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <pre>
       * If the transition was aborted on the wm side, this is the time that
       * occurred.
       * (using SystemClock.elapsedRealtimeNanos())
       * </pre>
       *
       * <code>optional int64 wm_abort_time_ns = 8;</code>
       * @return The wmAbortTimeNs.
       */
      @java.lang.Override
      public long getWmAbortTimeNs() {
        return wmAbortTimeNs_;
      }
      /**
       * <pre>
       * If the transition was aborted on the wm side, this is the time that
       * occurred.
       * (using SystemClock.elapsedRealtimeNanos())
       * </pre>
       *
       * <code>optional int64 wm_abort_time_ns = 8;</code>
       * @param value The wmAbortTimeNs to set.
       * @return This builder for chaining.
       */
      public Builder setWmAbortTimeNs(long value) {

        wmAbortTimeNs_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If the transition was aborted on the wm side, this is the time that
       * occurred.
       * (using SystemClock.elapsedRealtimeNanos())
       * </pre>
       *
       * <code>optional int64 wm_abort_time_ns = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearWmAbortTimeNs() {
        bitField0_ = (bitField0_ & ~0x00000080);
        wmAbortTimeNs_ = 0L;
        onChanged();
        return this;
      }

      private long finishTimeNs_ ;
      /**
       * <pre>
       * The time WM considers the transition to be complete.
       * (using SystemClock.elapsedRealtimeNanos())
       * </pre>
       *
       * <code>optional int64 finish_time_ns = 9;</code>
       * @return Whether the finishTimeNs field is set.
       */
      @java.lang.Override
      public boolean hasFinishTimeNs() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <pre>
       * The time WM considers the transition to be complete.
       * (using SystemClock.elapsedRealtimeNanos())
       * </pre>
       *
       * <code>optional int64 finish_time_ns = 9;</code>
       * @return The finishTimeNs.
       */
      @java.lang.Override
      public long getFinishTimeNs() {
        return finishTimeNs_;
      }
      /**
       * <pre>
       * The time WM considers the transition to be complete.
       * (using SystemClock.elapsedRealtimeNanos())
       * </pre>
       *
       * <code>optional int64 finish_time_ns = 9;</code>
       * @param value The finishTimeNs to set.
       * @return This builder for chaining.
       */
      public Builder setFinishTimeNs(long value) {

        finishTimeNs_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The time WM considers the transition to be complete.
       * (using SystemClock.elapsedRealtimeNanos())
       * </pre>
       *
       * <code>optional int64 finish_time_ns = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearFinishTimeNs() {
        bitField0_ = (bitField0_ & ~0x00000100);
        finishTimeNs_ = 0L;
        onChanged();
        return this;
      }

      private long startTransactionId_ ;
      /**
       * <pre>
       * The id of the transaction that WM proposed to use as the starting
       * transaction. It contains all the layer changes required to setup the
       * transition and should be executed right at the start of the transition
       * by the transition handler.
       * </pre>
       *
       * <code>optional uint64 start_transaction_id = 10;</code>
       * @return Whether the startTransactionId field is set.
       */
      @java.lang.Override
      public boolean hasStartTransactionId() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <pre>
       * The id of the transaction that WM proposed to use as the starting
       * transaction. It contains all the layer changes required to setup the
       * transition and should be executed right at the start of the transition
       * by the transition handler.
       * </pre>
       *
       * <code>optional uint64 start_transaction_id = 10;</code>
       * @return The startTransactionId.
       */
      @java.lang.Override
      public long getStartTransactionId() {
        return startTransactionId_;
      }
      /**
       * <pre>
       * The id of the transaction that WM proposed to use as the starting
       * transaction. It contains all the layer changes required to setup the
       * transition and should be executed right at the start of the transition
       * by the transition handler.
       * </pre>
       *
       * <code>optional uint64 start_transaction_id = 10;</code>
       * @param value The startTransactionId to set.
       * @return This builder for chaining.
       */
      public Builder setStartTransactionId(long value) {

        startTransactionId_ = value;
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The id of the transaction that WM proposed to use as the starting
       * transaction. It contains all the layer changes required to setup the
       * transition and should be executed right at the start of the transition
       * by the transition handler.
       * </pre>
       *
       * <code>optional uint64 start_transaction_id = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearStartTransactionId() {
        bitField0_ = (bitField0_ & ~0x00000200);
        startTransactionId_ = 0L;
        onChanged();
        return this;
      }

      private long finishTransactionId_ ;
      /**
       * <pre>
       * The if of the transaction that WM proposed to use as the finish
       * transaction. It contains all the layer changes required to set the final
       * state of the transition.
       * </pre>
       *
       * <code>optional uint64 finish_transaction_id = 11;</code>
       * @return Whether the finishTransactionId field is set.
       */
      @java.lang.Override
      public boolean hasFinishTransactionId() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <pre>
       * The if of the transaction that WM proposed to use as the finish
       * transaction. It contains all the layer changes required to set the final
       * state of the transition.
       * </pre>
       *
       * <code>optional uint64 finish_transaction_id = 11;</code>
       * @return The finishTransactionId.
       */
      @java.lang.Override
      public long getFinishTransactionId() {
        return finishTransactionId_;
      }
      /**
       * <pre>
       * The if of the transaction that WM proposed to use as the finish
       * transaction. It contains all the layer changes required to set the final
       * state of the transition.
       * </pre>
       *
       * <code>optional uint64 finish_transaction_id = 11;</code>
       * @param value The finishTransactionId to set.
       * @return This builder for chaining.
       */
      public Builder setFinishTransactionId(long value) {

        finishTransactionId_ = value;
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The if of the transaction that WM proposed to use as the finish
       * transaction. It contains all the layer changes required to set the final
       * state of the transition.
       * </pre>
       *
       * <code>optional uint64 finish_transaction_id = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearFinishTransactionId() {
        bitField0_ = (bitField0_ & ~0x00000400);
        finishTransactionId_ = 0L;
        onChanged();
        return this;
      }

      private int handler_ ;
      /**
       * <pre>
       * The id of the handler that executed the transition. A HandlerMappings
       * message in the trace will contain the mapping of id to a string
       * representation of the handler.
       * </pre>
       *
       * <code>optional int32 handler = 12;</code>
       * @return Whether the handler field is set.
       */
      @java.lang.Override
      public boolean hasHandler() {
        return ((bitField0_ & 0x00000800) != 0);
      }
      /**
       * <pre>
       * The id of the handler that executed the transition. A HandlerMappings
       * message in the trace will contain the mapping of id to a string
       * representation of the handler.
       * </pre>
       *
       * <code>optional int32 handler = 12;</code>
       * @return The handler.
       */
      @java.lang.Override
      public int getHandler() {
        return handler_;
      }
      /**
       * <pre>
       * The id of the handler that executed the transition. A HandlerMappings
       * message in the trace will contain the mapping of id to a string
       * representation of the handler.
       * </pre>
       *
       * <code>optional int32 handler = 12;</code>
       * @param value The handler to set.
       * @return This builder for chaining.
       */
      public Builder setHandler(int value) {

        handler_ = value;
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The id of the handler that executed the transition. A HandlerMappings
       * message in the trace will contain the mapping of id to a string
       * representation of the handler.
       * </pre>
       *
       * <code>optional int32 handler = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearHandler() {
        bitField0_ = (bitField0_ & ~0x00000800);
        handler_ = 0;
        onChanged();
        return this;
      }

      private int type_ ;
      /**
       * <pre>
       * The transition type of this transition (e.g. TO_FRONT, OPEN, CLOSE).
       * </pre>
       *
       * <code>optional int32 type = 13;</code>
       * @return Whether the type field is set.
       */
      @java.lang.Override
      public boolean hasType() {
        return ((bitField0_ & 0x00001000) != 0);
      }
      /**
       * <pre>
       * The transition type of this transition (e.g. TO_FRONT, OPEN, CLOSE).
       * </pre>
       *
       * <code>optional int32 type = 13;</code>
       * @return The type.
       */
      @java.lang.Override
      public int getType() {
        return type_;
      }
      /**
       * <pre>
       * The transition type of this transition (e.g. TO_FRONT, OPEN, CLOSE).
       * </pre>
       *
       * <code>optional int32 type = 13;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(int value) {

        type_ = value;
        bitField0_ |= 0x00001000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The transition type of this transition (e.g. TO_FRONT, OPEN, CLOSE).
       * </pre>
       *
       * <code>optional int32 type = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00001000);
        type_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target> targets_ =
        java.util.Collections.emptyList();
      private void ensureTargetsIsMutable() {
        if (!((bitField0_ & 0x00002000) != 0)) {
          targets_ = new java.util.ArrayList<perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target>(targets_);
          bitField0_ |= 0x00002000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target, perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target.Builder, perfetto.protos.ShellTransitionOuterClass.ShellTransition.TargetOrBuilder> targetsBuilder_;

      /**
       * <pre>
       * The list of targets that are part of this transition.
       * </pre>
       *
       * <code>repeated .perfetto.protos.ShellTransition.Target targets = 14;</code>
       */
      public java.util.List<perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target> getTargetsList() {
        if (targetsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(targets_);
        } else {
          return targetsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The list of targets that are part of this transition.
       * </pre>
       *
       * <code>repeated .perfetto.protos.ShellTransition.Target targets = 14;</code>
       */
      public int getTargetsCount() {
        if (targetsBuilder_ == null) {
          return targets_.size();
        } else {
          return targetsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The list of targets that are part of this transition.
       * </pre>
       *
       * <code>repeated .perfetto.protos.ShellTransition.Target targets = 14;</code>
       */
      public perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target getTargets(int index) {
        if (targetsBuilder_ == null) {
          return targets_.get(index);
        } else {
          return targetsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The list of targets that are part of this transition.
       * </pre>
       *
       * <code>repeated .perfetto.protos.ShellTransition.Target targets = 14;</code>
       */
      public Builder setTargets(
          int index, perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target value) {
        if (targetsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTargetsIsMutable();
          targets_.set(index, value);
          onChanged();
        } else {
          targetsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The list of targets that are part of this transition.
       * </pre>
       *
       * <code>repeated .perfetto.protos.ShellTransition.Target targets = 14;</code>
       */
      public Builder setTargets(
          int index, perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target.Builder builderForValue) {
        if (targetsBuilder_ == null) {
          ensureTargetsIsMutable();
          targets_.set(index, builderForValue.build());
          onChanged();
        } else {
          targetsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The list of targets that are part of this transition.
       * </pre>
       *
       * <code>repeated .perfetto.protos.ShellTransition.Target targets = 14;</code>
       */
      public Builder addTargets(perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target value) {
        if (targetsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTargetsIsMutable();
          targets_.add(value);
          onChanged();
        } else {
          targetsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The list of targets that are part of this transition.
       * </pre>
       *
       * <code>repeated .perfetto.protos.ShellTransition.Target targets = 14;</code>
       */
      public Builder addTargets(
          int index, perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target value) {
        if (targetsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTargetsIsMutable();
          targets_.add(index, value);
          onChanged();
        } else {
          targetsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The list of targets that are part of this transition.
       * </pre>
       *
       * <code>repeated .perfetto.protos.ShellTransition.Target targets = 14;</code>
       */
      public Builder addTargets(
          perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target.Builder builderForValue) {
        if (targetsBuilder_ == null) {
          ensureTargetsIsMutable();
          targets_.add(builderForValue.build());
          onChanged();
        } else {
          targetsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The list of targets that are part of this transition.
       * </pre>
       *
       * <code>repeated .perfetto.protos.ShellTransition.Target targets = 14;</code>
       */
      public Builder addTargets(
          int index, perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target.Builder builderForValue) {
        if (targetsBuilder_ == null) {
          ensureTargetsIsMutable();
          targets_.add(index, builderForValue.build());
          onChanged();
        } else {
          targetsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The list of targets that are part of this transition.
       * </pre>
       *
       * <code>repeated .perfetto.protos.ShellTransition.Target targets = 14;</code>
       */
      public Builder addAllTargets(
          java.lang.Iterable<? extends perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target> values) {
        if (targetsBuilder_ == null) {
          ensureTargetsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, targets_);
          onChanged();
        } else {
          targetsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The list of targets that are part of this transition.
       * </pre>
       *
       * <code>repeated .perfetto.protos.ShellTransition.Target targets = 14;</code>
       */
      public Builder clearTargets() {
        if (targetsBuilder_ == null) {
          targets_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00002000);
          onChanged();
        } else {
          targetsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The list of targets that are part of this transition.
       * </pre>
       *
       * <code>repeated .perfetto.protos.ShellTransition.Target targets = 14;</code>
       */
      public Builder removeTargets(int index) {
        if (targetsBuilder_ == null) {
          ensureTargetsIsMutable();
          targets_.remove(index);
          onChanged();
        } else {
          targetsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The list of targets that are part of this transition.
       * </pre>
       *
       * <code>repeated .perfetto.protos.ShellTransition.Target targets = 14;</code>
       */
      public perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target.Builder getTargetsBuilder(
          int index) {
        return getTargetsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The list of targets that are part of this transition.
       * </pre>
       *
       * <code>repeated .perfetto.protos.ShellTransition.Target targets = 14;</code>
       */
      public perfetto.protos.ShellTransitionOuterClass.ShellTransition.TargetOrBuilder getTargetsOrBuilder(
          int index) {
        if (targetsBuilder_ == null) {
          return targets_.get(index);  } else {
          return targetsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The list of targets that are part of this transition.
       * </pre>
       *
       * <code>repeated .perfetto.protos.ShellTransition.Target targets = 14;</code>
       */
      public java.util.List<? extends perfetto.protos.ShellTransitionOuterClass.ShellTransition.TargetOrBuilder> 
           getTargetsOrBuilderList() {
        if (targetsBuilder_ != null) {
          return targetsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(targets_);
        }
      }
      /**
       * <pre>
       * The list of targets that are part of this transition.
       * </pre>
       *
       * <code>repeated .perfetto.protos.ShellTransition.Target targets = 14;</code>
       */
      public perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target.Builder addTargetsBuilder() {
        return getTargetsFieldBuilder().addBuilder(
            perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target.getDefaultInstance());
      }
      /**
       * <pre>
       * The list of targets that are part of this transition.
       * </pre>
       *
       * <code>repeated .perfetto.protos.ShellTransition.Target targets = 14;</code>
       */
      public perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target.Builder addTargetsBuilder(
          int index) {
        return getTargetsFieldBuilder().addBuilder(
            index, perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target.getDefaultInstance());
      }
      /**
       * <pre>
       * The list of targets that are part of this transition.
       * </pre>
       *
       * <code>repeated .perfetto.protos.ShellTransition.Target targets = 14;</code>
       */
      public java.util.List<perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target.Builder> 
           getTargetsBuilderList() {
        return getTargetsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target, perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target.Builder, perfetto.protos.ShellTransitionOuterClass.ShellTransition.TargetOrBuilder> 
          getTargetsFieldBuilder() {
        if (targetsBuilder_ == null) {
          targetsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target, perfetto.protos.ShellTransitionOuterClass.ShellTransition.Target.Builder, perfetto.protos.ShellTransitionOuterClass.ShellTransition.TargetOrBuilder>(
                  targets_,
                  ((bitField0_ & 0x00002000) != 0),
                  getParentForChildren(),
                  isClean());
          targets_ = null;
        }
        return targetsBuilder_;
      }

      private int mergeTarget_ ;
      /**
       * <pre>
       * The id of the transition we have requested to merge or have merged this
       * transition into.
       * </pre>
       *
       * <code>optional int32 merge_target = 15;</code>
       * @return Whether the mergeTarget field is set.
       */
      @java.lang.Override
      public boolean hasMergeTarget() {
        return ((bitField0_ & 0x00004000) != 0);
      }
      /**
       * <pre>
       * The id of the transition we have requested to merge or have merged this
       * transition into.
       * </pre>
       *
       * <code>optional int32 merge_target = 15;</code>
       * @return The mergeTarget.
       */
      @java.lang.Override
      public int getMergeTarget() {
        return mergeTarget_;
      }
      /**
       * <pre>
       * The id of the transition we have requested to merge or have merged this
       * transition into.
       * </pre>
       *
       * <code>optional int32 merge_target = 15;</code>
       * @param value The mergeTarget to set.
       * @return This builder for chaining.
       */
      public Builder setMergeTarget(int value) {

        mergeTarget_ = value;
        bitField0_ |= 0x00004000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The id of the transition we have requested to merge or have merged this
       * transition into.
       * </pre>
       *
       * <code>optional int32 merge_target = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearMergeTarget() {
        bitField0_ = (bitField0_ & ~0x00004000);
        mergeTarget_ = 0;
        onChanged();
        return this;
      }

      private int flags_ ;
      /**
       * <pre>
       * The flags set on this transition.
       * </pre>
       *
       * <code>optional int32 flags = 16;</code>
       * @return Whether the flags field is set.
       */
      @java.lang.Override
      public boolean hasFlags() {
        return ((bitField0_ & 0x00008000) != 0);
      }
      /**
       * <pre>
       * The flags set on this transition.
       * </pre>
       *
       * <code>optional int32 flags = 16;</code>
       * @return The flags.
       */
      @java.lang.Override
      public int getFlags() {
        return flags_;
      }
      /**
       * <pre>
       * The flags set on this transition.
       * </pre>
       *
       * <code>optional int32 flags = 16;</code>
       * @param value The flags to set.
       * @return This builder for chaining.
       */
      public Builder setFlags(int value) {

        flags_ = value;
        bitField0_ |= 0x00008000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The flags set on this transition.
       * </pre>
       *
       * <code>optional int32 flags = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearFlags() {
        bitField0_ = (bitField0_ & ~0x00008000);
        flags_ = 0;
        onChanged();
        return this;
      }

      private long startingWindowRemoveTimeNs_ ;
      /**
       * <pre>
       * The time the starting window was removed. Tracked because this can
       * happen after the transition finishes, but the app may not yet be visible
       * until the starting window is removed. So in a sense the transition is not
       * finished until the starting window is removed. (b/284302118)
       * (using SystemClock.elapsedRealtimeNanos())
       * </pre>
       *
       * <code>optional int64 starting_window_remove_time_ns = 17;</code>
       * @return Whether the startingWindowRemoveTimeNs field is set.
       */
      @java.lang.Override
      public boolean hasStartingWindowRemoveTimeNs() {
        return ((bitField0_ & 0x00010000) != 0);
      }
      /**
       * <pre>
       * The time the starting window was removed. Tracked because this can
       * happen after the transition finishes, but the app may not yet be visible
       * until the starting window is removed. So in a sense the transition is not
       * finished until the starting window is removed. (b/284302118)
       * (using SystemClock.elapsedRealtimeNanos())
       * </pre>
       *
       * <code>optional int64 starting_window_remove_time_ns = 17;</code>
       * @return The startingWindowRemoveTimeNs.
       */
      @java.lang.Override
      public long getStartingWindowRemoveTimeNs() {
        return startingWindowRemoveTimeNs_;
      }
      /**
       * <pre>
       * The time the starting window was removed. Tracked because this can
       * happen after the transition finishes, but the app may not yet be visible
       * until the starting window is removed. So in a sense the transition is not
       * finished until the starting window is removed. (b/284302118)
       * (using SystemClock.elapsedRealtimeNanos())
       * </pre>
       *
       * <code>optional int64 starting_window_remove_time_ns = 17;</code>
       * @param value The startingWindowRemoveTimeNs to set.
       * @return This builder for chaining.
       */
      public Builder setStartingWindowRemoveTimeNs(long value) {

        startingWindowRemoveTimeNs_ = value;
        bitField0_ |= 0x00010000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The time the starting window was removed. Tracked because this can
       * happen after the transition finishes, but the app may not yet be visible
       * until the starting window is removed. So in a sense the transition is not
       * finished until the starting window is removed. (b/284302118)
       * (using SystemClock.elapsedRealtimeNanos())
       * </pre>
       *
       * <code>optional int64 starting_window_remove_time_ns = 17;</code>
       * @return This builder for chaining.
       */
      public Builder clearStartingWindowRemoveTimeNs() {
        bitField0_ = (bitField0_ & ~0x00010000);
        startingWindowRemoveTimeNs_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:perfetto.protos.ShellTransition)
    }

    // @@protoc_insertion_point(class_scope:perfetto.protos.ShellTransition)
    private static final perfetto.protos.ShellTransitionOuterClass.ShellTransition DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new perfetto.protos.ShellTransitionOuterClass.ShellTransition();
    }

    public static perfetto.protos.ShellTransitionOuterClass.ShellTransition getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ShellTransition>
        PARSER = new com.google.protobuf.AbstractParser<ShellTransition>() {
      @java.lang.Override
      public ShellTransition parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ShellTransition> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ShellTransition> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public perfetto.protos.ShellTransitionOuterClass.ShellTransition getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ShellHandlerMappingsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:perfetto.protos.ShellHandlerMappings)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .perfetto.protos.ShellHandlerMapping mapping = 1;</code>
     */
    java.util.List<perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping> 
        getMappingList();
    /**
     * <code>repeated .perfetto.protos.ShellHandlerMapping mapping = 1;</code>
     */
    perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping getMapping(int index);
    /**
     * <code>repeated .perfetto.protos.ShellHandlerMapping mapping = 1;</code>
     */
    int getMappingCount();
    /**
     * <code>repeated .perfetto.protos.ShellHandlerMapping mapping = 1;</code>
     */
    java.util.List<? extends perfetto.protos.ShellTransitionOuterClass.ShellHandlerMappingOrBuilder> 
        getMappingOrBuilderList();
    /**
     * <code>repeated .perfetto.protos.ShellHandlerMapping mapping = 1;</code>
     */
    perfetto.protos.ShellTransitionOuterClass.ShellHandlerMappingOrBuilder getMappingOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Contains mappings from handler ids to string representation of the handlers.
   * </pre>
   *
   * Protobuf type {@code perfetto.protos.ShellHandlerMappings}
   */
  public static final class ShellHandlerMappings extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:perfetto.protos.ShellHandlerMappings)
      ShellHandlerMappingsOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 3,
        /* suffix= */ "",
        ShellHandlerMappings.class.getName());
    }
    // Use ShellHandlerMappings.newBuilder() to construct.
    private ShellHandlerMappings(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private ShellHandlerMappings() {
      mapping_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return perfetto.protos.ShellTransitionOuterClass.internal_static_perfetto_protos_ShellHandlerMappings_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return perfetto.protos.ShellTransitionOuterClass.internal_static_perfetto_protos_ShellHandlerMappings_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              perfetto.protos.ShellTransitionOuterClass.ShellHandlerMappings.class, perfetto.protos.ShellTransitionOuterClass.ShellHandlerMappings.Builder.class);
    }

    public static final int MAPPING_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping> mapping_;
    /**
     * <code>repeated .perfetto.protos.ShellHandlerMapping mapping = 1;</code>
     */
    @java.lang.Override
    public java.util.List<perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping> getMappingList() {
      return mapping_;
    }
    /**
     * <code>repeated .perfetto.protos.ShellHandlerMapping mapping = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends perfetto.protos.ShellTransitionOuterClass.ShellHandlerMappingOrBuilder> 
        getMappingOrBuilderList() {
      return mapping_;
    }
    /**
     * <code>repeated .perfetto.protos.ShellHandlerMapping mapping = 1;</code>
     */
    @java.lang.Override
    public int getMappingCount() {
      return mapping_.size();
    }
    /**
     * <code>repeated .perfetto.protos.ShellHandlerMapping mapping = 1;</code>
     */
    @java.lang.Override
    public perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping getMapping(int index) {
      return mapping_.get(index);
    }
    /**
     * <code>repeated .perfetto.protos.ShellHandlerMapping mapping = 1;</code>
     */
    @java.lang.Override
    public perfetto.protos.ShellTransitionOuterClass.ShellHandlerMappingOrBuilder getMappingOrBuilder(
        int index) {
      return mapping_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < mapping_.size(); i++) {
        output.writeMessage(1, mapping_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < mapping_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, mapping_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof perfetto.protos.ShellTransitionOuterClass.ShellHandlerMappings)) {
        return super.equals(obj);
      }
      perfetto.protos.ShellTransitionOuterClass.ShellHandlerMappings other = (perfetto.protos.ShellTransitionOuterClass.ShellHandlerMappings) obj;

      if (!getMappingList()
          .equals(other.getMappingList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getMappingCount() > 0) {
        hash = (37 * hash) + MAPPING_FIELD_NUMBER;
        hash = (53 * hash) + getMappingList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static perfetto.protos.ShellTransitionOuterClass.ShellHandlerMappings parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.ShellTransitionOuterClass.ShellHandlerMappings parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.ShellTransitionOuterClass.ShellHandlerMappings parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.ShellTransitionOuterClass.ShellHandlerMappings parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.ShellTransitionOuterClass.ShellHandlerMappings parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.ShellTransitionOuterClass.ShellHandlerMappings parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.ShellTransitionOuterClass.ShellHandlerMappings parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.ShellTransitionOuterClass.ShellHandlerMappings parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static perfetto.protos.ShellTransitionOuterClass.ShellHandlerMappings parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static perfetto.protos.ShellTransitionOuterClass.ShellHandlerMappings parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.ShellTransitionOuterClass.ShellHandlerMappings parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.ShellTransitionOuterClass.ShellHandlerMappings parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(perfetto.protos.ShellTransitionOuterClass.ShellHandlerMappings prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Contains mappings from handler ids to string representation of the handlers.
     * </pre>
     *
     * Protobuf type {@code perfetto.protos.ShellHandlerMappings}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:perfetto.protos.ShellHandlerMappings)
        perfetto.protos.ShellTransitionOuterClass.ShellHandlerMappingsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.ShellTransitionOuterClass.internal_static_perfetto_protos_ShellHandlerMappings_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.ShellTransitionOuterClass.internal_static_perfetto_protos_ShellHandlerMappings_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.ShellTransitionOuterClass.ShellHandlerMappings.class, perfetto.protos.ShellTransitionOuterClass.ShellHandlerMappings.Builder.class);
      }

      // Construct using perfetto.protos.ShellTransitionOuterClass.ShellHandlerMappings.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (mappingBuilder_ == null) {
          mapping_ = java.util.Collections.emptyList();
        } else {
          mapping_ = null;
          mappingBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return perfetto.protos.ShellTransitionOuterClass.internal_static_perfetto_protos_ShellHandlerMappings_descriptor;
      }

      @java.lang.Override
      public perfetto.protos.ShellTransitionOuterClass.ShellHandlerMappings getDefaultInstanceForType() {
        return perfetto.protos.ShellTransitionOuterClass.ShellHandlerMappings.getDefaultInstance();
      }

      @java.lang.Override
      public perfetto.protos.ShellTransitionOuterClass.ShellHandlerMappings build() {
        perfetto.protos.ShellTransitionOuterClass.ShellHandlerMappings result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public perfetto.protos.ShellTransitionOuterClass.ShellHandlerMappings buildPartial() {
        perfetto.protos.ShellTransitionOuterClass.ShellHandlerMappings result = new perfetto.protos.ShellTransitionOuterClass.ShellHandlerMappings(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(perfetto.protos.ShellTransitionOuterClass.ShellHandlerMappings result) {
        if (mappingBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            mapping_ = java.util.Collections.unmodifiableList(mapping_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.mapping_ = mapping_;
        } else {
          result.mapping_ = mappingBuilder_.build();
        }
      }

      private void buildPartial0(perfetto.protos.ShellTransitionOuterClass.ShellHandlerMappings result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof perfetto.protos.ShellTransitionOuterClass.ShellHandlerMappings) {
          return mergeFrom((perfetto.protos.ShellTransitionOuterClass.ShellHandlerMappings)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(perfetto.protos.ShellTransitionOuterClass.ShellHandlerMappings other) {
        if (other == perfetto.protos.ShellTransitionOuterClass.ShellHandlerMappings.getDefaultInstance()) return this;
        if (mappingBuilder_ == null) {
          if (!other.mapping_.isEmpty()) {
            if (mapping_.isEmpty()) {
              mapping_ = other.mapping_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureMappingIsMutable();
              mapping_.addAll(other.mapping_);
            }
            onChanged();
          }
        } else {
          if (!other.mapping_.isEmpty()) {
            if (mappingBuilder_.isEmpty()) {
              mappingBuilder_.dispose();
              mappingBuilder_ = null;
              mapping_ = other.mapping_;
              bitField0_ = (bitField0_ & ~0x00000001);
              mappingBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMappingFieldBuilder() : null;
            } else {
              mappingBuilder_.addAllMessages(other.mapping_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping m =
                    input.readMessage(
                        perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping.parser(),
                        extensionRegistry);
                if (mappingBuilder_ == null) {
                  ensureMappingIsMutable();
                  mapping_.add(m);
                } else {
                  mappingBuilder_.addMessage(m);
                }
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping> mapping_ =
        java.util.Collections.emptyList();
      private void ensureMappingIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          mapping_ = new java.util.ArrayList<perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping>(mapping_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping, perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping.Builder, perfetto.protos.ShellTransitionOuterClass.ShellHandlerMappingOrBuilder> mappingBuilder_;

      /**
       * <code>repeated .perfetto.protos.ShellHandlerMapping mapping = 1;</code>
       */
      public java.util.List<perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping> getMappingList() {
        if (mappingBuilder_ == null) {
          return java.util.Collections.unmodifiableList(mapping_);
        } else {
          return mappingBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .perfetto.protos.ShellHandlerMapping mapping = 1;</code>
       */
      public int getMappingCount() {
        if (mappingBuilder_ == null) {
          return mapping_.size();
        } else {
          return mappingBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .perfetto.protos.ShellHandlerMapping mapping = 1;</code>
       */
      public perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping getMapping(int index) {
        if (mappingBuilder_ == null) {
          return mapping_.get(index);
        } else {
          return mappingBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .perfetto.protos.ShellHandlerMapping mapping = 1;</code>
       */
      public Builder setMapping(
          int index, perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping value) {
        if (mappingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMappingIsMutable();
          mapping_.set(index, value);
          onChanged();
        } else {
          mappingBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.ShellHandlerMapping mapping = 1;</code>
       */
      public Builder setMapping(
          int index, perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping.Builder builderForValue) {
        if (mappingBuilder_ == null) {
          ensureMappingIsMutable();
          mapping_.set(index, builderForValue.build());
          onChanged();
        } else {
          mappingBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.ShellHandlerMapping mapping = 1;</code>
       */
      public Builder addMapping(perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping value) {
        if (mappingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMappingIsMutable();
          mapping_.add(value);
          onChanged();
        } else {
          mappingBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.ShellHandlerMapping mapping = 1;</code>
       */
      public Builder addMapping(
          int index, perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping value) {
        if (mappingBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMappingIsMutable();
          mapping_.add(index, value);
          onChanged();
        } else {
          mappingBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.ShellHandlerMapping mapping = 1;</code>
       */
      public Builder addMapping(
          perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping.Builder builderForValue) {
        if (mappingBuilder_ == null) {
          ensureMappingIsMutable();
          mapping_.add(builderForValue.build());
          onChanged();
        } else {
          mappingBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.ShellHandlerMapping mapping = 1;</code>
       */
      public Builder addMapping(
          int index, perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping.Builder builderForValue) {
        if (mappingBuilder_ == null) {
          ensureMappingIsMutable();
          mapping_.add(index, builderForValue.build());
          onChanged();
        } else {
          mappingBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.ShellHandlerMapping mapping = 1;</code>
       */
      public Builder addAllMapping(
          java.lang.Iterable<? extends perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping> values) {
        if (mappingBuilder_ == null) {
          ensureMappingIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, mapping_);
          onChanged();
        } else {
          mappingBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.ShellHandlerMapping mapping = 1;</code>
       */
      public Builder clearMapping() {
        if (mappingBuilder_ == null) {
          mapping_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          mappingBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.ShellHandlerMapping mapping = 1;</code>
       */
      public Builder removeMapping(int index) {
        if (mappingBuilder_ == null) {
          ensureMappingIsMutable();
          mapping_.remove(index);
          onChanged();
        } else {
          mappingBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .perfetto.protos.ShellHandlerMapping mapping = 1;</code>
       */
      public perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping.Builder getMappingBuilder(
          int index) {
        return getMappingFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .perfetto.protos.ShellHandlerMapping mapping = 1;</code>
       */
      public perfetto.protos.ShellTransitionOuterClass.ShellHandlerMappingOrBuilder getMappingOrBuilder(
          int index) {
        if (mappingBuilder_ == null) {
          return mapping_.get(index);  } else {
          return mappingBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .perfetto.protos.ShellHandlerMapping mapping = 1;</code>
       */
      public java.util.List<? extends perfetto.protos.ShellTransitionOuterClass.ShellHandlerMappingOrBuilder> 
           getMappingOrBuilderList() {
        if (mappingBuilder_ != null) {
          return mappingBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(mapping_);
        }
      }
      /**
       * <code>repeated .perfetto.protos.ShellHandlerMapping mapping = 1;</code>
       */
      public perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping.Builder addMappingBuilder() {
        return getMappingFieldBuilder().addBuilder(
            perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping.getDefaultInstance());
      }
      /**
       * <code>repeated .perfetto.protos.ShellHandlerMapping mapping = 1;</code>
       */
      public perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping.Builder addMappingBuilder(
          int index) {
        return getMappingFieldBuilder().addBuilder(
            index, perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping.getDefaultInstance());
      }
      /**
       * <code>repeated .perfetto.protos.ShellHandlerMapping mapping = 1;</code>
       */
      public java.util.List<perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping.Builder> 
           getMappingBuilderList() {
        return getMappingFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping, perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping.Builder, perfetto.protos.ShellTransitionOuterClass.ShellHandlerMappingOrBuilder> 
          getMappingFieldBuilder() {
        if (mappingBuilder_ == null) {
          mappingBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping, perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping.Builder, perfetto.protos.ShellTransitionOuterClass.ShellHandlerMappingOrBuilder>(
                  mapping_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          mapping_ = null;
        }
        return mappingBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:perfetto.protos.ShellHandlerMappings)
    }

    // @@protoc_insertion_point(class_scope:perfetto.protos.ShellHandlerMappings)
    private static final perfetto.protos.ShellTransitionOuterClass.ShellHandlerMappings DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new perfetto.protos.ShellTransitionOuterClass.ShellHandlerMappings();
    }

    public static perfetto.protos.ShellTransitionOuterClass.ShellHandlerMappings getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ShellHandlerMappings>
        PARSER = new com.google.protobuf.AbstractParser<ShellHandlerMappings>() {
      @java.lang.Override
      public ShellHandlerMappings parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ShellHandlerMappings> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ShellHandlerMappings> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public perfetto.protos.ShellTransitionOuterClass.ShellHandlerMappings getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ShellHandlerMappingOrBuilder extends
      // @@protoc_insertion_point(interface_extends:perfetto.protos.ShellHandlerMapping)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The id of the handler used in the ShellTransition message.
     * </pre>
     *
     * <code>optional int32 id = 1;</code>
     * @return Whether the id field is set.
     */
    boolean hasId();
    /**
     * <pre>
     * The id of the handler used in the ShellTransition message.
     * </pre>
     *
     * <code>optional int32 id = 1;</code>
     * @return The id.
     */
    int getId();

    /**
     * <pre>
     * A human readable and meaningful string representation of the handler.
     * </pre>
     *
     * <code>optional string name = 2;</code>
     * @return Whether the name field is set.
     */
    boolean hasName();
    /**
     * <pre>
     * A human readable and meaningful string representation of the handler.
     * </pre>
     *
     * <code>optional string name = 2;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <pre>
     * A human readable and meaningful string representation of the handler.
     * </pre>
     *
     * <code>optional string name = 2;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();
  }
  /**
   * Protobuf type {@code perfetto.protos.ShellHandlerMapping}
   */
  public static final class ShellHandlerMapping extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:perfetto.protos.ShellHandlerMapping)
      ShellHandlerMappingOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 3,
        /* suffix= */ "",
        ShellHandlerMapping.class.getName());
    }
    // Use ShellHandlerMapping.newBuilder() to construct.
    private ShellHandlerMapping(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private ShellHandlerMapping() {
      name_ = "";
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return perfetto.protos.ShellTransitionOuterClass.internal_static_perfetto_protos_ShellHandlerMapping_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return perfetto.protos.ShellTransitionOuterClass.internal_static_perfetto_protos_ShellHandlerMapping_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping.class, perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping.Builder.class);
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_ = 0;
    /**
     * <pre>
     * The id of the handler used in the ShellTransition message.
     * </pre>
     *
     * <code>optional int32 id = 1;</code>
     * @return Whether the id field is set.
     */
    @java.lang.Override
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The id of the handler used in the ShellTransition message.
     * </pre>
     *
     * <code>optional int32 id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public int getId() {
      return id_;
    }

    public static final int NAME_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object name_ = "";
    /**
     * <pre>
     * A human readable and meaningful string representation of the handler.
     * </pre>
     *
     * <code>optional string name = 2;</code>
     * @return Whether the name field is set.
     */
    @java.lang.Override
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * A human readable and meaningful string representation of the handler.
     * </pre>
     *
     * <code>optional string name = 2;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * A human readable and meaningful string representation of the handler.
     * </pre>
     *
     * <code>optional string name = 2;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, name_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, name_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping)) {
        return super.equals(obj);
      }
      perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping other = (perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping) obj;

      if (hasId() != other.hasId()) return false;
      if (hasId()) {
        if (getId()
            != other.getId()) return false;
      }
      if (hasName() != other.hasName()) return false;
      if (hasName()) {
        if (!getName()
            .equals(other.getName())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasId()) {
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + getId();
      }
      if (hasName()) {
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code perfetto.protos.ShellHandlerMapping}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:perfetto.protos.ShellHandlerMapping)
        perfetto.protos.ShellTransitionOuterClass.ShellHandlerMappingOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.ShellTransitionOuterClass.internal_static_perfetto_protos_ShellHandlerMapping_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.ShellTransitionOuterClass.internal_static_perfetto_protos_ShellHandlerMapping_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping.class, perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping.Builder.class);
      }

      // Construct using perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        id_ = 0;
        name_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return perfetto.protos.ShellTransitionOuterClass.internal_static_perfetto_protos_ShellHandlerMapping_descriptor;
      }

      @java.lang.Override
      public perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping getDefaultInstanceForType() {
        return perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping.getDefaultInstance();
      }

      @java.lang.Override
      public perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping build() {
        perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping buildPartial() {
        perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping result = new perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.id_ = id_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.name_ = name_;
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping) {
          return mergeFrom((perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping other) {
        if (other == perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasName()) {
          name_ = other.name_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                id_ = input.readInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                name_ = input.readBytes();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int id_ ;
      /**
       * <pre>
       * The id of the handler used in the ShellTransition message.
       * </pre>
       *
       * <code>optional int32 id = 1;</code>
       * @return Whether the id field is set.
       */
      @java.lang.Override
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * The id of the handler used in the ShellTransition message.
       * </pre>
       *
       * <code>optional int32 id = 1;</code>
       * @return The id.
       */
      @java.lang.Override
      public int getId() {
        return id_;
      }
      /**
       * <pre>
       * The id of the handler used in the ShellTransition message.
       * </pre>
       *
       * <code>optional int32 id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(int value) {

        id_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The id of the handler used in the ShellTransition message.
       * </pre>
       *
       * <code>optional int32 id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * A human readable and meaningful string representation of the handler.
       * </pre>
       *
       * <code>optional string name = 2;</code>
       * @return Whether the name field is set.
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * A human readable and meaningful string representation of the handler.
       * </pre>
       *
       * <code>optional string name = 2;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * A human readable and meaningful string representation of the handler.
       * </pre>
       *
       * <code>optional string name = 2;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * A human readable and meaningful string representation of the handler.
       * </pre>
       *
       * <code>optional string name = 2;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        name_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A human readable and meaningful string representation of the handler.
       * </pre>
       *
       * <code>optional string name = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        name_ = getDefaultInstance().getName();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * A human readable and meaningful string representation of the handler.
       * </pre>
       *
       * <code>optional string name = 2;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        name_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:perfetto.protos.ShellHandlerMapping)
    }

    // @@protoc_insertion_point(class_scope:perfetto.protos.ShellHandlerMapping)
    private static final perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping();
    }

    public static perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ShellHandlerMapping>
        PARSER = new com.google.protobuf.AbstractParser<ShellHandlerMapping>() {
      @java.lang.Override
      public ShellHandlerMapping parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ShellHandlerMapping> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ShellHandlerMapping> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public perfetto.protos.ShellTransitionOuterClass.ShellHandlerMapping getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_ShellTransition_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_perfetto_protos_ShellTransition_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_ShellTransition_Target_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_perfetto_protos_ShellTransition_Target_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_ShellHandlerMappings_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_perfetto_protos_ShellHandlerMappings_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_ShellHandlerMapping_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_perfetto_protos_ShellHandlerMapping_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n4protos/perfetto/trace/android/shell_tr" +
      "ansition.proto\022\017perfetto.protos\"\231\004\n\017Shel" +
      "lTransition\022\n\n\002id\030\001 \001(\005\022\026\n\016create_time_n" +
      "s\030\002 \001(\003\022\024\n\014send_time_ns\030\003 \001(\003\022\030\n\020dispatc" +
      "h_time_ns\030\004 \001(\003\022\025\n\rmerge_time_ns\030\005 \001(\003\022\035" +
      "\n\025merge_request_time_ns\030\006 \001(\003\022\033\n\023shell_a" +
      "bort_time_ns\030\007 \001(\003\022\030\n\020wm_abort_time_ns\030\010" +
      " \001(\003\022\026\n\016finish_time_ns\030\t \001(\003\022\034\n\024start_tr" +
      "ansaction_id\030\n \001(\004\022\035\n\025finish_transaction" +
      "_id\030\013 \001(\004\022\017\n\007handler\030\014 \001(\005\022\014\n\004type\030\r \001(\005" +
      "\0228\n\007targets\030\016 \003(\0132\'.perfetto.protos.Shel" +
      "lTransition.Target\022\024\n\014merge_target\030\017 \001(\005" +
      "\022\r\n\005flags\030\020 \001(\005\022&\n\036starting_window_remov" +
      "e_time_ns\030\021 \001(\003\032J\n\006Target\022\014\n\004mode\030\001 \001(\005\022" +
      "\020\n\010layer_id\030\002 \001(\005\022\021\n\twindow_id\030\003 \001(\005\022\r\n\005" +
      "flags\030\004 \001(\005\"M\n\024ShellHandlerMappings\0225\n\007m" +
      "apping\030\001 \003(\0132$.perfetto.protos.ShellHand" +
      "lerMapping\"/\n\023ShellHandlerMapping\022\n\n\002id\030" +
      "\001 \001(\005\022\014\n\004name\030\002 \001(\t"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_perfetto_protos_ShellTransition_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_perfetto_protos_ShellTransition_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_perfetto_protos_ShellTransition_descriptor,
        new java.lang.String[] { "Id", "CreateTimeNs", "SendTimeNs", "DispatchTimeNs", "MergeTimeNs", "MergeRequestTimeNs", "ShellAbortTimeNs", "WmAbortTimeNs", "FinishTimeNs", "StartTransactionId", "FinishTransactionId", "Handler", "Type", "Targets", "MergeTarget", "Flags", "StartingWindowRemoveTimeNs", });
    internal_static_perfetto_protos_ShellTransition_Target_descriptor =
      internal_static_perfetto_protos_ShellTransition_descriptor.getNestedTypes().get(0);
    internal_static_perfetto_protos_ShellTransition_Target_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_perfetto_protos_ShellTransition_Target_descriptor,
        new java.lang.String[] { "Mode", "LayerId", "WindowId", "Flags", });
    internal_static_perfetto_protos_ShellHandlerMappings_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_perfetto_protos_ShellHandlerMappings_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_perfetto_protos_ShellHandlerMappings_descriptor,
        new java.lang.String[] { "Mapping", });
    internal_static_perfetto_protos_ShellHandlerMapping_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_perfetto_protos_ShellHandlerMapping_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_perfetto_protos_ShellHandlerMapping_descriptor,
        new java.lang.String[] { "Id", "Name", });
    descriptor.resolveAllFeaturesImmutable();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
