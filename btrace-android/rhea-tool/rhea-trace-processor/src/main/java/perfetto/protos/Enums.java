// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: protos/perfetto/trace/android/view/enums.proto
// Protobuf Java Version: 4.29.3

package perfetto.protos;

public final class Enums {
  private Enums() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 3,
      /* suffix= */ "",
      Enums.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * Screen states, primarily used by android/view/Display.java.
   * </pre>
   *
   * Protobuf enum {@code perfetto.protos.DisplayStateEnum}
   */
  public enum DisplayStateEnum
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * The display state is unknown.
     * </pre>
     *
     * <code>DISPLAY_STATE_UNKNOWN = 0;</code>
     */
    DISPLAY_STATE_UNKNOWN(0),
    /**
     * <pre>
     * The display state is off.
     * </pre>
     *
     * <code>DISPLAY_STATE_OFF = 1;</code>
     */
    DISPLAY_STATE_OFF(1),
    /**
     * <pre>
     * The display state is on.
     * </pre>
     *
     * <code>DISPLAY_STATE_ON = 2;</code>
     */
    DISPLAY_STATE_ON(2),
    /**
     * <pre>
     * The display is dozing in a low power state; it is still on but is
     * optimized for showing system-provided content while the device is
     * non-interactive.
     * </pre>
     *
     * <code>DISPLAY_STATE_DOZE = 3;</code>
     */
    DISPLAY_STATE_DOZE(3),
    /**
     * <pre>
     * The display is dozing in a suspended low power state; it is still on
     * but is optimized for showing static system-provided content while the
     * device is non-interactive.
     * </pre>
     *
     * <code>DISPLAY_STATE_DOZE_SUSPEND = 4;</code>
     */
    DISPLAY_STATE_DOZE_SUSPEND(4),
    /**
     * <pre>
     * The display is on and optimized for VR mode.
     * </pre>
     *
     * <code>DISPLAY_STATE_VR = 5;</code>
     */
    DISPLAY_STATE_VR(5),
    /**
     * <pre>
     * The display is in a suspended full power state; it is still on but the
     * CPU is not updating it.
     * </pre>
     *
     * <code>DISPLAY_STATE_ON_SUSPEND = 6;</code>
     */
    DISPLAY_STATE_ON_SUSPEND(6),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 3,
        /* suffix= */ "",
        DisplayStateEnum.class.getName());
    }
    /**
     * <pre>
     * The display state is unknown.
     * </pre>
     *
     * <code>DISPLAY_STATE_UNKNOWN = 0;</code>
     */
    public static final int DISPLAY_STATE_UNKNOWN_VALUE = 0;
    /**
     * <pre>
     * The display state is off.
     * </pre>
     *
     * <code>DISPLAY_STATE_OFF = 1;</code>
     */
    public static final int DISPLAY_STATE_OFF_VALUE = 1;
    /**
     * <pre>
     * The display state is on.
     * </pre>
     *
     * <code>DISPLAY_STATE_ON = 2;</code>
     */
    public static final int DISPLAY_STATE_ON_VALUE = 2;
    /**
     * <pre>
     * The display is dozing in a low power state; it is still on but is
     * optimized for showing system-provided content while the device is
     * non-interactive.
     * </pre>
     *
     * <code>DISPLAY_STATE_DOZE = 3;</code>
     */
    public static final int DISPLAY_STATE_DOZE_VALUE = 3;
    /**
     * <pre>
     * The display is dozing in a suspended low power state; it is still on
     * but is optimized for showing static system-provided content while the
     * device is non-interactive.
     * </pre>
     *
     * <code>DISPLAY_STATE_DOZE_SUSPEND = 4;</code>
     */
    public static final int DISPLAY_STATE_DOZE_SUSPEND_VALUE = 4;
    /**
     * <pre>
     * The display is on and optimized for VR mode.
     * </pre>
     *
     * <code>DISPLAY_STATE_VR = 5;</code>
     */
    public static final int DISPLAY_STATE_VR_VALUE = 5;
    /**
     * <pre>
     * The display is in a suspended full power state; it is still on but the
     * CPU is not updating it.
     * </pre>
     *
     * <code>DISPLAY_STATE_ON_SUSPEND = 6;</code>
     */
    public static final int DISPLAY_STATE_ON_SUSPEND_VALUE = 6;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DisplayStateEnum valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DisplayStateEnum forNumber(int value) {
      switch (value) {
        case 0: return DISPLAY_STATE_UNKNOWN;
        case 1: return DISPLAY_STATE_OFF;
        case 2: return DISPLAY_STATE_ON;
        case 3: return DISPLAY_STATE_DOZE;
        case 4: return DISPLAY_STATE_DOZE_SUSPEND;
        case 5: return DISPLAY_STATE_VR;
        case 6: return DISPLAY_STATE_ON_SUSPEND;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DisplayStateEnum>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DisplayStateEnum> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DisplayStateEnum>() {
            public DisplayStateEnum findValueByNumber(int number) {
              return DisplayStateEnum.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return perfetto.protos.Enums.getDescriptor().getEnumTypes().get(0);
    }

    private static final DisplayStateEnum[] VALUES = values();

    public static DisplayStateEnum valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DisplayStateEnum(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:perfetto.protos.DisplayStateEnum)
  }

  /**
   * <pre>
   * Screen state reasons.
   * </pre>
   *
   * Protobuf enum {@code perfetto.protos.DisplayStateReason}
   */
  public enum DisplayStateReason
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * The display state reason is unknown.
     * </pre>
     *
     * <code>DISPLAY_STATE_REASON_UNKNOWN = 0;</code>
     */
    DISPLAY_STATE_REASON_UNKNOWN(0),
    /**
     * <pre>
     * The display state reason is the default policy.
     * </pre>
     *
     * <code>DISPLAY_STATE_REASON_DEFAULT_POLICY = 1;</code>
     */
    DISPLAY_STATE_REASON_DEFAULT_POLICY(1),
    /**
     * <pre>
     * The display state is caused by a draw wake lock.
     * </pre>
     *
     * <code>DISPLAY_STATE_REASON_DRAW_WAKE_LOCK = 2;</code>
     */
    DISPLAY_STATE_REASON_DRAW_WAKE_LOCK(2),
    /**
     * <pre>
     * The display state is caused by display offloading.
     * </pre>
     *
     * <code>DISPLAY_STATE_REASON_OFFLOAD = 3;</code>
     */
    DISPLAY_STATE_REASON_OFFLOAD(3),
    /**
     * <pre>
     * The display state is caused by a tilt.
     * </pre>
     *
     * <code>DISPLAY_STATE_REASON_TILT = 4;</code>
     */
    DISPLAY_STATE_REASON_TILT(4),
    /**
     * <pre>
     * The display state is caused by the dream manager.
     * </pre>
     *
     * <code>DISPLAY_STATE_REASON_DREAM_MANAGER = 5;</code>
     */
    DISPLAY_STATE_REASON_DREAM_MANAGER(5),
    /**
     * <pre>
     * The display state is caused by an input key event.
     * </pre>
     *
     * <code>DISPLAY_STATE_REASON_KEY = 6;</code>
     */
    DISPLAY_STATE_REASON_KEY(6),
    /**
     * <pre>
     * The display state is caused by an input motion event.
     * </pre>
     *
     * <code>DISPLAY_STATE_REASON_MOTION = 7;</code>
     */
    DISPLAY_STATE_REASON_MOTION(7),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 3,
        /* suffix= */ "",
        DisplayStateReason.class.getName());
    }
    /**
     * <pre>
     * The display state reason is unknown.
     * </pre>
     *
     * <code>DISPLAY_STATE_REASON_UNKNOWN = 0;</code>
     */
    public static final int DISPLAY_STATE_REASON_UNKNOWN_VALUE = 0;
    /**
     * <pre>
     * The display state reason is the default policy.
     * </pre>
     *
     * <code>DISPLAY_STATE_REASON_DEFAULT_POLICY = 1;</code>
     */
    public static final int DISPLAY_STATE_REASON_DEFAULT_POLICY_VALUE = 1;
    /**
     * <pre>
     * The display state is caused by a draw wake lock.
     * </pre>
     *
     * <code>DISPLAY_STATE_REASON_DRAW_WAKE_LOCK = 2;</code>
     */
    public static final int DISPLAY_STATE_REASON_DRAW_WAKE_LOCK_VALUE = 2;
    /**
     * <pre>
     * The display state is caused by display offloading.
     * </pre>
     *
     * <code>DISPLAY_STATE_REASON_OFFLOAD = 3;</code>
     */
    public static final int DISPLAY_STATE_REASON_OFFLOAD_VALUE = 3;
    /**
     * <pre>
     * The display state is caused by a tilt.
     * </pre>
     *
     * <code>DISPLAY_STATE_REASON_TILT = 4;</code>
     */
    public static final int DISPLAY_STATE_REASON_TILT_VALUE = 4;
    /**
     * <pre>
     * The display state is caused by the dream manager.
     * </pre>
     *
     * <code>DISPLAY_STATE_REASON_DREAM_MANAGER = 5;</code>
     */
    public static final int DISPLAY_STATE_REASON_DREAM_MANAGER_VALUE = 5;
    /**
     * <pre>
     * The display state is caused by an input key event.
     * </pre>
     *
     * <code>DISPLAY_STATE_REASON_KEY = 6;</code>
     */
    public static final int DISPLAY_STATE_REASON_KEY_VALUE = 6;
    /**
     * <pre>
     * The display state is caused by an input motion event.
     * </pre>
     *
     * <code>DISPLAY_STATE_REASON_MOTION = 7;</code>
     */
    public static final int DISPLAY_STATE_REASON_MOTION_VALUE = 7;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DisplayStateReason valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DisplayStateReason forNumber(int value) {
      switch (value) {
        case 0: return DISPLAY_STATE_REASON_UNKNOWN;
        case 1: return DISPLAY_STATE_REASON_DEFAULT_POLICY;
        case 2: return DISPLAY_STATE_REASON_DRAW_WAKE_LOCK;
        case 3: return DISPLAY_STATE_REASON_OFFLOAD;
        case 4: return DISPLAY_STATE_REASON_TILT;
        case 5: return DISPLAY_STATE_REASON_DREAM_MANAGER;
        case 6: return DISPLAY_STATE_REASON_KEY;
        case 7: return DISPLAY_STATE_REASON_MOTION;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DisplayStateReason>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DisplayStateReason> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DisplayStateReason>() {
            public DisplayStateReason findValueByNumber(int number) {
              return DisplayStateReason.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return perfetto.protos.Enums.getDescriptor().getEnumTypes().get(1);
    }

    private static final DisplayStateReason[] VALUES = values();

    public static DisplayStateReason valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DisplayStateReason(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:perfetto.protos.DisplayStateReason)
  }

  /**
   * <pre>
   * Constants found in android.view.WindowManager.
   * </pre>
   *
   * Protobuf enum {@code perfetto.protos.TransitionTypeEnum}
   */
  public enum TransitionTypeEnum
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>TRANSIT_NONE = 0;</code>
     */
    TRANSIT_NONE(0),
    /**
     * <code>TRANSIT_UNSET = -1;</code>
     */
    TRANSIT_UNSET(-1),
    /**
     * <code>TRANSIT_ACTIVITY_OPEN = 6;</code>
     */
    TRANSIT_ACTIVITY_OPEN(6),
    /**
     * <code>TRANSIT_ACTIVITY_CLOSE = 7;</code>
     */
    TRANSIT_ACTIVITY_CLOSE(7),
    /**
     * <code>TRANSIT_TASK_OPEN = 8;</code>
     */
    TRANSIT_TASK_OPEN(8),
    /**
     * <code>TRANSIT_TASK_CLOSE = 9;</code>
     */
    TRANSIT_TASK_CLOSE(9),
    /**
     * <code>TRANSIT_TASK_TO_FRONT = 10;</code>
     */
    TRANSIT_TASK_TO_FRONT(10),
    /**
     * <code>TRANSIT_TASK_TO_BACK = 11;</code>
     */
    TRANSIT_TASK_TO_BACK(11),
    /**
     * <code>TRANSIT_WALLPAPER_CLOSE = 12;</code>
     */
    TRANSIT_WALLPAPER_CLOSE(12),
    /**
     * <code>TRANSIT_WALLPAPER_OPEN = 13;</code>
     */
    TRANSIT_WALLPAPER_OPEN(13),
    /**
     * <code>TRANSIT_WALLPAPER_INTRA_OPEN = 14;</code>
     */
    TRANSIT_WALLPAPER_INTRA_OPEN(14),
    /**
     * <code>TRANSIT_WALLPAPER_INTRA_CLOSE = 15;</code>
     */
    TRANSIT_WALLPAPER_INTRA_CLOSE(15),
    /**
     * <code>TRANSIT_TASK_OPEN_BEHIND = 16;</code>
     */
    TRANSIT_TASK_OPEN_BEHIND(16),
    /**
     * <code>TRANSIT_TASK_IN_PLACE = 17;</code>
     */
    TRANSIT_TASK_IN_PLACE(17),
    /**
     * <code>TRANSIT_ACTIVITY_RELAUNCH = 18;</code>
     */
    TRANSIT_ACTIVITY_RELAUNCH(18),
    /**
     * <code>TRANSIT_DOCK_TASK_FROM_RECENTS = 19 [deprecated = true];</code>
     */
    @java.lang.Deprecated
    TRANSIT_DOCK_TASK_FROM_RECENTS(19),
    /**
     * <code>TRANSIT_KEYGUARD_GOING_AWAY = 20;</code>
     */
    TRANSIT_KEYGUARD_GOING_AWAY(20),
    /**
     * <code>TRANSIT_KEYGUARD_GOING_AWAY_ON_WALLPAPER = 21;</code>
     */
    TRANSIT_KEYGUARD_GOING_AWAY_ON_WALLPAPER(21),
    /**
     * <code>TRANSIT_KEYGUARD_OCCLUDE = 22;</code>
     */
    TRANSIT_KEYGUARD_OCCLUDE(22),
    /**
     * <code>TRANSIT_KEYGUARD_UNOCCLUDE = 23;</code>
     */
    TRANSIT_KEYGUARD_UNOCCLUDE(23),
    /**
     * <code>TRANSIT_TRANSLUCENT_ACTIVITY_OPEN = 24;</code>
     */
    TRANSIT_TRANSLUCENT_ACTIVITY_OPEN(24),
    /**
     * <code>TRANSIT_TRANSLUCENT_ACTIVITY_CLOSE = 25;</code>
     */
    TRANSIT_TRANSLUCENT_ACTIVITY_CLOSE(25),
    /**
     * <code>TRANSIT_CRASHING_ACTIVITY_CLOSE = 26;</code>
     */
    TRANSIT_CRASHING_ACTIVITY_CLOSE(26),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 3,
        /* suffix= */ "",
        TransitionTypeEnum.class.getName());
    }
    /**
     * <code>TRANSIT_NONE = 0;</code>
     */
    public static final int TRANSIT_NONE_VALUE = 0;
    /**
     * <code>TRANSIT_UNSET = -1;</code>
     */
    public static final int TRANSIT_UNSET_VALUE = -1;
    /**
     * <code>TRANSIT_ACTIVITY_OPEN = 6;</code>
     */
    public static final int TRANSIT_ACTIVITY_OPEN_VALUE = 6;
    /**
     * <code>TRANSIT_ACTIVITY_CLOSE = 7;</code>
     */
    public static final int TRANSIT_ACTIVITY_CLOSE_VALUE = 7;
    /**
     * <code>TRANSIT_TASK_OPEN = 8;</code>
     */
    public static final int TRANSIT_TASK_OPEN_VALUE = 8;
    /**
     * <code>TRANSIT_TASK_CLOSE = 9;</code>
     */
    public static final int TRANSIT_TASK_CLOSE_VALUE = 9;
    /**
     * <code>TRANSIT_TASK_TO_FRONT = 10;</code>
     */
    public static final int TRANSIT_TASK_TO_FRONT_VALUE = 10;
    /**
     * <code>TRANSIT_TASK_TO_BACK = 11;</code>
     */
    public static final int TRANSIT_TASK_TO_BACK_VALUE = 11;
    /**
     * <code>TRANSIT_WALLPAPER_CLOSE = 12;</code>
     */
    public static final int TRANSIT_WALLPAPER_CLOSE_VALUE = 12;
    /**
     * <code>TRANSIT_WALLPAPER_OPEN = 13;</code>
     */
    public static final int TRANSIT_WALLPAPER_OPEN_VALUE = 13;
    /**
     * <code>TRANSIT_WALLPAPER_INTRA_OPEN = 14;</code>
     */
    public static final int TRANSIT_WALLPAPER_INTRA_OPEN_VALUE = 14;
    /**
     * <code>TRANSIT_WALLPAPER_INTRA_CLOSE = 15;</code>
     */
    public static final int TRANSIT_WALLPAPER_INTRA_CLOSE_VALUE = 15;
    /**
     * <code>TRANSIT_TASK_OPEN_BEHIND = 16;</code>
     */
    public static final int TRANSIT_TASK_OPEN_BEHIND_VALUE = 16;
    /**
     * <code>TRANSIT_TASK_IN_PLACE = 17;</code>
     */
    public static final int TRANSIT_TASK_IN_PLACE_VALUE = 17;
    /**
     * <code>TRANSIT_ACTIVITY_RELAUNCH = 18;</code>
     */
    public static final int TRANSIT_ACTIVITY_RELAUNCH_VALUE = 18;
    /**
     * <code>TRANSIT_DOCK_TASK_FROM_RECENTS = 19 [deprecated = true];</code>
     */
    @java.lang.Deprecated public static final int TRANSIT_DOCK_TASK_FROM_RECENTS_VALUE = 19;
    /**
     * <code>TRANSIT_KEYGUARD_GOING_AWAY = 20;</code>
     */
    public static final int TRANSIT_KEYGUARD_GOING_AWAY_VALUE = 20;
    /**
     * <code>TRANSIT_KEYGUARD_GOING_AWAY_ON_WALLPAPER = 21;</code>
     */
    public static final int TRANSIT_KEYGUARD_GOING_AWAY_ON_WALLPAPER_VALUE = 21;
    /**
     * <code>TRANSIT_KEYGUARD_OCCLUDE = 22;</code>
     */
    public static final int TRANSIT_KEYGUARD_OCCLUDE_VALUE = 22;
    /**
     * <code>TRANSIT_KEYGUARD_UNOCCLUDE = 23;</code>
     */
    public static final int TRANSIT_KEYGUARD_UNOCCLUDE_VALUE = 23;
    /**
     * <code>TRANSIT_TRANSLUCENT_ACTIVITY_OPEN = 24;</code>
     */
    public static final int TRANSIT_TRANSLUCENT_ACTIVITY_OPEN_VALUE = 24;
    /**
     * <code>TRANSIT_TRANSLUCENT_ACTIVITY_CLOSE = 25;</code>
     */
    public static final int TRANSIT_TRANSLUCENT_ACTIVITY_CLOSE_VALUE = 25;
    /**
     * <code>TRANSIT_CRASHING_ACTIVITY_CLOSE = 26;</code>
     */
    public static final int TRANSIT_CRASHING_ACTIVITY_CLOSE_VALUE = 26;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TransitionTypeEnum valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static TransitionTypeEnum forNumber(int value) {
      switch (value) {
        case 0: return TRANSIT_NONE;
        case -1: return TRANSIT_UNSET;
        case 6: return TRANSIT_ACTIVITY_OPEN;
        case 7: return TRANSIT_ACTIVITY_CLOSE;
        case 8: return TRANSIT_TASK_OPEN;
        case 9: return TRANSIT_TASK_CLOSE;
        case 10: return TRANSIT_TASK_TO_FRONT;
        case 11: return TRANSIT_TASK_TO_BACK;
        case 12: return TRANSIT_WALLPAPER_CLOSE;
        case 13: return TRANSIT_WALLPAPER_OPEN;
        case 14: return TRANSIT_WALLPAPER_INTRA_OPEN;
        case 15: return TRANSIT_WALLPAPER_INTRA_CLOSE;
        case 16: return TRANSIT_TASK_OPEN_BEHIND;
        case 17: return TRANSIT_TASK_IN_PLACE;
        case 18: return TRANSIT_ACTIVITY_RELAUNCH;
        case 19: return TRANSIT_DOCK_TASK_FROM_RECENTS;
        case 20: return TRANSIT_KEYGUARD_GOING_AWAY;
        case 21: return TRANSIT_KEYGUARD_GOING_AWAY_ON_WALLPAPER;
        case 22: return TRANSIT_KEYGUARD_OCCLUDE;
        case 23: return TRANSIT_KEYGUARD_UNOCCLUDE;
        case 24: return TRANSIT_TRANSLUCENT_ACTIVITY_OPEN;
        case 25: return TRANSIT_TRANSLUCENT_ACTIVITY_CLOSE;
        case 26: return TRANSIT_CRASHING_ACTIVITY_CLOSE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TransitionTypeEnum>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TransitionTypeEnum> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TransitionTypeEnum>() {
            public TransitionTypeEnum findValueByNumber(int number) {
              return TransitionTypeEnum.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return perfetto.protos.Enums.getDescriptor().getEnumTypes().get(2);
    }

    private static final TransitionTypeEnum[] VALUES = values();

    public static TransitionTypeEnum valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TransitionTypeEnum(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:perfetto.protos.TransitionTypeEnum)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n.protos/perfetto/trace/android/view/enu" +
      "ms.proto\022\017perfetto.protos*\306\001\n\020DisplaySta" +
      "teEnum\022\031\n\025DISPLAY_STATE_UNKNOWN\020\000\022\025\n\021DIS" +
      "PLAY_STATE_OFF\020\001\022\024\n\020DISPLAY_STATE_ON\020\002\022\026" +
      "\n\022DISPLAY_STATE_DOZE\020\003\022\036\n\032DISPLAY_STATE_" +
      "DOZE_SUSPEND\020\004\022\024\n\020DISPLAY_STATE_VR\020\005\022\034\n\030" +
      "DISPLAY_STATE_ON_SUSPEND\020\006*\260\002\n\022DisplaySt" +
      "ateReason\022 \n\034DISPLAY_STATE_REASON_UNKNOW" +
      "N\020\000\022\'\n#DISPLAY_STATE_REASON_DEFAULT_POLI" +
      "CY\020\001\022\'\n#DISPLAY_STATE_REASON_DRAW_WAKE_L" +
      "OCK\020\002\022 \n\034DISPLAY_STATE_REASON_OFFLOAD\020\003\022" +
      "\035\n\031DISPLAY_STATE_REASON_TILT\020\004\022&\n\"DISPLA" +
      "Y_STATE_REASON_DREAM_MANAGER\020\005\022\034\n\030DISPLA" +
      "Y_STATE_REASON_KEY\020\006\022\037\n\033DISPLAY_STATE_RE" +
      "ASON_MOTION\020\007*\334\005\n\022TransitionTypeEnum\022\020\n\014" +
      "TRANSIT_NONE\020\000\022\032\n\rTRANSIT_UNSET\020\377\377\377\377\377\377\377\377" +
      "\377\001\022\031\n\025TRANSIT_ACTIVITY_OPEN\020\006\022\032\n\026TRANSIT" +
      "_ACTIVITY_CLOSE\020\007\022\025\n\021TRANSIT_TASK_OPEN\020\010" +
      "\022\026\n\022TRANSIT_TASK_CLOSE\020\t\022\031\n\025TRANSIT_TASK" +
      "_TO_FRONT\020\n\022\030\n\024TRANSIT_TASK_TO_BACK\020\013\022\033\n" +
      "\027TRANSIT_WALLPAPER_CLOSE\020\014\022\032\n\026TRANSIT_WA" +
      "LLPAPER_OPEN\020\r\022 \n\034TRANSIT_WALLPAPER_INTR" +
      "A_OPEN\020\016\022!\n\035TRANSIT_WALLPAPER_INTRA_CLOS" +
      "E\020\017\022\034\n\030TRANSIT_TASK_OPEN_BEHIND\020\020\022\031\n\025TRA" +
      "NSIT_TASK_IN_PLACE\020\021\022\035\n\031TRANSIT_ACTIVITY" +
      "_RELAUNCH\020\022\022&\n\036TRANSIT_DOCK_TASK_FROM_RE" +
      "CENTS\020\023\032\002\010\001\022\037\n\033TRANSIT_KEYGUARD_GOING_AW" +
      "AY\020\024\022,\n(TRANSIT_KEYGUARD_GOING_AWAY_ON_W" +
      "ALLPAPER\020\025\022\034\n\030TRANSIT_KEYGUARD_OCCLUDE\020\026" +
      "\022\036\n\032TRANSIT_KEYGUARD_UNOCCLUDE\020\027\022%\n!TRAN" +
      "SIT_TRANSLUCENT_ACTIVITY_OPEN\020\030\022&\n\"TRANS" +
      "IT_TRANSLUCENT_ACTIVITY_CLOSE\020\031\022#\n\037TRANS" +
      "IT_CRASHING_ACTIVITY_CLOSE\020\032"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    descriptor.resolveAllFeaturesImmutable();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
