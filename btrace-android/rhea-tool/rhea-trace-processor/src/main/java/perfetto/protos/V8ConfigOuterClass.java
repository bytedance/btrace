// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: protos/perfetto/config/chrome/v8_config.proto
// Protobuf Java Version: 4.29.3

package perfetto.protos;

public final class V8ConfigOuterClass {
  private V8ConfigOuterClass() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 3,
      /* suffix= */ "",
      V8ConfigOuterClass.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface V8ConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:perfetto.protos.V8Config)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Whether to log the actual content of scripts (e.g. content of the JS file
     * that was compiled to generate code).
     * ATTENTION: This could considerably increase the size of the resuling trace
     * file.
     * </pre>
     *
     * <code>optional bool log_script_sources = 1;</code>
     * @return Whether the logScriptSources field is set.
     */
    boolean hasLogScriptSources();
    /**
     * <pre>
     * Whether to log the actual content of scripts (e.g. content of the JS file
     * that was compiled to generate code).
     * ATTENTION: This could considerably increase the size of the resuling trace
     * file.
     * </pre>
     *
     * <code>optional bool log_script_sources = 1;</code>
     * @return The logScriptSources.
     */
    boolean getLogScriptSources();

    /**
     * <pre>
     * Whether to log the generated code for jitted functions (machine code or
     * bytecode).
     * ATTENTION: This could considerably increase the size of the resuling trace
     * file.
     * </pre>
     *
     * <code>optional bool log_instructions = 2;</code>
     * @return Whether the logInstructions field is set.
     */
    boolean hasLogInstructions();
    /**
     * <pre>
     * Whether to log the generated code for jitted functions (machine code or
     * bytecode).
     * ATTENTION: This could considerably increase the size of the resuling trace
     * file.
     * </pre>
     *
     * <code>optional bool log_instructions = 2;</code>
     * @return The logInstructions.
     */
    boolean getLogInstructions();
  }
  /**
   * Protobuf type {@code perfetto.protos.V8Config}
   */
  public static final class V8Config extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:perfetto.protos.V8Config)
      V8ConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 3,
        /* suffix= */ "",
        V8Config.class.getName());
    }
    // Use V8Config.newBuilder() to construct.
    private V8Config(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private V8Config() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return perfetto.protos.V8ConfigOuterClass.internal_static_perfetto_protos_V8Config_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return perfetto.protos.V8ConfigOuterClass.internal_static_perfetto_protos_V8Config_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              perfetto.protos.V8ConfigOuterClass.V8Config.class, perfetto.protos.V8ConfigOuterClass.V8Config.Builder.class);
    }

    private int bitField0_;
    public static final int LOG_SCRIPT_SOURCES_FIELD_NUMBER = 1;
    private boolean logScriptSources_ = false;
    /**
     * <pre>
     * Whether to log the actual content of scripts (e.g. content of the JS file
     * that was compiled to generate code).
     * ATTENTION: This could considerably increase the size of the resuling trace
     * file.
     * </pre>
     *
     * <code>optional bool log_script_sources = 1;</code>
     * @return Whether the logScriptSources field is set.
     */
    @java.lang.Override
    public boolean hasLogScriptSources() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Whether to log the actual content of scripts (e.g. content of the JS file
     * that was compiled to generate code).
     * ATTENTION: This could considerably increase the size of the resuling trace
     * file.
     * </pre>
     *
     * <code>optional bool log_script_sources = 1;</code>
     * @return The logScriptSources.
     */
    @java.lang.Override
    public boolean getLogScriptSources() {
      return logScriptSources_;
    }

    public static final int LOG_INSTRUCTIONS_FIELD_NUMBER = 2;
    private boolean logInstructions_ = false;
    /**
     * <pre>
     * Whether to log the generated code for jitted functions (machine code or
     * bytecode).
     * ATTENTION: This could considerably increase the size of the resuling trace
     * file.
     * </pre>
     *
     * <code>optional bool log_instructions = 2;</code>
     * @return Whether the logInstructions field is set.
     */
    @java.lang.Override
    public boolean hasLogInstructions() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Whether to log the generated code for jitted functions (machine code or
     * bytecode).
     * ATTENTION: This could considerably increase the size of the resuling trace
     * file.
     * </pre>
     *
     * <code>optional bool log_instructions = 2;</code>
     * @return The logInstructions.
     */
    @java.lang.Override
    public boolean getLogInstructions() {
      return logInstructions_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeBool(1, logScriptSources_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeBool(2, logInstructions_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, logScriptSources_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, logInstructions_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof perfetto.protos.V8ConfigOuterClass.V8Config)) {
        return super.equals(obj);
      }
      perfetto.protos.V8ConfigOuterClass.V8Config other = (perfetto.protos.V8ConfigOuterClass.V8Config) obj;

      if (hasLogScriptSources() != other.hasLogScriptSources()) return false;
      if (hasLogScriptSources()) {
        if (getLogScriptSources()
            != other.getLogScriptSources()) return false;
      }
      if (hasLogInstructions() != other.hasLogInstructions()) return false;
      if (hasLogInstructions()) {
        if (getLogInstructions()
            != other.getLogInstructions()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasLogScriptSources()) {
        hash = (37 * hash) + LOG_SCRIPT_SOURCES_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getLogScriptSources());
      }
      if (hasLogInstructions()) {
        hash = (37 * hash) + LOG_INSTRUCTIONS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getLogInstructions());
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static perfetto.protos.V8ConfigOuterClass.V8Config parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.V8ConfigOuterClass.V8Config parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.V8ConfigOuterClass.V8Config parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.V8ConfigOuterClass.V8Config parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.V8ConfigOuterClass.V8Config parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.V8ConfigOuterClass.V8Config parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.V8ConfigOuterClass.V8Config parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.V8ConfigOuterClass.V8Config parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static perfetto.protos.V8ConfigOuterClass.V8Config parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static perfetto.protos.V8ConfigOuterClass.V8Config parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.V8ConfigOuterClass.V8Config parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.V8ConfigOuterClass.V8Config parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(perfetto.protos.V8ConfigOuterClass.V8Config prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code perfetto.protos.V8Config}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:perfetto.protos.V8Config)
        perfetto.protos.V8ConfigOuterClass.V8ConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.V8ConfigOuterClass.internal_static_perfetto_protos_V8Config_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.V8ConfigOuterClass.internal_static_perfetto_protos_V8Config_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.V8ConfigOuterClass.V8Config.class, perfetto.protos.V8ConfigOuterClass.V8Config.Builder.class);
      }

      // Construct using perfetto.protos.V8ConfigOuterClass.V8Config.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        logScriptSources_ = false;
        logInstructions_ = false;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return perfetto.protos.V8ConfigOuterClass.internal_static_perfetto_protos_V8Config_descriptor;
      }

      @java.lang.Override
      public perfetto.protos.V8ConfigOuterClass.V8Config getDefaultInstanceForType() {
        return perfetto.protos.V8ConfigOuterClass.V8Config.getDefaultInstance();
      }

      @java.lang.Override
      public perfetto.protos.V8ConfigOuterClass.V8Config build() {
        perfetto.protos.V8ConfigOuterClass.V8Config result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public perfetto.protos.V8ConfigOuterClass.V8Config buildPartial() {
        perfetto.protos.V8ConfigOuterClass.V8Config result = new perfetto.protos.V8ConfigOuterClass.V8Config(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(perfetto.protos.V8ConfigOuterClass.V8Config result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.logScriptSources_ = logScriptSources_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.logInstructions_ = logInstructions_;
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof perfetto.protos.V8ConfigOuterClass.V8Config) {
          return mergeFrom((perfetto.protos.V8ConfigOuterClass.V8Config)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(perfetto.protos.V8ConfigOuterClass.V8Config other) {
        if (other == perfetto.protos.V8ConfigOuterClass.V8Config.getDefaultInstance()) return this;
        if (other.hasLogScriptSources()) {
          setLogScriptSources(other.getLogScriptSources());
        }
        if (other.hasLogInstructions()) {
          setLogInstructions(other.getLogInstructions());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                logScriptSources_ = input.readBool();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                logInstructions_ = input.readBool();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private boolean logScriptSources_ ;
      /**
       * <pre>
       * Whether to log the actual content of scripts (e.g. content of the JS file
       * that was compiled to generate code).
       * ATTENTION: This could considerably increase the size of the resuling trace
       * file.
       * </pre>
       *
       * <code>optional bool log_script_sources = 1;</code>
       * @return Whether the logScriptSources field is set.
       */
      @java.lang.Override
      public boolean hasLogScriptSources() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Whether to log the actual content of scripts (e.g. content of the JS file
       * that was compiled to generate code).
       * ATTENTION: This could considerably increase the size of the resuling trace
       * file.
       * </pre>
       *
       * <code>optional bool log_script_sources = 1;</code>
       * @return The logScriptSources.
       */
      @java.lang.Override
      public boolean getLogScriptSources() {
        return logScriptSources_;
      }
      /**
       * <pre>
       * Whether to log the actual content of scripts (e.g. content of the JS file
       * that was compiled to generate code).
       * ATTENTION: This could considerably increase the size of the resuling trace
       * file.
       * </pre>
       *
       * <code>optional bool log_script_sources = 1;</code>
       * @param value The logScriptSources to set.
       * @return This builder for chaining.
       */
      public Builder setLogScriptSources(boolean value) {

        logScriptSources_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Whether to log the actual content of scripts (e.g. content of the JS file
       * that was compiled to generate code).
       * ATTENTION: This could considerably increase the size of the resuling trace
       * file.
       * </pre>
       *
       * <code>optional bool log_script_sources = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearLogScriptSources() {
        bitField0_ = (bitField0_ & ~0x00000001);
        logScriptSources_ = false;
        onChanged();
        return this;
      }

      private boolean logInstructions_ ;
      /**
       * <pre>
       * Whether to log the generated code for jitted functions (machine code or
       * bytecode).
       * ATTENTION: This could considerably increase the size of the resuling trace
       * file.
       * </pre>
       *
       * <code>optional bool log_instructions = 2;</code>
       * @return Whether the logInstructions field is set.
       */
      @java.lang.Override
      public boolean hasLogInstructions() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Whether to log the generated code for jitted functions (machine code or
       * bytecode).
       * ATTENTION: This could considerably increase the size of the resuling trace
       * file.
       * </pre>
       *
       * <code>optional bool log_instructions = 2;</code>
       * @return The logInstructions.
       */
      @java.lang.Override
      public boolean getLogInstructions() {
        return logInstructions_;
      }
      /**
       * <pre>
       * Whether to log the generated code for jitted functions (machine code or
       * bytecode).
       * ATTENTION: This could considerably increase the size of the resuling trace
       * file.
       * </pre>
       *
       * <code>optional bool log_instructions = 2;</code>
       * @param value The logInstructions to set.
       * @return This builder for chaining.
       */
      public Builder setLogInstructions(boolean value) {

        logInstructions_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Whether to log the generated code for jitted functions (machine code or
       * bytecode).
       * ATTENTION: This could considerably increase the size of the resuling trace
       * file.
       * </pre>
       *
       * <code>optional bool log_instructions = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearLogInstructions() {
        bitField0_ = (bitField0_ & ~0x00000002);
        logInstructions_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:perfetto.protos.V8Config)
    }

    // @@protoc_insertion_point(class_scope:perfetto.protos.V8Config)
    private static final perfetto.protos.V8ConfigOuterClass.V8Config DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new perfetto.protos.V8ConfigOuterClass.V8Config();
    }

    public static perfetto.protos.V8ConfigOuterClass.V8Config getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<V8Config>
        PARSER = new com.google.protobuf.AbstractParser<V8Config>() {
      @java.lang.Override
      public V8Config parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<V8Config> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<V8Config> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public perfetto.protos.V8ConfigOuterClass.V8Config getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_V8Config_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_perfetto_protos_V8Config_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n-protos/perfetto/config/chrome/v8_confi" +
      "g.proto\022\017perfetto.protos\"@\n\010V8Config\022\032\n\022" +
      "log_script_sources\030\001 \001(\010\022\030\n\020log_instruct" +
      "ions\030\002 \001(\010"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_perfetto_protos_V8Config_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_perfetto_protos_V8Config_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_perfetto_protos_V8Config_descriptor,
        new java.lang.String[] { "LogScriptSources", "LogInstructions", });
    descriptor.resolveAllFeaturesImmutable();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
