// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: protos/perfetto/config/android/protolog_config.proto
// Protobuf Java Version: 4.29.3

package perfetto.protos;

public final class ProtologConfig {
  private ProtologConfig() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 3,
      /* suffix= */ "",
      ProtologConfig.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ProtoLogConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:perfetto.protos.ProtoLogConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Specified the configurations for each of the logging groups. If none is
     * specified for a group the defaults will be used.
     * </pre>
     *
     * <code>repeated .perfetto.protos.ProtoLogGroup group_overrides = 1;</code>
     */
    java.util.List<perfetto.protos.ProtologConfig.ProtoLogGroup> 
        getGroupOverridesList();
    /**
     * <pre>
     * Specified the configurations for each of the logging groups. If none is
     * specified for a group the defaults will be used.
     * </pre>
     *
     * <code>repeated .perfetto.protos.ProtoLogGroup group_overrides = 1;</code>
     */
    perfetto.protos.ProtologConfig.ProtoLogGroup getGroupOverrides(int index);
    /**
     * <pre>
     * Specified the configurations for each of the logging groups. If none is
     * specified for a group the defaults will be used.
     * </pre>
     *
     * <code>repeated .perfetto.protos.ProtoLogGroup group_overrides = 1;</code>
     */
    int getGroupOverridesCount();
    /**
     * <pre>
     * Specified the configurations for each of the logging groups. If none is
     * specified for a group the defaults will be used.
     * </pre>
     *
     * <code>repeated .perfetto.protos.ProtoLogGroup group_overrides = 1;</code>
     */
    java.util.List<? extends perfetto.protos.ProtologConfig.ProtoLogGroupOrBuilder> 
        getGroupOverridesOrBuilderList();
    /**
     * <pre>
     * Specified the configurations for each of the logging groups. If none is
     * specified for a group the defaults will be used.
     * </pre>
     *
     * <code>repeated .perfetto.protos.ProtoLogGroup group_overrides = 1;</code>
     */
    perfetto.protos.ProtologConfig.ProtoLogGroupOrBuilder getGroupOverridesOrBuilder(
        int index);

    /**
     * <pre>
     * Specified what tracing mode to use for the tracing instance.
     * </pre>
     *
     * <code>optional .perfetto.protos.ProtoLogConfig.TracingMode tracing_mode = 2;</code>
     * @return Whether the tracingMode field is set.
     */
    boolean hasTracingMode();
    /**
     * <pre>
     * Specified what tracing mode to use for the tracing instance.
     * </pre>
     *
     * <code>optional .perfetto.protos.ProtoLogConfig.TracingMode tracing_mode = 2;</code>
     * @return The tracingMode.
     */
    perfetto.protos.ProtologConfig.ProtoLogConfig.TracingMode getTracingMode();

    /**
     * <pre>
     * If set, any message with log level higher than this level (inclusive) will
     * be traced. Group overrides take precedence over this value.
     * </pre>
     *
     * <code>optional .perfetto.protos.ProtoLogLevel default_log_from_level = 3;</code>
     * @return Whether the defaultLogFromLevel field is set.
     */
    boolean hasDefaultLogFromLevel();
    /**
     * <pre>
     * If set, any message with log level higher than this level (inclusive) will
     * be traced. Group overrides take precedence over this value.
     * </pre>
     *
     * <code>optional .perfetto.protos.ProtoLogLevel default_log_from_level = 3;</code>
     * @return The defaultLogFromLevel.
     */
    perfetto.protos.ProtologCommon.ProtoLogLevel getDefaultLogFromLevel();
  }
  /**
   * <pre>
   * Custom configuration for the "android.protolog" data source.
   * ProtoLog is a logging mechanism that is intented to be more efficient than
   * logcat. This configures what logs to capture in the tracing instance.
   * </pre>
   *
   * Protobuf type {@code perfetto.protos.ProtoLogConfig}
   */
  public static final class ProtoLogConfig extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:perfetto.protos.ProtoLogConfig)
      ProtoLogConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 3,
        /* suffix= */ "",
        ProtoLogConfig.class.getName());
    }
    // Use ProtoLogConfig.newBuilder() to construct.
    private ProtoLogConfig(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private ProtoLogConfig() {
      groupOverrides_ = java.util.Collections.emptyList();
      tracingMode_ = 0;
      defaultLogFromLevel_ = 0;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return perfetto.protos.ProtologConfig.internal_static_perfetto_protos_ProtoLogConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return perfetto.protos.ProtologConfig.internal_static_perfetto_protos_ProtoLogConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              perfetto.protos.ProtologConfig.ProtoLogConfig.class, perfetto.protos.ProtologConfig.ProtoLogConfig.Builder.class);
    }

    /**
     * Protobuf enum {@code perfetto.protos.ProtoLogConfig.TracingMode}
     */
    public enum TracingMode
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * When using the DEFAULT tracing mode, only log groups and levels specified
       * in the group_overrides are traced.
       * </pre>
       *
       * <code>DEFAULT = 0;</code>
       */
      DEFAULT(0),
      /**
       * <pre>
       * When using the ENABLE_ALL tracing mode, all log groups and levels are
       * traced, unless specified in the group_overrides.
       * </pre>
       *
       * <code>ENABLE_ALL = 1;</code>
       */
      ENABLE_ALL(1),
      ;

      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 29,
          /* patch= */ 3,
          /* suffix= */ "",
          TracingMode.class.getName());
      }
      /**
       * <pre>
       * When using the DEFAULT tracing mode, only log groups and levels specified
       * in the group_overrides are traced.
       * </pre>
       *
       * <code>DEFAULT = 0;</code>
       */
      public static final int DEFAULT_VALUE = 0;
      /**
       * <pre>
       * When using the ENABLE_ALL tracing mode, all log groups and levels are
       * traced, unless specified in the group_overrides.
       * </pre>
       *
       * <code>ENABLE_ALL = 1;</code>
       */
      public static final int ENABLE_ALL_VALUE = 1;


      public final int getNumber() {
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static TracingMode valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static TracingMode forNumber(int value) {
        switch (value) {
          case 0: return DEFAULT;
          case 1: return ENABLE_ALL;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<TracingMode>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          TracingMode> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<TracingMode>() {
              public TracingMode findValueByNumber(int number) {
                return TracingMode.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return perfetto.protos.ProtologConfig.ProtoLogConfig.getDescriptor().getEnumTypes().get(0);
      }

      private static final TracingMode[] VALUES = values();

      public static TracingMode valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private TracingMode(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:perfetto.protos.ProtoLogConfig.TracingMode)
    }

    private int bitField0_;
    public static final int GROUP_OVERRIDES_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<perfetto.protos.ProtologConfig.ProtoLogGroup> groupOverrides_;
    /**
     * <pre>
     * Specified the configurations for each of the logging groups. If none is
     * specified for a group the defaults will be used.
     * </pre>
     *
     * <code>repeated .perfetto.protos.ProtoLogGroup group_overrides = 1;</code>
     */
    @java.lang.Override
    public java.util.List<perfetto.protos.ProtologConfig.ProtoLogGroup> getGroupOverridesList() {
      return groupOverrides_;
    }
    /**
     * <pre>
     * Specified the configurations for each of the logging groups. If none is
     * specified for a group the defaults will be used.
     * </pre>
     *
     * <code>repeated .perfetto.protos.ProtoLogGroup group_overrides = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends perfetto.protos.ProtologConfig.ProtoLogGroupOrBuilder> 
        getGroupOverridesOrBuilderList() {
      return groupOverrides_;
    }
    /**
     * <pre>
     * Specified the configurations for each of the logging groups. If none is
     * specified for a group the defaults will be used.
     * </pre>
     *
     * <code>repeated .perfetto.protos.ProtoLogGroup group_overrides = 1;</code>
     */
    @java.lang.Override
    public int getGroupOverridesCount() {
      return groupOverrides_.size();
    }
    /**
     * <pre>
     * Specified the configurations for each of the logging groups. If none is
     * specified for a group the defaults will be used.
     * </pre>
     *
     * <code>repeated .perfetto.protos.ProtoLogGroup group_overrides = 1;</code>
     */
    @java.lang.Override
    public perfetto.protos.ProtologConfig.ProtoLogGroup getGroupOverrides(int index) {
      return groupOverrides_.get(index);
    }
    /**
     * <pre>
     * Specified the configurations for each of the logging groups. If none is
     * specified for a group the defaults will be used.
     * </pre>
     *
     * <code>repeated .perfetto.protos.ProtoLogGroup group_overrides = 1;</code>
     */
    @java.lang.Override
    public perfetto.protos.ProtologConfig.ProtoLogGroupOrBuilder getGroupOverridesOrBuilder(
        int index) {
      return groupOverrides_.get(index);
    }

    public static final int TRACING_MODE_FIELD_NUMBER = 2;
    private int tracingMode_ = 0;
    /**
     * <pre>
     * Specified what tracing mode to use for the tracing instance.
     * </pre>
     *
     * <code>optional .perfetto.protos.ProtoLogConfig.TracingMode tracing_mode = 2;</code>
     * @return Whether the tracingMode field is set.
     */
    @java.lang.Override public boolean hasTracingMode() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Specified what tracing mode to use for the tracing instance.
     * </pre>
     *
     * <code>optional .perfetto.protos.ProtoLogConfig.TracingMode tracing_mode = 2;</code>
     * @return The tracingMode.
     */
    @java.lang.Override public perfetto.protos.ProtologConfig.ProtoLogConfig.TracingMode getTracingMode() {
      perfetto.protos.ProtologConfig.ProtoLogConfig.TracingMode result = perfetto.protos.ProtologConfig.ProtoLogConfig.TracingMode.forNumber(tracingMode_);
      return result == null ? perfetto.protos.ProtologConfig.ProtoLogConfig.TracingMode.DEFAULT : result;
    }

    public static final int DEFAULT_LOG_FROM_LEVEL_FIELD_NUMBER = 3;
    private int defaultLogFromLevel_ = 0;
    /**
     * <pre>
     * If set, any message with log level higher than this level (inclusive) will
     * be traced. Group overrides take precedence over this value.
     * </pre>
     *
     * <code>optional .perfetto.protos.ProtoLogLevel default_log_from_level = 3;</code>
     * @return Whether the defaultLogFromLevel field is set.
     */
    @java.lang.Override public boolean hasDefaultLogFromLevel() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * If set, any message with log level higher than this level (inclusive) will
     * be traced. Group overrides take precedence over this value.
     * </pre>
     *
     * <code>optional .perfetto.protos.ProtoLogLevel default_log_from_level = 3;</code>
     * @return The defaultLogFromLevel.
     */
    @java.lang.Override public perfetto.protos.ProtologCommon.ProtoLogLevel getDefaultLogFromLevel() {
      perfetto.protos.ProtologCommon.ProtoLogLevel result = perfetto.protos.ProtologCommon.ProtoLogLevel.forNumber(defaultLogFromLevel_);
      return result == null ? perfetto.protos.ProtologCommon.ProtoLogLevel.PROTOLOG_LEVEL_UNDEFINED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < groupOverrides_.size(); i++) {
        output.writeMessage(1, groupOverrides_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeEnum(2, tracingMode_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeEnum(3, defaultLogFromLevel_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < groupOverrides_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, groupOverrides_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, tracingMode_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, defaultLogFromLevel_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof perfetto.protos.ProtologConfig.ProtoLogConfig)) {
        return super.equals(obj);
      }
      perfetto.protos.ProtologConfig.ProtoLogConfig other = (perfetto.protos.ProtologConfig.ProtoLogConfig) obj;

      if (!getGroupOverridesList()
          .equals(other.getGroupOverridesList())) return false;
      if (hasTracingMode() != other.hasTracingMode()) return false;
      if (hasTracingMode()) {
        if (tracingMode_ != other.tracingMode_) return false;
      }
      if (hasDefaultLogFromLevel() != other.hasDefaultLogFromLevel()) return false;
      if (hasDefaultLogFromLevel()) {
        if (defaultLogFromLevel_ != other.defaultLogFromLevel_) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getGroupOverridesCount() > 0) {
        hash = (37 * hash) + GROUP_OVERRIDES_FIELD_NUMBER;
        hash = (53 * hash) + getGroupOverridesList().hashCode();
      }
      if (hasTracingMode()) {
        hash = (37 * hash) + TRACING_MODE_FIELD_NUMBER;
        hash = (53 * hash) + tracingMode_;
      }
      if (hasDefaultLogFromLevel()) {
        hash = (37 * hash) + DEFAULT_LOG_FROM_LEVEL_FIELD_NUMBER;
        hash = (53 * hash) + defaultLogFromLevel_;
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static perfetto.protos.ProtologConfig.ProtoLogConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.ProtologConfig.ProtoLogConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.ProtologConfig.ProtoLogConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.ProtologConfig.ProtoLogConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.ProtologConfig.ProtoLogConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.ProtologConfig.ProtoLogConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.ProtologConfig.ProtoLogConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.ProtologConfig.ProtoLogConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static perfetto.protos.ProtologConfig.ProtoLogConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static perfetto.protos.ProtologConfig.ProtoLogConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.ProtologConfig.ProtoLogConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.ProtologConfig.ProtoLogConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(perfetto.protos.ProtologConfig.ProtoLogConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Custom configuration for the "android.protolog" data source.
     * ProtoLog is a logging mechanism that is intented to be more efficient than
     * logcat. This configures what logs to capture in the tracing instance.
     * </pre>
     *
     * Protobuf type {@code perfetto.protos.ProtoLogConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:perfetto.protos.ProtoLogConfig)
        perfetto.protos.ProtologConfig.ProtoLogConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.ProtologConfig.internal_static_perfetto_protos_ProtoLogConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.ProtologConfig.internal_static_perfetto_protos_ProtoLogConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.ProtologConfig.ProtoLogConfig.class, perfetto.protos.ProtologConfig.ProtoLogConfig.Builder.class);
      }

      // Construct using perfetto.protos.ProtologConfig.ProtoLogConfig.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (groupOverridesBuilder_ == null) {
          groupOverrides_ = java.util.Collections.emptyList();
        } else {
          groupOverrides_ = null;
          groupOverridesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        tracingMode_ = 0;
        defaultLogFromLevel_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return perfetto.protos.ProtologConfig.internal_static_perfetto_protos_ProtoLogConfig_descriptor;
      }

      @java.lang.Override
      public perfetto.protos.ProtologConfig.ProtoLogConfig getDefaultInstanceForType() {
        return perfetto.protos.ProtologConfig.ProtoLogConfig.getDefaultInstance();
      }

      @java.lang.Override
      public perfetto.protos.ProtologConfig.ProtoLogConfig build() {
        perfetto.protos.ProtologConfig.ProtoLogConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public perfetto.protos.ProtologConfig.ProtoLogConfig buildPartial() {
        perfetto.protos.ProtologConfig.ProtoLogConfig result = new perfetto.protos.ProtologConfig.ProtoLogConfig(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(perfetto.protos.ProtologConfig.ProtoLogConfig result) {
        if (groupOverridesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            groupOverrides_ = java.util.Collections.unmodifiableList(groupOverrides_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.groupOverrides_ = groupOverrides_;
        } else {
          result.groupOverrides_ = groupOverridesBuilder_.build();
        }
      }

      private void buildPartial0(perfetto.protos.ProtologConfig.ProtoLogConfig result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.tracingMode_ = tracingMode_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.defaultLogFromLevel_ = defaultLogFromLevel_;
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof perfetto.protos.ProtologConfig.ProtoLogConfig) {
          return mergeFrom((perfetto.protos.ProtologConfig.ProtoLogConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(perfetto.protos.ProtologConfig.ProtoLogConfig other) {
        if (other == perfetto.protos.ProtologConfig.ProtoLogConfig.getDefaultInstance()) return this;
        if (groupOverridesBuilder_ == null) {
          if (!other.groupOverrides_.isEmpty()) {
            if (groupOverrides_.isEmpty()) {
              groupOverrides_ = other.groupOverrides_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureGroupOverridesIsMutable();
              groupOverrides_.addAll(other.groupOverrides_);
            }
            onChanged();
          }
        } else {
          if (!other.groupOverrides_.isEmpty()) {
            if (groupOverridesBuilder_.isEmpty()) {
              groupOverridesBuilder_.dispose();
              groupOverridesBuilder_ = null;
              groupOverrides_ = other.groupOverrides_;
              bitField0_ = (bitField0_ & ~0x00000001);
              groupOverridesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getGroupOverridesFieldBuilder() : null;
            } else {
              groupOverridesBuilder_.addAllMessages(other.groupOverrides_);
            }
          }
        }
        if (other.hasTracingMode()) {
          setTracingMode(other.getTracingMode());
        }
        if (other.hasDefaultLogFromLevel()) {
          setDefaultLogFromLevel(other.getDefaultLogFromLevel());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                perfetto.protos.ProtologConfig.ProtoLogGroup m =
                    input.readMessage(
                        perfetto.protos.ProtologConfig.ProtoLogGroup.parser(),
                        extensionRegistry);
                if (groupOverridesBuilder_ == null) {
                  ensureGroupOverridesIsMutable();
                  groupOverrides_.add(m);
                } else {
                  groupOverridesBuilder_.addMessage(m);
                }
                break;
              } // case 10
              case 16: {
                int tmpRaw = input.readEnum();
                perfetto.protos.ProtologConfig.ProtoLogConfig.TracingMode tmpValue =
                    perfetto.protos.ProtologConfig.ProtoLogConfig.TracingMode.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(2, tmpRaw);
                } else {
                  tracingMode_ = tmpRaw;
                  bitField0_ |= 0x00000002;
                }
                break;
              } // case 16
              case 24: {
                int tmpRaw = input.readEnum();
                perfetto.protos.ProtologCommon.ProtoLogLevel tmpValue =
                    perfetto.protos.ProtologCommon.ProtoLogLevel.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(3, tmpRaw);
                } else {
                  defaultLogFromLevel_ = tmpRaw;
                  bitField0_ |= 0x00000004;
                }
                break;
              } // case 24
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<perfetto.protos.ProtologConfig.ProtoLogGroup> groupOverrides_ =
        java.util.Collections.emptyList();
      private void ensureGroupOverridesIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          groupOverrides_ = new java.util.ArrayList<perfetto.protos.ProtologConfig.ProtoLogGroup>(groupOverrides_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          perfetto.protos.ProtologConfig.ProtoLogGroup, perfetto.protos.ProtologConfig.ProtoLogGroup.Builder, perfetto.protos.ProtologConfig.ProtoLogGroupOrBuilder> groupOverridesBuilder_;

      /**
       * <pre>
       * Specified the configurations for each of the logging groups. If none is
       * specified for a group the defaults will be used.
       * </pre>
       *
       * <code>repeated .perfetto.protos.ProtoLogGroup group_overrides = 1;</code>
       */
      public java.util.List<perfetto.protos.ProtologConfig.ProtoLogGroup> getGroupOverridesList() {
        if (groupOverridesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(groupOverrides_);
        } else {
          return groupOverridesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Specified the configurations for each of the logging groups. If none is
       * specified for a group the defaults will be used.
       * </pre>
       *
       * <code>repeated .perfetto.protos.ProtoLogGroup group_overrides = 1;</code>
       */
      public int getGroupOverridesCount() {
        if (groupOverridesBuilder_ == null) {
          return groupOverrides_.size();
        } else {
          return groupOverridesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Specified the configurations for each of the logging groups. If none is
       * specified for a group the defaults will be used.
       * </pre>
       *
       * <code>repeated .perfetto.protos.ProtoLogGroup group_overrides = 1;</code>
       */
      public perfetto.protos.ProtologConfig.ProtoLogGroup getGroupOverrides(int index) {
        if (groupOverridesBuilder_ == null) {
          return groupOverrides_.get(index);
        } else {
          return groupOverridesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Specified the configurations for each of the logging groups. If none is
       * specified for a group the defaults will be used.
       * </pre>
       *
       * <code>repeated .perfetto.protos.ProtoLogGroup group_overrides = 1;</code>
       */
      public Builder setGroupOverrides(
          int index, perfetto.protos.ProtologConfig.ProtoLogGroup value) {
        if (groupOverridesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGroupOverridesIsMutable();
          groupOverrides_.set(index, value);
          onChanged();
        } else {
          groupOverridesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Specified the configurations for each of the logging groups. If none is
       * specified for a group the defaults will be used.
       * </pre>
       *
       * <code>repeated .perfetto.protos.ProtoLogGroup group_overrides = 1;</code>
       */
      public Builder setGroupOverrides(
          int index, perfetto.protos.ProtologConfig.ProtoLogGroup.Builder builderForValue) {
        if (groupOverridesBuilder_ == null) {
          ensureGroupOverridesIsMutable();
          groupOverrides_.set(index, builderForValue.build());
          onChanged();
        } else {
          groupOverridesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Specified the configurations for each of the logging groups. If none is
       * specified for a group the defaults will be used.
       * </pre>
       *
       * <code>repeated .perfetto.protos.ProtoLogGroup group_overrides = 1;</code>
       */
      public Builder addGroupOverrides(perfetto.protos.ProtologConfig.ProtoLogGroup value) {
        if (groupOverridesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGroupOverridesIsMutable();
          groupOverrides_.add(value);
          onChanged();
        } else {
          groupOverridesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Specified the configurations for each of the logging groups. If none is
       * specified for a group the defaults will be used.
       * </pre>
       *
       * <code>repeated .perfetto.protos.ProtoLogGroup group_overrides = 1;</code>
       */
      public Builder addGroupOverrides(
          int index, perfetto.protos.ProtologConfig.ProtoLogGroup value) {
        if (groupOverridesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGroupOverridesIsMutable();
          groupOverrides_.add(index, value);
          onChanged();
        } else {
          groupOverridesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Specified the configurations for each of the logging groups. If none is
       * specified for a group the defaults will be used.
       * </pre>
       *
       * <code>repeated .perfetto.protos.ProtoLogGroup group_overrides = 1;</code>
       */
      public Builder addGroupOverrides(
          perfetto.protos.ProtologConfig.ProtoLogGroup.Builder builderForValue) {
        if (groupOverridesBuilder_ == null) {
          ensureGroupOverridesIsMutable();
          groupOverrides_.add(builderForValue.build());
          onChanged();
        } else {
          groupOverridesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Specified the configurations for each of the logging groups. If none is
       * specified for a group the defaults will be used.
       * </pre>
       *
       * <code>repeated .perfetto.protos.ProtoLogGroup group_overrides = 1;</code>
       */
      public Builder addGroupOverrides(
          int index, perfetto.protos.ProtologConfig.ProtoLogGroup.Builder builderForValue) {
        if (groupOverridesBuilder_ == null) {
          ensureGroupOverridesIsMutable();
          groupOverrides_.add(index, builderForValue.build());
          onChanged();
        } else {
          groupOverridesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Specified the configurations for each of the logging groups. If none is
       * specified for a group the defaults will be used.
       * </pre>
       *
       * <code>repeated .perfetto.protos.ProtoLogGroup group_overrides = 1;</code>
       */
      public Builder addAllGroupOverrides(
          java.lang.Iterable<? extends perfetto.protos.ProtologConfig.ProtoLogGroup> values) {
        if (groupOverridesBuilder_ == null) {
          ensureGroupOverridesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, groupOverrides_);
          onChanged();
        } else {
          groupOverridesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Specified the configurations for each of the logging groups. If none is
       * specified for a group the defaults will be used.
       * </pre>
       *
       * <code>repeated .perfetto.protos.ProtoLogGroup group_overrides = 1;</code>
       */
      public Builder clearGroupOverrides() {
        if (groupOverridesBuilder_ == null) {
          groupOverrides_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          groupOverridesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Specified the configurations for each of the logging groups. If none is
       * specified for a group the defaults will be used.
       * </pre>
       *
       * <code>repeated .perfetto.protos.ProtoLogGroup group_overrides = 1;</code>
       */
      public Builder removeGroupOverrides(int index) {
        if (groupOverridesBuilder_ == null) {
          ensureGroupOverridesIsMutable();
          groupOverrides_.remove(index);
          onChanged();
        } else {
          groupOverridesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Specified the configurations for each of the logging groups. If none is
       * specified for a group the defaults will be used.
       * </pre>
       *
       * <code>repeated .perfetto.protos.ProtoLogGroup group_overrides = 1;</code>
       */
      public perfetto.protos.ProtologConfig.ProtoLogGroup.Builder getGroupOverridesBuilder(
          int index) {
        return getGroupOverridesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Specified the configurations for each of the logging groups. If none is
       * specified for a group the defaults will be used.
       * </pre>
       *
       * <code>repeated .perfetto.protos.ProtoLogGroup group_overrides = 1;</code>
       */
      public perfetto.protos.ProtologConfig.ProtoLogGroupOrBuilder getGroupOverridesOrBuilder(
          int index) {
        if (groupOverridesBuilder_ == null) {
          return groupOverrides_.get(index);  } else {
          return groupOverridesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Specified the configurations for each of the logging groups. If none is
       * specified for a group the defaults will be used.
       * </pre>
       *
       * <code>repeated .perfetto.protos.ProtoLogGroup group_overrides = 1;</code>
       */
      public java.util.List<? extends perfetto.protos.ProtologConfig.ProtoLogGroupOrBuilder> 
           getGroupOverridesOrBuilderList() {
        if (groupOverridesBuilder_ != null) {
          return groupOverridesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(groupOverrides_);
        }
      }
      /**
       * <pre>
       * Specified the configurations for each of the logging groups. If none is
       * specified for a group the defaults will be used.
       * </pre>
       *
       * <code>repeated .perfetto.protos.ProtoLogGroup group_overrides = 1;</code>
       */
      public perfetto.protos.ProtologConfig.ProtoLogGroup.Builder addGroupOverridesBuilder() {
        return getGroupOverridesFieldBuilder().addBuilder(
            perfetto.protos.ProtologConfig.ProtoLogGroup.getDefaultInstance());
      }
      /**
       * <pre>
       * Specified the configurations for each of the logging groups. If none is
       * specified for a group the defaults will be used.
       * </pre>
       *
       * <code>repeated .perfetto.protos.ProtoLogGroup group_overrides = 1;</code>
       */
      public perfetto.protos.ProtologConfig.ProtoLogGroup.Builder addGroupOverridesBuilder(
          int index) {
        return getGroupOverridesFieldBuilder().addBuilder(
            index, perfetto.protos.ProtologConfig.ProtoLogGroup.getDefaultInstance());
      }
      /**
       * <pre>
       * Specified the configurations for each of the logging groups. If none is
       * specified for a group the defaults will be used.
       * </pre>
       *
       * <code>repeated .perfetto.protos.ProtoLogGroup group_overrides = 1;</code>
       */
      public java.util.List<perfetto.protos.ProtologConfig.ProtoLogGroup.Builder> 
           getGroupOverridesBuilderList() {
        return getGroupOverridesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          perfetto.protos.ProtologConfig.ProtoLogGroup, perfetto.protos.ProtologConfig.ProtoLogGroup.Builder, perfetto.protos.ProtologConfig.ProtoLogGroupOrBuilder> 
          getGroupOverridesFieldBuilder() {
        if (groupOverridesBuilder_ == null) {
          groupOverridesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              perfetto.protos.ProtologConfig.ProtoLogGroup, perfetto.protos.ProtologConfig.ProtoLogGroup.Builder, perfetto.protos.ProtologConfig.ProtoLogGroupOrBuilder>(
                  groupOverrides_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          groupOverrides_ = null;
        }
        return groupOverridesBuilder_;
      }

      private int tracingMode_ = 0;
      /**
       * <pre>
       * Specified what tracing mode to use for the tracing instance.
       * </pre>
       *
       * <code>optional .perfetto.protos.ProtoLogConfig.TracingMode tracing_mode = 2;</code>
       * @return Whether the tracingMode field is set.
       */
      @java.lang.Override public boolean hasTracingMode() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Specified what tracing mode to use for the tracing instance.
       * </pre>
       *
       * <code>optional .perfetto.protos.ProtoLogConfig.TracingMode tracing_mode = 2;</code>
       * @return The tracingMode.
       */
      @java.lang.Override
      public perfetto.protos.ProtologConfig.ProtoLogConfig.TracingMode getTracingMode() {
        perfetto.protos.ProtologConfig.ProtoLogConfig.TracingMode result = perfetto.protos.ProtologConfig.ProtoLogConfig.TracingMode.forNumber(tracingMode_);
        return result == null ? perfetto.protos.ProtologConfig.ProtoLogConfig.TracingMode.DEFAULT : result;
      }
      /**
       * <pre>
       * Specified what tracing mode to use for the tracing instance.
       * </pre>
       *
       * <code>optional .perfetto.protos.ProtoLogConfig.TracingMode tracing_mode = 2;</code>
       * @param value The tracingMode to set.
       * @return This builder for chaining.
       */
      public Builder setTracingMode(perfetto.protos.ProtologConfig.ProtoLogConfig.TracingMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        tracingMode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specified what tracing mode to use for the tracing instance.
       * </pre>
       *
       * <code>optional .perfetto.protos.ProtoLogConfig.TracingMode tracing_mode = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTracingMode() {
        bitField0_ = (bitField0_ & ~0x00000002);
        tracingMode_ = 0;
        onChanged();
        return this;
      }

      private int defaultLogFromLevel_ = 0;
      /**
       * <pre>
       * If set, any message with log level higher than this level (inclusive) will
       * be traced. Group overrides take precedence over this value.
       * </pre>
       *
       * <code>optional .perfetto.protos.ProtoLogLevel default_log_from_level = 3;</code>
       * @return Whether the defaultLogFromLevel field is set.
       */
      @java.lang.Override public boolean hasDefaultLogFromLevel() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * If set, any message with log level higher than this level (inclusive) will
       * be traced. Group overrides take precedence over this value.
       * </pre>
       *
       * <code>optional .perfetto.protos.ProtoLogLevel default_log_from_level = 3;</code>
       * @return The defaultLogFromLevel.
       */
      @java.lang.Override
      public perfetto.protos.ProtologCommon.ProtoLogLevel getDefaultLogFromLevel() {
        perfetto.protos.ProtologCommon.ProtoLogLevel result = perfetto.protos.ProtologCommon.ProtoLogLevel.forNumber(defaultLogFromLevel_);
        return result == null ? perfetto.protos.ProtologCommon.ProtoLogLevel.PROTOLOG_LEVEL_UNDEFINED : result;
      }
      /**
       * <pre>
       * If set, any message with log level higher than this level (inclusive) will
       * be traced. Group overrides take precedence over this value.
       * </pre>
       *
       * <code>optional .perfetto.protos.ProtoLogLevel default_log_from_level = 3;</code>
       * @param value The defaultLogFromLevel to set.
       * @return This builder for chaining.
       */
      public Builder setDefaultLogFromLevel(perfetto.protos.ProtologCommon.ProtoLogLevel value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        defaultLogFromLevel_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If set, any message with log level higher than this level (inclusive) will
       * be traced. Group overrides take precedence over this value.
       * </pre>
       *
       * <code>optional .perfetto.protos.ProtoLogLevel default_log_from_level = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearDefaultLogFromLevel() {
        bitField0_ = (bitField0_ & ~0x00000004);
        defaultLogFromLevel_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:perfetto.protos.ProtoLogConfig)
    }

    // @@protoc_insertion_point(class_scope:perfetto.protos.ProtoLogConfig)
    private static final perfetto.protos.ProtologConfig.ProtoLogConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new perfetto.protos.ProtologConfig.ProtoLogConfig();
    }

    public static perfetto.protos.ProtologConfig.ProtoLogConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ProtoLogConfig>
        PARSER = new com.google.protobuf.AbstractParser<ProtoLogConfig>() {
      @java.lang.Override
      public ProtoLogConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ProtoLogConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ProtoLogConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public perfetto.protos.ProtologConfig.ProtoLogConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ProtoLogGroupOrBuilder extends
      // @@protoc_insertion_point(interface_extends:perfetto.protos.ProtoLogGroup)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The ProtoLog group name this configuration entry applies to.
     * </pre>
     *
     * <code>optional string group_name = 1;</code>
     * @return Whether the groupName field is set.
     */
    boolean hasGroupName();
    /**
     * <pre>
     * The ProtoLog group name this configuration entry applies to.
     * </pre>
     *
     * <code>optional string group_name = 1;</code>
     * @return The groupName.
     */
    java.lang.String getGroupName();
    /**
     * <pre>
     * The ProtoLog group name this configuration entry applies to.
     * </pre>
     *
     * <code>optional string group_name = 1;</code>
     * @return The bytes for groupName.
     */
    com.google.protobuf.ByteString
        getGroupNameBytes();

    /**
     * <pre>
     * Specify the level from which to start capturing protologs.
     * e.g. if ProtoLogLevel.WARN is specified only warning, errors and fatal log
     * message will be traced.
     * </pre>
     *
     * <code>optional .perfetto.protos.ProtoLogLevel log_from = 2;</code>
     * @return Whether the logFrom field is set.
     */
    boolean hasLogFrom();
    /**
     * <pre>
     * Specify the level from which to start capturing protologs.
     * e.g. if ProtoLogLevel.WARN is specified only warning, errors and fatal log
     * message will be traced.
     * </pre>
     *
     * <code>optional .perfetto.protos.ProtoLogLevel log_from = 2;</code>
     * @return The logFrom.
     */
    perfetto.protos.ProtologCommon.ProtoLogLevel getLogFrom();

    /**
     * <pre>
     * When set to true we will collect the stacktrace for each protolog message
     * in this group that we are tracing.
     * </pre>
     *
     * <code>optional bool collect_stacktrace = 3;</code>
     * @return Whether the collectStacktrace field is set.
     */
    boolean hasCollectStacktrace();
    /**
     * <pre>
     * When set to true we will collect the stacktrace for each protolog message
     * in this group that we are tracing.
     * </pre>
     *
     * <code>optional bool collect_stacktrace = 3;</code>
     * @return The collectStacktrace.
     */
    boolean getCollectStacktrace();
  }
  /**
   * Protobuf type {@code perfetto.protos.ProtoLogGroup}
   */
  public static final class ProtoLogGroup extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:perfetto.protos.ProtoLogGroup)
      ProtoLogGroupOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 3,
        /* suffix= */ "",
        ProtoLogGroup.class.getName());
    }
    // Use ProtoLogGroup.newBuilder() to construct.
    private ProtoLogGroup(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private ProtoLogGroup() {
      groupName_ = "";
      logFrom_ = 0;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return perfetto.protos.ProtologConfig.internal_static_perfetto_protos_ProtoLogGroup_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return perfetto.protos.ProtologConfig.internal_static_perfetto_protos_ProtoLogGroup_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              perfetto.protos.ProtologConfig.ProtoLogGroup.class, perfetto.protos.ProtologConfig.ProtoLogGroup.Builder.class);
    }

    private int bitField0_;
    public static final int GROUP_NAME_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object groupName_ = "";
    /**
     * <pre>
     * The ProtoLog group name this configuration entry applies to.
     * </pre>
     *
     * <code>optional string group_name = 1;</code>
     * @return Whether the groupName field is set.
     */
    @java.lang.Override
    public boolean hasGroupName() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The ProtoLog group name this configuration entry applies to.
     * </pre>
     *
     * <code>optional string group_name = 1;</code>
     * @return The groupName.
     */
    @java.lang.Override
    public java.lang.String getGroupName() {
      java.lang.Object ref = groupName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          groupName_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * The ProtoLog group name this configuration entry applies to.
     * </pre>
     *
     * <code>optional string group_name = 1;</code>
     * @return The bytes for groupName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getGroupNameBytes() {
      java.lang.Object ref = groupName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        groupName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LOG_FROM_FIELD_NUMBER = 2;
    private int logFrom_ = 0;
    /**
     * <pre>
     * Specify the level from which to start capturing protologs.
     * e.g. if ProtoLogLevel.WARN is specified only warning, errors and fatal log
     * message will be traced.
     * </pre>
     *
     * <code>optional .perfetto.protos.ProtoLogLevel log_from = 2;</code>
     * @return Whether the logFrom field is set.
     */
    @java.lang.Override public boolean hasLogFrom() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Specify the level from which to start capturing protologs.
     * e.g. if ProtoLogLevel.WARN is specified only warning, errors and fatal log
     * message will be traced.
     * </pre>
     *
     * <code>optional .perfetto.protos.ProtoLogLevel log_from = 2;</code>
     * @return The logFrom.
     */
    @java.lang.Override public perfetto.protos.ProtologCommon.ProtoLogLevel getLogFrom() {
      perfetto.protos.ProtologCommon.ProtoLogLevel result = perfetto.protos.ProtologCommon.ProtoLogLevel.forNumber(logFrom_);
      return result == null ? perfetto.protos.ProtologCommon.ProtoLogLevel.PROTOLOG_LEVEL_UNDEFINED : result;
    }

    public static final int COLLECT_STACKTRACE_FIELD_NUMBER = 3;
    private boolean collectStacktrace_ = false;
    /**
     * <pre>
     * When set to true we will collect the stacktrace for each protolog message
     * in this group that we are tracing.
     * </pre>
     *
     * <code>optional bool collect_stacktrace = 3;</code>
     * @return Whether the collectStacktrace field is set.
     */
    @java.lang.Override
    public boolean hasCollectStacktrace() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * When set to true we will collect the stacktrace for each protolog message
     * in this group that we are tracing.
     * </pre>
     *
     * <code>optional bool collect_stacktrace = 3;</code>
     * @return The collectStacktrace.
     */
    @java.lang.Override
    public boolean getCollectStacktrace() {
      return collectStacktrace_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, groupName_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeEnum(2, logFrom_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeBool(3, collectStacktrace_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, groupName_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, logFrom_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, collectStacktrace_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof perfetto.protos.ProtologConfig.ProtoLogGroup)) {
        return super.equals(obj);
      }
      perfetto.protos.ProtologConfig.ProtoLogGroup other = (perfetto.protos.ProtologConfig.ProtoLogGroup) obj;

      if (hasGroupName() != other.hasGroupName()) return false;
      if (hasGroupName()) {
        if (!getGroupName()
            .equals(other.getGroupName())) return false;
      }
      if (hasLogFrom() != other.hasLogFrom()) return false;
      if (hasLogFrom()) {
        if (logFrom_ != other.logFrom_) return false;
      }
      if (hasCollectStacktrace() != other.hasCollectStacktrace()) return false;
      if (hasCollectStacktrace()) {
        if (getCollectStacktrace()
            != other.getCollectStacktrace()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasGroupName()) {
        hash = (37 * hash) + GROUP_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getGroupName().hashCode();
      }
      if (hasLogFrom()) {
        hash = (37 * hash) + LOG_FROM_FIELD_NUMBER;
        hash = (53 * hash) + logFrom_;
      }
      if (hasCollectStacktrace()) {
        hash = (37 * hash) + COLLECT_STACKTRACE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getCollectStacktrace());
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static perfetto.protos.ProtologConfig.ProtoLogGroup parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.ProtologConfig.ProtoLogGroup parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.ProtologConfig.ProtoLogGroup parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.ProtologConfig.ProtoLogGroup parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.ProtologConfig.ProtoLogGroup parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.ProtologConfig.ProtoLogGroup parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.ProtologConfig.ProtoLogGroup parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.ProtologConfig.ProtoLogGroup parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static perfetto.protos.ProtologConfig.ProtoLogGroup parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static perfetto.protos.ProtologConfig.ProtoLogGroup parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.ProtologConfig.ProtoLogGroup parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.ProtologConfig.ProtoLogGroup parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(perfetto.protos.ProtologConfig.ProtoLogGroup prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code perfetto.protos.ProtoLogGroup}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:perfetto.protos.ProtoLogGroup)
        perfetto.protos.ProtologConfig.ProtoLogGroupOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.ProtologConfig.internal_static_perfetto_protos_ProtoLogGroup_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.ProtologConfig.internal_static_perfetto_protos_ProtoLogGroup_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.ProtologConfig.ProtoLogGroup.class, perfetto.protos.ProtologConfig.ProtoLogGroup.Builder.class);
      }

      // Construct using perfetto.protos.ProtologConfig.ProtoLogGroup.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        groupName_ = "";
        logFrom_ = 0;
        collectStacktrace_ = false;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return perfetto.protos.ProtologConfig.internal_static_perfetto_protos_ProtoLogGroup_descriptor;
      }

      @java.lang.Override
      public perfetto.protos.ProtologConfig.ProtoLogGroup getDefaultInstanceForType() {
        return perfetto.protos.ProtologConfig.ProtoLogGroup.getDefaultInstance();
      }

      @java.lang.Override
      public perfetto.protos.ProtologConfig.ProtoLogGroup build() {
        perfetto.protos.ProtologConfig.ProtoLogGroup result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public perfetto.protos.ProtologConfig.ProtoLogGroup buildPartial() {
        perfetto.protos.ProtologConfig.ProtoLogGroup result = new perfetto.protos.ProtologConfig.ProtoLogGroup(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(perfetto.protos.ProtologConfig.ProtoLogGroup result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.groupName_ = groupName_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.logFrom_ = logFrom_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.collectStacktrace_ = collectStacktrace_;
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof perfetto.protos.ProtologConfig.ProtoLogGroup) {
          return mergeFrom((perfetto.protos.ProtologConfig.ProtoLogGroup)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(perfetto.protos.ProtologConfig.ProtoLogGroup other) {
        if (other == perfetto.protos.ProtologConfig.ProtoLogGroup.getDefaultInstance()) return this;
        if (other.hasGroupName()) {
          groupName_ = other.groupName_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasLogFrom()) {
          setLogFrom(other.getLogFrom());
        }
        if (other.hasCollectStacktrace()) {
          setCollectStacktrace(other.getCollectStacktrace());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                groupName_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                int tmpRaw = input.readEnum();
                perfetto.protos.ProtologCommon.ProtoLogLevel tmpValue =
                    perfetto.protos.ProtologCommon.ProtoLogLevel.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(2, tmpRaw);
                } else {
                  logFrom_ = tmpRaw;
                  bitField0_ |= 0x00000002;
                }
                break;
              } // case 16
              case 24: {
                collectStacktrace_ = input.readBool();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object groupName_ = "";
      /**
       * <pre>
       * The ProtoLog group name this configuration entry applies to.
       * </pre>
       *
       * <code>optional string group_name = 1;</code>
       * @return Whether the groupName field is set.
       */
      public boolean hasGroupName() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * The ProtoLog group name this configuration entry applies to.
       * </pre>
       *
       * <code>optional string group_name = 1;</code>
       * @return The groupName.
       */
      public java.lang.String getGroupName() {
        java.lang.Object ref = groupName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            groupName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The ProtoLog group name this configuration entry applies to.
       * </pre>
       *
       * <code>optional string group_name = 1;</code>
       * @return The bytes for groupName.
       */
      public com.google.protobuf.ByteString
          getGroupNameBytes() {
        java.lang.Object ref = groupName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          groupName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The ProtoLog group name this configuration entry applies to.
       * </pre>
       *
       * <code>optional string group_name = 1;</code>
       * @param value The groupName to set.
       * @return This builder for chaining.
       */
      public Builder setGroupName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        groupName_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The ProtoLog group name this configuration entry applies to.
       * </pre>
       *
       * <code>optional string group_name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearGroupName() {
        groupName_ = getDefaultInstance().getGroupName();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The ProtoLog group name this configuration entry applies to.
       * </pre>
       *
       * <code>optional string group_name = 1;</code>
       * @param value The bytes for groupName to set.
       * @return This builder for chaining.
       */
      public Builder setGroupNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        groupName_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private int logFrom_ = 0;
      /**
       * <pre>
       * Specify the level from which to start capturing protologs.
       * e.g. if ProtoLogLevel.WARN is specified only warning, errors and fatal log
       * message will be traced.
       * </pre>
       *
       * <code>optional .perfetto.protos.ProtoLogLevel log_from = 2;</code>
       * @return Whether the logFrom field is set.
       */
      @java.lang.Override public boolean hasLogFrom() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Specify the level from which to start capturing protologs.
       * e.g. if ProtoLogLevel.WARN is specified only warning, errors and fatal log
       * message will be traced.
       * </pre>
       *
       * <code>optional .perfetto.protos.ProtoLogLevel log_from = 2;</code>
       * @return The logFrom.
       */
      @java.lang.Override
      public perfetto.protos.ProtologCommon.ProtoLogLevel getLogFrom() {
        perfetto.protos.ProtologCommon.ProtoLogLevel result = perfetto.protos.ProtologCommon.ProtoLogLevel.forNumber(logFrom_);
        return result == null ? perfetto.protos.ProtologCommon.ProtoLogLevel.PROTOLOG_LEVEL_UNDEFINED : result;
      }
      /**
       * <pre>
       * Specify the level from which to start capturing protologs.
       * e.g. if ProtoLogLevel.WARN is specified only warning, errors and fatal log
       * message will be traced.
       * </pre>
       *
       * <code>optional .perfetto.protos.ProtoLogLevel log_from = 2;</code>
       * @param value The logFrom to set.
       * @return This builder for chaining.
       */
      public Builder setLogFrom(perfetto.protos.ProtologCommon.ProtoLogLevel value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        logFrom_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Specify the level from which to start capturing protologs.
       * e.g. if ProtoLogLevel.WARN is specified only warning, errors and fatal log
       * message will be traced.
       * </pre>
       *
       * <code>optional .perfetto.protos.ProtoLogLevel log_from = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearLogFrom() {
        bitField0_ = (bitField0_ & ~0x00000002);
        logFrom_ = 0;
        onChanged();
        return this;
      }

      private boolean collectStacktrace_ ;
      /**
       * <pre>
       * When set to true we will collect the stacktrace for each protolog message
       * in this group that we are tracing.
       * </pre>
       *
       * <code>optional bool collect_stacktrace = 3;</code>
       * @return Whether the collectStacktrace field is set.
       */
      @java.lang.Override
      public boolean hasCollectStacktrace() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * When set to true we will collect the stacktrace for each protolog message
       * in this group that we are tracing.
       * </pre>
       *
       * <code>optional bool collect_stacktrace = 3;</code>
       * @return The collectStacktrace.
       */
      @java.lang.Override
      public boolean getCollectStacktrace() {
        return collectStacktrace_;
      }
      /**
       * <pre>
       * When set to true we will collect the stacktrace for each protolog message
       * in this group that we are tracing.
       * </pre>
       *
       * <code>optional bool collect_stacktrace = 3;</code>
       * @param value The collectStacktrace to set.
       * @return This builder for chaining.
       */
      public Builder setCollectStacktrace(boolean value) {

        collectStacktrace_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * When set to true we will collect the stacktrace for each protolog message
       * in this group that we are tracing.
       * </pre>
       *
       * <code>optional bool collect_stacktrace = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearCollectStacktrace() {
        bitField0_ = (bitField0_ & ~0x00000004);
        collectStacktrace_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:perfetto.protos.ProtoLogGroup)
    }

    // @@protoc_insertion_point(class_scope:perfetto.protos.ProtoLogGroup)
    private static final perfetto.protos.ProtologConfig.ProtoLogGroup DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new perfetto.protos.ProtologConfig.ProtoLogGroup();
    }

    public static perfetto.protos.ProtologConfig.ProtoLogGroup getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ProtoLogGroup>
        PARSER = new com.google.protobuf.AbstractParser<ProtoLogGroup>() {
      @java.lang.Override
      public ProtoLogGroup parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ProtoLogGroup> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ProtoLogGroup> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public perfetto.protos.ProtologConfig.ProtoLogGroup getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_ProtoLogConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_perfetto_protos_ProtoLogConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_ProtoLogGroup_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_perfetto_protos_ProtoLogGroup_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n4protos/perfetto/config/android/protolo" +
      "g_config.proto\022\017perfetto.protos\032,protos/" +
      "perfetto/common/protolog_common.proto\"\370\001" +
      "\n\016ProtoLogConfig\0227\n\017group_overrides\030\001 \003(" +
      "\0132\036.perfetto.protos.ProtoLogGroup\022A\n\014tra" +
      "cing_mode\030\002 \001(\0162+.perfetto.protos.ProtoL" +
      "ogConfig.TracingMode\022>\n\026default_log_from" +
      "_level\030\003 \001(\0162\036.perfetto.protos.ProtoLogL" +
      "evel\"*\n\013TracingMode\022\013\n\007DEFAULT\020\000\022\016\n\nENAB" +
      "LE_ALL\020\001\"q\n\rProtoLogGroup\022\022\n\ngroup_name\030" +
      "\001 \001(\t\0220\n\010log_from\030\002 \001(\0162\036.perfetto.proto" +
      "s.ProtoLogLevel\022\032\n\022collect_stacktrace\030\003 " +
      "\001(\010"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          perfetto.protos.ProtologCommon.getDescriptor(),
        });
    internal_static_perfetto_protos_ProtoLogConfig_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_perfetto_protos_ProtoLogConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_perfetto_protos_ProtoLogConfig_descriptor,
        new java.lang.String[] { "GroupOverrides", "TracingMode", "DefaultLogFromLevel", });
    internal_static_perfetto_protos_ProtoLogGroup_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_perfetto_protos_ProtoLogGroup_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_perfetto_protos_ProtoLogGroup_descriptor,
        new java.lang.String[] { "GroupName", "LogFrom", "CollectStacktrace", });
    descriptor.resolveAllFeaturesImmutable();
    perfetto.protos.ProtologCommon.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
