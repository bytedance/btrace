// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: protos/perfetto/trace/android/network_trace.proto
// Protobuf Java Version: 4.29.3

package perfetto.protos;

public final class NetworkTrace {
  private NetworkTrace() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 3,
      /* suffix= */ "",
      NetworkTrace.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code perfetto.protos.TrafficDirection}
   */
  public enum TrafficDirection
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DIR_UNSPECIFIED = 0;</code>
     */
    DIR_UNSPECIFIED(0),
    /**
     * <code>DIR_INGRESS = 1;</code>
     */
    DIR_INGRESS(1),
    /**
     * <code>DIR_EGRESS = 2;</code>
     */
    DIR_EGRESS(2),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 3,
        /* suffix= */ "",
        TrafficDirection.class.getName());
    }
    /**
     * <code>DIR_UNSPECIFIED = 0;</code>
     */
    public static final int DIR_UNSPECIFIED_VALUE = 0;
    /**
     * <code>DIR_INGRESS = 1;</code>
     */
    public static final int DIR_INGRESS_VALUE = 1;
    /**
     * <code>DIR_EGRESS = 2;</code>
     */
    public static final int DIR_EGRESS_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static TrafficDirection valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static TrafficDirection forNumber(int value) {
      switch (value) {
        case 0: return DIR_UNSPECIFIED;
        case 1: return DIR_INGRESS;
        case 2: return DIR_EGRESS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<TrafficDirection>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        TrafficDirection> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<TrafficDirection>() {
            public TrafficDirection findValueByNumber(int number) {
              return TrafficDirection.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return perfetto.protos.NetworkTrace.getDescriptor().getEnumTypes().get(0);
    }

    private static final TrafficDirection[] VALUES = values();

    public static TrafficDirection valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private TrafficDirection(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:perfetto.protos.TrafficDirection)
  }

  public interface NetworkPacketEventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:perfetto.protos.NetworkPacketEvent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The direction traffic is flowing for this event.
     * </pre>
     *
     * <code>optional .perfetto.protos.TrafficDirection direction = 1;</code>
     * @return Whether the direction field is set.
     */
    boolean hasDirection();
    /**
     * <pre>
     * The direction traffic is flowing for this event.
     * </pre>
     *
     * <code>optional .perfetto.protos.TrafficDirection direction = 1;</code>
     * @return The direction.
     */
    perfetto.protos.NetworkTrace.TrafficDirection getDirection();

    /**
     * <pre>
     * The name of the interface if available (e.g. 'rmnet0').
     * </pre>
     *
     * <code>optional string interface = 2;</code>
     * @return Whether the interface field is set.
     */
    boolean hasInterface();
    /**
     * <pre>
     * The name of the interface if available (e.g. 'rmnet0').
     * </pre>
     *
     * <code>optional string interface = 2;</code>
     * @return The interface.
     */
    java.lang.String getInterface();
    /**
     * <pre>
     * The name of the interface if available (e.g. 'rmnet0').
     * </pre>
     *
     * <code>optional string interface = 2;</code>
     * @return The bytes for interface.
     */
    com.google.protobuf.ByteString
        getInterfaceBytes();

    /**
     * <pre>
     * The length of the packet in bytes (wire_size - L2_header_size). Ignored
     * when using NetworkPacketEvent as the ctx in either NetworkPacketBundle or
     * NetworkPacketContext.
     * </pre>
     *
     * <code>optional uint32 length = 3;</code>
     * @return Whether the length field is set.
     */
    boolean hasLength();
    /**
     * <pre>
     * The length of the packet in bytes (wire_size - L2_header_size). Ignored
     * when using NetworkPacketEvent as the ctx in either NetworkPacketBundle or
     * NetworkPacketContext.
     * </pre>
     *
     * <code>optional uint32 length = 3;</code>
     * @return The length.
     */
    int getLength();

    /**
     * <pre>
     * The Linux user id associated with the packet's socket.
     * </pre>
     *
     * <code>optional uint32 uid = 4;</code>
     * @return Whether the uid field is set.
     */
    boolean hasUid();
    /**
     * <pre>
     * The Linux user id associated with the packet's socket.
     * </pre>
     *
     * <code>optional uint32 uid = 4;</code>
     * @return The uid.
     */
    int getUid();

    /**
     * <pre>
     * The Android network tag associated with the packet's socket.
     * </pre>
     *
     * <code>optional uint32 tag = 5;</code>
     * @return Whether the tag field is set.
     */
    boolean hasTag();
    /**
     * <pre>
     * The Android network tag associated with the packet's socket.
     * </pre>
     *
     * <code>optional uint32 tag = 5;</code>
     * @return The tag.
     */
    int getTag();

    /**
     * <pre>
     * The packet's IP protocol (TCP=6, UDP=17, etc).
     * </pre>
     *
     * <code>optional uint32 ip_proto = 6;</code>
     * @return Whether the ipProto field is set.
     */
    boolean hasIpProto();
    /**
     * <pre>
     * The packet's IP protocol (TCP=6, UDP=17, etc).
     * </pre>
     *
     * <code>optional uint32 ip_proto = 6;</code>
     * @return The ipProto.
     */
    int getIpProto();

    /**
     * <pre>
     * The packet's TCP flags as a bitmask (FIN=0x1, SYN=0x2, RST=0x4, etc).
     * </pre>
     *
     * <code>optional uint32 tcp_flags = 7;</code>
     * @return Whether the tcpFlags field is set.
     */
    boolean hasTcpFlags();
    /**
     * <pre>
     * The packet's TCP flags as a bitmask (FIN=0x1, SYN=0x2, RST=0x4, etc).
     * </pre>
     *
     * <code>optional uint32 tcp_flags = 7;</code>
     * @return The tcpFlags.
     */
    int getTcpFlags();

    /**
     * <pre>
     * The local udp/tcp port of the packet.
     * </pre>
     *
     * <code>optional uint32 local_port = 8;</code>
     * @return Whether the localPort field is set.
     */
    boolean hasLocalPort();
    /**
     * <pre>
     * The local udp/tcp port of the packet.
     * </pre>
     *
     * <code>optional uint32 local_port = 8;</code>
     * @return The localPort.
     */
    int getLocalPort();

    /**
     * <pre>
     * The remote udp/tcp port of the packet.
     * </pre>
     *
     * <code>optional uint32 remote_port = 9;</code>
     * @return Whether the remotePort field is set.
     */
    boolean hasRemotePort();
    /**
     * <pre>
     * The remote udp/tcp port of the packet.
     * </pre>
     *
     * <code>optional uint32 remote_port = 9;</code>
     * @return The remotePort.
     */
    int getRemotePort();

    /**
     * <pre>
     * The 1-byte ICMP type identifier.
     * </pre>
     *
     * <code>optional uint32 icmp_type = 10;</code>
     * @return Whether the icmpType field is set.
     */
    boolean hasIcmpType();
    /**
     * <pre>
     * The 1-byte ICMP type identifier.
     * </pre>
     *
     * <code>optional uint32 icmp_type = 10;</code>
     * @return The icmpType.
     */
    int getIcmpType();

    /**
     * <pre>
     * The 1-byte ICMP code identifier.
     * </pre>
     *
     * <code>optional uint32 icmp_code = 11;</code>
     * @return Whether the icmpCode field is set.
     */
    boolean hasIcmpCode();
    /**
     * <pre>
     * The 1-byte ICMP code identifier.
     * </pre>
     *
     * <code>optional uint32 icmp_code = 11;</code>
     * @return The icmpCode.
     */
    int getIcmpCode();
  }
  /**
   * <pre>
   * NetworkPacketEvent records the details of a single packet sent or received
   * on the network (in Linux kernel terminology, one sk_buff struct).
   * </pre>
   *
   * Protobuf type {@code perfetto.protos.NetworkPacketEvent}
   */
  public static final class NetworkPacketEvent extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:perfetto.protos.NetworkPacketEvent)
      NetworkPacketEventOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 3,
        /* suffix= */ "",
        NetworkPacketEvent.class.getName());
    }
    // Use NetworkPacketEvent.newBuilder() to construct.
    private NetworkPacketEvent(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private NetworkPacketEvent() {
      direction_ = 0;
      interface_ = "";
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return perfetto.protos.NetworkTrace.internal_static_perfetto_protos_NetworkPacketEvent_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return perfetto.protos.NetworkTrace.internal_static_perfetto_protos_NetworkPacketEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              perfetto.protos.NetworkTrace.NetworkPacketEvent.class, perfetto.protos.NetworkTrace.NetworkPacketEvent.Builder.class);
    }

    private int bitField0_;
    public static final int DIRECTION_FIELD_NUMBER = 1;
    private int direction_ = 0;
    /**
     * <pre>
     * The direction traffic is flowing for this event.
     * </pre>
     *
     * <code>optional .perfetto.protos.TrafficDirection direction = 1;</code>
     * @return Whether the direction field is set.
     */
    @java.lang.Override public boolean hasDirection() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The direction traffic is flowing for this event.
     * </pre>
     *
     * <code>optional .perfetto.protos.TrafficDirection direction = 1;</code>
     * @return The direction.
     */
    @java.lang.Override public perfetto.protos.NetworkTrace.TrafficDirection getDirection() {
      perfetto.protos.NetworkTrace.TrafficDirection result = perfetto.protos.NetworkTrace.TrafficDirection.forNumber(direction_);
      return result == null ? perfetto.protos.NetworkTrace.TrafficDirection.DIR_UNSPECIFIED : result;
    }

    public static final int INTERFACE_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object interface_ = "";
    /**
     * <pre>
     * The name of the interface if available (e.g. 'rmnet0').
     * </pre>
     *
     * <code>optional string interface = 2;</code>
     * @return Whether the interface field is set.
     */
    @java.lang.Override
    public boolean hasInterface() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * The name of the interface if available (e.g. 'rmnet0').
     * </pre>
     *
     * <code>optional string interface = 2;</code>
     * @return The interface.
     */
    @java.lang.Override
    public java.lang.String getInterface() {
      java.lang.Object ref = interface_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          interface_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     * The name of the interface if available (e.g. 'rmnet0').
     * </pre>
     *
     * <code>optional string interface = 2;</code>
     * @return The bytes for interface.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getInterfaceBytes() {
      java.lang.Object ref = interface_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        interface_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LENGTH_FIELD_NUMBER = 3;
    private int length_ = 0;
    /**
     * <pre>
     * The length of the packet in bytes (wire_size - L2_header_size). Ignored
     * when using NetworkPacketEvent as the ctx in either NetworkPacketBundle or
     * NetworkPacketContext.
     * </pre>
     *
     * <code>optional uint32 length = 3;</code>
     * @return Whether the length field is set.
     */
    @java.lang.Override
    public boolean hasLength() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * The length of the packet in bytes (wire_size - L2_header_size). Ignored
     * when using NetworkPacketEvent as the ctx in either NetworkPacketBundle or
     * NetworkPacketContext.
     * </pre>
     *
     * <code>optional uint32 length = 3;</code>
     * @return The length.
     */
    @java.lang.Override
    public int getLength() {
      return length_;
    }

    public static final int UID_FIELD_NUMBER = 4;
    private int uid_ = 0;
    /**
     * <pre>
     * The Linux user id associated with the packet's socket.
     * </pre>
     *
     * <code>optional uint32 uid = 4;</code>
     * @return Whether the uid field is set.
     */
    @java.lang.Override
    public boolean hasUid() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * The Linux user id associated with the packet's socket.
     * </pre>
     *
     * <code>optional uint32 uid = 4;</code>
     * @return The uid.
     */
    @java.lang.Override
    public int getUid() {
      return uid_;
    }

    public static final int TAG_FIELD_NUMBER = 5;
    private int tag_ = 0;
    /**
     * <pre>
     * The Android network tag associated with the packet's socket.
     * </pre>
     *
     * <code>optional uint32 tag = 5;</code>
     * @return Whether the tag field is set.
     */
    @java.lang.Override
    public boolean hasTag() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * The Android network tag associated with the packet's socket.
     * </pre>
     *
     * <code>optional uint32 tag = 5;</code>
     * @return The tag.
     */
    @java.lang.Override
    public int getTag() {
      return tag_;
    }

    public static final int IP_PROTO_FIELD_NUMBER = 6;
    private int ipProto_ = 0;
    /**
     * <pre>
     * The packet's IP protocol (TCP=6, UDP=17, etc).
     * </pre>
     *
     * <code>optional uint32 ip_proto = 6;</code>
     * @return Whether the ipProto field is set.
     */
    @java.lang.Override
    public boolean hasIpProto() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * The packet's IP protocol (TCP=6, UDP=17, etc).
     * </pre>
     *
     * <code>optional uint32 ip_proto = 6;</code>
     * @return The ipProto.
     */
    @java.lang.Override
    public int getIpProto() {
      return ipProto_;
    }

    public static final int TCP_FLAGS_FIELD_NUMBER = 7;
    private int tcpFlags_ = 0;
    /**
     * <pre>
     * The packet's TCP flags as a bitmask (FIN=0x1, SYN=0x2, RST=0x4, etc).
     * </pre>
     *
     * <code>optional uint32 tcp_flags = 7;</code>
     * @return Whether the tcpFlags field is set.
     */
    @java.lang.Override
    public boolean hasTcpFlags() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <pre>
     * The packet's TCP flags as a bitmask (FIN=0x1, SYN=0x2, RST=0x4, etc).
     * </pre>
     *
     * <code>optional uint32 tcp_flags = 7;</code>
     * @return The tcpFlags.
     */
    @java.lang.Override
    public int getTcpFlags() {
      return tcpFlags_;
    }

    public static final int LOCAL_PORT_FIELD_NUMBER = 8;
    private int localPort_ = 0;
    /**
     * <pre>
     * The local udp/tcp port of the packet.
     * </pre>
     *
     * <code>optional uint32 local_port = 8;</code>
     * @return Whether the localPort field is set.
     */
    @java.lang.Override
    public boolean hasLocalPort() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <pre>
     * The local udp/tcp port of the packet.
     * </pre>
     *
     * <code>optional uint32 local_port = 8;</code>
     * @return The localPort.
     */
    @java.lang.Override
    public int getLocalPort() {
      return localPort_;
    }

    public static final int REMOTE_PORT_FIELD_NUMBER = 9;
    private int remotePort_ = 0;
    /**
     * <pre>
     * The remote udp/tcp port of the packet.
     * </pre>
     *
     * <code>optional uint32 remote_port = 9;</code>
     * @return Whether the remotePort field is set.
     */
    @java.lang.Override
    public boolean hasRemotePort() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <pre>
     * The remote udp/tcp port of the packet.
     * </pre>
     *
     * <code>optional uint32 remote_port = 9;</code>
     * @return The remotePort.
     */
    @java.lang.Override
    public int getRemotePort() {
      return remotePort_;
    }

    public static final int ICMP_TYPE_FIELD_NUMBER = 10;
    private int icmpType_ = 0;
    /**
     * <pre>
     * The 1-byte ICMP type identifier.
     * </pre>
     *
     * <code>optional uint32 icmp_type = 10;</code>
     * @return Whether the icmpType field is set.
     */
    @java.lang.Override
    public boolean hasIcmpType() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <pre>
     * The 1-byte ICMP type identifier.
     * </pre>
     *
     * <code>optional uint32 icmp_type = 10;</code>
     * @return The icmpType.
     */
    @java.lang.Override
    public int getIcmpType() {
      return icmpType_;
    }

    public static final int ICMP_CODE_FIELD_NUMBER = 11;
    private int icmpCode_ = 0;
    /**
     * <pre>
     * The 1-byte ICMP code identifier.
     * </pre>
     *
     * <code>optional uint32 icmp_code = 11;</code>
     * @return Whether the icmpCode field is set.
     */
    @java.lang.Override
    public boolean hasIcmpCode() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <pre>
     * The 1-byte ICMP code identifier.
     * </pre>
     *
     * <code>optional uint32 icmp_code = 11;</code>
     * @return The icmpCode.
     */
    @java.lang.Override
    public int getIcmpCode() {
      return icmpCode_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeEnum(1, direction_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, interface_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeUInt32(3, length_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeUInt32(4, uid_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeUInt32(5, tag_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeUInt32(6, ipProto_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeUInt32(7, tcpFlags_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeUInt32(8, localPort_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        output.writeUInt32(9, remotePort_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        output.writeUInt32(10, icmpType_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        output.writeUInt32(11, icmpCode_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, direction_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, interface_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, length_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, uid_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, tag_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, ipProto_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, tcpFlags_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, localPort_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, remotePort_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, icmpType_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, icmpCode_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof perfetto.protos.NetworkTrace.NetworkPacketEvent)) {
        return super.equals(obj);
      }
      perfetto.protos.NetworkTrace.NetworkPacketEvent other = (perfetto.protos.NetworkTrace.NetworkPacketEvent) obj;

      if (hasDirection() != other.hasDirection()) return false;
      if (hasDirection()) {
        if (direction_ != other.direction_) return false;
      }
      if (hasInterface() != other.hasInterface()) return false;
      if (hasInterface()) {
        if (!getInterface()
            .equals(other.getInterface())) return false;
      }
      if (hasLength() != other.hasLength()) return false;
      if (hasLength()) {
        if (getLength()
            != other.getLength()) return false;
      }
      if (hasUid() != other.hasUid()) return false;
      if (hasUid()) {
        if (getUid()
            != other.getUid()) return false;
      }
      if (hasTag() != other.hasTag()) return false;
      if (hasTag()) {
        if (getTag()
            != other.getTag()) return false;
      }
      if (hasIpProto() != other.hasIpProto()) return false;
      if (hasIpProto()) {
        if (getIpProto()
            != other.getIpProto()) return false;
      }
      if (hasTcpFlags() != other.hasTcpFlags()) return false;
      if (hasTcpFlags()) {
        if (getTcpFlags()
            != other.getTcpFlags()) return false;
      }
      if (hasLocalPort() != other.hasLocalPort()) return false;
      if (hasLocalPort()) {
        if (getLocalPort()
            != other.getLocalPort()) return false;
      }
      if (hasRemotePort() != other.hasRemotePort()) return false;
      if (hasRemotePort()) {
        if (getRemotePort()
            != other.getRemotePort()) return false;
      }
      if (hasIcmpType() != other.hasIcmpType()) return false;
      if (hasIcmpType()) {
        if (getIcmpType()
            != other.getIcmpType()) return false;
      }
      if (hasIcmpCode() != other.hasIcmpCode()) return false;
      if (hasIcmpCode()) {
        if (getIcmpCode()
            != other.getIcmpCode()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasDirection()) {
        hash = (37 * hash) + DIRECTION_FIELD_NUMBER;
        hash = (53 * hash) + direction_;
      }
      if (hasInterface()) {
        hash = (37 * hash) + INTERFACE_FIELD_NUMBER;
        hash = (53 * hash) + getInterface().hashCode();
      }
      if (hasLength()) {
        hash = (37 * hash) + LENGTH_FIELD_NUMBER;
        hash = (53 * hash) + getLength();
      }
      if (hasUid()) {
        hash = (37 * hash) + UID_FIELD_NUMBER;
        hash = (53 * hash) + getUid();
      }
      if (hasTag()) {
        hash = (37 * hash) + TAG_FIELD_NUMBER;
        hash = (53 * hash) + getTag();
      }
      if (hasIpProto()) {
        hash = (37 * hash) + IP_PROTO_FIELD_NUMBER;
        hash = (53 * hash) + getIpProto();
      }
      if (hasTcpFlags()) {
        hash = (37 * hash) + TCP_FLAGS_FIELD_NUMBER;
        hash = (53 * hash) + getTcpFlags();
      }
      if (hasLocalPort()) {
        hash = (37 * hash) + LOCAL_PORT_FIELD_NUMBER;
        hash = (53 * hash) + getLocalPort();
      }
      if (hasRemotePort()) {
        hash = (37 * hash) + REMOTE_PORT_FIELD_NUMBER;
        hash = (53 * hash) + getRemotePort();
      }
      if (hasIcmpType()) {
        hash = (37 * hash) + ICMP_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getIcmpType();
      }
      if (hasIcmpCode()) {
        hash = (37 * hash) + ICMP_CODE_FIELD_NUMBER;
        hash = (53 * hash) + getIcmpCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static perfetto.protos.NetworkTrace.NetworkPacketEvent parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.NetworkTrace.NetworkPacketEvent parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.NetworkTrace.NetworkPacketEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.NetworkTrace.NetworkPacketEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.NetworkTrace.NetworkPacketEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.NetworkTrace.NetworkPacketEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.NetworkTrace.NetworkPacketEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.NetworkTrace.NetworkPacketEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static perfetto.protos.NetworkTrace.NetworkPacketEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static perfetto.protos.NetworkTrace.NetworkPacketEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.NetworkTrace.NetworkPacketEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.NetworkTrace.NetworkPacketEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(perfetto.protos.NetworkTrace.NetworkPacketEvent prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * NetworkPacketEvent records the details of a single packet sent or received
     * on the network (in Linux kernel terminology, one sk_buff struct).
     * </pre>
     *
     * Protobuf type {@code perfetto.protos.NetworkPacketEvent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:perfetto.protos.NetworkPacketEvent)
        perfetto.protos.NetworkTrace.NetworkPacketEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.NetworkTrace.internal_static_perfetto_protos_NetworkPacketEvent_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.NetworkTrace.internal_static_perfetto_protos_NetworkPacketEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.NetworkTrace.NetworkPacketEvent.class, perfetto.protos.NetworkTrace.NetworkPacketEvent.Builder.class);
      }

      // Construct using perfetto.protos.NetworkTrace.NetworkPacketEvent.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        direction_ = 0;
        interface_ = "";
        length_ = 0;
        uid_ = 0;
        tag_ = 0;
        ipProto_ = 0;
        tcpFlags_ = 0;
        localPort_ = 0;
        remotePort_ = 0;
        icmpType_ = 0;
        icmpCode_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return perfetto.protos.NetworkTrace.internal_static_perfetto_protos_NetworkPacketEvent_descriptor;
      }

      @java.lang.Override
      public perfetto.protos.NetworkTrace.NetworkPacketEvent getDefaultInstanceForType() {
        return perfetto.protos.NetworkTrace.NetworkPacketEvent.getDefaultInstance();
      }

      @java.lang.Override
      public perfetto.protos.NetworkTrace.NetworkPacketEvent build() {
        perfetto.protos.NetworkTrace.NetworkPacketEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public perfetto.protos.NetworkTrace.NetworkPacketEvent buildPartial() {
        perfetto.protos.NetworkTrace.NetworkPacketEvent result = new perfetto.protos.NetworkTrace.NetworkPacketEvent(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(perfetto.protos.NetworkTrace.NetworkPacketEvent result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.direction_ = direction_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.interface_ = interface_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.length_ = length_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.uid_ = uid_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.tag_ = tag_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.ipProto_ = ipProto_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.tcpFlags_ = tcpFlags_;
          to_bitField0_ |= 0x00000040;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.localPort_ = localPort_;
          to_bitField0_ |= 0x00000080;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.remotePort_ = remotePort_;
          to_bitField0_ |= 0x00000100;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.icmpType_ = icmpType_;
          to_bitField0_ |= 0x00000200;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.icmpCode_ = icmpCode_;
          to_bitField0_ |= 0x00000400;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof perfetto.protos.NetworkTrace.NetworkPacketEvent) {
          return mergeFrom((perfetto.protos.NetworkTrace.NetworkPacketEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(perfetto.protos.NetworkTrace.NetworkPacketEvent other) {
        if (other == perfetto.protos.NetworkTrace.NetworkPacketEvent.getDefaultInstance()) return this;
        if (other.hasDirection()) {
          setDirection(other.getDirection());
        }
        if (other.hasInterface()) {
          interface_ = other.interface_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (other.hasLength()) {
          setLength(other.getLength());
        }
        if (other.hasUid()) {
          setUid(other.getUid());
        }
        if (other.hasTag()) {
          setTag(other.getTag());
        }
        if (other.hasIpProto()) {
          setIpProto(other.getIpProto());
        }
        if (other.hasTcpFlags()) {
          setTcpFlags(other.getTcpFlags());
        }
        if (other.hasLocalPort()) {
          setLocalPort(other.getLocalPort());
        }
        if (other.hasRemotePort()) {
          setRemotePort(other.getRemotePort());
        }
        if (other.hasIcmpType()) {
          setIcmpType(other.getIcmpType());
        }
        if (other.hasIcmpCode()) {
          setIcmpCode(other.getIcmpCode());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int tmpRaw = input.readEnum();
                perfetto.protos.NetworkTrace.TrafficDirection tmpValue =
                    perfetto.protos.NetworkTrace.TrafficDirection.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(1, tmpRaw);
                } else {
                  direction_ = tmpRaw;
                  bitField0_ |= 0x00000001;
                }
                break;
              } // case 8
              case 18: {
                interface_ = input.readBytes();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 24: {
                length_ = input.readUInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                uid_ = input.readUInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                tag_ = input.readUInt32();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                ipProto_ = input.readUInt32();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 56: {
                tcpFlags_ = input.readUInt32();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
              case 64: {
                localPort_ = input.readUInt32();
                bitField0_ |= 0x00000080;
                break;
              } // case 64
              case 72: {
                remotePort_ = input.readUInt32();
                bitField0_ |= 0x00000100;
                break;
              } // case 72
              case 80: {
                icmpType_ = input.readUInt32();
                bitField0_ |= 0x00000200;
                break;
              } // case 80
              case 88: {
                icmpCode_ = input.readUInt32();
                bitField0_ |= 0x00000400;
                break;
              } // case 88
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int direction_ = 0;
      /**
       * <pre>
       * The direction traffic is flowing for this event.
       * </pre>
       *
       * <code>optional .perfetto.protos.TrafficDirection direction = 1;</code>
       * @return Whether the direction field is set.
       */
      @java.lang.Override public boolean hasDirection() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * The direction traffic is flowing for this event.
       * </pre>
       *
       * <code>optional .perfetto.protos.TrafficDirection direction = 1;</code>
       * @return The direction.
       */
      @java.lang.Override
      public perfetto.protos.NetworkTrace.TrafficDirection getDirection() {
        perfetto.protos.NetworkTrace.TrafficDirection result = perfetto.protos.NetworkTrace.TrafficDirection.forNumber(direction_);
        return result == null ? perfetto.protos.NetworkTrace.TrafficDirection.DIR_UNSPECIFIED : result;
      }
      /**
       * <pre>
       * The direction traffic is flowing for this event.
       * </pre>
       *
       * <code>optional .perfetto.protos.TrafficDirection direction = 1;</code>
       * @param value The direction to set.
       * @return This builder for chaining.
       */
      public Builder setDirection(perfetto.protos.NetworkTrace.TrafficDirection value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        direction_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The direction traffic is flowing for this event.
       * </pre>
       *
       * <code>optional .perfetto.protos.TrafficDirection direction = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDirection() {
        bitField0_ = (bitField0_ & ~0x00000001);
        direction_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object interface_ = "";
      /**
       * <pre>
       * The name of the interface if available (e.g. 'rmnet0').
       * </pre>
       *
       * <code>optional string interface = 2;</code>
       * @return Whether the interface field is set.
       */
      public boolean hasInterface() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * The name of the interface if available (e.g. 'rmnet0').
       * </pre>
       *
       * <code>optional string interface = 2;</code>
       * @return The interface.
       */
      public java.lang.String getInterface() {
        java.lang.Object ref = interface_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            interface_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The name of the interface if available (e.g. 'rmnet0').
       * </pre>
       *
       * <code>optional string interface = 2;</code>
       * @return The bytes for interface.
       */
      public com.google.protobuf.ByteString
          getInterfaceBytes() {
        java.lang.Object ref = interface_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          interface_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The name of the interface if available (e.g. 'rmnet0').
       * </pre>
       *
       * <code>optional string interface = 2;</code>
       * @param value The interface to set.
       * @return This builder for chaining.
       */
      public Builder setInterface(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        interface_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the interface if available (e.g. 'rmnet0').
       * </pre>
       *
       * <code>optional string interface = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearInterface() {
        interface_ = getDefaultInstance().getInterface();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the interface if available (e.g. 'rmnet0').
       * </pre>
       *
       * <code>optional string interface = 2;</code>
       * @param value The bytes for interface to set.
       * @return This builder for chaining.
       */
      public Builder setInterfaceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        interface_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private int length_ ;
      /**
       * <pre>
       * The length of the packet in bytes (wire_size - L2_header_size). Ignored
       * when using NetworkPacketEvent as the ctx in either NetworkPacketBundle or
       * NetworkPacketContext.
       * </pre>
       *
       * <code>optional uint32 length = 3;</code>
       * @return Whether the length field is set.
       */
      @java.lang.Override
      public boolean hasLength() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * The length of the packet in bytes (wire_size - L2_header_size). Ignored
       * when using NetworkPacketEvent as the ctx in either NetworkPacketBundle or
       * NetworkPacketContext.
       * </pre>
       *
       * <code>optional uint32 length = 3;</code>
       * @return The length.
       */
      @java.lang.Override
      public int getLength() {
        return length_;
      }
      /**
       * <pre>
       * The length of the packet in bytes (wire_size - L2_header_size). Ignored
       * when using NetworkPacketEvent as the ctx in either NetworkPacketBundle or
       * NetworkPacketContext.
       * </pre>
       *
       * <code>optional uint32 length = 3;</code>
       * @param value The length to set.
       * @return This builder for chaining.
       */
      public Builder setLength(int value) {

        length_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The length of the packet in bytes (wire_size - L2_header_size). Ignored
       * when using NetworkPacketEvent as the ctx in either NetworkPacketBundle or
       * NetworkPacketContext.
       * </pre>
       *
       * <code>optional uint32 length = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearLength() {
        bitField0_ = (bitField0_ & ~0x00000004);
        length_ = 0;
        onChanged();
        return this;
      }

      private int uid_ ;
      /**
       * <pre>
       * The Linux user id associated with the packet's socket.
       * </pre>
       *
       * <code>optional uint32 uid = 4;</code>
       * @return Whether the uid field is set.
       */
      @java.lang.Override
      public boolean hasUid() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * The Linux user id associated with the packet's socket.
       * </pre>
       *
       * <code>optional uint32 uid = 4;</code>
       * @return The uid.
       */
      @java.lang.Override
      public int getUid() {
        return uid_;
      }
      /**
       * <pre>
       * The Linux user id associated with the packet's socket.
       * </pre>
       *
       * <code>optional uint32 uid = 4;</code>
       * @param value The uid to set.
       * @return This builder for chaining.
       */
      public Builder setUid(int value) {

        uid_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The Linux user id associated with the packet's socket.
       * </pre>
       *
       * <code>optional uint32 uid = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearUid() {
        bitField0_ = (bitField0_ & ~0x00000008);
        uid_ = 0;
        onChanged();
        return this;
      }

      private int tag_ ;
      /**
       * <pre>
       * The Android network tag associated with the packet's socket.
       * </pre>
       *
       * <code>optional uint32 tag = 5;</code>
       * @return Whether the tag field is set.
       */
      @java.lang.Override
      public boolean hasTag() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * The Android network tag associated with the packet's socket.
       * </pre>
       *
       * <code>optional uint32 tag = 5;</code>
       * @return The tag.
       */
      @java.lang.Override
      public int getTag() {
        return tag_;
      }
      /**
       * <pre>
       * The Android network tag associated with the packet's socket.
       * </pre>
       *
       * <code>optional uint32 tag = 5;</code>
       * @param value The tag to set.
       * @return This builder for chaining.
       */
      public Builder setTag(int value) {

        tag_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The Android network tag associated with the packet's socket.
       * </pre>
       *
       * <code>optional uint32 tag = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearTag() {
        bitField0_ = (bitField0_ & ~0x00000010);
        tag_ = 0;
        onChanged();
        return this;
      }

      private int ipProto_ ;
      /**
       * <pre>
       * The packet's IP protocol (TCP=6, UDP=17, etc).
       * </pre>
       *
       * <code>optional uint32 ip_proto = 6;</code>
       * @return Whether the ipProto field is set.
       */
      @java.lang.Override
      public boolean hasIpProto() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * The packet's IP protocol (TCP=6, UDP=17, etc).
       * </pre>
       *
       * <code>optional uint32 ip_proto = 6;</code>
       * @return The ipProto.
       */
      @java.lang.Override
      public int getIpProto() {
        return ipProto_;
      }
      /**
       * <pre>
       * The packet's IP protocol (TCP=6, UDP=17, etc).
       * </pre>
       *
       * <code>optional uint32 ip_proto = 6;</code>
       * @param value The ipProto to set.
       * @return This builder for chaining.
       */
      public Builder setIpProto(int value) {

        ipProto_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The packet's IP protocol (TCP=6, UDP=17, etc).
       * </pre>
       *
       * <code>optional uint32 ip_proto = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearIpProto() {
        bitField0_ = (bitField0_ & ~0x00000020);
        ipProto_ = 0;
        onChanged();
        return this;
      }

      private int tcpFlags_ ;
      /**
       * <pre>
       * The packet's TCP flags as a bitmask (FIN=0x1, SYN=0x2, RST=0x4, etc).
       * </pre>
       *
       * <code>optional uint32 tcp_flags = 7;</code>
       * @return Whether the tcpFlags field is set.
       */
      @java.lang.Override
      public boolean hasTcpFlags() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       * The packet's TCP flags as a bitmask (FIN=0x1, SYN=0x2, RST=0x4, etc).
       * </pre>
       *
       * <code>optional uint32 tcp_flags = 7;</code>
       * @return The tcpFlags.
       */
      @java.lang.Override
      public int getTcpFlags() {
        return tcpFlags_;
      }
      /**
       * <pre>
       * The packet's TCP flags as a bitmask (FIN=0x1, SYN=0x2, RST=0x4, etc).
       * </pre>
       *
       * <code>optional uint32 tcp_flags = 7;</code>
       * @param value The tcpFlags to set.
       * @return This builder for chaining.
       */
      public Builder setTcpFlags(int value) {

        tcpFlags_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The packet's TCP flags as a bitmask (FIN=0x1, SYN=0x2, RST=0x4, etc).
       * </pre>
       *
       * <code>optional uint32 tcp_flags = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearTcpFlags() {
        bitField0_ = (bitField0_ & ~0x00000040);
        tcpFlags_ = 0;
        onChanged();
        return this;
      }

      private int localPort_ ;
      /**
       * <pre>
       * The local udp/tcp port of the packet.
       * </pre>
       *
       * <code>optional uint32 local_port = 8;</code>
       * @return Whether the localPort field is set.
       */
      @java.lang.Override
      public boolean hasLocalPort() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <pre>
       * The local udp/tcp port of the packet.
       * </pre>
       *
       * <code>optional uint32 local_port = 8;</code>
       * @return The localPort.
       */
      @java.lang.Override
      public int getLocalPort() {
        return localPort_;
      }
      /**
       * <pre>
       * The local udp/tcp port of the packet.
       * </pre>
       *
       * <code>optional uint32 local_port = 8;</code>
       * @param value The localPort to set.
       * @return This builder for chaining.
       */
      public Builder setLocalPort(int value) {

        localPort_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The local udp/tcp port of the packet.
       * </pre>
       *
       * <code>optional uint32 local_port = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearLocalPort() {
        bitField0_ = (bitField0_ & ~0x00000080);
        localPort_ = 0;
        onChanged();
        return this;
      }

      private int remotePort_ ;
      /**
       * <pre>
       * The remote udp/tcp port of the packet.
       * </pre>
       *
       * <code>optional uint32 remote_port = 9;</code>
       * @return Whether the remotePort field is set.
       */
      @java.lang.Override
      public boolean hasRemotePort() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <pre>
       * The remote udp/tcp port of the packet.
       * </pre>
       *
       * <code>optional uint32 remote_port = 9;</code>
       * @return The remotePort.
       */
      @java.lang.Override
      public int getRemotePort() {
        return remotePort_;
      }
      /**
       * <pre>
       * The remote udp/tcp port of the packet.
       * </pre>
       *
       * <code>optional uint32 remote_port = 9;</code>
       * @param value The remotePort to set.
       * @return This builder for chaining.
       */
      public Builder setRemotePort(int value) {

        remotePort_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The remote udp/tcp port of the packet.
       * </pre>
       *
       * <code>optional uint32 remote_port = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearRemotePort() {
        bitField0_ = (bitField0_ & ~0x00000100);
        remotePort_ = 0;
        onChanged();
        return this;
      }

      private int icmpType_ ;
      /**
       * <pre>
       * The 1-byte ICMP type identifier.
       * </pre>
       *
       * <code>optional uint32 icmp_type = 10;</code>
       * @return Whether the icmpType field is set.
       */
      @java.lang.Override
      public boolean hasIcmpType() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <pre>
       * The 1-byte ICMP type identifier.
       * </pre>
       *
       * <code>optional uint32 icmp_type = 10;</code>
       * @return The icmpType.
       */
      @java.lang.Override
      public int getIcmpType() {
        return icmpType_;
      }
      /**
       * <pre>
       * The 1-byte ICMP type identifier.
       * </pre>
       *
       * <code>optional uint32 icmp_type = 10;</code>
       * @param value The icmpType to set.
       * @return This builder for chaining.
       */
      public Builder setIcmpType(int value) {

        icmpType_ = value;
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The 1-byte ICMP type identifier.
       * </pre>
       *
       * <code>optional uint32 icmp_type = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearIcmpType() {
        bitField0_ = (bitField0_ & ~0x00000200);
        icmpType_ = 0;
        onChanged();
        return this;
      }

      private int icmpCode_ ;
      /**
       * <pre>
       * The 1-byte ICMP code identifier.
       * </pre>
       *
       * <code>optional uint32 icmp_code = 11;</code>
       * @return Whether the icmpCode field is set.
       */
      @java.lang.Override
      public boolean hasIcmpCode() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <pre>
       * The 1-byte ICMP code identifier.
       * </pre>
       *
       * <code>optional uint32 icmp_code = 11;</code>
       * @return The icmpCode.
       */
      @java.lang.Override
      public int getIcmpCode() {
        return icmpCode_;
      }
      /**
       * <pre>
       * The 1-byte ICMP code identifier.
       * </pre>
       *
       * <code>optional uint32 icmp_code = 11;</code>
       * @param value The icmpCode to set.
       * @return This builder for chaining.
       */
      public Builder setIcmpCode(int value) {

        icmpCode_ = value;
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The 1-byte ICMP code identifier.
       * </pre>
       *
       * <code>optional uint32 icmp_code = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearIcmpCode() {
        bitField0_ = (bitField0_ & ~0x00000400);
        icmpCode_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:perfetto.protos.NetworkPacketEvent)
    }

    // @@protoc_insertion_point(class_scope:perfetto.protos.NetworkPacketEvent)
    private static final perfetto.protos.NetworkTrace.NetworkPacketEvent DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new perfetto.protos.NetworkTrace.NetworkPacketEvent();
    }

    public static perfetto.protos.NetworkTrace.NetworkPacketEvent getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NetworkPacketEvent>
        PARSER = new com.google.protobuf.AbstractParser<NetworkPacketEvent>() {
      @java.lang.Override
      public NetworkPacketEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<NetworkPacketEvent> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NetworkPacketEvent> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public perfetto.protos.NetworkTrace.NetworkPacketEvent getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NetworkPacketBundleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:perfetto.protos.NetworkPacketBundle)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The intern id for looking up the associated packet context.
     * </pre>
     *
     * <code>uint64 iid = 1;</code>
     * @return Whether the iid field is set.
     */
    boolean hasIid();
    /**
     * <pre>
     * The intern id for looking up the associated packet context.
     * </pre>
     *
     * <code>uint64 iid = 1;</code>
     * @return The iid.
     */
    long getIid();

    /**
     * <pre>
     * The inlined context for events in this bundle.
     * </pre>
     *
     * <code>.perfetto.protos.NetworkPacketEvent ctx = 2;</code>
     * @return Whether the ctx field is set.
     */
    boolean hasCtx();
    /**
     * <pre>
     * The inlined context for events in this bundle.
     * </pre>
     *
     * <code>.perfetto.protos.NetworkPacketEvent ctx = 2;</code>
     * @return The ctx.
     */
    perfetto.protos.NetworkTrace.NetworkPacketEvent getCtx();
    /**
     * <pre>
     * The inlined context for events in this bundle.
     * </pre>
     *
     * <code>.perfetto.protos.NetworkPacketEvent ctx = 2;</code>
     */
    perfetto.protos.NetworkTrace.NetworkPacketEventOrBuilder getCtxOrBuilder();

    /**
     * <pre>
     * The timestamp of the i-th packet encoded as the nanoseconds since the
     * enclosing TracePacket's timestamp.
     * </pre>
     *
     * <code>repeated uint64 packet_timestamps = 3 [packed = true];</code>
     * @return A list containing the packetTimestamps.
     */
    java.util.List<java.lang.Long> getPacketTimestampsList();
    /**
     * <pre>
     * The timestamp of the i-th packet encoded as the nanoseconds since the
     * enclosing TracePacket's timestamp.
     * </pre>
     *
     * <code>repeated uint64 packet_timestamps = 3 [packed = true];</code>
     * @return The count of packetTimestamps.
     */
    int getPacketTimestampsCount();
    /**
     * <pre>
     * The timestamp of the i-th packet encoded as the nanoseconds since the
     * enclosing TracePacket's timestamp.
     * </pre>
     *
     * <code>repeated uint64 packet_timestamps = 3 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The packetTimestamps at the given index.
     */
    long getPacketTimestamps(int index);

    /**
     * <pre>
     * The length of the i-th packet in bytes (wire_size - L2_header_size).
     * </pre>
     *
     * <code>repeated uint32 packet_lengths = 4 [packed = true];</code>
     * @return A list containing the packetLengths.
     */
    java.util.List<java.lang.Integer> getPacketLengthsList();
    /**
     * <pre>
     * The length of the i-th packet in bytes (wire_size - L2_header_size).
     * </pre>
     *
     * <code>repeated uint32 packet_lengths = 4 [packed = true];</code>
     * @return The count of packetLengths.
     */
    int getPacketLengthsCount();
    /**
     * <pre>
     * The length of the i-th packet in bytes (wire_size - L2_header_size).
     * </pre>
     *
     * <code>repeated uint32 packet_lengths = 4 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The packetLengths at the given index.
     */
    int getPacketLengths(int index);

    /**
     * <pre>
     * Total number of packets in the bundle (when above aggregation_threshold).
     * </pre>
     *
     * <code>optional uint32 total_packets = 5;</code>
     * @return Whether the totalPackets field is set.
     */
    boolean hasTotalPackets();
    /**
     * <pre>
     * Total number of packets in the bundle (when above aggregation_threshold).
     * </pre>
     *
     * <code>optional uint32 total_packets = 5;</code>
     * @return The totalPackets.
     */
    int getTotalPackets();

    /**
     * <pre>
     * Duration between first and last packet (when above aggregation_threshold).
     * </pre>
     *
     * <code>optional uint64 total_duration = 6;</code>
     * @return Whether the totalDuration field is set.
     */
    boolean hasTotalDuration();
    /**
     * <pre>
     * Duration between first and last packet (when above aggregation_threshold).
     * </pre>
     *
     * <code>optional uint64 total_duration = 6;</code>
     * @return The totalDuration.
     */
    long getTotalDuration();

    /**
     * <pre>
     * Total packet length in bytes (when above aggregation_threshold).
     * </pre>
     *
     * <code>optional uint64 total_length = 7;</code>
     * @return Whether the totalLength field is set.
     */
    boolean hasTotalLength();
    /**
     * <pre>
     * Total packet length in bytes (when above aggregation_threshold).
     * </pre>
     *
     * <code>optional uint64 total_length = 7;</code>
     * @return The totalLength.
     */
    long getTotalLength();

    perfetto.protos.NetworkTrace.NetworkPacketBundle.PacketContextCase getPacketContextCase();
  }
  /**
   * <pre>
   * NetworkPacketBundle bundles one or more packets sharing the same attributes.
   * </pre>
   *
   * Protobuf type {@code perfetto.protos.NetworkPacketBundle}
   */
  public static final class NetworkPacketBundle extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:perfetto.protos.NetworkPacketBundle)
      NetworkPacketBundleOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 3,
        /* suffix= */ "",
        NetworkPacketBundle.class.getName());
    }
    // Use NetworkPacketBundle.newBuilder() to construct.
    private NetworkPacketBundle(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private NetworkPacketBundle() {
      packetTimestamps_ = emptyLongList();
      packetLengths_ = emptyIntList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return perfetto.protos.NetworkTrace.internal_static_perfetto_protos_NetworkPacketBundle_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return perfetto.protos.NetworkTrace.internal_static_perfetto_protos_NetworkPacketBundle_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              perfetto.protos.NetworkTrace.NetworkPacketBundle.class, perfetto.protos.NetworkTrace.NetworkPacketBundle.Builder.class);
    }

    private int bitField0_;
    private int packetContextCase_ = 0;
    @SuppressWarnings("serial")
    private java.lang.Object packetContext_;
    public enum PacketContextCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      IID(1),
      CTX(2),
      PACKETCONTEXT_NOT_SET(0);
      private final int value;
      private PacketContextCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static PacketContextCase valueOf(int value) {
        return forNumber(value);
      }

      public static PacketContextCase forNumber(int value) {
        switch (value) {
          case 1: return IID;
          case 2: return CTX;
          case 0: return PACKETCONTEXT_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public PacketContextCase
    getPacketContextCase() {
      return PacketContextCase.forNumber(
          packetContextCase_);
    }

    public static final int IID_FIELD_NUMBER = 1;
    /**
     * <pre>
     * The intern id for looking up the associated packet context.
     * </pre>
     *
     * <code>uint64 iid = 1;</code>
     * @return Whether the iid field is set.
     */
    @java.lang.Override
    public boolean hasIid() {
      return packetContextCase_ == 1;
    }
    /**
     * <pre>
     * The intern id for looking up the associated packet context.
     * </pre>
     *
     * <code>uint64 iid = 1;</code>
     * @return The iid.
     */
    @java.lang.Override
    public long getIid() {
      if (packetContextCase_ == 1) {
        return (java.lang.Long) packetContext_;
      }
      return 0L;
    }

    public static final int CTX_FIELD_NUMBER = 2;
    /**
     * <pre>
     * The inlined context for events in this bundle.
     * </pre>
     *
     * <code>.perfetto.protos.NetworkPacketEvent ctx = 2;</code>
     * @return Whether the ctx field is set.
     */
    @java.lang.Override
    public boolean hasCtx() {
      return packetContextCase_ == 2;
    }
    /**
     * <pre>
     * The inlined context for events in this bundle.
     * </pre>
     *
     * <code>.perfetto.protos.NetworkPacketEvent ctx = 2;</code>
     * @return The ctx.
     */
    @java.lang.Override
    public perfetto.protos.NetworkTrace.NetworkPacketEvent getCtx() {
      if (packetContextCase_ == 2) {
         return (perfetto.protos.NetworkTrace.NetworkPacketEvent) packetContext_;
      }
      return perfetto.protos.NetworkTrace.NetworkPacketEvent.getDefaultInstance();
    }
    /**
     * <pre>
     * The inlined context for events in this bundle.
     * </pre>
     *
     * <code>.perfetto.protos.NetworkPacketEvent ctx = 2;</code>
     */
    @java.lang.Override
    public perfetto.protos.NetworkTrace.NetworkPacketEventOrBuilder getCtxOrBuilder() {
      if (packetContextCase_ == 2) {
         return (perfetto.protos.NetworkTrace.NetworkPacketEvent) packetContext_;
      }
      return perfetto.protos.NetworkTrace.NetworkPacketEvent.getDefaultInstance();
    }

    public static final int PACKET_TIMESTAMPS_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.LongList packetTimestamps_ =
        emptyLongList();
    /**
     * <pre>
     * The timestamp of the i-th packet encoded as the nanoseconds since the
     * enclosing TracePacket's timestamp.
     * </pre>
     *
     * <code>repeated uint64 packet_timestamps = 3 [packed = true];</code>
     * @return A list containing the packetTimestamps.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getPacketTimestampsList() {
      return packetTimestamps_;
    }
    /**
     * <pre>
     * The timestamp of the i-th packet encoded as the nanoseconds since the
     * enclosing TracePacket's timestamp.
     * </pre>
     *
     * <code>repeated uint64 packet_timestamps = 3 [packed = true];</code>
     * @return The count of packetTimestamps.
     */
    public int getPacketTimestampsCount() {
      return packetTimestamps_.size();
    }
    /**
     * <pre>
     * The timestamp of the i-th packet encoded as the nanoseconds since the
     * enclosing TracePacket's timestamp.
     * </pre>
     *
     * <code>repeated uint64 packet_timestamps = 3 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The packetTimestamps at the given index.
     */
    public long getPacketTimestamps(int index) {
      return packetTimestamps_.getLong(index);
    }
    private int packetTimestampsMemoizedSerializedSize = -1;

    public static final int PACKET_LENGTHS_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.IntList packetLengths_ =
        emptyIntList();
    /**
     * <pre>
     * The length of the i-th packet in bytes (wire_size - L2_header_size).
     * </pre>
     *
     * <code>repeated uint32 packet_lengths = 4 [packed = true];</code>
     * @return A list containing the packetLengths.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getPacketLengthsList() {
      return packetLengths_;
    }
    /**
     * <pre>
     * The length of the i-th packet in bytes (wire_size - L2_header_size).
     * </pre>
     *
     * <code>repeated uint32 packet_lengths = 4 [packed = true];</code>
     * @return The count of packetLengths.
     */
    public int getPacketLengthsCount() {
      return packetLengths_.size();
    }
    /**
     * <pre>
     * The length of the i-th packet in bytes (wire_size - L2_header_size).
     * </pre>
     *
     * <code>repeated uint32 packet_lengths = 4 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The packetLengths at the given index.
     */
    public int getPacketLengths(int index) {
      return packetLengths_.getInt(index);
    }
    private int packetLengthsMemoizedSerializedSize = -1;

    public static final int TOTAL_PACKETS_FIELD_NUMBER = 5;
    private int totalPackets_ = 0;
    /**
     * <pre>
     * Total number of packets in the bundle (when above aggregation_threshold).
     * </pre>
     *
     * <code>optional uint32 total_packets = 5;</code>
     * @return Whether the totalPackets field is set.
     */
    @java.lang.Override
    public boolean hasTotalPackets() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Total number of packets in the bundle (when above aggregation_threshold).
     * </pre>
     *
     * <code>optional uint32 total_packets = 5;</code>
     * @return The totalPackets.
     */
    @java.lang.Override
    public int getTotalPackets() {
      return totalPackets_;
    }

    public static final int TOTAL_DURATION_FIELD_NUMBER = 6;
    private long totalDuration_ = 0L;
    /**
     * <pre>
     * Duration between first and last packet (when above aggregation_threshold).
     * </pre>
     *
     * <code>optional uint64 total_duration = 6;</code>
     * @return Whether the totalDuration field is set.
     */
    @java.lang.Override
    public boolean hasTotalDuration() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Duration between first and last packet (when above aggregation_threshold).
     * </pre>
     *
     * <code>optional uint64 total_duration = 6;</code>
     * @return The totalDuration.
     */
    @java.lang.Override
    public long getTotalDuration() {
      return totalDuration_;
    }

    public static final int TOTAL_LENGTH_FIELD_NUMBER = 7;
    private long totalLength_ = 0L;
    /**
     * <pre>
     * Total packet length in bytes (when above aggregation_threshold).
     * </pre>
     *
     * <code>optional uint64 total_length = 7;</code>
     * @return Whether the totalLength field is set.
     */
    @java.lang.Override
    public boolean hasTotalLength() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Total packet length in bytes (when above aggregation_threshold).
     * </pre>
     *
     * <code>optional uint64 total_length = 7;</code>
     * @return The totalLength.
     */
    @java.lang.Override
    public long getTotalLength() {
      return totalLength_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (packetContextCase_ == 1) {
        output.writeUInt64(
            1, (long)((java.lang.Long) packetContext_));
      }
      if (packetContextCase_ == 2) {
        output.writeMessage(2, (perfetto.protos.NetworkTrace.NetworkPacketEvent) packetContext_);
      }
      if (getPacketTimestampsList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(packetTimestampsMemoizedSerializedSize);
      }
      for (int i = 0; i < packetTimestamps_.size(); i++) {
        output.writeUInt64NoTag(packetTimestamps_.getLong(i));
      }
      if (getPacketLengthsList().size() > 0) {
        output.writeUInt32NoTag(34);
        output.writeUInt32NoTag(packetLengthsMemoizedSerializedSize);
      }
      for (int i = 0; i < packetLengths_.size(); i++) {
        output.writeUInt32NoTag(packetLengths_.getInt(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(5, totalPackets_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt64(6, totalDuration_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeUInt64(7, totalLength_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (packetContextCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(
              1, (long)((java.lang.Long) packetContext_));
      }
      if (packetContextCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (perfetto.protos.NetworkTrace.NetworkPacketEvent) packetContext_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < packetTimestamps_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt64SizeNoTag(packetTimestamps_.getLong(i));
        }
        size += dataSize;
        if (!getPacketTimestampsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        packetTimestampsMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < packetLengths_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(packetLengths_.getInt(i));
        }
        size += dataSize;
        if (!getPacketLengthsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        packetLengthsMemoizedSerializedSize = dataSize;
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, totalPackets_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, totalDuration_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(7, totalLength_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof perfetto.protos.NetworkTrace.NetworkPacketBundle)) {
        return super.equals(obj);
      }
      perfetto.protos.NetworkTrace.NetworkPacketBundle other = (perfetto.protos.NetworkTrace.NetworkPacketBundle) obj;

      if (!getPacketTimestampsList()
          .equals(other.getPacketTimestampsList())) return false;
      if (!getPacketLengthsList()
          .equals(other.getPacketLengthsList())) return false;
      if (hasTotalPackets() != other.hasTotalPackets()) return false;
      if (hasTotalPackets()) {
        if (getTotalPackets()
            != other.getTotalPackets()) return false;
      }
      if (hasTotalDuration() != other.hasTotalDuration()) return false;
      if (hasTotalDuration()) {
        if (getTotalDuration()
            != other.getTotalDuration()) return false;
      }
      if (hasTotalLength() != other.hasTotalLength()) return false;
      if (hasTotalLength()) {
        if (getTotalLength()
            != other.getTotalLength()) return false;
      }
      if (!getPacketContextCase().equals(other.getPacketContextCase())) return false;
      switch (packetContextCase_) {
        case 1:
          if (getIid()
              != other.getIid()) return false;
          break;
        case 2:
          if (!getCtx()
              .equals(other.getCtx())) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getPacketTimestampsCount() > 0) {
        hash = (37 * hash) + PACKET_TIMESTAMPS_FIELD_NUMBER;
        hash = (53 * hash) + getPacketTimestampsList().hashCode();
      }
      if (getPacketLengthsCount() > 0) {
        hash = (37 * hash) + PACKET_LENGTHS_FIELD_NUMBER;
        hash = (53 * hash) + getPacketLengthsList().hashCode();
      }
      if (hasTotalPackets()) {
        hash = (37 * hash) + TOTAL_PACKETS_FIELD_NUMBER;
        hash = (53 * hash) + getTotalPackets();
      }
      if (hasTotalDuration()) {
        hash = (37 * hash) + TOTAL_DURATION_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getTotalDuration());
      }
      if (hasTotalLength()) {
        hash = (37 * hash) + TOTAL_LENGTH_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getTotalLength());
      }
      switch (packetContextCase_) {
        case 1:
          hash = (37 * hash) + IID_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              getIid());
          break;
        case 2:
          hash = (37 * hash) + CTX_FIELD_NUMBER;
          hash = (53 * hash) + getCtx().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static perfetto.protos.NetworkTrace.NetworkPacketBundle parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.NetworkTrace.NetworkPacketBundle parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.NetworkTrace.NetworkPacketBundle parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.NetworkTrace.NetworkPacketBundle parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.NetworkTrace.NetworkPacketBundle parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.NetworkTrace.NetworkPacketBundle parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.NetworkTrace.NetworkPacketBundle parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.NetworkTrace.NetworkPacketBundle parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static perfetto.protos.NetworkTrace.NetworkPacketBundle parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static perfetto.protos.NetworkTrace.NetworkPacketBundle parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.NetworkTrace.NetworkPacketBundle parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.NetworkTrace.NetworkPacketBundle parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(perfetto.protos.NetworkTrace.NetworkPacketBundle prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * NetworkPacketBundle bundles one or more packets sharing the same attributes.
     * </pre>
     *
     * Protobuf type {@code perfetto.protos.NetworkPacketBundle}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:perfetto.protos.NetworkPacketBundle)
        perfetto.protos.NetworkTrace.NetworkPacketBundleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.NetworkTrace.internal_static_perfetto_protos_NetworkPacketBundle_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.NetworkTrace.internal_static_perfetto_protos_NetworkPacketBundle_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.NetworkTrace.NetworkPacketBundle.class, perfetto.protos.NetworkTrace.NetworkPacketBundle.Builder.class);
      }

      // Construct using perfetto.protos.NetworkTrace.NetworkPacketBundle.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (ctxBuilder_ != null) {
          ctxBuilder_.clear();
        }
        packetTimestamps_ = emptyLongList();
        packetLengths_ = emptyIntList();
        totalPackets_ = 0;
        totalDuration_ = 0L;
        totalLength_ = 0L;
        packetContextCase_ = 0;
        packetContext_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return perfetto.protos.NetworkTrace.internal_static_perfetto_protos_NetworkPacketBundle_descriptor;
      }

      @java.lang.Override
      public perfetto.protos.NetworkTrace.NetworkPacketBundle getDefaultInstanceForType() {
        return perfetto.protos.NetworkTrace.NetworkPacketBundle.getDefaultInstance();
      }

      @java.lang.Override
      public perfetto.protos.NetworkTrace.NetworkPacketBundle build() {
        perfetto.protos.NetworkTrace.NetworkPacketBundle result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public perfetto.protos.NetworkTrace.NetworkPacketBundle buildPartial() {
        perfetto.protos.NetworkTrace.NetworkPacketBundle result = new perfetto.protos.NetworkTrace.NetworkPacketBundle(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        buildPartialOneofs(result);
        onBuilt();
        return result;
      }

      private void buildPartial0(perfetto.protos.NetworkTrace.NetworkPacketBundle result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          packetTimestamps_.makeImmutable();
          result.packetTimestamps_ = packetTimestamps_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          packetLengths_.makeImmutable();
          result.packetLengths_ = packetLengths_;
        }
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.totalPackets_ = totalPackets_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.totalDuration_ = totalDuration_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.totalLength_ = totalLength_;
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ |= to_bitField0_;
      }

      private void buildPartialOneofs(perfetto.protos.NetworkTrace.NetworkPacketBundle result) {
        result.packetContextCase_ = packetContextCase_;
        result.packetContext_ = this.packetContext_;
        if (packetContextCase_ == 2 &&
            ctxBuilder_ != null) {
          result.packetContext_ = ctxBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof perfetto.protos.NetworkTrace.NetworkPacketBundle) {
          return mergeFrom((perfetto.protos.NetworkTrace.NetworkPacketBundle)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(perfetto.protos.NetworkTrace.NetworkPacketBundle other) {
        if (other == perfetto.protos.NetworkTrace.NetworkPacketBundle.getDefaultInstance()) return this;
        if (!other.packetTimestamps_.isEmpty()) {
          if (packetTimestamps_.isEmpty()) {
            packetTimestamps_ = other.packetTimestamps_;
            packetTimestamps_.makeImmutable();
            bitField0_ |= 0x00000004;
          } else {
            ensurePacketTimestampsIsMutable();
            packetTimestamps_.addAll(other.packetTimestamps_);
          }
          onChanged();
        }
        if (!other.packetLengths_.isEmpty()) {
          if (packetLengths_.isEmpty()) {
            packetLengths_ = other.packetLengths_;
            packetLengths_.makeImmutable();
            bitField0_ |= 0x00000008;
          } else {
            ensurePacketLengthsIsMutable();
            packetLengths_.addAll(other.packetLengths_);
          }
          onChanged();
        }
        if (other.hasTotalPackets()) {
          setTotalPackets(other.getTotalPackets());
        }
        if (other.hasTotalDuration()) {
          setTotalDuration(other.getTotalDuration());
        }
        if (other.hasTotalLength()) {
          setTotalLength(other.getTotalLength());
        }
        switch (other.getPacketContextCase()) {
          case IID: {
            setIid(other.getIid());
            break;
          }
          case CTX: {
            mergeCtx(other.getCtx());
            break;
          }
          case PACKETCONTEXT_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                packetContext_ = input.readUInt64();
                packetContextCase_ = 1;
                break;
              } // case 8
              case 18: {
                input.readMessage(
                    getCtxFieldBuilder().getBuilder(),
                    extensionRegistry);
                packetContextCase_ = 2;
                break;
              } // case 18
              case 24: {
                long v = input.readUInt64();
                ensurePacketTimestampsIsMutable();
                packetTimestamps_.addLong(v);
                break;
              } // case 24
              case 26: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensurePacketTimestampsIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  packetTimestamps_.addLong(input.readUInt64());
                }
                input.popLimit(limit);
                break;
              } // case 26
              case 32: {
                int v = input.readUInt32();
                ensurePacketLengthsIsMutable();
                packetLengths_.addInt(v);
                break;
              } // case 32
              case 34: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensurePacketLengthsIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  packetLengths_.addInt(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              } // case 34
              case 40: {
                totalPackets_ = input.readUInt32();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                totalDuration_ = input.readUInt64();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 56: {
                totalLength_ = input.readUInt64();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int packetContextCase_ = 0;
      private java.lang.Object packetContext_;
      public PacketContextCase
          getPacketContextCase() {
        return PacketContextCase.forNumber(
            packetContextCase_);
      }

      public Builder clearPacketContext() {
        packetContextCase_ = 0;
        packetContext_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      /**
       * <pre>
       * The intern id for looking up the associated packet context.
       * </pre>
       *
       * <code>uint64 iid = 1;</code>
       * @return Whether the iid field is set.
       */
      public boolean hasIid() {
        return packetContextCase_ == 1;
      }
      /**
       * <pre>
       * The intern id for looking up the associated packet context.
       * </pre>
       *
       * <code>uint64 iid = 1;</code>
       * @return The iid.
       */
      public long getIid() {
        if (packetContextCase_ == 1) {
          return (java.lang.Long) packetContext_;
        }
        return 0L;
      }
      /**
       * <pre>
       * The intern id for looking up the associated packet context.
       * </pre>
       *
       * <code>uint64 iid = 1;</code>
       * @param value The iid to set.
       * @return This builder for chaining.
       */
      public Builder setIid(long value) {

        packetContextCase_ = 1;
        packetContext_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The intern id for looking up the associated packet context.
       * </pre>
       *
       * <code>uint64 iid = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearIid() {
        if (packetContextCase_ == 1) {
          packetContextCase_ = 0;
          packetContext_ = null;
          onChanged();
        }
        return this;
      }

      private com.google.protobuf.SingleFieldBuilder<
          perfetto.protos.NetworkTrace.NetworkPacketEvent, perfetto.protos.NetworkTrace.NetworkPacketEvent.Builder, perfetto.protos.NetworkTrace.NetworkPacketEventOrBuilder> ctxBuilder_;
      /**
       * <pre>
       * The inlined context for events in this bundle.
       * </pre>
       *
       * <code>.perfetto.protos.NetworkPacketEvent ctx = 2;</code>
       * @return Whether the ctx field is set.
       */
      @java.lang.Override
      public boolean hasCtx() {
        return packetContextCase_ == 2;
      }
      /**
       * <pre>
       * The inlined context for events in this bundle.
       * </pre>
       *
       * <code>.perfetto.protos.NetworkPacketEvent ctx = 2;</code>
       * @return The ctx.
       */
      @java.lang.Override
      public perfetto.protos.NetworkTrace.NetworkPacketEvent getCtx() {
        if (ctxBuilder_ == null) {
          if (packetContextCase_ == 2) {
            return (perfetto.protos.NetworkTrace.NetworkPacketEvent) packetContext_;
          }
          return perfetto.protos.NetworkTrace.NetworkPacketEvent.getDefaultInstance();
        } else {
          if (packetContextCase_ == 2) {
            return ctxBuilder_.getMessage();
          }
          return perfetto.protos.NetworkTrace.NetworkPacketEvent.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * The inlined context for events in this bundle.
       * </pre>
       *
       * <code>.perfetto.protos.NetworkPacketEvent ctx = 2;</code>
       */
      public Builder setCtx(perfetto.protos.NetworkTrace.NetworkPacketEvent value) {
        if (ctxBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          packetContext_ = value;
          onChanged();
        } else {
          ctxBuilder_.setMessage(value);
        }
        packetContextCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * The inlined context for events in this bundle.
       * </pre>
       *
       * <code>.perfetto.protos.NetworkPacketEvent ctx = 2;</code>
       */
      public Builder setCtx(
          perfetto.protos.NetworkTrace.NetworkPacketEvent.Builder builderForValue) {
        if (ctxBuilder_ == null) {
          packetContext_ = builderForValue.build();
          onChanged();
        } else {
          ctxBuilder_.setMessage(builderForValue.build());
        }
        packetContextCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * The inlined context for events in this bundle.
       * </pre>
       *
       * <code>.perfetto.protos.NetworkPacketEvent ctx = 2;</code>
       */
      public Builder mergeCtx(perfetto.protos.NetworkTrace.NetworkPacketEvent value) {
        if (ctxBuilder_ == null) {
          if (packetContextCase_ == 2 &&
              packetContext_ != perfetto.protos.NetworkTrace.NetworkPacketEvent.getDefaultInstance()) {
            packetContext_ = perfetto.protos.NetworkTrace.NetworkPacketEvent.newBuilder((perfetto.protos.NetworkTrace.NetworkPacketEvent) packetContext_)
                .mergeFrom(value).buildPartial();
          } else {
            packetContext_ = value;
          }
          onChanged();
        } else {
          if (packetContextCase_ == 2) {
            ctxBuilder_.mergeFrom(value);
          } else {
            ctxBuilder_.setMessage(value);
          }
        }
        packetContextCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * The inlined context for events in this bundle.
       * </pre>
       *
       * <code>.perfetto.protos.NetworkPacketEvent ctx = 2;</code>
       */
      public Builder clearCtx() {
        if (ctxBuilder_ == null) {
          if (packetContextCase_ == 2) {
            packetContextCase_ = 0;
            packetContext_ = null;
            onChanged();
          }
        } else {
          if (packetContextCase_ == 2) {
            packetContextCase_ = 0;
            packetContext_ = null;
          }
          ctxBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The inlined context for events in this bundle.
       * </pre>
       *
       * <code>.perfetto.protos.NetworkPacketEvent ctx = 2;</code>
       */
      public perfetto.protos.NetworkTrace.NetworkPacketEvent.Builder getCtxBuilder() {
        return getCtxFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The inlined context for events in this bundle.
       * </pre>
       *
       * <code>.perfetto.protos.NetworkPacketEvent ctx = 2;</code>
       */
      @java.lang.Override
      public perfetto.protos.NetworkTrace.NetworkPacketEventOrBuilder getCtxOrBuilder() {
        if ((packetContextCase_ == 2) && (ctxBuilder_ != null)) {
          return ctxBuilder_.getMessageOrBuilder();
        } else {
          if (packetContextCase_ == 2) {
            return (perfetto.protos.NetworkTrace.NetworkPacketEvent) packetContext_;
          }
          return perfetto.protos.NetworkTrace.NetworkPacketEvent.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * The inlined context for events in this bundle.
       * </pre>
       *
       * <code>.perfetto.protos.NetworkPacketEvent ctx = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          perfetto.protos.NetworkTrace.NetworkPacketEvent, perfetto.protos.NetworkTrace.NetworkPacketEvent.Builder, perfetto.protos.NetworkTrace.NetworkPacketEventOrBuilder> 
          getCtxFieldBuilder() {
        if (ctxBuilder_ == null) {
          if (!(packetContextCase_ == 2)) {
            packetContext_ = perfetto.protos.NetworkTrace.NetworkPacketEvent.getDefaultInstance();
          }
          ctxBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              perfetto.protos.NetworkTrace.NetworkPacketEvent, perfetto.protos.NetworkTrace.NetworkPacketEvent.Builder, perfetto.protos.NetworkTrace.NetworkPacketEventOrBuilder>(
                  (perfetto.protos.NetworkTrace.NetworkPacketEvent) packetContext_,
                  getParentForChildren(),
                  isClean());
          packetContext_ = null;
        }
        packetContextCase_ = 2;
        onChanged();
        return ctxBuilder_;
      }

      private com.google.protobuf.Internal.LongList packetTimestamps_ = emptyLongList();
      private void ensurePacketTimestampsIsMutable() {
        if (!packetTimestamps_.isModifiable()) {
          packetTimestamps_ = makeMutableCopy(packetTimestamps_);
        }
        bitField0_ |= 0x00000004;
      }
      /**
       * <pre>
       * The timestamp of the i-th packet encoded as the nanoseconds since the
       * enclosing TracePacket's timestamp.
       * </pre>
       *
       * <code>repeated uint64 packet_timestamps = 3 [packed = true];</code>
       * @return A list containing the packetTimestamps.
       */
      public java.util.List<java.lang.Long>
          getPacketTimestampsList() {
        packetTimestamps_.makeImmutable();
        return packetTimestamps_;
      }
      /**
       * <pre>
       * The timestamp of the i-th packet encoded as the nanoseconds since the
       * enclosing TracePacket's timestamp.
       * </pre>
       *
       * <code>repeated uint64 packet_timestamps = 3 [packed = true];</code>
       * @return The count of packetTimestamps.
       */
      public int getPacketTimestampsCount() {
        return packetTimestamps_.size();
      }
      /**
       * <pre>
       * The timestamp of the i-th packet encoded as the nanoseconds since the
       * enclosing TracePacket's timestamp.
       * </pre>
       *
       * <code>repeated uint64 packet_timestamps = 3 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The packetTimestamps at the given index.
       */
      public long getPacketTimestamps(int index) {
        return packetTimestamps_.getLong(index);
      }
      /**
       * <pre>
       * The timestamp of the i-th packet encoded as the nanoseconds since the
       * enclosing TracePacket's timestamp.
       * </pre>
       *
       * <code>repeated uint64 packet_timestamps = 3 [packed = true];</code>
       * @param index The index to set the value at.
       * @param value The packetTimestamps to set.
       * @return This builder for chaining.
       */
      public Builder setPacketTimestamps(
          int index, long value) {

        ensurePacketTimestampsIsMutable();
        packetTimestamps_.setLong(index, value);
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The timestamp of the i-th packet encoded as the nanoseconds since the
       * enclosing TracePacket's timestamp.
       * </pre>
       *
       * <code>repeated uint64 packet_timestamps = 3 [packed = true];</code>
       * @param value The packetTimestamps to add.
       * @return This builder for chaining.
       */
      public Builder addPacketTimestamps(long value) {

        ensurePacketTimestampsIsMutable();
        packetTimestamps_.addLong(value);
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The timestamp of the i-th packet encoded as the nanoseconds since the
       * enclosing TracePacket's timestamp.
       * </pre>
       *
       * <code>repeated uint64 packet_timestamps = 3 [packed = true];</code>
       * @param values The packetTimestamps to add.
       * @return This builder for chaining.
       */
      public Builder addAllPacketTimestamps(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensurePacketTimestampsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, packetTimestamps_);
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The timestamp of the i-th packet encoded as the nanoseconds since the
       * enclosing TracePacket's timestamp.
       * </pre>
       *
       * <code>repeated uint64 packet_timestamps = 3 [packed = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearPacketTimestamps() {
        packetTimestamps_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList packetLengths_ = emptyIntList();
      private void ensurePacketLengthsIsMutable() {
        if (!packetLengths_.isModifiable()) {
          packetLengths_ = makeMutableCopy(packetLengths_);
        }
        bitField0_ |= 0x00000008;
      }
      /**
       * <pre>
       * The length of the i-th packet in bytes (wire_size - L2_header_size).
       * </pre>
       *
       * <code>repeated uint32 packet_lengths = 4 [packed = true];</code>
       * @return A list containing the packetLengths.
       */
      public java.util.List<java.lang.Integer>
          getPacketLengthsList() {
        packetLengths_.makeImmutable();
        return packetLengths_;
      }
      /**
       * <pre>
       * The length of the i-th packet in bytes (wire_size - L2_header_size).
       * </pre>
       *
       * <code>repeated uint32 packet_lengths = 4 [packed = true];</code>
       * @return The count of packetLengths.
       */
      public int getPacketLengthsCount() {
        return packetLengths_.size();
      }
      /**
       * <pre>
       * The length of the i-th packet in bytes (wire_size - L2_header_size).
       * </pre>
       *
       * <code>repeated uint32 packet_lengths = 4 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The packetLengths at the given index.
       */
      public int getPacketLengths(int index) {
        return packetLengths_.getInt(index);
      }
      /**
       * <pre>
       * The length of the i-th packet in bytes (wire_size - L2_header_size).
       * </pre>
       *
       * <code>repeated uint32 packet_lengths = 4 [packed = true];</code>
       * @param index The index to set the value at.
       * @param value The packetLengths to set.
       * @return This builder for chaining.
       */
      public Builder setPacketLengths(
          int index, int value) {

        ensurePacketLengthsIsMutable();
        packetLengths_.setInt(index, value);
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The length of the i-th packet in bytes (wire_size - L2_header_size).
       * </pre>
       *
       * <code>repeated uint32 packet_lengths = 4 [packed = true];</code>
       * @param value The packetLengths to add.
       * @return This builder for chaining.
       */
      public Builder addPacketLengths(int value) {

        ensurePacketLengthsIsMutable();
        packetLengths_.addInt(value);
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The length of the i-th packet in bytes (wire_size - L2_header_size).
       * </pre>
       *
       * <code>repeated uint32 packet_lengths = 4 [packed = true];</code>
       * @param values The packetLengths to add.
       * @return This builder for chaining.
       */
      public Builder addAllPacketLengths(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePacketLengthsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, packetLengths_);
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The length of the i-th packet in bytes (wire_size - L2_header_size).
       * </pre>
       *
       * <code>repeated uint32 packet_lengths = 4 [packed = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearPacketLengths() {
        packetLengths_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      private int totalPackets_ ;
      /**
       * <pre>
       * Total number of packets in the bundle (when above aggregation_threshold).
       * </pre>
       *
       * <code>optional uint32 total_packets = 5;</code>
       * @return Whether the totalPackets field is set.
       */
      @java.lang.Override
      public boolean hasTotalPackets() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * Total number of packets in the bundle (when above aggregation_threshold).
       * </pre>
       *
       * <code>optional uint32 total_packets = 5;</code>
       * @return The totalPackets.
       */
      @java.lang.Override
      public int getTotalPackets() {
        return totalPackets_;
      }
      /**
       * <pre>
       * Total number of packets in the bundle (when above aggregation_threshold).
       * </pre>
       *
       * <code>optional uint32 total_packets = 5;</code>
       * @param value The totalPackets to set.
       * @return This builder for chaining.
       */
      public Builder setTotalPackets(int value) {

        totalPackets_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Total number of packets in the bundle (when above aggregation_threshold).
       * </pre>
       *
       * <code>optional uint32 total_packets = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalPackets() {
        bitField0_ = (bitField0_ & ~0x00000010);
        totalPackets_ = 0;
        onChanged();
        return this;
      }

      private long totalDuration_ ;
      /**
       * <pre>
       * Duration between first and last packet (when above aggregation_threshold).
       * </pre>
       *
       * <code>optional uint64 total_duration = 6;</code>
       * @return Whether the totalDuration field is set.
       */
      @java.lang.Override
      public boolean hasTotalDuration() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * Duration between first and last packet (when above aggregation_threshold).
       * </pre>
       *
       * <code>optional uint64 total_duration = 6;</code>
       * @return The totalDuration.
       */
      @java.lang.Override
      public long getTotalDuration() {
        return totalDuration_;
      }
      /**
       * <pre>
       * Duration between first and last packet (when above aggregation_threshold).
       * </pre>
       *
       * <code>optional uint64 total_duration = 6;</code>
       * @param value The totalDuration to set.
       * @return This builder for chaining.
       */
      public Builder setTotalDuration(long value) {

        totalDuration_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Duration between first and last packet (when above aggregation_threshold).
       * </pre>
       *
       * <code>optional uint64 total_duration = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalDuration() {
        bitField0_ = (bitField0_ & ~0x00000020);
        totalDuration_ = 0L;
        onChanged();
        return this;
      }

      private long totalLength_ ;
      /**
       * <pre>
       * Total packet length in bytes (when above aggregation_threshold).
       * </pre>
       *
       * <code>optional uint64 total_length = 7;</code>
       * @return Whether the totalLength field is set.
       */
      @java.lang.Override
      public boolean hasTotalLength() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <pre>
       * Total packet length in bytes (when above aggregation_threshold).
       * </pre>
       *
       * <code>optional uint64 total_length = 7;</code>
       * @return The totalLength.
       */
      @java.lang.Override
      public long getTotalLength() {
        return totalLength_;
      }
      /**
       * <pre>
       * Total packet length in bytes (when above aggregation_threshold).
       * </pre>
       *
       * <code>optional uint64 total_length = 7;</code>
       * @param value The totalLength to set.
       * @return This builder for chaining.
       */
      public Builder setTotalLength(long value) {

        totalLength_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Total packet length in bytes (when above aggregation_threshold).
       * </pre>
       *
       * <code>optional uint64 total_length = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalLength() {
        bitField0_ = (bitField0_ & ~0x00000040);
        totalLength_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:perfetto.protos.NetworkPacketBundle)
    }

    // @@protoc_insertion_point(class_scope:perfetto.protos.NetworkPacketBundle)
    private static final perfetto.protos.NetworkTrace.NetworkPacketBundle DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new perfetto.protos.NetworkTrace.NetworkPacketBundle();
    }

    public static perfetto.protos.NetworkTrace.NetworkPacketBundle getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NetworkPacketBundle>
        PARSER = new com.google.protobuf.AbstractParser<NetworkPacketBundle>() {
      @java.lang.Override
      public NetworkPacketBundle parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<NetworkPacketBundle> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NetworkPacketBundle> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public perfetto.protos.NetworkTrace.NetworkPacketBundle getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NetworkPacketContextOrBuilder extends
      // @@protoc_insertion_point(interface_extends:perfetto.protos.NetworkPacketContext)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint64 iid = 1;</code>
     * @return Whether the iid field is set.
     */
    boolean hasIid();
    /**
     * <code>optional uint64 iid = 1;</code>
     * @return The iid.
     */
    long getIid();

    /**
     * <code>optional .perfetto.protos.NetworkPacketEvent ctx = 2;</code>
     * @return Whether the ctx field is set.
     */
    boolean hasCtx();
    /**
     * <code>optional .perfetto.protos.NetworkPacketEvent ctx = 2;</code>
     * @return The ctx.
     */
    perfetto.protos.NetworkTrace.NetworkPacketEvent getCtx();
    /**
     * <code>optional .perfetto.protos.NetworkPacketEvent ctx = 2;</code>
     */
    perfetto.protos.NetworkTrace.NetworkPacketEventOrBuilder getCtxOrBuilder();
  }
  /**
   * <pre>
   * An internable packet context.
   * </pre>
   *
   * Protobuf type {@code perfetto.protos.NetworkPacketContext}
   */
  public static final class NetworkPacketContext extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:perfetto.protos.NetworkPacketContext)
      NetworkPacketContextOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 3,
        /* suffix= */ "",
        NetworkPacketContext.class.getName());
    }
    // Use NetworkPacketContext.newBuilder() to construct.
    private NetworkPacketContext(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private NetworkPacketContext() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return perfetto.protos.NetworkTrace.internal_static_perfetto_protos_NetworkPacketContext_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return perfetto.protos.NetworkTrace.internal_static_perfetto_protos_NetworkPacketContext_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              perfetto.protos.NetworkTrace.NetworkPacketContext.class, perfetto.protos.NetworkTrace.NetworkPacketContext.Builder.class);
    }

    private int bitField0_;
    public static final int IID_FIELD_NUMBER = 1;
    private long iid_ = 0L;
    /**
     * <code>optional uint64 iid = 1;</code>
     * @return Whether the iid field is set.
     */
    @java.lang.Override
    public boolean hasIid() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint64 iid = 1;</code>
     * @return The iid.
     */
    @java.lang.Override
    public long getIid() {
      return iid_;
    }

    public static final int CTX_FIELD_NUMBER = 2;
    private perfetto.protos.NetworkTrace.NetworkPacketEvent ctx_;
    /**
     * <code>optional .perfetto.protos.NetworkPacketEvent ctx = 2;</code>
     * @return Whether the ctx field is set.
     */
    @java.lang.Override
    public boolean hasCtx() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional .perfetto.protos.NetworkPacketEvent ctx = 2;</code>
     * @return The ctx.
     */
    @java.lang.Override
    public perfetto.protos.NetworkTrace.NetworkPacketEvent getCtx() {
      return ctx_ == null ? perfetto.protos.NetworkTrace.NetworkPacketEvent.getDefaultInstance() : ctx_;
    }
    /**
     * <code>optional .perfetto.protos.NetworkPacketEvent ctx = 2;</code>
     */
    @java.lang.Override
    public perfetto.protos.NetworkTrace.NetworkPacketEventOrBuilder getCtxOrBuilder() {
      return ctx_ == null ? perfetto.protos.NetworkTrace.NetworkPacketEvent.getDefaultInstance() : ctx_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt64(1, iid_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(2, getCtx());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, iid_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getCtx());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof perfetto.protos.NetworkTrace.NetworkPacketContext)) {
        return super.equals(obj);
      }
      perfetto.protos.NetworkTrace.NetworkPacketContext other = (perfetto.protos.NetworkTrace.NetworkPacketContext) obj;

      if (hasIid() != other.hasIid()) return false;
      if (hasIid()) {
        if (getIid()
            != other.getIid()) return false;
      }
      if (hasCtx() != other.hasCtx()) return false;
      if (hasCtx()) {
        if (!getCtx()
            .equals(other.getCtx())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasIid()) {
        hash = (37 * hash) + IID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getIid());
      }
      if (hasCtx()) {
        hash = (37 * hash) + CTX_FIELD_NUMBER;
        hash = (53 * hash) + getCtx().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static perfetto.protos.NetworkTrace.NetworkPacketContext parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.NetworkTrace.NetworkPacketContext parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.NetworkTrace.NetworkPacketContext parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.NetworkTrace.NetworkPacketContext parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.NetworkTrace.NetworkPacketContext parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.NetworkTrace.NetworkPacketContext parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.NetworkTrace.NetworkPacketContext parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.NetworkTrace.NetworkPacketContext parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static perfetto.protos.NetworkTrace.NetworkPacketContext parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static perfetto.protos.NetworkTrace.NetworkPacketContext parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.NetworkTrace.NetworkPacketContext parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.NetworkTrace.NetworkPacketContext parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(perfetto.protos.NetworkTrace.NetworkPacketContext prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * An internable packet context.
     * </pre>
     *
     * Protobuf type {@code perfetto.protos.NetworkPacketContext}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:perfetto.protos.NetworkPacketContext)
        perfetto.protos.NetworkTrace.NetworkPacketContextOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.NetworkTrace.internal_static_perfetto_protos_NetworkPacketContext_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.NetworkTrace.internal_static_perfetto_protos_NetworkPacketContext_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.NetworkTrace.NetworkPacketContext.class, perfetto.protos.NetworkTrace.NetworkPacketContext.Builder.class);
      }

      // Construct using perfetto.protos.NetworkTrace.NetworkPacketContext.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getCtxFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        iid_ = 0L;
        ctx_ = null;
        if (ctxBuilder_ != null) {
          ctxBuilder_.dispose();
          ctxBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return perfetto.protos.NetworkTrace.internal_static_perfetto_protos_NetworkPacketContext_descriptor;
      }

      @java.lang.Override
      public perfetto.protos.NetworkTrace.NetworkPacketContext getDefaultInstanceForType() {
        return perfetto.protos.NetworkTrace.NetworkPacketContext.getDefaultInstance();
      }

      @java.lang.Override
      public perfetto.protos.NetworkTrace.NetworkPacketContext build() {
        perfetto.protos.NetworkTrace.NetworkPacketContext result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public perfetto.protos.NetworkTrace.NetworkPacketContext buildPartial() {
        perfetto.protos.NetworkTrace.NetworkPacketContext result = new perfetto.protos.NetworkTrace.NetworkPacketContext(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(perfetto.protos.NetworkTrace.NetworkPacketContext result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.iid_ = iid_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.ctx_ = ctxBuilder_ == null
              ? ctx_
              : ctxBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof perfetto.protos.NetworkTrace.NetworkPacketContext) {
          return mergeFrom((perfetto.protos.NetworkTrace.NetworkPacketContext)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(perfetto.protos.NetworkTrace.NetworkPacketContext other) {
        if (other == perfetto.protos.NetworkTrace.NetworkPacketContext.getDefaultInstance()) return this;
        if (other.hasIid()) {
          setIid(other.getIid());
        }
        if (other.hasCtx()) {
          mergeCtx(other.getCtx());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                iid_ = input.readUInt64();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                input.readMessage(
                    getCtxFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private long iid_ ;
      /**
       * <code>optional uint64 iid = 1;</code>
       * @return Whether the iid field is set.
       */
      @java.lang.Override
      public boolean hasIid() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint64 iid = 1;</code>
       * @return The iid.
       */
      @java.lang.Override
      public long getIid() {
        return iid_;
      }
      /**
       * <code>optional uint64 iid = 1;</code>
       * @param value The iid to set.
       * @return This builder for chaining.
       */
      public Builder setIid(long value) {

        iid_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 iid = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearIid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        iid_ = 0L;
        onChanged();
        return this;
      }

      private perfetto.protos.NetworkTrace.NetworkPacketEvent ctx_;
      private com.google.protobuf.SingleFieldBuilder<
          perfetto.protos.NetworkTrace.NetworkPacketEvent, perfetto.protos.NetworkTrace.NetworkPacketEvent.Builder, perfetto.protos.NetworkTrace.NetworkPacketEventOrBuilder> ctxBuilder_;
      /**
       * <code>optional .perfetto.protos.NetworkPacketEvent ctx = 2;</code>
       * @return Whether the ctx field is set.
       */
      public boolean hasCtx() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional .perfetto.protos.NetworkPacketEvent ctx = 2;</code>
       * @return The ctx.
       */
      public perfetto.protos.NetworkTrace.NetworkPacketEvent getCtx() {
        if (ctxBuilder_ == null) {
          return ctx_ == null ? perfetto.protos.NetworkTrace.NetworkPacketEvent.getDefaultInstance() : ctx_;
        } else {
          return ctxBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .perfetto.protos.NetworkPacketEvent ctx = 2;</code>
       */
      public Builder setCtx(perfetto.protos.NetworkTrace.NetworkPacketEvent value) {
        if (ctxBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ctx_ = value;
        } else {
          ctxBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional .perfetto.protos.NetworkPacketEvent ctx = 2;</code>
       */
      public Builder setCtx(
          perfetto.protos.NetworkTrace.NetworkPacketEvent.Builder builderForValue) {
        if (ctxBuilder_ == null) {
          ctx_ = builderForValue.build();
        } else {
          ctxBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional .perfetto.protos.NetworkPacketEvent ctx = 2;</code>
       */
      public Builder mergeCtx(perfetto.protos.NetworkTrace.NetworkPacketEvent value) {
        if (ctxBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            ctx_ != null &&
            ctx_ != perfetto.protos.NetworkTrace.NetworkPacketEvent.getDefaultInstance()) {
            getCtxBuilder().mergeFrom(value);
          } else {
            ctx_ = value;
          }
        } else {
          ctxBuilder_.mergeFrom(value);
        }
        if (ctx_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional .perfetto.protos.NetworkPacketEvent ctx = 2;</code>
       */
      public Builder clearCtx() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ctx_ = null;
        if (ctxBuilder_ != null) {
          ctxBuilder_.dispose();
          ctxBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional .perfetto.protos.NetworkPacketEvent ctx = 2;</code>
       */
      public perfetto.protos.NetworkTrace.NetworkPacketEvent.Builder getCtxBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getCtxFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .perfetto.protos.NetworkPacketEvent ctx = 2;</code>
       */
      public perfetto.protos.NetworkTrace.NetworkPacketEventOrBuilder getCtxOrBuilder() {
        if (ctxBuilder_ != null) {
          return ctxBuilder_.getMessageOrBuilder();
        } else {
          return ctx_ == null ?
              perfetto.protos.NetworkTrace.NetworkPacketEvent.getDefaultInstance() : ctx_;
        }
      }
      /**
       * <code>optional .perfetto.protos.NetworkPacketEvent ctx = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          perfetto.protos.NetworkTrace.NetworkPacketEvent, perfetto.protos.NetworkTrace.NetworkPacketEvent.Builder, perfetto.protos.NetworkTrace.NetworkPacketEventOrBuilder> 
          getCtxFieldBuilder() {
        if (ctxBuilder_ == null) {
          ctxBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              perfetto.protos.NetworkTrace.NetworkPacketEvent, perfetto.protos.NetworkTrace.NetworkPacketEvent.Builder, perfetto.protos.NetworkTrace.NetworkPacketEventOrBuilder>(
                  getCtx(),
                  getParentForChildren(),
                  isClean());
          ctx_ = null;
        }
        return ctxBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:perfetto.protos.NetworkPacketContext)
    }

    // @@protoc_insertion_point(class_scope:perfetto.protos.NetworkPacketContext)
    private static final perfetto.protos.NetworkTrace.NetworkPacketContext DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new perfetto.protos.NetworkTrace.NetworkPacketContext();
    }

    public static perfetto.protos.NetworkTrace.NetworkPacketContext getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NetworkPacketContext>
        PARSER = new com.google.protobuf.AbstractParser<NetworkPacketContext>() {
      @java.lang.Override
      public NetworkPacketContext parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<NetworkPacketContext> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NetworkPacketContext> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public perfetto.protos.NetworkTrace.NetworkPacketContext getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_NetworkPacketEvent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_perfetto_protos_NetworkPacketEvent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_NetworkPacketBundle_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_perfetto_protos_NetworkPacketBundle_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_NetworkPacketContext_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_perfetto_protos_NetworkPacketContext_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n1protos/perfetto/trace/android/network_" +
      "trace.proto\022\017perfetto.protos\"\373\001\n\022Network" +
      "PacketEvent\0224\n\tdirection\030\001 \001(\0162!.perfett" +
      "o.protos.TrafficDirection\022\021\n\tinterface\030\002" +
      " \001(\t\022\016\n\006length\030\003 \001(\r\022\013\n\003uid\030\004 \001(\r\022\013\n\003tag" +
      "\030\005 \001(\r\022\020\n\010ip_proto\030\006 \001(\r\022\021\n\ttcp_flags\030\007 " +
      "\001(\r\022\022\n\nlocal_port\030\010 \001(\r\022\023\n\013remote_port\030\t" +
      " \001(\r\022\021\n\ticmp_type\030\n \001(\r\022\021\n\ticmp_code\030\013 \001" +
      "(\r\"\352\001\n\023NetworkPacketBundle\022\r\n\003iid\030\001 \001(\004H" +
      "\000\0222\n\003ctx\030\002 \001(\0132#.perfetto.protos.Network" +
      "PacketEventH\000\022\035\n\021packet_timestamps\030\003 \003(\004" +
      "B\002\020\001\022\032\n\016packet_lengths\030\004 \003(\rB\002\020\001\022\025\n\rtota" +
      "l_packets\030\005 \001(\r\022\026\n\016total_duration\030\006 \001(\004\022" +
      "\024\n\014total_length\030\007 \001(\004B\020\n\016packet_context\"" +
      "U\n\024NetworkPacketContext\022\013\n\003iid\030\001 \001(\004\0220\n\003" +
      "ctx\030\002 \001(\0132#.perfetto.protos.NetworkPacke" +
      "tEvent*H\n\020TrafficDirection\022\023\n\017DIR_UNSPEC" +
      "IFIED\020\000\022\017\n\013DIR_INGRESS\020\001\022\016\n\nDIR_EGRESS\020\002"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_perfetto_protos_NetworkPacketEvent_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_perfetto_protos_NetworkPacketEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_perfetto_protos_NetworkPacketEvent_descriptor,
        new java.lang.String[] { "Direction", "Interface", "Length", "Uid", "Tag", "IpProto", "TcpFlags", "LocalPort", "RemotePort", "IcmpType", "IcmpCode", });
    internal_static_perfetto_protos_NetworkPacketBundle_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_perfetto_protos_NetworkPacketBundle_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_perfetto_protos_NetworkPacketBundle_descriptor,
        new java.lang.String[] { "Iid", "Ctx", "PacketTimestamps", "PacketLengths", "TotalPackets", "TotalDuration", "TotalLength", "PacketContext", });
    internal_static_perfetto_protos_NetworkPacketContext_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_perfetto_protos_NetworkPacketContext_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_perfetto_protos_NetworkPacketContext_descriptor,
        new java.lang.String[] { "Iid", "Ctx", });
    descriptor.resolveAllFeaturesImmutable();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
