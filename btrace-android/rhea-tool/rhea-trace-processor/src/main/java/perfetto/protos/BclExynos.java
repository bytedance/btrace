// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: protos/perfetto/trace/ftrace/bcl_exynos.proto
// Protobuf Java Version: 4.29.3

package perfetto.protos;

public final class BclExynos {
  private BclExynos() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 3,
      /* suffix= */ "",
      BclExynos.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface BclIrqTriggerFtraceEventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:perfetto.protos.BclIrqTriggerFtraceEvent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 id = 1;</code>
     * @return Whether the id field is set.
     */
    boolean hasId();
    /**
     * <code>optional int32 id = 1;</code>
     * @return The id.
     */
    int getId();

    /**
     * <code>optional int32 throttle = 2;</code>
     * @return Whether the throttle field is set.
     */
    boolean hasThrottle();
    /**
     * <code>optional int32 throttle = 2;</code>
     * @return The throttle.
     */
    int getThrottle();

    /**
     * <code>optional int32 cpu0_limit = 3;</code>
     * @return Whether the cpu0Limit field is set.
     */
    boolean hasCpu0Limit();
    /**
     * <code>optional int32 cpu0_limit = 3;</code>
     * @return The cpu0Limit.
     */
    int getCpu0Limit();

    /**
     * <code>optional int32 cpu1_limit = 4;</code>
     * @return Whether the cpu1Limit field is set.
     */
    boolean hasCpu1Limit();
    /**
     * <code>optional int32 cpu1_limit = 4;</code>
     * @return The cpu1Limit.
     */
    int getCpu1Limit();

    /**
     * <code>optional int32 cpu2_limit = 5;</code>
     * @return Whether the cpu2Limit field is set.
     */
    boolean hasCpu2Limit();
    /**
     * <code>optional int32 cpu2_limit = 5;</code>
     * @return The cpu2Limit.
     */
    int getCpu2Limit();

    /**
     * <code>optional int32 tpu_limit = 6;</code>
     * @return Whether the tpuLimit field is set.
     */
    boolean hasTpuLimit();
    /**
     * <code>optional int32 tpu_limit = 6;</code>
     * @return The tpuLimit.
     */
    int getTpuLimit();

    /**
     * <code>optional int32 gpu_limit = 7;</code>
     * @return Whether the gpuLimit field is set.
     */
    boolean hasGpuLimit();
    /**
     * <code>optional int32 gpu_limit = 7;</code>
     * @return The gpuLimit.
     */
    int getGpuLimit();

    /**
     * <code>optional int32 voltage = 8;</code>
     * @return Whether the voltage field is set.
     */
    boolean hasVoltage();
    /**
     * <code>optional int32 voltage = 8;</code>
     * @return The voltage.
     */
    int getVoltage();

    /**
     * <code>optional int32 capacity = 9;</code>
     * @return Whether the capacity field is set.
     */
    boolean hasCapacity();
    /**
     * <code>optional int32 capacity = 9;</code>
     * @return The capacity.
     */
    int getCapacity();
  }
  /**
   * Protobuf type {@code perfetto.protos.BclIrqTriggerFtraceEvent}
   */
  public static final class BclIrqTriggerFtraceEvent extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:perfetto.protos.BclIrqTriggerFtraceEvent)
      BclIrqTriggerFtraceEventOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 3,
        /* suffix= */ "",
        BclIrqTriggerFtraceEvent.class.getName());
    }
    // Use BclIrqTriggerFtraceEvent.newBuilder() to construct.
    private BclIrqTriggerFtraceEvent(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private BclIrqTriggerFtraceEvent() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return perfetto.protos.BclExynos.internal_static_perfetto_protos_BclIrqTriggerFtraceEvent_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return perfetto.protos.BclExynos.internal_static_perfetto_protos_BclIrqTriggerFtraceEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              perfetto.protos.BclExynos.BclIrqTriggerFtraceEvent.class, perfetto.protos.BclExynos.BclIrqTriggerFtraceEvent.Builder.class);
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private int id_ = 0;
    /**
     * <code>optional int32 id = 1;</code>
     * @return Whether the id field is set.
     */
    @java.lang.Override
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional int32 id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public int getId() {
      return id_;
    }

    public static final int THROTTLE_FIELD_NUMBER = 2;
    private int throttle_ = 0;
    /**
     * <code>optional int32 throttle = 2;</code>
     * @return Whether the throttle field is set.
     */
    @java.lang.Override
    public boolean hasThrottle() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional int32 throttle = 2;</code>
     * @return The throttle.
     */
    @java.lang.Override
    public int getThrottle() {
      return throttle_;
    }

    public static final int CPU0_LIMIT_FIELD_NUMBER = 3;
    private int cpu0Limit_ = 0;
    /**
     * <code>optional int32 cpu0_limit = 3;</code>
     * @return Whether the cpu0Limit field is set.
     */
    @java.lang.Override
    public boolean hasCpu0Limit() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional int32 cpu0_limit = 3;</code>
     * @return The cpu0Limit.
     */
    @java.lang.Override
    public int getCpu0Limit() {
      return cpu0Limit_;
    }

    public static final int CPU1_LIMIT_FIELD_NUMBER = 4;
    private int cpu1Limit_ = 0;
    /**
     * <code>optional int32 cpu1_limit = 4;</code>
     * @return Whether the cpu1Limit field is set.
     */
    @java.lang.Override
    public boolean hasCpu1Limit() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional int32 cpu1_limit = 4;</code>
     * @return The cpu1Limit.
     */
    @java.lang.Override
    public int getCpu1Limit() {
      return cpu1Limit_;
    }

    public static final int CPU2_LIMIT_FIELD_NUMBER = 5;
    private int cpu2Limit_ = 0;
    /**
     * <code>optional int32 cpu2_limit = 5;</code>
     * @return Whether the cpu2Limit field is set.
     */
    @java.lang.Override
    public boolean hasCpu2Limit() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional int32 cpu2_limit = 5;</code>
     * @return The cpu2Limit.
     */
    @java.lang.Override
    public int getCpu2Limit() {
      return cpu2Limit_;
    }

    public static final int TPU_LIMIT_FIELD_NUMBER = 6;
    private int tpuLimit_ = 0;
    /**
     * <code>optional int32 tpu_limit = 6;</code>
     * @return Whether the tpuLimit field is set.
     */
    @java.lang.Override
    public boolean hasTpuLimit() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>optional int32 tpu_limit = 6;</code>
     * @return The tpuLimit.
     */
    @java.lang.Override
    public int getTpuLimit() {
      return tpuLimit_;
    }

    public static final int GPU_LIMIT_FIELD_NUMBER = 7;
    private int gpuLimit_ = 0;
    /**
     * <code>optional int32 gpu_limit = 7;</code>
     * @return Whether the gpuLimit field is set.
     */
    @java.lang.Override
    public boolean hasGpuLimit() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <code>optional int32 gpu_limit = 7;</code>
     * @return The gpuLimit.
     */
    @java.lang.Override
    public int getGpuLimit() {
      return gpuLimit_;
    }

    public static final int VOLTAGE_FIELD_NUMBER = 8;
    private int voltage_ = 0;
    /**
     * <code>optional int32 voltage = 8;</code>
     * @return Whether the voltage field is set.
     */
    @java.lang.Override
    public boolean hasVoltage() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <code>optional int32 voltage = 8;</code>
     * @return The voltage.
     */
    @java.lang.Override
    public int getVoltage() {
      return voltage_;
    }

    public static final int CAPACITY_FIELD_NUMBER = 9;
    private int capacity_ = 0;
    /**
     * <code>optional int32 capacity = 9;</code>
     * @return Whether the capacity field is set.
     */
    @java.lang.Override
    public boolean hasCapacity() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <code>optional int32 capacity = 9;</code>
     * @return The capacity.
     */
    @java.lang.Override
    public int getCapacity() {
      return capacity_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, id_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(2, throttle_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeInt32(3, cpu0Limit_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeInt32(4, cpu1Limit_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeInt32(5, cpu2Limit_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeInt32(6, tpuLimit_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeInt32(7, gpuLimit_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeInt32(8, voltage_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        output.writeInt32(9, capacity_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, throttle_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, cpu0Limit_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, cpu1Limit_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, cpu2Limit_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, tpuLimit_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, gpuLimit_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, voltage_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, capacity_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof perfetto.protos.BclExynos.BclIrqTriggerFtraceEvent)) {
        return super.equals(obj);
      }
      perfetto.protos.BclExynos.BclIrqTriggerFtraceEvent other = (perfetto.protos.BclExynos.BclIrqTriggerFtraceEvent) obj;

      if (hasId() != other.hasId()) return false;
      if (hasId()) {
        if (getId()
            != other.getId()) return false;
      }
      if (hasThrottle() != other.hasThrottle()) return false;
      if (hasThrottle()) {
        if (getThrottle()
            != other.getThrottle()) return false;
      }
      if (hasCpu0Limit() != other.hasCpu0Limit()) return false;
      if (hasCpu0Limit()) {
        if (getCpu0Limit()
            != other.getCpu0Limit()) return false;
      }
      if (hasCpu1Limit() != other.hasCpu1Limit()) return false;
      if (hasCpu1Limit()) {
        if (getCpu1Limit()
            != other.getCpu1Limit()) return false;
      }
      if (hasCpu2Limit() != other.hasCpu2Limit()) return false;
      if (hasCpu2Limit()) {
        if (getCpu2Limit()
            != other.getCpu2Limit()) return false;
      }
      if (hasTpuLimit() != other.hasTpuLimit()) return false;
      if (hasTpuLimit()) {
        if (getTpuLimit()
            != other.getTpuLimit()) return false;
      }
      if (hasGpuLimit() != other.hasGpuLimit()) return false;
      if (hasGpuLimit()) {
        if (getGpuLimit()
            != other.getGpuLimit()) return false;
      }
      if (hasVoltage() != other.hasVoltage()) return false;
      if (hasVoltage()) {
        if (getVoltage()
            != other.getVoltage()) return false;
      }
      if (hasCapacity() != other.hasCapacity()) return false;
      if (hasCapacity()) {
        if (getCapacity()
            != other.getCapacity()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasId()) {
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + getId();
      }
      if (hasThrottle()) {
        hash = (37 * hash) + THROTTLE_FIELD_NUMBER;
        hash = (53 * hash) + getThrottle();
      }
      if (hasCpu0Limit()) {
        hash = (37 * hash) + CPU0_LIMIT_FIELD_NUMBER;
        hash = (53 * hash) + getCpu0Limit();
      }
      if (hasCpu1Limit()) {
        hash = (37 * hash) + CPU1_LIMIT_FIELD_NUMBER;
        hash = (53 * hash) + getCpu1Limit();
      }
      if (hasCpu2Limit()) {
        hash = (37 * hash) + CPU2_LIMIT_FIELD_NUMBER;
        hash = (53 * hash) + getCpu2Limit();
      }
      if (hasTpuLimit()) {
        hash = (37 * hash) + TPU_LIMIT_FIELD_NUMBER;
        hash = (53 * hash) + getTpuLimit();
      }
      if (hasGpuLimit()) {
        hash = (37 * hash) + GPU_LIMIT_FIELD_NUMBER;
        hash = (53 * hash) + getGpuLimit();
      }
      if (hasVoltage()) {
        hash = (37 * hash) + VOLTAGE_FIELD_NUMBER;
        hash = (53 * hash) + getVoltage();
      }
      if (hasCapacity()) {
        hash = (37 * hash) + CAPACITY_FIELD_NUMBER;
        hash = (53 * hash) + getCapacity();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static perfetto.protos.BclExynos.BclIrqTriggerFtraceEvent parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.BclExynos.BclIrqTriggerFtraceEvent parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.BclExynos.BclIrqTriggerFtraceEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.BclExynos.BclIrqTriggerFtraceEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.BclExynos.BclIrqTriggerFtraceEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.BclExynos.BclIrqTriggerFtraceEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.BclExynos.BclIrqTriggerFtraceEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.BclExynos.BclIrqTriggerFtraceEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static perfetto.protos.BclExynos.BclIrqTriggerFtraceEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static perfetto.protos.BclExynos.BclIrqTriggerFtraceEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.BclExynos.BclIrqTriggerFtraceEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.BclExynos.BclIrqTriggerFtraceEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(perfetto.protos.BclExynos.BclIrqTriggerFtraceEvent prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code perfetto.protos.BclIrqTriggerFtraceEvent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:perfetto.protos.BclIrqTriggerFtraceEvent)
        perfetto.protos.BclExynos.BclIrqTriggerFtraceEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.BclExynos.internal_static_perfetto_protos_BclIrqTriggerFtraceEvent_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.BclExynos.internal_static_perfetto_protos_BclIrqTriggerFtraceEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.BclExynos.BclIrqTriggerFtraceEvent.class, perfetto.protos.BclExynos.BclIrqTriggerFtraceEvent.Builder.class);
      }

      // Construct using perfetto.protos.BclExynos.BclIrqTriggerFtraceEvent.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        id_ = 0;
        throttle_ = 0;
        cpu0Limit_ = 0;
        cpu1Limit_ = 0;
        cpu2Limit_ = 0;
        tpuLimit_ = 0;
        gpuLimit_ = 0;
        voltage_ = 0;
        capacity_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return perfetto.protos.BclExynos.internal_static_perfetto_protos_BclIrqTriggerFtraceEvent_descriptor;
      }

      @java.lang.Override
      public perfetto.protos.BclExynos.BclIrqTriggerFtraceEvent getDefaultInstanceForType() {
        return perfetto.protos.BclExynos.BclIrqTriggerFtraceEvent.getDefaultInstance();
      }

      @java.lang.Override
      public perfetto.protos.BclExynos.BclIrqTriggerFtraceEvent build() {
        perfetto.protos.BclExynos.BclIrqTriggerFtraceEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public perfetto.protos.BclExynos.BclIrqTriggerFtraceEvent buildPartial() {
        perfetto.protos.BclExynos.BclIrqTriggerFtraceEvent result = new perfetto.protos.BclExynos.BclIrqTriggerFtraceEvent(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(perfetto.protos.BclExynos.BclIrqTriggerFtraceEvent result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.id_ = id_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.throttle_ = throttle_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.cpu0Limit_ = cpu0Limit_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.cpu1Limit_ = cpu1Limit_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.cpu2Limit_ = cpu2Limit_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.tpuLimit_ = tpuLimit_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.gpuLimit_ = gpuLimit_;
          to_bitField0_ |= 0x00000040;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.voltage_ = voltage_;
          to_bitField0_ |= 0x00000080;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.capacity_ = capacity_;
          to_bitField0_ |= 0x00000100;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof perfetto.protos.BclExynos.BclIrqTriggerFtraceEvent) {
          return mergeFrom((perfetto.protos.BclExynos.BclIrqTriggerFtraceEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(perfetto.protos.BclExynos.BclIrqTriggerFtraceEvent other) {
        if (other == perfetto.protos.BclExynos.BclIrqTriggerFtraceEvent.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasThrottle()) {
          setThrottle(other.getThrottle());
        }
        if (other.hasCpu0Limit()) {
          setCpu0Limit(other.getCpu0Limit());
        }
        if (other.hasCpu1Limit()) {
          setCpu1Limit(other.getCpu1Limit());
        }
        if (other.hasCpu2Limit()) {
          setCpu2Limit(other.getCpu2Limit());
        }
        if (other.hasTpuLimit()) {
          setTpuLimit(other.getTpuLimit());
        }
        if (other.hasGpuLimit()) {
          setGpuLimit(other.getGpuLimit());
        }
        if (other.hasVoltage()) {
          setVoltage(other.getVoltage());
        }
        if (other.hasCapacity()) {
          setCapacity(other.getCapacity());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                id_ = input.readInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                throttle_ = input.readInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                cpu0Limit_ = input.readInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                cpu1Limit_ = input.readInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                cpu2Limit_ = input.readInt32();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                tpuLimit_ = input.readInt32();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 56: {
                gpuLimit_ = input.readInt32();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
              case 64: {
                voltage_ = input.readInt32();
                bitField0_ |= 0x00000080;
                break;
              } // case 64
              case 72: {
                capacity_ = input.readInt32();
                bitField0_ |= 0x00000100;
                break;
              } // case 72
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int id_ ;
      /**
       * <code>optional int32 id = 1;</code>
       * @return Whether the id field is set.
       */
      @java.lang.Override
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional int32 id = 1;</code>
       * @return The id.
       */
      @java.lang.Override
      public int getId() {
        return id_;
      }
      /**
       * <code>optional int32 id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(int value) {

        id_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0;
        onChanged();
        return this;
      }

      private int throttle_ ;
      /**
       * <code>optional int32 throttle = 2;</code>
       * @return Whether the throttle field is set.
       */
      @java.lang.Override
      public boolean hasThrottle() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional int32 throttle = 2;</code>
       * @return The throttle.
       */
      @java.lang.Override
      public int getThrottle() {
        return throttle_;
      }
      /**
       * <code>optional int32 throttle = 2;</code>
       * @param value The throttle to set.
       * @return This builder for chaining.
       */
      public Builder setThrottle(int value) {

        throttle_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 throttle = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearThrottle() {
        bitField0_ = (bitField0_ & ~0x00000002);
        throttle_ = 0;
        onChanged();
        return this;
      }

      private int cpu0Limit_ ;
      /**
       * <code>optional int32 cpu0_limit = 3;</code>
       * @return Whether the cpu0Limit field is set.
       */
      @java.lang.Override
      public boolean hasCpu0Limit() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional int32 cpu0_limit = 3;</code>
       * @return The cpu0Limit.
       */
      @java.lang.Override
      public int getCpu0Limit() {
        return cpu0Limit_;
      }
      /**
       * <code>optional int32 cpu0_limit = 3;</code>
       * @param value The cpu0Limit to set.
       * @return This builder for chaining.
       */
      public Builder setCpu0Limit(int value) {

        cpu0Limit_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cpu0_limit = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearCpu0Limit() {
        bitField0_ = (bitField0_ & ~0x00000004);
        cpu0Limit_ = 0;
        onChanged();
        return this;
      }

      private int cpu1Limit_ ;
      /**
       * <code>optional int32 cpu1_limit = 4;</code>
       * @return Whether the cpu1Limit field is set.
       */
      @java.lang.Override
      public boolean hasCpu1Limit() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional int32 cpu1_limit = 4;</code>
       * @return The cpu1Limit.
       */
      @java.lang.Override
      public int getCpu1Limit() {
        return cpu1Limit_;
      }
      /**
       * <code>optional int32 cpu1_limit = 4;</code>
       * @param value The cpu1Limit to set.
       * @return This builder for chaining.
       */
      public Builder setCpu1Limit(int value) {

        cpu1Limit_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cpu1_limit = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearCpu1Limit() {
        bitField0_ = (bitField0_ & ~0x00000008);
        cpu1Limit_ = 0;
        onChanged();
        return this;
      }

      private int cpu2Limit_ ;
      /**
       * <code>optional int32 cpu2_limit = 5;</code>
       * @return Whether the cpu2Limit field is set.
       */
      @java.lang.Override
      public boolean hasCpu2Limit() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional int32 cpu2_limit = 5;</code>
       * @return The cpu2Limit.
       */
      @java.lang.Override
      public int getCpu2Limit() {
        return cpu2Limit_;
      }
      /**
       * <code>optional int32 cpu2_limit = 5;</code>
       * @param value The cpu2Limit to set.
       * @return This builder for chaining.
       */
      public Builder setCpu2Limit(int value) {

        cpu2Limit_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cpu2_limit = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearCpu2Limit() {
        bitField0_ = (bitField0_ & ~0x00000010);
        cpu2Limit_ = 0;
        onChanged();
        return this;
      }

      private int tpuLimit_ ;
      /**
       * <code>optional int32 tpu_limit = 6;</code>
       * @return Whether the tpuLimit field is set.
       */
      @java.lang.Override
      public boolean hasTpuLimit() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional int32 tpu_limit = 6;</code>
       * @return The tpuLimit.
       */
      @java.lang.Override
      public int getTpuLimit() {
        return tpuLimit_;
      }
      /**
       * <code>optional int32 tpu_limit = 6;</code>
       * @param value The tpuLimit to set.
       * @return This builder for chaining.
       */
      public Builder setTpuLimit(int value) {

        tpuLimit_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tpu_limit = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearTpuLimit() {
        bitField0_ = (bitField0_ & ~0x00000020);
        tpuLimit_ = 0;
        onChanged();
        return this;
      }

      private int gpuLimit_ ;
      /**
       * <code>optional int32 gpu_limit = 7;</code>
       * @return Whether the gpuLimit field is set.
       */
      @java.lang.Override
      public boolean hasGpuLimit() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional int32 gpu_limit = 7;</code>
       * @return The gpuLimit.
       */
      @java.lang.Override
      public int getGpuLimit() {
        return gpuLimit_;
      }
      /**
       * <code>optional int32 gpu_limit = 7;</code>
       * @param value The gpuLimit to set.
       * @return This builder for chaining.
       */
      public Builder setGpuLimit(int value) {

        gpuLimit_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 gpu_limit = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearGpuLimit() {
        bitField0_ = (bitField0_ & ~0x00000040);
        gpuLimit_ = 0;
        onChanged();
        return this;
      }

      private int voltage_ ;
      /**
       * <code>optional int32 voltage = 8;</code>
       * @return Whether the voltage field is set.
       */
      @java.lang.Override
      public boolean hasVoltage() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <code>optional int32 voltage = 8;</code>
       * @return The voltage.
       */
      @java.lang.Override
      public int getVoltage() {
        return voltage_;
      }
      /**
       * <code>optional int32 voltage = 8;</code>
       * @param value The voltage to set.
       * @return This builder for chaining.
       */
      public Builder setVoltage(int value) {

        voltage_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 voltage = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearVoltage() {
        bitField0_ = (bitField0_ & ~0x00000080);
        voltage_ = 0;
        onChanged();
        return this;
      }

      private int capacity_ ;
      /**
       * <code>optional int32 capacity = 9;</code>
       * @return Whether the capacity field is set.
       */
      @java.lang.Override
      public boolean hasCapacity() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <code>optional int32 capacity = 9;</code>
       * @return The capacity.
       */
      @java.lang.Override
      public int getCapacity() {
        return capacity_;
      }
      /**
       * <code>optional int32 capacity = 9;</code>
       * @param value The capacity to set.
       * @return This builder for chaining.
       */
      public Builder setCapacity(int value) {

        capacity_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 capacity = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearCapacity() {
        bitField0_ = (bitField0_ & ~0x00000100);
        capacity_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:perfetto.protos.BclIrqTriggerFtraceEvent)
    }

    // @@protoc_insertion_point(class_scope:perfetto.protos.BclIrqTriggerFtraceEvent)
    private static final perfetto.protos.BclExynos.BclIrqTriggerFtraceEvent DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new perfetto.protos.BclExynos.BclIrqTriggerFtraceEvent();
    }

    public static perfetto.protos.BclExynos.BclIrqTriggerFtraceEvent getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BclIrqTriggerFtraceEvent>
        PARSER = new com.google.protobuf.AbstractParser<BclIrqTriggerFtraceEvent>() {
      @java.lang.Override
      public BclIrqTriggerFtraceEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<BclIrqTriggerFtraceEvent> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BclIrqTriggerFtraceEvent> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public perfetto.protos.BclExynos.BclIrqTriggerFtraceEvent getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_BclIrqTriggerFtraceEvent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_perfetto_protos_BclIrqTriggerFtraceEvent_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n-protos/perfetto/trace/ftrace/bcl_exyno" +
      "s.proto\022\017perfetto.protos\"\275\001\n\030BclIrqTrigg" +
      "erFtraceEvent\022\n\n\002id\030\001 \001(\005\022\020\n\010throttle\030\002 " +
      "\001(\005\022\022\n\ncpu0_limit\030\003 \001(\005\022\022\n\ncpu1_limit\030\004 " +
      "\001(\005\022\022\n\ncpu2_limit\030\005 \001(\005\022\021\n\ttpu_limit\030\006 \001" +
      "(\005\022\021\n\tgpu_limit\030\007 \001(\005\022\017\n\007voltage\030\010 \001(\005\022\020" +
      "\n\010capacity\030\t \001(\005"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_perfetto_protos_BclIrqTriggerFtraceEvent_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_perfetto_protos_BclIrqTriggerFtraceEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_perfetto_protos_BclIrqTriggerFtraceEvent_descriptor,
        new java.lang.String[] { "Id", "Throttle", "Cpu0Limit", "Cpu1Limit", "Cpu2Limit", "TpuLimit", "GpuLimit", "Voltage", "Capacity", });
    descriptor.resolveAllFeaturesImmutable();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
