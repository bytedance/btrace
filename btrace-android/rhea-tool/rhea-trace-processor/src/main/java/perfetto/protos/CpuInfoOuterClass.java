// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: protos/perfetto/trace/system_info/cpu_info.proto
// Protobuf Java Version: 4.29.3

package perfetto.protos;

public final class CpuInfoOuterClass {
  private CpuInfoOuterClass() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 3,
      /* suffix= */ "",
      CpuInfoOuterClass.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface CpuInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:perfetto.protos.CpuInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Describes available CPUs, one entry per CPU.
     * </pre>
     *
     * <code>repeated .perfetto.protos.CpuInfo.Cpu cpus = 1;</code>
     */
    java.util.List<perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu> 
        getCpusList();
    /**
     * <pre>
     * Describes available CPUs, one entry per CPU.
     * </pre>
     *
     * <code>repeated .perfetto.protos.CpuInfo.Cpu cpus = 1;</code>
     */
    perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu getCpus(int index);
    /**
     * <pre>
     * Describes available CPUs, one entry per CPU.
     * </pre>
     *
     * <code>repeated .perfetto.protos.CpuInfo.Cpu cpus = 1;</code>
     */
    int getCpusCount();
    /**
     * <pre>
     * Describes available CPUs, one entry per CPU.
     * </pre>
     *
     * <code>repeated .perfetto.protos.CpuInfo.Cpu cpus = 1;</code>
     */
    java.util.List<? extends perfetto.protos.CpuInfoOuterClass.CpuInfo.CpuOrBuilder> 
        getCpusOrBuilderList();
    /**
     * <pre>
     * Describes available CPUs, one entry per CPU.
     * </pre>
     *
     * <code>repeated .perfetto.protos.CpuInfo.Cpu cpus = 1;</code>
     */
    perfetto.protos.CpuInfoOuterClass.CpuInfo.CpuOrBuilder getCpusOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Information about CPUs from procfs and sysfs.
   * </pre>
   *
   * Protobuf type {@code perfetto.protos.CpuInfo}
   */
  public static final class CpuInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:perfetto.protos.CpuInfo)
      CpuInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 3,
        /* suffix= */ "",
        CpuInfo.class.getName());
    }
    // Use CpuInfo.newBuilder() to construct.
    private CpuInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private CpuInfo() {
      cpus_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return perfetto.protos.CpuInfoOuterClass.internal_static_perfetto_protos_CpuInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return perfetto.protos.CpuInfoOuterClass.internal_static_perfetto_protos_CpuInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              perfetto.protos.CpuInfoOuterClass.CpuInfo.class, perfetto.protos.CpuInfoOuterClass.CpuInfo.Builder.class);
    }

    public interface ArmCpuIdentifierOrBuilder extends
        // @@protoc_insertion_point(interface_extends:perfetto.protos.CpuInfo.ArmCpuIdentifier)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Implementer code
       * </pre>
       *
       * <code>optional uint32 implementer = 1;</code>
       * @return Whether the implementer field is set.
       */
      boolean hasImplementer();
      /**
       * <pre>
       * Implementer code
       * </pre>
       *
       * <code>optional uint32 implementer = 1;</code>
       * @return The implementer.
       */
      int getImplementer();

      /**
       * <pre>
       * Architecture code
       * </pre>
       *
       * <code>optional uint32 architecture = 2;</code>
       * @return Whether the architecture field is set.
       */
      boolean hasArchitecture();
      /**
       * <pre>
       * Architecture code
       * </pre>
       *
       * <code>optional uint32 architecture = 2;</code>
       * @return The architecture.
       */
      int getArchitecture();

      /**
       * <pre>
       * CPU variant
       * </pre>
       *
       * <code>optional uint32 variant = 3;</code>
       * @return Whether the variant field is set.
       */
      boolean hasVariant();
      /**
       * <pre>
       * CPU variant
       * </pre>
       *
       * <code>optional uint32 variant = 3;</code>
       * @return The variant.
       */
      int getVariant();

      /**
       * <pre>
       * CPU part
       * </pre>
       *
       * <code>optional uint32 part = 4;</code>
       * @return Whether the part field is set.
       */
      boolean hasPart();
      /**
       * <pre>
       * CPU part
       * </pre>
       *
       * <code>optional uint32 part = 4;</code>
       * @return The part.
       */
      int getPart();

      /**
       * <pre>
       * CPU revision
       * </pre>
       *
       * <code>optional uint32 revision = 5;</code>
       * @return Whether the revision field is set.
       */
      boolean hasRevision();
      /**
       * <pre>
       * CPU revision
       * </pre>
       *
       * <code>optional uint32 revision = 5;</code>
       * @return The revision.
       */
      int getRevision();
    }
    /**
     * Protobuf type {@code perfetto.protos.CpuInfo.ArmCpuIdentifier}
     */
    public static final class ArmCpuIdentifier extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:perfetto.protos.CpuInfo.ArmCpuIdentifier)
        ArmCpuIdentifierOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 29,
          /* patch= */ 3,
          /* suffix= */ "",
          ArmCpuIdentifier.class.getName());
      }
      // Use ArmCpuIdentifier.newBuilder() to construct.
      private ArmCpuIdentifier(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private ArmCpuIdentifier() {
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.CpuInfoOuterClass.internal_static_perfetto_protos_CpuInfo_ArmCpuIdentifier_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.CpuInfoOuterClass.internal_static_perfetto_protos_CpuInfo_ArmCpuIdentifier_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier.class, perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier.Builder.class);
      }

      private int bitField0_;
      public static final int IMPLEMENTER_FIELD_NUMBER = 1;
      private int implementer_ = 0;
      /**
       * <pre>
       * Implementer code
       * </pre>
       *
       * <code>optional uint32 implementer = 1;</code>
       * @return Whether the implementer field is set.
       */
      @java.lang.Override
      public boolean hasImplementer() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Implementer code
       * </pre>
       *
       * <code>optional uint32 implementer = 1;</code>
       * @return The implementer.
       */
      @java.lang.Override
      public int getImplementer() {
        return implementer_;
      }

      public static final int ARCHITECTURE_FIELD_NUMBER = 2;
      private int architecture_ = 0;
      /**
       * <pre>
       * Architecture code
       * </pre>
       *
       * <code>optional uint32 architecture = 2;</code>
       * @return Whether the architecture field is set.
       */
      @java.lang.Override
      public boolean hasArchitecture() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Architecture code
       * </pre>
       *
       * <code>optional uint32 architecture = 2;</code>
       * @return The architecture.
       */
      @java.lang.Override
      public int getArchitecture() {
        return architecture_;
      }

      public static final int VARIANT_FIELD_NUMBER = 3;
      private int variant_ = 0;
      /**
       * <pre>
       * CPU variant
       * </pre>
       *
       * <code>optional uint32 variant = 3;</code>
       * @return Whether the variant field is set.
       */
      @java.lang.Override
      public boolean hasVariant() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * CPU variant
       * </pre>
       *
       * <code>optional uint32 variant = 3;</code>
       * @return The variant.
       */
      @java.lang.Override
      public int getVariant() {
        return variant_;
      }

      public static final int PART_FIELD_NUMBER = 4;
      private int part_ = 0;
      /**
       * <pre>
       * CPU part
       * </pre>
       *
       * <code>optional uint32 part = 4;</code>
       * @return Whether the part field is set.
       */
      @java.lang.Override
      public boolean hasPart() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * CPU part
       * </pre>
       *
       * <code>optional uint32 part = 4;</code>
       * @return The part.
       */
      @java.lang.Override
      public int getPart() {
        return part_;
      }

      public static final int REVISION_FIELD_NUMBER = 5;
      private int revision_ = 0;
      /**
       * <pre>
       * CPU revision
       * </pre>
       *
       * <code>optional uint32 revision = 5;</code>
       * @return Whether the revision field is set.
       */
      @java.lang.Override
      public boolean hasRevision() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * CPU revision
       * </pre>
       *
       * <code>optional uint32 revision = 5;</code>
       * @return The revision.
       */
      @java.lang.Override
      public int getRevision() {
        return revision_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeUInt32(1, implementer_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeUInt32(2, architecture_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          output.writeUInt32(3, variant_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          output.writeUInt32(4, part_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          output.writeUInt32(5, revision_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, implementer_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, architecture_);
        }
        if (((bitField0_ & 0x00000004) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, variant_);
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(4, part_);
        }
        if (((bitField0_ & 0x00000010) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(5, revision_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier)) {
          return super.equals(obj);
        }
        perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier other = (perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier) obj;

        if (hasImplementer() != other.hasImplementer()) return false;
        if (hasImplementer()) {
          if (getImplementer()
              != other.getImplementer()) return false;
        }
        if (hasArchitecture() != other.hasArchitecture()) return false;
        if (hasArchitecture()) {
          if (getArchitecture()
              != other.getArchitecture()) return false;
        }
        if (hasVariant() != other.hasVariant()) return false;
        if (hasVariant()) {
          if (getVariant()
              != other.getVariant()) return false;
        }
        if (hasPart() != other.hasPart()) return false;
        if (hasPart()) {
          if (getPart()
              != other.getPart()) return false;
        }
        if (hasRevision() != other.hasRevision()) return false;
        if (hasRevision()) {
          if (getRevision()
              != other.getRevision()) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasImplementer()) {
          hash = (37 * hash) + IMPLEMENTER_FIELD_NUMBER;
          hash = (53 * hash) + getImplementer();
        }
        if (hasArchitecture()) {
          hash = (37 * hash) + ARCHITECTURE_FIELD_NUMBER;
          hash = (53 * hash) + getArchitecture();
        }
        if (hasVariant()) {
          hash = (37 * hash) + VARIANT_FIELD_NUMBER;
          hash = (53 * hash) + getVariant();
        }
        if (hasPart()) {
          hash = (37 * hash) + PART_FIELD_NUMBER;
          hash = (53 * hash) + getPart();
        }
        if (hasRevision()) {
          hash = (37 * hash) + REVISION_FIELD_NUMBER;
          hash = (53 * hash) + getRevision();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code perfetto.protos.CpuInfo.ArmCpuIdentifier}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:perfetto.protos.CpuInfo.ArmCpuIdentifier)
          perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifierOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return perfetto.protos.CpuInfoOuterClass.internal_static_perfetto_protos_CpuInfo_ArmCpuIdentifier_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return perfetto.protos.CpuInfoOuterClass.internal_static_perfetto_protos_CpuInfo_ArmCpuIdentifier_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier.class, perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier.Builder.class);
        }

        // Construct using perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          implementer_ = 0;
          architecture_ = 0;
          variant_ = 0;
          part_ = 0;
          revision_ = 0;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return perfetto.protos.CpuInfoOuterClass.internal_static_perfetto_protos_CpuInfo_ArmCpuIdentifier_descriptor;
        }

        @java.lang.Override
        public perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier getDefaultInstanceForType() {
          return perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier.getDefaultInstance();
        }

        @java.lang.Override
        public perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier build() {
          perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier buildPartial() {
          perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier result = new perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.implementer_ = implementer_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.architecture_ = architecture_;
            to_bitField0_ |= 0x00000002;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.variant_ = variant_;
            to_bitField0_ |= 0x00000004;
          }
          if (((from_bitField0_ & 0x00000008) != 0)) {
            result.part_ = part_;
            to_bitField0_ |= 0x00000008;
          }
          if (((from_bitField0_ & 0x00000010) != 0)) {
            result.revision_ = revision_;
            to_bitField0_ |= 0x00000010;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier) {
            return mergeFrom((perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier other) {
          if (other == perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier.getDefaultInstance()) return this;
          if (other.hasImplementer()) {
            setImplementer(other.getImplementer());
          }
          if (other.hasArchitecture()) {
            setArchitecture(other.getArchitecture());
          }
          if (other.hasVariant()) {
            setVariant(other.getVariant());
          }
          if (other.hasPart()) {
            setPart(other.getPart());
          }
          if (other.hasRevision()) {
            setRevision(other.getRevision());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  implementer_ = input.readUInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 16: {
                  architecture_ = input.readUInt32();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                case 24: {
                  variant_ = input.readUInt32();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 24
                case 32: {
                  part_ = input.readUInt32();
                  bitField0_ |= 0x00000008;
                  break;
                } // case 32
                case 40: {
                  revision_ = input.readUInt32();
                  bitField0_ |= 0x00000010;
                  break;
                } // case 40
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int implementer_ ;
        /**
         * <pre>
         * Implementer code
         * </pre>
         *
         * <code>optional uint32 implementer = 1;</code>
         * @return Whether the implementer field is set.
         */
        @java.lang.Override
        public boolean hasImplementer() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * Implementer code
         * </pre>
         *
         * <code>optional uint32 implementer = 1;</code>
         * @return The implementer.
         */
        @java.lang.Override
        public int getImplementer() {
          return implementer_;
        }
        /**
         * <pre>
         * Implementer code
         * </pre>
         *
         * <code>optional uint32 implementer = 1;</code>
         * @param value The implementer to set.
         * @return This builder for chaining.
         */
        public Builder setImplementer(int value) {

          implementer_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Implementer code
         * </pre>
         *
         * <code>optional uint32 implementer = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearImplementer() {
          bitField0_ = (bitField0_ & ~0x00000001);
          implementer_ = 0;
          onChanged();
          return this;
        }

        private int architecture_ ;
        /**
         * <pre>
         * Architecture code
         * </pre>
         *
         * <code>optional uint32 architecture = 2;</code>
         * @return Whether the architecture field is set.
         */
        @java.lang.Override
        public boolean hasArchitecture() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <pre>
         * Architecture code
         * </pre>
         *
         * <code>optional uint32 architecture = 2;</code>
         * @return The architecture.
         */
        @java.lang.Override
        public int getArchitecture() {
          return architecture_;
        }
        /**
         * <pre>
         * Architecture code
         * </pre>
         *
         * <code>optional uint32 architecture = 2;</code>
         * @param value The architecture to set.
         * @return This builder for chaining.
         */
        public Builder setArchitecture(int value) {

          architecture_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Architecture code
         * </pre>
         *
         * <code>optional uint32 architecture = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearArchitecture() {
          bitField0_ = (bitField0_ & ~0x00000002);
          architecture_ = 0;
          onChanged();
          return this;
        }

        private int variant_ ;
        /**
         * <pre>
         * CPU variant
         * </pre>
         *
         * <code>optional uint32 variant = 3;</code>
         * @return Whether the variant field is set.
         */
        @java.lang.Override
        public boolean hasVariant() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         * CPU variant
         * </pre>
         *
         * <code>optional uint32 variant = 3;</code>
         * @return The variant.
         */
        @java.lang.Override
        public int getVariant() {
          return variant_;
        }
        /**
         * <pre>
         * CPU variant
         * </pre>
         *
         * <code>optional uint32 variant = 3;</code>
         * @param value The variant to set.
         * @return This builder for chaining.
         */
        public Builder setVariant(int value) {

          variant_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * CPU variant
         * </pre>
         *
         * <code>optional uint32 variant = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearVariant() {
          bitField0_ = (bitField0_ & ~0x00000004);
          variant_ = 0;
          onChanged();
          return this;
        }

        private int part_ ;
        /**
         * <pre>
         * CPU part
         * </pre>
         *
         * <code>optional uint32 part = 4;</code>
         * @return Whether the part field is set.
         */
        @java.lang.Override
        public boolean hasPart() {
          return ((bitField0_ & 0x00000008) != 0);
        }
        /**
         * <pre>
         * CPU part
         * </pre>
         *
         * <code>optional uint32 part = 4;</code>
         * @return The part.
         */
        @java.lang.Override
        public int getPart() {
          return part_;
        }
        /**
         * <pre>
         * CPU part
         * </pre>
         *
         * <code>optional uint32 part = 4;</code>
         * @param value The part to set.
         * @return This builder for chaining.
         */
        public Builder setPart(int value) {

          part_ = value;
          bitField0_ |= 0x00000008;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * CPU part
         * </pre>
         *
         * <code>optional uint32 part = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearPart() {
          bitField0_ = (bitField0_ & ~0x00000008);
          part_ = 0;
          onChanged();
          return this;
        }

        private int revision_ ;
        /**
         * <pre>
         * CPU revision
         * </pre>
         *
         * <code>optional uint32 revision = 5;</code>
         * @return Whether the revision field is set.
         */
        @java.lang.Override
        public boolean hasRevision() {
          return ((bitField0_ & 0x00000010) != 0);
        }
        /**
         * <pre>
         * CPU revision
         * </pre>
         *
         * <code>optional uint32 revision = 5;</code>
         * @return The revision.
         */
        @java.lang.Override
        public int getRevision() {
          return revision_;
        }
        /**
         * <pre>
         * CPU revision
         * </pre>
         *
         * <code>optional uint32 revision = 5;</code>
         * @param value The revision to set.
         * @return This builder for chaining.
         */
        public Builder setRevision(int value) {

          revision_ = value;
          bitField0_ |= 0x00000010;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * CPU revision
         * </pre>
         *
         * <code>optional uint32 revision = 5;</code>
         * @return This builder for chaining.
         */
        public Builder clearRevision() {
          bitField0_ = (bitField0_ & ~0x00000010);
          revision_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:perfetto.protos.CpuInfo.ArmCpuIdentifier)
      }

      // @@protoc_insertion_point(class_scope:perfetto.protos.CpuInfo.ArmCpuIdentifier)
      private static final perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier();
      }

      public static perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<ArmCpuIdentifier>
          PARSER = new com.google.protobuf.AbstractParser<ArmCpuIdentifier>() {
        @java.lang.Override
        public ArmCpuIdentifier parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<ArmCpuIdentifier> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<ArmCpuIdentifier> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface CpuOrBuilder extends
        // @@protoc_insertion_point(interface_extends:perfetto.protos.CpuInfo.Cpu)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Value of "Processor" field from /proc/cpuinfo for this CPU.
       * Example: "AArch64 Processor rev 12 (aarch64)"
       * </pre>
       *
       * <code>optional string processor = 1;</code>
       * @return Whether the processor field is set.
       */
      boolean hasProcessor();
      /**
       * <pre>
       * Value of "Processor" field from /proc/cpuinfo for this CPU.
       * Example: "AArch64 Processor rev 12 (aarch64)"
       * </pre>
       *
       * <code>optional string processor = 1;</code>
       * @return The processor.
       */
      java.lang.String getProcessor();
      /**
       * <pre>
       * Value of "Processor" field from /proc/cpuinfo for this CPU.
       * Example: "AArch64 Processor rev 12 (aarch64)"
       * </pre>
       *
       * <code>optional string processor = 1;</code>
       * @return The bytes for processor.
       */
      com.google.protobuf.ByteString
          getProcessorBytes();

      /**
       * <pre>
       * Frequencies from
       * /sys/devices/system/cpu/cpuX/cpufreq/scaling_available_frequencies
       * where X is the index of this CPU.
       * </pre>
       *
       * <code>repeated uint32 frequencies = 2;</code>
       * @return A list containing the frequencies.
       */
      java.util.List<java.lang.Integer> getFrequenciesList();
      /**
       * <pre>
       * Frequencies from
       * /sys/devices/system/cpu/cpuX/cpufreq/scaling_available_frequencies
       * where X is the index of this CPU.
       * </pre>
       *
       * <code>repeated uint32 frequencies = 2;</code>
       * @return The count of frequencies.
       */
      int getFrequenciesCount();
      /**
       * <pre>
       * Frequencies from
       * /sys/devices/system/cpu/cpuX/cpufreq/scaling_available_frequencies
       * where X is the index of this CPU.
       * </pre>
       *
       * <code>repeated uint32 frequencies = 2;</code>
       * @param index The index of the element to return.
       * @return The frequencies at the given index.
       */
      int getFrequencies(int index);

      /**
       * <pre>
       * Cpu capacity from /sys/devices/system/cpu/cpuX/cpu_capacity where X is
       * the index of this CPU.
       * </pre>
       *
       * <code>optional uint32 capacity = 3;</code>
       * @return Whether the capacity field is set.
       */
      boolean hasCapacity();
      /**
       * <pre>
       * Cpu capacity from /sys/devices/system/cpu/cpuX/cpu_capacity where X is
       * the index of this CPU.
       * </pre>
       *
       * <code>optional uint32 capacity = 3;</code>
       * @return The capacity.
       */
      int getCapacity();

      /**
       * <code>.perfetto.protos.CpuInfo.ArmCpuIdentifier arm_identifier = 4;</code>
       * @return Whether the armIdentifier field is set.
       */
      boolean hasArmIdentifier();
      /**
       * <code>.perfetto.protos.CpuInfo.ArmCpuIdentifier arm_identifier = 4;</code>
       * @return The armIdentifier.
       */
      perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier getArmIdentifier();
      /**
       * <code>.perfetto.protos.CpuInfo.ArmCpuIdentifier arm_identifier = 4;</code>
       */
      perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifierOrBuilder getArmIdentifierOrBuilder();

      perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu.IdentifierCase getIdentifierCase();
    }
    /**
     * <pre>
     * Information about a single CPU.
     * </pre>
     *
     * Protobuf type {@code perfetto.protos.CpuInfo.Cpu}
     */
    public static final class Cpu extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:perfetto.protos.CpuInfo.Cpu)
        CpuOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 29,
          /* patch= */ 3,
          /* suffix= */ "",
          Cpu.class.getName());
      }
      // Use Cpu.newBuilder() to construct.
      private Cpu(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private Cpu() {
        processor_ = "";
        frequencies_ = emptyIntList();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.CpuInfoOuterClass.internal_static_perfetto_protos_CpuInfo_Cpu_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.CpuInfoOuterClass.internal_static_perfetto_protos_CpuInfo_Cpu_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu.class, perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu.Builder.class);
      }

      private int bitField0_;
      private int identifierCase_ = 0;
      @SuppressWarnings("serial")
      private java.lang.Object identifier_;
      public enum IdentifierCase
          implements com.google.protobuf.Internal.EnumLite,
              com.google.protobuf.AbstractMessage.InternalOneOfEnum {
        ARM_IDENTIFIER(4),
        IDENTIFIER_NOT_SET(0);
        private final int value;
        private IdentifierCase(int value) {
          this.value = value;
        }
        /**
         * @param value The number of the enum to look for.
         * @return The enum associated with the given number.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static IdentifierCase valueOf(int value) {
          return forNumber(value);
        }

        public static IdentifierCase forNumber(int value) {
          switch (value) {
            case 4: return ARM_IDENTIFIER;
            case 0: return IDENTIFIER_NOT_SET;
            default: return null;
          }
        }
        public int getNumber() {
          return this.value;
        }
      };

      public IdentifierCase
      getIdentifierCase() {
        return IdentifierCase.forNumber(
            identifierCase_);
      }

      public static final int PROCESSOR_FIELD_NUMBER = 1;
      @SuppressWarnings("serial")
      private volatile java.lang.Object processor_ = "";
      /**
       * <pre>
       * Value of "Processor" field from /proc/cpuinfo for this CPU.
       * Example: "AArch64 Processor rev 12 (aarch64)"
       * </pre>
       *
       * <code>optional string processor = 1;</code>
       * @return Whether the processor field is set.
       */
      @java.lang.Override
      public boolean hasProcessor() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Value of "Processor" field from /proc/cpuinfo for this CPU.
       * Example: "AArch64 Processor rev 12 (aarch64)"
       * </pre>
       *
       * <code>optional string processor = 1;</code>
       * @return The processor.
       */
      @java.lang.Override
      public java.lang.String getProcessor() {
        java.lang.Object ref = processor_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            processor_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       * Value of "Processor" field from /proc/cpuinfo for this CPU.
       * Example: "AArch64 Processor rev 12 (aarch64)"
       * </pre>
       *
       * <code>optional string processor = 1;</code>
       * @return The bytes for processor.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getProcessorBytes() {
        java.lang.Object ref = processor_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          processor_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int FREQUENCIES_FIELD_NUMBER = 2;
      @SuppressWarnings("serial")
      private com.google.protobuf.Internal.IntList frequencies_ =
          emptyIntList();
      /**
       * <pre>
       * Frequencies from
       * /sys/devices/system/cpu/cpuX/cpufreq/scaling_available_frequencies
       * where X is the index of this CPU.
       * </pre>
       *
       * <code>repeated uint32 frequencies = 2;</code>
       * @return A list containing the frequencies.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getFrequenciesList() {
        return frequencies_;
      }
      /**
       * <pre>
       * Frequencies from
       * /sys/devices/system/cpu/cpuX/cpufreq/scaling_available_frequencies
       * where X is the index of this CPU.
       * </pre>
       *
       * <code>repeated uint32 frequencies = 2;</code>
       * @return The count of frequencies.
       */
      public int getFrequenciesCount() {
        return frequencies_.size();
      }
      /**
       * <pre>
       * Frequencies from
       * /sys/devices/system/cpu/cpuX/cpufreq/scaling_available_frequencies
       * where X is the index of this CPU.
       * </pre>
       *
       * <code>repeated uint32 frequencies = 2;</code>
       * @param index The index of the element to return.
       * @return The frequencies at the given index.
       */
      public int getFrequencies(int index) {
        return frequencies_.getInt(index);
      }

      public static final int CAPACITY_FIELD_NUMBER = 3;
      private int capacity_ = 0;
      /**
       * <pre>
       * Cpu capacity from /sys/devices/system/cpu/cpuX/cpu_capacity where X is
       * the index of this CPU.
       * </pre>
       *
       * <code>optional uint32 capacity = 3;</code>
       * @return Whether the capacity field is set.
       */
      @java.lang.Override
      public boolean hasCapacity() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Cpu capacity from /sys/devices/system/cpu/cpuX/cpu_capacity where X is
       * the index of this CPU.
       * </pre>
       *
       * <code>optional uint32 capacity = 3;</code>
       * @return The capacity.
       */
      @java.lang.Override
      public int getCapacity() {
        return capacity_;
      }

      public static final int ARM_IDENTIFIER_FIELD_NUMBER = 4;
      /**
       * <code>.perfetto.protos.CpuInfo.ArmCpuIdentifier arm_identifier = 4;</code>
       * @return Whether the armIdentifier field is set.
       */
      @java.lang.Override
      public boolean hasArmIdentifier() {
        return identifierCase_ == 4;
      }
      /**
       * <code>.perfetto.protos.CpuInfo.ArmCpuIdentifier arm_identifier = 4;</code>
       * @return The armIdentifier.
       */
      @java.lang.Override
      public perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier getArmIdentifier() {
        if (identifierCase_ == 4) {
           return (perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier) identifier_;
        }
        return perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier.getDefaultInstance();
      }
      /**
       * <code>.perfetto.protos.CpuInfo.ArmCpuIdentifier arm_identifier = 4;</code>
       */
      @java.lang.Override
      public perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifierOrBuilder getArmIdentifierOrBuilder() {
        if (identifierCase_ == 4) {
           return (perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier) identifier_;
        }
        return perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier.getDefaultInstance();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          com.google.protobuf.GeneratedMessage.writeString(output, 1, processor_);
        }
        for (int i = 0; i < frequencies_.size(); i++) {
          output.writeUInt32(2, frequencies_.getInt(i));
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeUInt32(3, capacity_);
        }
        if (identifierCase_ == 4) {
          output.writeMessage(4, (perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier) identifier_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.GeneratedMessage.computeStringSize(1, processor_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < frequencies_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(frequencies_.getInt(i));
          }
          size += dataSize;
          size += 1 * getFrequenciesList().size();
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, capacity_);
        }
        if (identifierCase_ == 4) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, (perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier) identifier_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu)) {
          return super.equals(obj);
        }
        perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu other = (perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu) obj;

        if (hasProcessor() != other.hasProcessor()) return false;
        if (hasProcessor()) {
          if (!getProcessor()
              .equals(other.getProcessor())) return false;
        }
        if (!getFrequenciesList()
            .equals(other.getFrequenciesList())) return false;
        if (hasCapacity() != other.hasCapacity()) return false;
        if (hasCapacity()) {
          if (getCapacity()
              != other.getCapacity()) return false;
        }
        if (!getIdentifierCase().equals(other.getIdentifierCase())) return false;
        switch (identifierCase_) {
          case 4:
            if (!getArmIdentifier()
                .equals(other.getArmIdentifier())) return false;
            break;
          case 0:
          default:
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasProcessor()) {
          hash = (37 * hash) + PROCESSOR_FIELD_NUMBER;
          hash = (53 * hash) + getProcessor().hashCode();
        }
        if (getFrequenciesCount() > 0) {
          hash = (37 * hash) + FREQUENCIES_FIELD_NUMBER;
          hash = (53 * hash) + getFrequenciesList().hashCode();
        }
        if (hasCapacity()) {
          hash = (37 * hash) + CAPACITY_FIELD_NUMBER;
          hash = (53 * hash) + getCapacity();
        }
        switch (identifierCase_) {
          case 4:
            hash = (37 * hash) + ARM_IDENTIFIER_FIELD_NUMBER;
            hash = (53 * hash) + getArmIdentifier().hashCode();
            break;
          case 0:
          default:
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Information about a single CPU.
       * </pre>
       *
       * Protobuf type {@code perfetto.protos.CpuInfo.Cpu}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:perfetto.protos.CpuInfo.Cpu)
          perfetto.protos.CpuInfoOuterClass.CpuInfo.CpuOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return perfetto.protos.CpuInfoOuterClass.internal_static_perfetto_protos_CpuInfo_Cpu_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return perfetto.protos.CpuInfoOuterClass.internal_static_perfetto_protos_CpuInfo_Cpu_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu.class, perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu.Builder.class);
        }

        // Construct using perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          processor_ = "";
          frequencies_ = emptyIntList();
          capacity_ = 0;
          if (armIdentifierBuilder_ != null) {
            armIdentifierBuilder_.clear();
          }
          identifierCase_ = 0;
          identifier_ = null;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return perfetto.protos.CpuInfoOuterClass.internal_static_perfetto_protos_CpuInfo_Cpu_descriptor;
        }

        @java.lang.Override
        public perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu getDefaultInstanceForType() {
          return perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu.getDefaultInstance();
        }

        @java.lang.Override
        public perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu build() {
          perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu buildPartial() {
          perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu result = new perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          buildPartialOneofs(result);
          onBuilt();
          return result;
        }

        private void buildPartial0(perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.processor_ = processor_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            frequencies_.makeImmutable();
            result.frequencies_ = frequencies_;
          }
          if (((from_bitField0_ & 0x00000004) != 0)) {
            result.capacity_ = capacity_;
            to_bitField0_ |= 0x00000002;
          }
          result.bitField0_ |= to_bitField0_;
        }

        private void buildPartialOneofs(perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu result) {
          result.identifierCase_ = identifierCase_;
          result.identifier_ = this.identifier_;
          if (identifierCase_ == 4 &&
              armIdentifierBuilder_ != null) {
            result.identifier_ = armIdentifierBuilder_.build();
          }
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu) {
            return mergeFrom((perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu other) {
          if (other == perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu.getDefaultInstance()) return this;
          if (other.hasProcessor()) {
            processor_ = other.processor_;
            bitField0_ |= 0x00000001;
            onChanged();
          }
          if (!other.frequencies_.isEmpty()) {
            if (frequencies_.isEmpty()) {
              frequencies_ = other.frequencies_;
              frequencies_.makeImmutable();
              bitField0_ |= 0x00000002;
            } else {
              ensureFrequenciesIsMutable();
              frequencies_.addAll(other.frequencies_);
            }
            onChanged();
          }
          if (other.hasCapacity()) {
            setCapacity(other.getCapacity());
          }
          switch (other.getIdentifierCase()) {
            case ARM_IDENTIFIER: {
              mergeArmIdentifier(other.getArmIdentifier());
              break;
            }
            case IDENTIFIER_NOT_SET: {
              break;
            }
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  processor_ = input.readBytes();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
                case 16: {
                  int v = input.readUInt32();
                  ensureFrequenciesIsMutable();
                  frequencies_.addInt(v);
                  break;
                } // case 16
                case 18: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  ensureFrequenciesIsMutable();
                  while (input.getBytesUntilLimit() > 0) {
                    frequencies_.addInt(input.readUInt32());
                  }
                  input.popLimit(limit);
                  break;
                } // case 18
                case 24: {
                  capacity_ = input.readUInt32();
                  bitField0_ |= 0x00000004;
                  break;
                } // case 24
                case 34: {
                  input.readMessage(
                      getArmIdentifierFieldBuilder().getBuilder(),
                      extensionRegistry);
                  identifierCase_ = 4;
                  break;
                } // case 34
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int identifierCase_ = 0;
        private java.lang.Object identifier_;
        public IdentifierCase
            getIdentifierCase() {
          return IdentifierCase.forNumber(
              identifierCase_);
        }

        public Builder clearIdentifier() {
          identifierCase_ = 0;
          identifier_ = null;
          onChanged();
          return this;
        }

        private int bitField0_;

        private java.lang.Object processor_ = "";
        /**
         * <pre>
         * Value of "Processor" field from /proc/cpuinfo for this CPU.
         * Example: "AArch64 Processor rev 12 (aarch64)"
         * </pre>
         *
         * <code>optional string processor = 1;</code>
         * @return Whether the processor field is set.
         */
        public boolean hasProcessor() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * Value of "Processor" field from /proc/cpuinfo for this CPU.
         * Example: "AArch64 Processor rev 12 (aarch64)"
         * </pre>
         *
         * <code>optional string processor = 1;</code>
         * @return The processor.
         */
        public java.lang.String getProcessor() {
          java.lang.Object ref = processor_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              processor_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Value of "Processor" field from /proc/cpuinfo for this CPU.
         * Example: "AArch64 Processor rev 12 (aarch64)"
         * </pre>
         *
         * <code>optional string processor = 1;</code>
         * @return The bytes for processor.
         */
        public com.google.protobuf.ByteString
            getProcessorBytes() {
          java.lang.Object ref = processor_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            processor_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Value of "Processor" field from /proc/cpuinfo for this CPU.
         * Example: "AArch64 Processor rev 12 (aarch64)"
         * </pre>
         *
         * <code>optional string processor = 1;</code>
         * @param value The processor to set.
         * @return This builder for chaining.
         */
        public Builder setProcessor(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          processor_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Value of "Processor" field from /proc/cpuinfo for this CPU.
         * Example: "AArch64 Processor rev 12 (aarch64)"
         * </pre>
         *
         * <code>optional string processor = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearProcessor() {
          processor_ = getDefaultInstance().getProcessor();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Value of "Processor" field from /proc/cpuinfo for this CPU.
         * Example: "AArch64 Processor rev 12 (aarch64)"
         * </pre>
         *
         * <code>optional string processor = 1;</code>
         * @param value The bytes for processor to set.
         * @return This builder for chaining.
         */
        public Builder setProcessorBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          processor_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }

        private com.google.protobuf.Internal.IntList frequencies_ = emptyIntList();
        private void ensureFrequenciesIsMutable() {
          if (!frequencies_.isModifiable()) {
            frequencies_ = makeMutableCopy(frequencies_);
          }
          bitField0_ |= 0x00000002;
        }
        /**
         * <pre>
         * Frequencies from
         * /sys/devices/system/cpu/cpuX/cpufreq/scaling_available_frequencies
         * where X is the index of this CPU.
         * </pre>
         *
         * <code>repeated uint32 frequencies = 2;</code>
         * @return A list containing the frequencies.
         */
        public java.util.List<java.lang.Integer>
            getFrequenciesList() {
          frequencies_.makeImmutable();
          return frequencies_;
        }
        /**
         * <pre>
         * Frequencies from
         * /sys/devices/system/cpu/cpuX/cpufreq/scaling_available_frequencies
         * where X is the index of this CPU.
         * </pre>
         *
         * <code>repeated uint32 frequencies = 2;</code>
         * @return The count of frequencies.
         */
        public int getFrequenciesCount() {
          return frequencies_.size();
        }
        /**
         * <pre>
         * Frequencies from
         * /sys/devices/system/cpu/cpuX/cpufreq/scaling_available_frequencies
         * where X is the index of this CPU.
         * </pre>
         *
         * <code>repeated uint32 frequencies = 2;</code>
         * @param index The index of the element to return.
         * @return The frequencies at the given index.
         */
        public int getFrequencies(int index) {
          return frequencies_.getInt(index);
        }
        /**
         * <pre>
         * Frequencies from
         * /sys/devices/system/cpu/cpuX/cpufreq/scaling_available_frequencies
         * where X is the index of this CPU.
         * </pre>
         *
         * <code>repeated uint32 frequencies = 2;</code>
         * @param index The index to set the value at.
         * @param value The frequencies to set.
         * @return This builder for chaining.
         */
        public Builder setFrequencies(
            int index, int value) {

          ensureFrequenciesIsMutable();
          frequencies_.setInt(index, value);
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Frequencies from
         * /sys/devices/system/cpu/cpuX/cpufreq/scaling_available_frequencies
         * where X is the index of this CPU.
         * </pre>
         *
         * <code>repeated uint32 frequencies = 2;</code>
         * @param value The frequencies to add.
         * @return This builder for chaining.
         */
        public Builder addFrequencies(int value) {

          ensureFrequenciesIsMutable();
          frequencies_.addInt(value);
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Frequencies from
         * /sys/devices/system/cpu/cpuX/cpufreq/scaling_available_frequencies
         * where X is the index of this CPU.
         * </pre>
         *
         * <code>repeated uint32 frequencies = 2;</code>
         * @param values The frequencies to add.
         * @return This builder for chaining.
         */
        public Builder addAllFrequencies(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureFrequenciesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, frequencies_);
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Frequencies from
         * /sys/devices/system/cpu/cpuX/cpufreq/scaling_available_frequencies
         * where X is the index of this CPU.
         * </pre>
         *
         * <code>repeated uint32 frequencies = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearFrequencies() {
          frequencies_ = emptyIntList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }

        private int capacity_ ;
        /**
         * <pre>
         * Cpu capacity from /sys/devices/system/cpu/cpuX/cpu_capacity where X is
         * the index of this CPU.
         * </pre>
         *
         * <code>optional uint32 capacity = 3;</code>
         * @return Whether the capacity field is set.
         */
        @java.lang.Override
        public boolean hasCapacity() {
          return ((bitField0_ & 0x00000004) != 0);
        }
        /**
         * <pre>
         * Cpu capacity from /sys/devices/system/cpu/cpuX/cpu_capacity where X is
         * the index of this CPU.
         * </pre>
         *
         * <code>optional uint32 capacity = 3;</code>
         * @return The capacity.
         */
        @java.lang.Override
        public int getCapacity() {
          return capacity_;
        }
        /**
         * <pre>
         * Cpu capacity from /sys/devices/system/cpu/cpuX/cpu_capacity where X is
         * the index of this CPU.
         * </pre>
         *
         * <code>optional uint32 capacity = 3;</code>
         * @param value The capacity to set.
         * @return This builder for chaining.
         */
        public Builder setCapacity(int value) {

          capacity_ = value;
          bitField0_ |= 0x00000004;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Cpu capacity from /sys/devices/system/cpu/cpuX/cpu_capacity where X is
         * the index of this CPU.
         * </pre>
         *
         * <code>optional uint32 capacity = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearCapacity() {
          bitField0_ = (bitField0_ & ~0x00000004);
          capacity_ = 0;
          onChanged();
          return this;
        }

        private com.google.protobuf.SingleFieldBuilder<
            perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier, perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier.Builder, perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifierOrBuilder> armIdentifierBuilder_;
        /**
         * <code>.perfetto.protos.CpuInfo.ArmCpuIdentifier arm_identifier = 4;</code>
         * @return Whether the armIdentifier field is set.
         */
        @java.lang.Override
        public boolean hasArmIdentifier() {
          return identifierCase_ == 4;
        }
        /**
         * <code>.perfetto.protos.CpuInfo.ArmCpuIdentifier arm_identifier = 4;</code>
         * @return The armIdentifier.
         */
        @java.lang.Override
        public perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier getArmIdentifier() {
          if (armIdentifierBuilder_ == null) {
            if (identifierCase_ == 4) {
              return (perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier) identifier_;
            }
            return perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier.getDefaultInstance();
          } else {
            if (identifierCase_ == 4) {
              return armIdentifierBuilder_.getMessage();
            }
            return perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier.getDefaultInstance();
          }
        }
        /**
         * <code>.perfetto.protos.CpuInfo.ArmCpuIdentifier arm_identifier = 4;</code>
         */
        public Builder setArmIdentifier(perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier value) {
          if (armIdentifierBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            identifier_ = value;
            onChanged();
          } else {
            armIdentifierBuilder_.setMessage(value);
          }
          identifierCase_ = 4;
          return this;
        }
        /**
         * <code>.perfetto.protos.CpuInfo.ArmCpuIdentifier arm_identifier = 4;</code>
         */
        public Builder setArmIdentifier(
            perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier.Builder builderForValue) {
          if (armIdentifierBuilder_ == null) {
            identifier_ = builderForValue.build();
            onChanged();
          } else {
            armIdentifierBuilder_.setMessage(builderForValue.build());
          }
          identifierCase_ = 4;
          return this;
        }
        /**
         * <code>.perfetto.protos.CpuInfo.ArmCpuIdentifier arm_identifier = 4;</code>
         */
        public Builder mergeArmIdentifier(perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier value) {
          if (armIdentifierBuilder_ == null) {
            if (identifierCase_ == 4 &&
                identifier_ != perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier.getDefaultInstance()) {
              identifier_ = perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier.newBuilder((perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier) identifier_)
                  .mergeFrom(value).buildPartial();
            } else {
              identifier_ = value;
            }
            onChanged();
          } else {
            if (identifierCase_ == 4) {
              armIdentifierBuilder_.mergeFrom(value);
            } else {
              armIdentifierBuilder_.setMessage(value);
            }
          }
          identifierCase_ = 4;
          return this;
        }
        /**
         * <code>.perfetto.protos.CpuInfo.ArmCpuIdentifier arm_identifier = 4;</code>
         */
        public Builder clearArmIdentifier() {
          if (armIdentifierBuilder_ == null) {
            if (identifierCase_ == 4) {
              identifierCase_ = 0;
              identifier_ = null;
              onChanged();
            }
          } else {
            if (identifierCase_ == 4) {
              identifierCase_ = 0;
              identifier_ = null;
            }
            armIdentifierBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.perfetto.protos.CpuInfo.ArmCpuIdentifier arm_identifier = 4;</code>
         */
        public perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier.Builder getArmIdentifierBuilder() {
          return getArmIdentifierFieldBuilder().getBuilder();
        }
        /**
         * <code>.perfetto.protos.CpuInfo.ArmCpuIdentifier arm_identifier = 4;</code>
         */
        @java.lang.Override
        public perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifierOrBuilder getArmIdentifierOrBuilder() {
          if ((identifierCase_ == 4) && (armIdentifierBuilder_ != null)) {
            return armIdentifierBuilder_.getMessageOrBuilder();
          } else {
            if (identifierCase_ == 4) {
              return (perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier) identifier_;
            }
            return perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier.getDefaultInstance();
          }
        }
        /**
         * <code>.perfetto.protos.CpuInfo.ArmCpuIdentifier arm_identifier = 4;</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier, perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier.Builder, perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifierOrBuilder> 
            getArmIdentifierFieldBuilder() {
          if (armIdentifierBuilder_ == null) {
            if (!(identifierCase_ == 4)) {
              identifier_ = perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier.getDefaultInstance();
            }
            armIdentifierBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier, perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier.Builder, perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifierOrBuilder>(
                    (perfetto.protos.CpuInfoOuterClass.CpuInfo.ArmCpuIdentifier) identifier_,
                    getParentForChildren(),
                    isClean());
            identifier_ = null;
          }
          identifierCase_ = 4;
          onChanged();
          return armIdentifierBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:perfetto.protos.CpuInfo.Cpu)
      }

      // @@protoc_insertion_point(class_scope:perfetto.protos.CpuInfo.Cpu)
      private static final perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu();
      }

      public static perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Cpu>
          PARSER = new com.google.protobuf.AbstractParser<Cpu>() {
        @java.lang.Override
        public Cpu parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<Cpu> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Cpu> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int CPUS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu> cpus_;
    /**
     * <pre>
     * Describes available CPUs, one entry per CPU.
     * </pre>
     *
     * <code>repeated .perfetto.protos.CpuInfo.Cpu cpus = 1;</code>
     */
    @java.lang.Override
    public java.util.List<perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu> getCpusList() {
      return cpus_;
    }
    /**
     * <pre>
     * Describes available CPUs, one entry per CPU.
     * </pre>
     *
     * <code>repeated .perfetto.protos.CpuInfo.Cpu cpus = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends perfetto.protos.CpuInfoOuterClass.CpuInfo.CpuOrBuilder> 
        getCpusOrBuilderList() {
      return cpus_;
    }
    /**
     * <pre>
     * Describes available CPUs, one entry per CPU.
     * </pre>
     *
     * <code>repeated .perfetto.protos.CpuInfo.Cpu cpus = 1;</code>
     */
    @java.lang.Override
    public int getCpusCount() {
      return cpus_.size();
    }
    /**
     * <pre>
     * Describes available CPUs, one entry per CPU.
     * </pre>
     *
     * <code>repeated .perfetto.protos.CpuInfo.Cpu cpus = 1;</code>
     */
    @java.lang.Override
    public perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu getCpus(int index) {
      return cpus_.get(index);
    }
    /**
     * <pre>
     * Describes available CPUs, one entry per CPU.
     * </pre>
     *
     * <code>repeated .perfetto.protos.CpuInfo.Cpu cpus = 1;</code>
     */
    @java.lang.Override
    public perfetto.protos.CpuInfoOuterClass.CpuInfo.CpuOrBuilder getCpusOrBuilder(
        int index) {
      return cpus_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < cpus_.size(); i++) {
        output.writeMessage(1, cpus_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < cpus_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, cpus_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof perfetto.protos.CpuInfoOuterClass.CpuInfo)) {
        return super.equals(obj);
      }
      perfetto.protos.CpuInfoOuterClass.CpuInfo other = (perfetto.protos.CpuInfoOuterClass.CpuInfo) obj;

      if (!getCpusList()
          .equals(other.getCpusList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getCpusCount() > 0) {
        hash = (37 * hash) + CPUS_FIELD_NUMBER;
        hash = (53 * hash) + getCpusList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static perfetto.protos.CpuInfoOuterClass.CpuInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.CpuInfoOuterClass.CpuInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.CpuInfoOuterClass.CpuInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.CpuInfoOuterClass.CpuInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.CpuInfoOuterClass.CpuInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.CpuInfoOuterClass.CpuInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.CpuInfoOuterClass.CpuInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.CpuInfoOuterClass.CpuInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static perfetto.protos.CpuInfoOuterClass.CpuInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static perfetto.protos.CpuInfoOuterClass.CpuInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.CpuInfoOuterClass.CpuInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.CpuInfoOuterClass.CpuInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(perfetto.protos.CpuInfoOuterClass.CpuInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Information about CPUs from procfs and sysfs.
     * </pre>
     *
     * Protobuf type {@code perfetto.protos.CpuInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:perfetto.protos.CpuInfo)
        perfetto.protos.CpuInfoOuterClass.CpuInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.CpuInfoOuterClass.internal_static_perfetto_protos_CpuInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.CpuInfoOuterClass.internal_static_perfetto_protos_CpuInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.CpuInfoOuterClass.CpuInfo.class, perfetto.protos.CpuInfoOuterClass.CpuInfo.Builder.class);
      }

      // Construct using perfetto.protos.CpuInfoOuterClass.CpuInfo.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (cpusBuilder_ == null) {
          cpus_ = java.util.Collections.emptyList();
        } else {
          cpus_ = null;
          cpusBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return perfetto.protos.CpuInfoOuterClass.internal_static_perfetto_protos_CpuInfo_descriptor;
      }

      @java.lang.Override
      public perfetto.protos.CpuInfoOuterClass.CpuInfo getDefaultInstanceForType() {
        return perfetto.protos.CpuInfoOuterClass.CpuInfo.getDefaultInstance();
      }

      @java.lang.Override
      public perfetto.protos.CpuInfoOuterClass.CpuInfo build() {
        perfetto.protos.CpuInfoOuterClass.CpuInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public perfetto.protos.CpuInfoOuterClass.CpuInfo buildPartial() {
        perfetto.protos.CpuInfoOuterClass.CpuInfo result = new perfetto.protos.CpuInfoOuterClass.CpuInfo(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(perfetto.protos.CpuInfoOuterClass.CpuInfo result) {
        if (cpusBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            cpus_ = java.util.Collections.unmodifiableList(cpus_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.cpus_ = cpus_;
        } else {
          result.cpus_ = cpusBuilder_.build();
        }
      }

      private void buildPartial0(perfetto.protos.CpuInfoOuterClass.CpuInfo result) {
        int from_bitField0_ = bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof perfetto.protos.CpuInfoOuterClass.CpuInfo) {
          return mergeFrom((perfetto.protos.CpuInfoOuterClass.CpuInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(perfetto.protos.CpuInfoOuterClass.CpuInfo other) {
        if (other == perfetto.protos.CpuInfoOuterClass.CpuInfo.getDefaultInstance()) return this;
        if (cpusBuilder_ == null) {
          if (!other.cpus_.isEmpty()) {
            if (cpus_.isEmpty()) {
              cpus_ = other.cpus_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureCpusIsMutable();
              cpus_.addAll(other.cpus_);
            }
            onChanged();
          }
        } else {
          if (!other.cpus_.isEmpty()) {
            if (cpusBuilder_.isEmpty()) {
              cpusBuilder_.dispose();
              cpusBuilder_ = null;
              cpus_ = other.cpus_;
              bitField0_ = (bitField0_ & ~0x00000001);
              cpusBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCpusFieldBuilder() : null;
            } else {
              cpusBuilder_.addAllMessages(other.cpus_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu m =
                    input.readMessage(
                        perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu.parser(),
                        extensionRegistry);
                if (cpusBuilder_ == null) {
                  ensureCpusIsMutable();
                  cpus_.add(m);
                } else {
                  cpusBuilder_.addMessage(m);
                }
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu> cpus_ =
        java.util.Collections.emptyList();
      private void ensureCpusIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          cpus_ = new java.util.ArrayList<perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu>(cpus_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu, perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu.Builder, perfetto.protos.CpuInfoOuterClass.CpuInfo.CpuOrBuilder> cpusBuilder_;

      /**
       * <pre>
       * Describes available CPUs, one entry per CPU.
       * </pre>
       *
       * <code>repeated .perfetto.protos.CpuInfo.Cpu cpus = 1;</code>
       */
      public java.util.List<perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu> getCpusList() {
        if (cpusBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cpus_);
        } else {
          return cpusBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Describes available CPUs, one entry per CPU.
       * </pre>
       *
       * <code>repeated .perfetto.protos.CpuInfo.Cpu cpus = 1;</code>
       */
      public int getCpusCount() {
        if (cpusBuilder_ == null) {
          return cpus_.size();
        } else {
          return cpusBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Describes available CPUs, one entry per CPU.
       * </pre>
       *
       * <code>repeated .perfetto.protos.CpuInfo.Cpu cpus = 1;</code>
       */
      public perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu getCpus(int index) {
        if (cpusBuilder_ == null) {
          return cpus_.get(index);
        } else {
          return cpusBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Describes available CPUs, one entry per CPU.
       * </pre>
       *
       * <code>repeated .perfetto.protos.CpuInfo.Cpu cpus = 1;</code>
       */
      public Builder setCpus(
          int index, perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu value) {
        if (cpusBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCpusIsMutable();
          cpus_.set(index, value);
          onChanged();
        } else {
          cpusBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Describes available CPUs, one entry per CPU.
       * </pre>
       *
       * <code>repeated .perfetto.protos.CpuInfo.Cpu cpus = 1;</code>
       */
      public Builder setCpus(
          int index, perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu.Builder builderForValue) {
        if (cpusBuilder_ == null) {
          ensureCpusIsMutable();
          cpus_.set(index, builderForValue.build());
          onChanged();
        } else {
          cpusBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Describes available CPUs, one entry per CPU.
       * </pre>
       *
       * <code>repeated .perfetto.protos.CpuInfo.Cpu cpus = 1;</code>
       */
      public Builder addCpus(perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu value) {
        if (cpusBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCpusIsMutable();
          cpus_.add(value);
          onChanged();
        } else {
          cpusBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Describes available CPUs, one entry per CPU.
       * </pre>
       *
       * <code>repeated .perfetto.protos.CpuInfo.Cpu cpus = 1;</code>
       */
      public Builder addCpus(
          int index, perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu value) {
        if (cpusBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCpusIsMutable();
          cpus_.add(index, value);
          onChanged();
        } else {
          cpusBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Describes available CPUs, one entry per CPU.
       * </pre>
       *
       * <code>repeated .perfetto.protos.CpuInfo.Cpu cpus = 1;</code>
       */
      public Builder addCpus(
          perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu.Builder builderForValue) {
        if (cpusBuilder_ == null) {
          ensureCpusIsMutable();
          cpus_.add(builderForValue.build());
          onChanged();
        } else {
          cpusBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Describes available CPUs, one entry per CPU.
       * </pre>
       *
       * <code>repeated .perfetto.protos.CpuInfo.Cpu cpus = 1;</code>
       */
      public Builder addCpus(
          int index, perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu.Builder builderForValue) {
        if (cpusBuilder_ == null) {
          ensureCpusIsMutable();
          cpus_.add(index, builderForValue.build());
          onChanged();
        } else {
          cpusBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Describes available CPUs, one entry per CPU.
       * </pre>
       *
       * <code>repeated .perfetto.protos.CpuInfo.Cpu cpus = 1;</code>
       */
      public Builder addAllCpus(
          java.lang.Iterable<? extends perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu> values) {
        if (cpusBuilder_ == null) {
          ensureCpusIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, cpus_);
          onChanged();
        } else {
          cpusBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Describes available CPUs, one entry per CPU.
       * </pre>
       *
       * <code>repeated .perfetto.protos.CpuInfo.Cpu cpus = 1;</code>
       */
      public Builder clearCpus() {
        if (cpusBuilder_ == null) {
          cpus_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          cpusBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Describes available CPUs, one entry per CPU.
       * </pre>
       *
       * <code>repeated .perfetto.protos.CpuInfo.Cpu cpus = 1;</code>
       */
      public Builder removeCpus(int index) {
        if (cpusBuilder_ == null) {
          ensureCpusIsMutable();
          cpus_.remove(index);
          onChanged();
        } else {
          cpusBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Describes available CPUs, one entry per CPU.
       * </pre>
       *
       * <code>repeated .perfetto.protos.CpuInfo.Cpu cpus = 1;</code>
       */
      public perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu.Builder getCpusBuilder(
          int index) {
        return getCpusFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Describes available CPUs, one entry per CPU.
       * </pre>
       *
       * <code>repeated .perfetto.protos.CpuInfo.Cpu cpus = 1;</code>
       */
      public perfetto.protos.CpuInfoOuterClass.CpuInfo.CpuOrBuilder getCpusOrBuilder(
          int index) {
        if (cpusBuilder_ == null) {
          return cpus_.get(index);  } else {
          return cpusBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Describes available CPUs, one entry per CPU.
       * </pre>
       *
       * <code>repeated .perfetto.protos.CpuInfo.Cpu cpus = 1;</code>
       */
      public java.util.List<? extends perfetto.protos.CpuInfoOuterClass.CpuInfo.CpuOrBuilder> 
           getCpusOrBuilderList() {
        if (cpusBuilder_ != null) {
          return cpusBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cpus_);
        }
      }
      /**
       * <pre>
       * Describes available CPUs, one entry per CPU.
       * </pre>
       *
       * <code>repeated .perfetto.protos.CpuInfo.Cpu cpus = 1;</code>
       */
      public perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu.Builder addCpusBuilder() {
        return getCpusFieldBuilder().addBuilder(
            perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu.getDefaultInstance());
      }
      /**
       * <pre>
       * Describes available CPUs, one entry per CPU.
       * </pre>
       *
       * <code>repeated .perfetto.protos.CpuInfo.Cpu cpus = 1;</code>
       */
      public perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu.Builder addCpusBuilder(
          int index) {
        return getCpusFieldBuilder().addBuilder(
            index, perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu.getDefaultInstance());
      }
      /**
       * <pre>
       * Describes available CPUs, one entry per CPU.
       * </pre>
       *
       * <code>repeated .perfetto.protos.CpuInfo.Cpu cpus = 1;</code>
       */
      public java.util.List<perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu.Builder> 
           getCpusBuilderList() {
        return getCpusFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu, perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu.Builder, perfetto.protos.CpuInfoOuterClass.CpuInfo.CpuOrBuilder> 
          getCpusFieldBuilder() {
        if (cpusBuilder_ == null) {
          cpusBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu, perfetto.protos.CpuInfoOuterClass.CpuInfo.Cpu.Builder, perfetto.protos.CpuInfoOuterClass.CpuInfo.CpuOrBuilder>(
                  cpus_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          cpus_ = null;
        }
        return cpusBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:perfetto.protos.CpuInfo)
    }

    // @@protoc_insertion_point(class_scope:perfetto.protos.CpuInfo)
    private static final perfetto.protos.CpuInfoOuterClass.CpuInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new perfetto.protos.CpuInfoOuterClass.CpuInfo();
    }

    public static perfetto.protos.CpuInfoOuterClass.CpuInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CpuInfo>
        PARSER = new com.google.protobuf.AbstractParser<CpuInfo>() {
      @java.lang.Override
      public CpuInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CpuInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CpuInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public perfetto.protos.CpuInfoOuterClass.CpuInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_CpuInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_perfetto_protos_CpuInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_CpuInfo_ArmCpuIdentifier_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_perfetto_protos_CpuInfo_ArmCpuIdentifier_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_CpuInfo_Cpu_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_perfetto_protos_CpuInfo_Cpu_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n0protos/perfetto/trace/system_info/cpu_" +
      "info.proto\022\017perfetto.protos\"\272\002\n\007CpuInfo\022" +
      "*\n\004cpus\030\001 \003(\0132\034.perfetto.protos.CpuInfo." +
      "Cpu\032n\n\020ArmCpuIdentifier\022\023\n\013implementer\030\001" +
      " \001(\r\022\024\n\014architecture\030\002 \001(\r\022\017\n\007variant\030\003 " +
      "\001(\r\022\014\n\004part\030\004 \001(\r\022\020\n\010revision\030\005 \001(\r\032\222\001\n\003" +
      "Cpu\022\021\n\tprocessor\030\001 \001(\t\022\023\n\013frequencies\030\002 " +
      "\003(\r\022\020\n\010capacity\030\003 \001(\r\022C\n\016arm_identifier\030" +
      "\004 \001(\0132).perfetto.protos.CpuInfo.ArmCpuId" +
      "entifierH\000B\014\n\nidentifier"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_perfetto_protos_CpuInfo_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_perfetto_protos_CpuInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_perfetto_protos_CpuInfo_descriptor,
        new java.lang.String[] { "Cpus", });
    internal_static_perfetto_protos_CpuInfo_ArmCpuIdentifier_descriptor =
      internal_static_perfetto_protos_CpuInfo_descriptor.getNestedTypes().get(0);
    internal_static_perfetto_protos_CpuInfo_ArmCpuIdentifier_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_perfetto_protos_CpuInfo_ArmCpuIdentifier_descriptor,
        new java.lang.String[] { "Implementer", "Architecture", "Variant", "Part", "Revision", });
    internal_static_perfetto_protos_CpuInfo_Cpu_descriptor =
      internal_static_perfetto_protos_CpuInfo_descriptor.getNestedTypes().get(1);
    internal_static_perfetto_protos_CpuInfo_Cpu_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_perfetto_protos_CpuInfo_Cpu_descriptor,
        new java.lang.String[] { "Processor", "Frequencies", "Capacity", "ArmIdentifier", "Identifier", });
    descriptor.resolveAllFeaturesImmutable();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
