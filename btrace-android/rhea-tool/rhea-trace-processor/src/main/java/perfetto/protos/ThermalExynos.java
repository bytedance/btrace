// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: protos/perfetto/trace/ftrace/thermal_exynos.proto
// Protobuf Java Version: 4.29.3

package perfetto.protos;

public final class ThermalExynos {
  private ThermalExynos() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 3,
      /* suffix= */ "",
      ThermalExynos.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ThermalExynosAcpmBulkFtraceEventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:perfetto.protos.ThermalExynosAcpmBulkFtraceEvent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 tz_id = 1;</code>
     * @return Whether the tzId field is set.
     */
    boolean hasTzId();
    /**
     * <code>optional uint32 tz_id = 1;</code>
     * @return The tzId.
     */
    int getTzId();

    /**
     * <code>optional uint32 current_temp = 2;</code>
     * @return Whether the currentTemp field is set.
     */
    boolean hasCurrentTemp();
    /**
     * <code>optional uint32 current_temp = 2;</code>
     * @return The currentTemp.
     */
    int getCurrentTemp();

    /**
     * <code>optional uint32 ctrl_temp = 3;</code>
     * @return Whether the ctrlTemp field is set.
     */
    boolean hasCtrlTemp();
    /**
     * <code>optional uint32 ctrl_temp = 3;</code>
     * @return The ctrlTemp.
     */
    int getCtrlTemp();

    /**
     * <code>optional uint32 cdev_state = 4;</code>
     * @return Whether the cdevState field is set.
     */
    boolean hasCdevState();
    /**
     * <code>optional uint32 cdev_state = 4;</code>
     * @return The cdevState.
     */
    int getCdevState();

    /**
     * <code>optional int32 pid_et_p = 5;</code>
     * @return Whether the pidEtP field is set.
     */
    boolean hasPidEtP();
    /**
     * <code>optional int32 pid_et_p = 5;</code>
     * @return The pidEtP.
     */
    int getPidEtP();

    /**
     * <code>optional int32 pid_power_range = 6;</code>
     * @return Whether the pidPowerRange field is set.
     */
    boolean hasPidPowerRange();
    /**
     * <code>optional int32 pid_power_range = 6;</code>
     * @return The pidPowerRange.
     */
    int getPidPowerRange();

    /**
     * <code>optional int32 pid_p = 7;</code>
     * @return Whether the pidP field is set.
     */
    boolean hasPidP();
    /**
     * <code>optional int32 pid_p = 7;</code>
     * @return The pidP.
     */
    int getPidP();

    /**
     * <code>optional int32 pid_i = 8;</code>
     * @return Whether the pidI field is set.
     */
    boolean hasPidI();
    /**
     * <code>optional int32 pid_i = 8;</code>
     * @return The pidI.
     */
    int getPidI();

    /**
     * <code>optional int32 k_p = 9;</code>
     * @return Whether the kP field is set.
     */
    boolean hasKP();
    /**
     * <code>optional int32 k_p = 9;</code>
     * @return The kP.
     */
    int getKP();

    /**
     * <code>optional int32 k_i = 10;</code>
     * @return Whether the kI field is set.
     */
    boolean hasKI();
    /**
     * <code>optional int32 k_i = 10;</code>
     * @return The kI.
     */
    int getKI();

    /**
     * <code>optional uint64 timestamp = 11;</code>
     * @return Whether the timestamp field is set.
     */
    boolean hasTimestamp();
    /**
     * <code>optional uint64 timestamp = 11;</code>
     * @return The timestamp.
     */
    long getTimestamp();
  }
  /**
   * Protobuf type {@code perfetto.protos.ThermalExynosAcpmBulkFtraceEvent}
   */
  public static final class ThermalExynosAcpmBulkFtraceEvent extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:perfetto.protos.ThermalExynosAcpmBulkFtraceEvent)
      ThermalExynosAcpmBulkFtraceEventOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 3,
        /* suffix= */ "",
        ThermalExynosAcpmBulkFtraceEvent.class.getName());
    }
    // Use ThermalExynosAcpmBulkFtraceEvent.newBuilder() to construct.
    private ThermalExynosAcpmBulkFtraceEvent(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private ThermalExynosAcpmBulkFtraceEvent() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return perfetto.protos.ThermalExynos.internal_static_perfetto_protos_ThermalExynosAcpmBulkFtraceEvent_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return perfetto.protos.ThermalExynos.internal_static_perfetto_protos_ThermalExynosAcpmBulkFtraceEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              perfetto.protos.ThermalExynos.ThermalExynosAcpmBulkFtraceEvent.class, perfetto.protos.ThermalExynos.ThermalExynosAcpmBulkFtraceEvent.Builder.class);
    }

    private int bitField0_;
    public static final int TZ_ID_FIELD_NUMBER = 1;
    private int tzId_ = 0;
    /**
     * <code>optional uint32 tz_id = 1;</code>
     * @return Whether the tzId field is set.
     */
    @java.lang.Override
    public boolean hasTzId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional uint32 tz_id = 1;</code>
     * @return The tzId.
     */
    @java.lang.Override
    public int getTzId() {
      return tzId_;
    }

    public static final int CURRENT_TEMP_FIELD_NUMBER = 2;
    private int currentTemp_ = 0;
    /**
     * <code>optional uint32 current_temp = 2;</code>
     * @return Whether the currentTemp field is set.
     */
    @java.lang.Override
    public boolean hasCurrentTemp() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional uint32 current_temp = 2;</code>
     * @return The currentTemp.
     */
    @java.lang.Override
    public int getCurrentTemp() {
      return currentTemp_;
    }

    public static final int CTRL_TEMP_FIELD_NUMBER = 3;
    private int ctrlTemp_ = 0;
    /**
     * <code>optional uint32 ctrl_temp = 3;</code>
     * @return Whether the ctrlTemp field is set.
     */
    @java.lang.Override
    public boolean hasCtrlTemp() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional uint32 ctrl_temp = 3;</code>
     * @return The ctrlTemp.
     */
    @java.lang.Override
    public int getCtrlTemp() {
      return ctrlTemp_;
    }

    public static final int CDEV_STATE_FIELD_NUMBER = 4;
    private int cdevState_ = 0;
    /**
     * <code>optional uint32 cdev_state = 4;</code>
     * @return Whether the cdevState field is set.
     */
    @java.lang.Override
    public boolean hasCdevState() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional uint32 cdev_state = 4;</code>
     * @return The cdevState.
     */
    @java.lang.Override
    public int getCdevState() {
      return cdevState_;
    }

    public static final int PID_ET_P_FIELD_NUMBER = 5;
    private int pidEtP_ = 0;
    /**
     * <code>optional int32 pid_et_p = 5;</code>
     * @return Whether the pidEtP field is set.
     */
    @java.lang.Override
    public boolean hasPidEtP() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional int32 pid_et_p = 5;</code>
     * @return The pidEtP.
     */
    @java.lang.Override
    public int getPidEtP() {
      return pidEtP_;
    }

    public static final int PID_POWER_RANGE_FIELD_NUMBER = 6;
    private int pidPowerRange_ = 0;
    /**
     * <code>optional int32 pid_power_range = 6;</code>
     * @return Whether the pidPowerRange field is set.
     */
    @java.lang.Override
    public boolean hasPidPowerRange() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>optional int32 pid_power_range = 6;</code>
     * @return The pidPowerRange.
     */
    @java.lang.Override
    public int getPidPowerRange() {
      return pidPowerRange_;
    }

    public static final int PID_P_FIELD_NUMBER = 7;
    private int pidP_ = 0;
    /**
     * <code>optional int32 pid_p = 7;</code>
     * @return Whether the pidP field is set.
     */
    @java.lang.Override
    public boolean hasPidP() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <code>optional int32 pid_p = 7;</code>
     * @return The pidP.
     */
    @java.lang.Override
    public int getPidP() {
      return pidP_;
    }

    public static final int PID_I_FIELD_NUMBER = 8;
    private int pidI_ = 0;
    /**
     * <code>optional int32 pid_i = 8;</code>
     * @return Whether the pidI field is set.
     */
    @java.lang.Override
    public boolean hasPidI() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <code>optional int32 pid_i = 8;</code>
     * @return The pidI.
     */
    @java.lang.Override
    public int getPidI() {
      return pidI_;
    }

    public static final int K_P_FIELD_NUMBER = 9;
    private int kP_ = 0;
    /**
     * <code>optional int32 k_p = 9;</code>
     * @return Whether the kP field is set.
     */
    @java.lang.Override
    public boolean hasKP() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <code>optional int32 k_p = 9;</code>
     * @return The kP.
     */
    @java.lang.Override
    public int getKP() {
      return kP_;
    }

    public static final int K_I_FIELD_NUMBER = 10;
    private int kI_ = 0;
    /**
     * <code>optional int32 k_i = 10;</code>
     * @return Whether the kI field is set.
     */
    @java.lang.Override
    public boolean hasKI() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <code>optional int32 k_i = 10;</code>
     * @return The kI.
     */
    @java.lang.Override
    public int getKI() {
      return kI_;
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 11;
    private long timestamp_ = 0L;
    /**
     * <code>optional uint64 timestamp = 11;</code>
     * @return Whether the timestamp field is set.
     */
    @java.lang.Override
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <code>optional uint64 timestamp = 11;</code>
     * @return The timestamp.
     */
    @java.lang.Override
    public long getTimestamp() {
      return timestamp_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeUInt32(1, tzId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt32(2, currentTemp_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeUInt32(3, ctrlTemp_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeUInt32(4, cdevState_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeInt32(5, pidEtP_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeInt32(6, pidPowerRange_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeInt32(7, pidP_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeInt32(8, pidI_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        output.writeInt32(9, kP_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        output.writeInt32(10, kI_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        output.writeUInt64(11, timestamp_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, tzId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, currentTemp_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, ctrlTemp_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, cdevState_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, pidEtP_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, pidPowerRange_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, pidP_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, pidI_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, kP_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, kI_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(11, timestamp_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof perfetto.protos.ThermalExynos.ThermalExynosAcpmBulkFtraceEvent)) {
        return super.equals(obj);
      }
      perfetto.protos.ThermalExynos.ThermalExynosAcpmBulkFtraceEvent other = (perfetto.protos.ThermalExynos.ThermalExynosAcpmBulkFtraceEvent) obj;

      if (hasTzId() != other.hasTzId()) return false;
      if (hasTzId()) {
        if (getTzId()
            != other.getTzId()) return false;
      }
      if (hasCurrentTemp() != other.hasCurrentTemp()) return false;
      if (hasCurrentTemp()) {
        if (getCurrentTemp()
            != other.getCurrentTemp()) return false;
      }
      if (hasCtrlTemp() != other.hasCtrlTemp()) return false;
      if (hasCtrlTemp()) {
        if (getCtrlTemp()
            != other.getCtrlTemp()) return false;
      }
      if (hasCdevState() != other.hasCdevState()) return false;
      if (hasCdevState()) {
        if (getCdevState()
            != other.getCdevState()) return false;
      }
      if (hasPidEtP() != other.hasPidEtP()) return false;
      if (hasPidEtP()) {
        if (getPidEtP()
            != other.getPidEtP()) return false;
      }
      if (hasPidPowerRange() != other.hasPidPowerRange()) return false;
      if (hasPidPowerRange()) {
        if (getPidPowerRange()
            != other.getPidPowerRange()) return false;
      }
      if (hasPidP() != other.hasPidP()) return false;
      if (hasPidP()) {
        if (getPidP()
            != other.getPidP()) return false;
      }
      if (hasPidI() != other.hasPidI()) return false;
      if (hasPidI()) {
        if (getPidI()
            != other.getPidI()) return false;
      }
      if (hasKP() != other.hasKP()) return false;
      if (hasKP()) {
        if (getKP()
            != other.getKP()) return false;
      }
      if (hasKI() != other.hasKI()) return false;
      if (hasKI()) {
        if (getKI()
            != other.getKI()) return false;
      }
      if (hasTimestamp() != other.hasTimestamp()) return false;
      if (hasTimestamp()) {
        if (getTimestamp()
            != other.getTimestamp()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTzId()) {
        hash = (37 * hash) + TZ_ID_FIELD_NUMBER;
        hash = (53 * hash) + getTzId();
      }
      if (hasCurrentTemp()) {
        hash = (37 * hash) + CURRENT_TEMP_FIELD_NUMBER;
        hash = (53 * hash) + getCurrentTemp();
      }
      if (hasCtrlTemp()) {
        hash = (37 * hash) + CTRL_TEMP_FIELD_NUMBER;
        hash = (53 * hash) + getCtrlTemp();
      }
      if (hasCdevState()) {
        hash = (37 * hash) + CDEV_STATE_FIELD_NUMBER;
        hash = (53 * hash) + getCdevState();
      }
      if (hasPidEtP()) {
        hash = (37 * hash) + PID_ET_P_FIELD_NUMBER;
        hash = (53 * hash) + getPidEtP();
      }
      if (hasPidPowerRange()) {
        hash = (37 * hash) + PID_POWER_RANGE_FIELD_NUMBER;
        hash = (53 * hash) + getPidPowerRange();
      }
      if (hasPidP()) {
        hash = (37 * hash) + PID_P_FIELD_NUMBER;
        hash = (53 * hash) + getPidP();
      }
      if (hasPidI()) {
        hash = (37 * hash) + PID_I_FIELD_NUMBER;
        hash = (53 * hash) + getPidI();
      }
      if (hasKP()) {
        hash = (37 * hash) + K_P_FIELD_NUMBER;
        hash = (53 * hash) + getKP();
      }
      if (hasKI()) {
        hash = (37 * hash) + K_I_FIELD_NUMBER;
        hash = (53 * hash) + getKI();
      }
      if (hasTimestamp()) {
        hash = (37 * hash) + TIMESTAMP_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getTimestamp());
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static perfetto.protos.ThermalExynos.ThermalExynosAcpmBulkFtraceEvent parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.ThermalExynos.ThermalExynosAcpmBulkFtraceEvent parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.ThermalExynos.ThermalExynosAcpmBulkFtraceEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.ThermalExynos.ThermalExynosAcpmBulkFtraceEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.ThermalExynos.ThermalExynosAcpmBulkFtraceEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.ThermalExynos.ThermalExynosAcpmBulkFtraceEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.ThermalExynos.ThermalExynosAcpmBulkFtraceEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.ThermalExynos.ThermalExynosAcpmBulkFtraceEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static perfetto.protos.ThermalExynos.ThermalExynosAcpmBulkFtraceEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static perfetto.protos.ThermalExynos.ThermalExynosAcpmBulkFtraceEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.ThermalExynos.ThermalExynosAcpmBulkFtraceEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.ThermalExynos.ThermalExynosAcpmBulkFtraceEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(perfetto.protos.ThermalExynos.ThermalExynosAcpmBulkFtraceEvent prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code perfetto.protos.ThermalExynosAcpmBulkFtraceEvent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:perfetto.protos.ThermalExynosAcpmBulkFtraceEvent)
        perfetto.protos.ThermalExynos.ThermalExynosAcpmBulkFtraceEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.ThermalExynos.internal_static_perfetto_protos_ThermalExynosAcpmBulkFtraceEvent_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.ThermalExynos.internal_static_perfetto_protos_ThermalExynosAcpmBulkFtraceEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.ThermalExynos.ThermalExynosAcpmBulkFtraceEvent.class, perfetto.protos.ThermalExynos.ThermalExynosAcpmBulkFtraceEvent.Builder.class);
      }

      // Construct using perfetto.protos.ThermalExynos.ThermalExynosAcpmBulkFtraceEvent.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        tzId_ = 0;
        currentTemp_ = 0;
        ctrlTemp_ = 0;
        cdevState_ = 0;
        pidEtP_ = 0;
        pidPowerRange_ = 0;
        pidP_ = 0;
        pidI_ = 0;
        kP_ = 0;
        kI_ = 0;
        timestamp_ = 0L;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return perfetto.protos.ThermalExynos.internal_static_perfetto_protos_ThermalExynosAcpmBulkFtraceEvent_descriptor;
      }

      @java.lang.Override
      public perfetto.protos.ThermalExynos.ThermalExynosAcpmBulkFtraceEvent getDefaultInstanceForType() {
        return perfetto.protos.ThermalExynos.ThermalExynosAcpmBulkFtraceEvent.getDefaultInstance();
      }

      @java.lang.Override
      public perfetto.protos.ThermalExynos.ThermalExynosAcpmBulkFtraceEvent build() {
        perfetto.protos.ThermalExynos.ThermalExynosAcpmBulkFtraceEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public perfetto.protos.ThermalExynos.ThermalExynosAcpmBulkFtraceEvent buildPartial() {
        perfetto.protos.ThermalExynos.ThermalExynosAcpmBulkFtraceEvent result = new perfetto.protos.ThermalExynos.ThermalExynosAcpmBulkFtraceEvent(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(perfetto.protos.ThermalExynos.ThermalExynosAcpmBulkFtraceEvent result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.tzId_ = tzId_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.currentTemp_ = currentTemp_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.ctrlTemp_ = ctrlTemp_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.cdevState_ = cdevState_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.pidEtP_ = pidEtP_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.pidPowerRange_ = pidPowerRange_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.pidP_ = pidP_;
          to_bitField0_ |= 0x00000040;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.pidI_ = pidI_;
          to_bitField0_ |= 0x00000080;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.kP_ = kP_;
          to_bitField0_ |= 0x00000100;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.kI_ = kI_;
          to_bitField0_ |= 0x00000200;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.timestamp_ = timestamp_;
          to_bitField0_ |= 0x00000400;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof perfetto.protos.ThermalExynos.ThermalExynosAcpmBulkFtraceEvent) {
          return mergeFrom((perfetto.protos.ThermalExynos.ThermalExynosAcpmBulkFtraceEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(perfetto.protos.ThermalExynos.ThermalExynosAcpmBulkFtraceEvent other) {
        if (other == perfetto.protos.ThermalExynos.ThermalExynosAcpmBulkFtraceEvent.getDefaultInstance()) return this;
        if (other.hasTzId()) {
          setTzId(other.getTzId());
        }
        if (other.hasCurrentTemp()) {
          setCurrentTemp(other.getCurrentTemp());
        }
        if (other.hasCtrlTemp()) {
          setCtrlTemp(other.getCtrlTemp());
        }
        if (other.hasCdevState()) {
          setCdevState(other.getCdevState());
        }
        if (other.hasPidEtP()) {
          setPidEtP(other.getPidEtP());
        }
        if (other.hasPidPowerRange()) {
          setPidPowerRange(other.getPidPowerRange());
        }
        if (other.hasPidP()) {
          setPidP(other.getPidP());
        }
        if (other.hasPidI()) {
          setPidI(other.getPidI());
        }
        if (other.hasKP()) {
          setKP(other.getKP());
        }
        if (other.hasKI()) {
          setKI(other.getKI());
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                tzId_ = input.readUInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                currentTemp_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                ctrlTemp_ = input.readUInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                cdevState_ = input.readUInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                pidEtP_ = input.readInt32();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                pidPowerRange_ = input.readInt32();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 56: {
                pidP_ = input.readInt32();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
              case 64: {
                pidI_ = input.readInt32();
                bitField0_ |= 0x00000080;
                break;
              } // case 64
              case 72: {
                kP_ = input.readInt32();
                bitField0_ |= 0x00000100;
                break;
              } // case 72
              case 80: {
                kI_ = input.readInt32();
                bitField0_ |= 0x00000200;
                break;
              } // case 80
              case 88: {
                timestamp_ = input.readUInt64();
                bitField0_ |= 0x00000400;
                break;
              } // case 88
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int tzId_ ;
      /**
       * <code>optional uint32 tz_id = 1;</code>
       * @return Whether the tzId field is set.
       */
      @java.lang.Override
      public boolean hasTzId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional uint32 tz_id = 1;</code>
       * @return The tzId.
       */
      @java.lang.Override
      public int getTzId() {
        return tzId_;
      }
      /**
       * <code>optional uint32 tz_id = 1;</code>
       * @param value The tzId to set.
       * @return This builder for chaining.
       */
      public Builder setTzId(int value) {

        tzId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 tz_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTzId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tzId_ = 0;
        onChanged();
        return this;
      }

      private int currentTemp_ ;
      /**
       * <code>optional uint32 current_temp = 2;</code>
       * @return Whether the currentTemp field is set.
       */
      @java.lang.Override
      public boolean hasCurrentTemp() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 current_temp = 2;</code>
       * @return The currentTemp.
       */
      @java.lang.Override
      public int getCurrentTemp() {
        return currentTemp_;
      }
      /**
       * <code>optional uint32 current_temp = 2;</code>
       * @param value The currentTemp to set.
       * @return This builder for chaining.
       */
      public Builder setCurrentTemp(int value) {

        currentTemp_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 current_temp = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearCurrentTemp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        currentTemp_ = 0;
        onChanged();
        return this;
      }

      private int ctrlTemp_ ;
      /**
       * <code>optional uint32 ctrl_temp = 3;</code>
       * @return Whether the ctrlTemp field is set.
       */
      @java.lang.Override
      public boolean hasCtrlTemp() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional uint32 ctrl_temp = 3;</code>
       * @return The ctrlTemp.
       */
      @java.lang.Override
      public int getCtrlTemp() {
        return ctrlTemp_;
      }
      /**
       * <code>optional uint32 ctrl_temp = 3;</code>
       * @param value The ctrlTemp to set.
       * @return This builder for chaining.
       */
      public Builder setCtrlTemp(int value) {

        ctrlTemp_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ctrl_temp = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearCtrlTemp() {
        bitField0_ = (bitField0_ & ~0x00000004);
        ctrlTemp_ = 0;
        onChanged();
        return this;
      }

      private int cdevState_ ;
      /**
       * <code>optional uint32 cdev_state = 4;</code>
       * @return Whether the cdevState field is set.
       */
      @java.lang.Override
      public boolean hasCdevState() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional uint32 cdev_state = 4;</code>
       * @return The cdevState.
       */
      @java.lang.Override
      public int getCdevState() {
        return cdevState_;
      }
      /**
       * <code>optional uint32 cdev_state = 4;</code>
       * @param value The cdevState to set.
       * @return This builder for chaining.
       */
      public Builder setCdevState(int value) {

        cdevState_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 cdev_state = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearCdevState() {
        bitField0_ = (bitField0_ & ~0x00000008);
        cdevState_ = 0;
        onChanged();
        return this;
      }

      private int pidEtP_ ;
      /**
       * <code>optional int32 pid_et_p = 5;</code>
       * @return Whether the pidEtP field is set.
       */
      @java.lang.Override
      public boolean hasPidEtP() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional int32 pid_et_p = 5;</code>
       * @return The pidEtP.
       */
      @java.lang.Override
      public int getPidEtP() {
        return pidEtP_;
      }
      /**
       * <code>optional int32 pid_et_p = 5;</code>
       * @param value The pidEtP to set.
       * @return This builder for chaining.
       */
      public Builder setPidEtP(int value) {

        pidEtP_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pid_et_p = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearPidEtP() {
        bitField0_ = (bitField0_ & ~0x00000010);
        pidEtP_ = 0;
        onChanged();
        return this;
      }

      private int pidPowerRange_ ;
      /**
       * <code>optional int32 pid_power_range = 6;</code>
       * @return Whether the pidPowerRange field is set.
       */
      @java.lang.Override
      public boolean hasPidPowerRange() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional int32 pid_power_range = 6;</code>
       * @return The pidPowerRange.
       */
      @java.lang.Override
      public int getPidPowerRange() {
        return pidPowerRange_;
      }
      /**
       * <code>optional int32 pid_power_range = 6;</code>
       * @param value The pidPowerRange to set.
       * @return This builder for chaining.
       */
      public Builder setPidPowerRange(int value) {

        pidPowerRange_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pid_power_range = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearPidPowerRange() {
        bitField0_ = (bitField0_ & ~0x00000020);
        pidPowerRange_ = 0;
        onChanged();
        return this;
      }

      private int pidP_ ;
      /**
       * <code>optional int32 pid_p = 7;</code>
       * @return Whether the pidP field is set.
       */
      @java.lang.Override
      public boolean hasPidP() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional int32 pid_p = 7;</code>
       * @return The pidP.
       */
      @java.lang.Override
      public int getPidP() {
        return pidP_;
      }
      /**
       * <code>optional int32 pid_p = 7;</code>
       * @param value The pidP to set.
       * @return This builder for chaining.
       */
      public Builder setPidP(int value) {

        pidP_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pid_p = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearPidP() {
        bitField0_ = (bitField0_ & ~0x00000040);
        pidP_ = 0;
        onChanged();
        return this;
      }

      private int pidI_ ;
      /**
       * <code>optional int32 pid_i = 8;</code>
       * @return Whether the pidI field is set.
       */
      @java.lang.Override
      public boolean hasPidI() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <code>optional int32 pid_i = 8;</code>
       * @return The pidI.
       */
      @java.lang.Override
      public int getPidI() {
        return pidI_;
      }
      /**
       * <code>optional int32 pid_i = 8;</code>
       * @param value The pidI to set.
       * @return This builder for chaining.
       */
      public Builder setPidI(int value) {

        pidI_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pid_i = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearPidI() {
        bitField0_ = (bitField0_ & ~0x00000080);
        pidI_ = 0;
        onChanged();
        return this;
      }

      private int kP_ ;
      /**
       * <code>optional int32 k_p = 9;</code>
       * @return Whether the kP field is set.
       */
      @java.lang.Override
      public boolean hasKP() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <code>optional int32 k_p = 9;</code>
       * @return The kP.
       */
      @java.lang.Override
      public int getKP() {
        return kP_;
      }
      /**
       * <code>optional int32 k_p = 9;</code>
       * @param value The kP to set.
       * @return This builder for chaining.
       */
      public Builder setKP(int value) {

        kP_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 k_p = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearKP() {
        bitField0_ = (bitField0_ & ~0x00000100);
        kP_ = 0;
        onChanged();
        return this;
      }

      private int kI_ ;
      /**
       * <code>optional int32 k_i = 10;</code>
       * @return Whether the kI field is set.
       */
      @java.lang.Override
      public boolean hasKI() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <code>optional int32 k_i = 10;</code>
       * @return The kI.
       */
      @java.lang.Override
      public int getKI() {
        return kI_;
      }
      /**
       * <code>optional int32 k_i = 10;</code>
       * @param value The kI to set.
       * @return This builder for chaining.
       */
      public Builder setKI(int value) {

        kI_ = value;
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 k_i = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearKI() {
        bitField0_ = (bitField0_ & ~0x00000200);
        kI_ = 0;
        onChanged();
        return this;
      }

      private long timestamp_ ;
      /**
       * <code>optional uint64 timestamp = 11;</code>
       * @return Whether the timestamp field is set.
       */
      @java.lang.Override
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <code>optional uint64 timestamp = 11;</code>
       * @return The timestamp.
       */
      @java.lang.Override
      public long getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>optional uint64 timestamp = 11;</code>
       * @param value The timestamp to set.
       * @return This builder for chaining.
       */
      public Builder setTimestamp(long value) {

        timestamp_ = value;
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 timestamp = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000400);
        timestamp_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:perfetto.protos.ThermalExynosAcpmBulkFtraceEvent)
    }

    // @@protoc_insertion_point(class_scope:perfetto.protos.ThermalExynosAcpmBulkFtraceEvent)
    private static final perfetto.protos.ThermalExynos.ThermalExynosAcpmBulkFtraceEvent DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new perfetto.protos.ThermalExynos.ThermalExynosAcpmBulkFtraceEvent();
    }

    public static perfetto.protos.ThermalExynos.ThermalExynosAcpmBulkFtraceEvent getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ThermalExynosAcpmBulkFtraceEvent>
        PARSER = new com.google.protobuf.AbstractParser<ThermalExynosAcpmBulkFtraceEvent>() {
      @java.lang.Override
      public ThermalExynosAcpmBulkFtraceEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ThermalExynosAcpmBulkFtraceEvent> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ThermalExynosAcpmBulkFtraceEvent> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public perfetto.protos.ThermalExynos.ThermalExynosAcpmBulkFtraceEvent getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ThermalExynosAcpmHighOverheadFtraceEventOrBuilder extends
      // @@protoc_insertion_point(interface_extends:perfetto.protos.ThermalExynosAcpmHighOverheadFtraceEvent)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 tz_id = 1;</code>
     * @return Whether the tzId field is set.
     */
    boolean hasTzId();
    /**
     * <code>optional int32 tz_id = 1;</code>
     * @return The tzId.
     */
    int getTzId();

    /**
     * <code>optional uint32 current_temp = 2;</code>
     * @return Whether the currentTemp field is set.
     */
    boolean hasCurrentTemp();
    /**
     * <code>optional uint32 current_temp = 2;</code>
     * @return The currentTemp.
     */
    int getCurrentTemp();

    /**
     * <code>optional uint32 ctrl_temp = 3;</code>
     * @return Whether the ctrlTemp field is set.
     */
    boolean hasCtrlTemp();
    /**
     * <code>optional uint32 ctrl_temp = 3;</code>
     * @return The ctrlTemp.
     */
    int getCtrlTemp();

    /**
     * <code>optional uint32 cdev_state = 4;</code>
     * @return Whether the cdevState field is set.
     */
    boolean hasCdevState();
    /**
     * <code>optional uint32 cdev_state = 4;</code>
     * @return The cdevState.
     */
    int getCdevState();

    /**
     * <code>optional int32 pid_et_p = 5;</code>
     * @return Whether the pidEtP field is set.
     */
    boolean hasPidEtP();
    /**
     * <code>optional int32 pid_et_p = 5;</code>
     * @return The pidEtP.
     */
    int getPidEtP();

    /**
     * <code>optional int32 k_p = 6;</code>
     * @return Whether the kP field is set.
     */
    boolean hasKP();
    /**
     * <code>optional int32 k_p = 6;</code>
     * @return The kP.
     */
    int getKP();

    /**
     * <code>optional int32 k_i = 7;</code>
     * @return Whether the kI field is set.
     */
    boolean hasKI();
    /**
     * <code>optional int32 k_i = 7;</code>
     * @return The kI.
     */
    int getKI();
  }
  /**
   * Protobuf type {@code perfetto.protos.ThermalExynosAcpmHighOverheadFtraceEvent}
   */
  public static final class ThermalExynosAcpmHighOverheadFtraceEvent extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:perfetto.protos.ThermalExynosAcpmHighOverheadFtraceEvent)
      ThermalExynosAcpmHighOverheadFtraceEventOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 3,
        /* suffix= */ "",
        ThermalExynosAcpmHighOverheadFtraceEvent.class.getName());
    }
    // Use ThermalExynosAcpmHighOverheadFtraceEvent.newBuilder() to construct.
    private ThermalExynosAcpmHighOverheadFtraceEvent(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private ThermalExynosAcpmHighOverheadFtraceEvent() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return perfetto.protos.ThermalExynos.internal_static_perfetto_protos_ThermalExynosAcpmHighOverheadFtraceEvent_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return perfetto.protos.ThermalExynos.internal_static_perfetto_protos_ThermalExynosAcpmHighOverheadFtraceEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              perfetto.protos.ThermalExynos.ThermalExynosAcpmHighOverheadFtraceEvent.class, perfetto.protos.ThermalExynos.ThermalExynosAcpmHighOverheadFtraceEvent.Builder.class);
    }

    private int bitField0_;
    public static final int TZ_ID_FIELD_NUMBER = 1;
    private int tzId_ = 0;
    /**
     * <code>optional int32 tz_id = 1;</code>
     * @return Whether the tzId field is set.
     */
    @java.lang.Override
    public boolean hasTzId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional int32 tz_id = 1;</code>
     * @return The tzId.
     */
    @java.lang.Override
    public int getTzId() {
      return tzId_;
    }

    public static final int CURRENT_TEMP_FIELD_NUMBER = 2;
    private int currentTemp_ = 0;
    /**
     * <code>optional uint32 current_temp = 2;</code>
     * @return Whether the currentTemp field is set.
     */
    @java.lang.Override
    public boolean hasCurrentTemp() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional uint32 current_temp = 2;</code>
     * @return The currentTemp.
     */
    @java.lang.Override
    public int getCurrentTemp() {
      return currentTemp_;
    }

    public static final int CTRL_TEMP_FIELD_NUMBER = 3;
    private int ctrlTemp_ = 0;
    /**
     * <code>optional uint32 ctrl_temp = 3;</code>
     * @return Whether the ctrlTemp field is set.
     */
    @java.lang.Override
    public boolean hasCtrlTemp() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional uint32 ctrl_temp = 3;</code>
     * @return The ctrlTemp.
     */
    @java.lang.Override
    public int getCtrlTemp() {
      return ctrlTemp_;
    }

    public static final int CDEV_STATE_FIELD_NUMBER = 4;
    private int cdevState_ = 0;
    /**
     * <code>optional uint32 cdev_state = 4;</code>
     * @return Whether the cdevState field is set.
     */
    @java.lang.Override
    public boolean hasCdevState() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional uint32 cdev_state = 4;</code>
     * @return The cdevState.
     */
    @java.lang.Override
    public int getCdevState() {
      return cdevState_;
    }

    public static final int PID_ET_P_FIELD_NUMBER = 5;
    private int pidEtP_ = 0;
    /**
     * <code>optional int32 pid_et_p = 5;</code>
     * @return Whether the pidEtP field is set.
     */
    @java.lang.Override
    public boolean hasPidEtP() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional int32 pid_et_p = 5;</code>
     * @return The pidEtP.
     */
    @java.lang.Override
    public int getPidEtP() {
      return pidEtP_;
    }

    public static final int K_P_FIELD_NUMBER = 6;
    private int kP_ = 0;
    /**
     * <code>optional int32 k_p = 6;</code>
     * @return Whether the kP field is set.
     */
    @java.lang.Override
    public boolean hasKP() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>optional int32 k_p = 6;</code>
     * @return The kP.
     */
    @java.lang.Override
    public int getKP() {
      return kP_;
    }

    public static final int K_I_FIELD_NUMBER = 7;
    private int kI_ = 0;
    /**
     * <code>optional int32 k_i = 7;</code>
     * @return Whether the kI field is set.
     */
    @java.lang.Override
    public boolean hasKI() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <code>optional int32 k_i = 7;</code>
     * @return The kI.
     */
    @java.lang.Override
    public int getKI() {
      return kI_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, tzId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt32(2, currentTemp_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeUInt32(3, ctrlTemp_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeUInt32(4, cdevState_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeInt32(5, pidEtP_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeInt32(6, kP_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeInt32(7, kI_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, tzId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, currentTemp_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, ctrlTemp_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, cdevState_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, pidEtP_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, kP_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, kI_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof perfetto.protos.ThermalExynos.ThermalExynosAcpmHighOverheadFtraceEvent)) {
        return super.equals(obj);
      }
      perfetto.protos.ThermalExynos.ThermalExynosAcpmHighOverheadFtraceEvent other = (perfetto.protos.ThermalExynos.ThermalExynosAcpmHighOverheadFtraceEvent) obj;

      if (hasTzId() != other.hasTzId()) return false;
      if (hasTzId()) {
        if (getTzId()
            != other.getTzId()) return false;
      }
      if (hasCurrentTemp() != other.hasCurrentTemp()) return false;
      if (hasCurrentTemp()) {
        if (getCurrentTemp()
            != other.getCurrentTemp()) return false;
      }
      if (hasCtrlTemp() != other.hasCtrlTemp()) return false;
      if (hasCtrlTemp()) {
        if (getCtrlTemp()
            != other.getCtrlTemp()) return false;
      }
      if (hasCdevState() != other.hasCdevState()) return false;
      if (hasCdevState()) {
        if (getCdevState()
            != other.getCdevState()) return false;
      }
      if (hasPidEtP() != other.hasPidEtP()) return false;
      if (hasPidEtP()) {
        if (getPidEtP()
            != other.getPidEtP()) return false;
      }
      if (hasKP() != other.hasKP()) return false;
      if (hasKP()) {
        if (getKP()
            != other.getKP()) return false;
      }
      if (hasKI() != other.hasKI()) return false;
      if (hasKI()) {
        if (getKI()
            != other.getKI()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTzId()) {
        hash = (37 * hash) + TZ_ID_FIELD_NUMBER;
        hash = (53 * hash) + getTzId();
      }
      if (hasCurrentTemp()) {
        hash = (37 * hash) + CURRENT_TEMP_FIELD_NUMBER;
        hash = (53 * hash) + getCurrentTemp();
      }
      if (hasCtrlTemp()) {
        hash = (37 * hash) + CTRL_TEMP_FIELD_NUMBER;
        hash = (53 * hash) + getCtrlTemp();
      }
      if (hasCdevState()) {
        hash = (37 * hash) + CDEV_STATE_FIELD_NUMBER;
        hash = (53 * hash) + getCdevState();
      }
      if (hasPidEtP()) {
        hash = (37 * hash) + PID_ET_P_FIELD_NUMBER;
        hash = (53 * hash) + getPidEtP();
      }
      if (hasKP()) {
        hash = (37 * hash) + K_P_FIELD_NUMBER;
        hash = (53 * hash) + getKP();
      }
      if (hasKI()) {
        hash = (37 * hash) + K_I_FIELD_NUMBER;
        hash = (53 * hash) + getKI();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static perfetto.protos.ThermalExynos.ThermalExynosAcpmHighOverheadFtraceEvent parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.ThermalExynos.ThermalExynosAcpmHighOverheadFtraceEvent parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.ThermalExynos.ThermalExynosAcpmHighOverheadFtraceEvent parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.ThermalExynos.ThermalExynosAcpmHighOverheadFtraceEvent parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.ThermalExynos.ThermalExynosAcpmHighOverheadFtraceEvent parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.ThermalExynos.ThermalExynosAcpmHighOverheadFtraceEvent parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.ThermalExynos.ThermalExynosAcpmHighOverheadFtraceEvent parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.ThermalExynos.ThermalExynosAcpmHighOverheadFtraceEvent parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static perfetto.protos.ThermalExynos.ThermalExynosAcpmHighOverheadFtraceEvent parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static perfetto.protos.ThermalExynos.ThermalExynosAcpmHighOverheadFtraceEvent parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.ThermalExynos.ThermalExynosAcpmHighOverheadFtraceEvent parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.ThermalExynos.ThermalExynosAcpmHighOverheadFtraceEvent parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(perfetto.protos.ThermalExynos.ThermalExynosAcpmHighOverheadFtraceEvent prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code perfetto.protos.ThermalExynosAcpmHighOverheadFtraceEvent}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:perfetto.protos.ThermalExynosAcpmHighOverheadFtraceEvent)
        perfetto.protos.ThermalExynos.ThermalExynosAcpmHighOverheadFtraceEventOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.ThermalExynos.internal_static_perfetto_protos_ThermalExynosAcpmHighOverheadFtraceEvent_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.ThermalExynos.internal_static_perfetto_protos_ThermalExynosAcpmHighOverheadFtraceEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.ThermalExynos.ThermalExynosAcpmHighOverheadFtraceEvent.class, perfetto.protos.ThermalExynos.ThermalExynosAcpmHighOverheadFtraceEvent.Builder.class);
      }

      // Construct using perfetto.protos.ThermalExynos.ThermalExynosAcpmHighOverheadFtraceEvent.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        tzId_ = 0;
        currentTemp_ = 0;
        ctrlTemp_ = 0;
        cdevState_ = 0;
        pidEtP_ = 0;
        kP_ = 0;
        kI_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return perfetto.protos.ThermalExynos.internal_static_perfetto_protos_ThermalExynosAcpmHighOverheadFtraceEvent_descriptor;
      }

      @java.lang.Override
      public perfetto.protos.ThermalExynos.ThermalExynosAcpmHighOverheadFtraceEvent getDefaultInstanceForType() {
        return perfetto.protos.ThermalExynos.ThermalExynosAcpmHighOverheadFtraceEvent.getDefaultInstance();
      }

      @java.lang.Override
      public perfetto.protos.ThermalExynos.ThermalExynosAcpmHighOverheadFtraceEvent build() {
        perfetto.protos.ThermalExynos.ThermalExynosAcpmHighOverheadFtraceEvent result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public perfetto.protos.ThermalExynos.ThermalExynosAcpmHighOverheadFtraceEvent buildPartial() {
        perfetto.protos.ThermalExynos.ThermalExynosAcpmHighOverheadFtraceEvent result = new perfetto.protos.ThermalExynos.ThermalExynosAcpmHighOverheadFtraceEvent(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(perfetto.protos.ThermalExynos.ThermalExynosAcpmHighOverheadFtraceEvent result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.tzId_ = tzId_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.currentTemp_ = currentTemp_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.ctrlTemp_ = ctrlTemp_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.cdevState_ = cdevState_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.pidEtP_ = pidEtP_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.kP_ = kP_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.kI_ = kI_;
          to_bitField0_ |= 0x00000040;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof perfetto.protos.ThermalExynos.ThermalExynosAcpmHighOverheadFtraceEvent) {
          return mergeFrom((perfetto.protos.ThermalExynos.ThermalExynosAcpmHighOverheadFtraceEvent)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(perfetto.protos.ThermalExynos.ThermalExynosAcpmHighOverheadFtraceEvent other) {
        if (other == perfetto.protos.ThermalExynos.ThermalExynosAcpmHighOverheadFtraceEvent.getDefaultInstance()) return this;
        if (other.hasTzId()) {
          setTzId(other.getTzId());
        }
        if (other.hasCurrentTemp()) {
          setCurrentTemp(other.getCurrentTemp());
        }
        if (other.hasCtrlTemp()) {
          setCtrlTemp(other.getCtrlTemp());
        }
        if (other.hasCdevState()) {
          setCdevState(other.getCdevState());
        }
        if (other.hasPidEtP()) {
          setPidEtP(other.getPidEtP());
        }
        if (other.hasKP()) {
          setKP(other.getKP());
        }
        if (other.hasKI()) {
          setKI(other.getKI());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                tzId_ = input.readInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                currentTemp_ = input.readUInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                ctrlTemp_ = input.readUInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                cdevState_ = input.readUInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                pidEtP_ = input.readInt32();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                kP_ = input.readInt32();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 56: {
                kI_ = input.readInt32();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int tzId_ ;
      /**
       * <code>optional int32 tz_id = 1;</code>
       * @return Whether the tzId field is set.
       */
      @java.lang.Override
      public boolean hasTzId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional int32 tz_id = 1;</code>
       * @return The tzId.
       */
      @java.lang.Override
      public int getTzId() {
        return tzId_;
      }
      /**
       * <code>optional int32 tz_id = 1;</code>
       * @param value The tzId to set.
       * @return This builder for chaining.
       */
      public Builder setTzId(int value) {

        tzId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tz_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTzId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tzId_ = 0;
        onChanged();
        return this;
      }

      private int currentTemp_ ;
      /**
       * <code>optional uint32 current_temp = 2;</code>
       * @return Whether the currentTemp field is set.
       */
      @java.lang.Override
      public boolean hasCurrentTemp() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint32 current_temp = 2;</code>
       * @return The currentTemp.
       */
      @java.lang.Override
      public int getCurrentTemp() {
        return currentTemp_;
      }
      /**
       * <code>optional uint32 current_temp = 2;</code>
       * @param value The currentTemp to set.
       * @return This builder for chaining.
       */
      public Builder setCurrentTemp(int value) {

        currentTemp_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 current_temp = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearCurrentTemp() {
        bitField0_ = (bitField0_ & ~0x00000002);
        currentTemp_ = 0;
        onChanged();
        return this;
      }

      private int ctrlTemp_ ;
      /**
       * <code>optional uint32 ctrl_temp = 3;</code>
       * @return Whether the ctrlTemp field is set.
       */
      @java.lang.Override
      public boolean hasCtrlTemp() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional uint32 ctrl_temp = 3;</code>
       * @return The ctrlTemp.
       */
      @java.lang.Override
      public int getCtrlTemp() {
        return ctrlTemp_;
      }
      /**
       * <code>optional uint32 ctrl_temp = 3;</code>
       * @param value The ctrlTemp to set.
       * @return This builder for chaining.
       */
      public Builder setCtrlTemp(int value) {

        ctrlTemp_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 ctrl_temp = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearCtrlTemp() {
        bitField0_ = (bitField0_ & ~0x00000004);
        ctrlTemp_ = 0;
        onChanged();
        return this;
      }

      private int cdevState_ ;
      /**
       * <code>optional uint32 cdev_state = 4;</code>
       * @return Whether the cdevState field is set.
       */
      @java.lang.Override
      public boolean hasCdevState() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional uint32 cdev_state = 4;</code>
       * @return The cdevState.
       */
      @java.lang.Override
      public int getCdevState() {
        return cdevState_;
      }
      /**
       * <code>optional uint32 cdev_state = 4;</code>
       * @param value The cdevState to set.
       * @return This builder for chaining.
       */
      public Builder setCdevState(int value) {

        cdevState_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 cdev_state = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearCdevState() {
        bitField0_ = (bitField0_ & ~0x00000008);
        cdevState_ = 0;
        onChanged();
        return this;
      }

      private int pidEtP_ ;
      /**
       * <code>optional int32 pid_et_p = 5;</code>
       * @return Whether the pidEtP field is set.
       */
      @java.lang.Override
      public boolean hasPidEtP() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional int32 pid_et_p = 5;</code>
       * @return The pidEtP.
       */
      @java.lang.Override
      public int getPidEtP() {
        return pidEtP_;
      }
      /**
       * <code>optional int32 pid_et_p = 5;</code>
       * @param value The pidEtP to set.
       * @return This builder for chaining.
       */
      public Builder setPidEtP(int value) {

        pidEtP_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pid_et_p = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearPidEtP() {
        bitField0_ = (bitField0_ & ~0x00000010);
        pidEtP_ = 0;
        onChanged();
        return this;
      }

      private int kP_ ;
      /**
       * <code>optional int32 k_p = 6;</code>
       * @return Whether the kP field is set.
       */
      @java.lang.Override
      public boolean hasKP() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional int32 k_p = 6;</code>
       * @return The kP.
       */
      @java.lang.Override
      public int getKP() {
        return kP_;
      }
      /**
       * <code>optional int32 k_p = 6;</code>
       * @param value The kP to set.
       * @return This builder for chaining.
       */
      public Builder setKP(int value) {

        kP_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 k_p = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearKP() {
        bitField0_ = (bitField0_ & ~0x00000020);
        kP_ = 0;
        onChanged();
        return this;
      }

      private int kI_ ;
      /**
       * <code>optional int32 k_i = 7;</code>
       * @return Whether the kI field is set.
       */
      @java.lang.Override
      public boolean hasKI() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional int32 k_i = 7;</code>
       * @return The kI.
       */
      @java.lang.Override
      public int getKI() {
        return kI_;
      }
      /**
       * <code>optional int32 k_i = 7;</code>
       * @param value The kI to set.
       * @return This builder for chaining.
       */
      public Builder setKI(int value) {

        kI_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 k_i = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearKI() {
        bitField0_ = (bitField0_ & ~0x00000040);
        kI_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:perfetto.protos.ThermalExynosAcpmHighOverheadFtraceEvent)
    }

    // @@protoc_insertion_point(class_scope:perfetto.protos.ThermalExynosAcpmHighOverheadFtraceEvent)
    private static final perfetto.protos.ThermalExynos.ThermalExynosAcpmHighOverheadFtraceEvent DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new perfetto.protos.ThermalExynos.ThermalExynosAcpmHighOverheadFtraceEvent();
    }

    public static perfetto.protos.ThermalExynos.ThermalExynosAcpmHighOverheadFtraceEvent getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ThermalExynosAcpmHighOverheadFtraceEvent>
        PARSER = new com.google.protobuf.AbstractParser<ThermalExynosAcpmHighOverheadFtraceEvent>() {
      @java.lang.Override
      public ThermalExynosAcpmHighOverheadFtraceEvent parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ThermalExynosAcpmHighOverheadFtraceEvent> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ThermalExynosAcpmHighOverheadFtraceEvent> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public perfetto.protos.ThermalExynos.ThermalExynosAcpmHighOverheadFtraceEvent getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_ThermalExynosAcpmBulkFtraceEvent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_perfetto_protos_ThermalExynosAcpmBulkFtraceEvent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_ThermalExynosAcpmHighOverheadFtraceEvent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_perfetto_protos_ThermalExynosAcpmHighOverheadFtraceEvent_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n1protos/perfetto/trace/ftrace/thermal_e" +
      "xynos.proto\022\017perfetto.protos\"\344\001\n Thermal" +
      "ExynosAcpmBulkFtraceEvent\022\r\n\005tz_id\030\001 \001(\r" +
      "\022\024\n\014current_temp\030\002 \001(\r\022\021\n\tctrl_temp\030\003 \001(" +
      "\r\022\022\n\ncdev_state\030\004 \001(\r\022\020\n\010pid_et_p\030\005 \001(\005\022" +
      "\027\n\017pid_power_range\030\006 \001(\005\022\r\n\005pid_p\030\007 \001(\005\022" +
      "\r\n\005pid_i\030\010 \001(\005\022\013\n\003k_p\030\t \001(\005\022\013\n\003k_i\030\n \001(\005" +
      "\022\021\n\ttimestamp\030\013 \001(\004\"\242\001\n(ThermalExynosAcp" +
      "mHighOverheadFtraceEvent\022\r\n\005tz_id\030\001 \001(\005\022" +
      "\024\n\014current_temp\030\002 \001(\r\022\021\n\tctrl_temp\030\003 \001(\r" +
      "\022\022\n\ncdev_state\030\004 \001(\r\022\020\n\010pid_et_p\030\005 \001(\005\022\013" +
      "\n\003k_p\030\006 \001(\005\022\013\n\003k_i\030\007 \001(\005"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_perfetto_protos_ThermalExynosAcpmBulkFtraceEvent_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_perfetto_protos_ThermalExynosAcpmBulkFtraceEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_perfetto_protos_ThermalExynosAcpmBulkFtraceEvent_descriptor,
        new java.lang.String[] { "TzId", "CurrentTemp", "CtrlTemp", "CdevState", "PidEtP", "PidPowerRange", "PidP", "PidI", "KP", "KI", "Timestamp", });
    internal_static_perfetto_protos_ThermalExynosAcpmHighOverheadFtraceEvent_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_perfetto_protos_ThermalExynosAcpmHighOverheadFtraceEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_perfetto_protos_ThermalExynosAcpmHighOverheadFtraceEvent_descriptor,
        new java.lang.String[] { "TzId", "CurrentTemp", "CtrlTemp", "CdevState", "PidEtP", "KP", "KI", });
    descriptor.resolveAllFeaturesImmutable();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
