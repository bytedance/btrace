// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: protos/perfetto/config/android/pixel_modem_config.proto
// Protobuf Java Version: 4.29.3

package perfetto.protos;

public final class PixelModemConfigOuterClass {
  private PixelModemConfigOuterClass() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 3,
      /* suffix= */ "",
      PixelModemConfigOuterClass.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface PixelModemConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:perfetto.protos.PixelModemConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .perfetto.protos.PixelModemConfig.EventGroup event_group = 1;</code>
     * @return Whether the eventGroup field is set.
     */
    boolean hasEventGroup();
    /**
     * <code>optional .perfetto.protos.PixelModemConfig.EventGroup event_group = 1;</code>
     * @return The eventGroup.
     */
    perfetto.protos.PixelModemConfigOuterClass.PixelModemConfig.EventGroup getEventGroup();

    /**
     * <pre>
     * If set, record only events with these hashes.
     * </pre>
     *
     * <code>repeated int64 pigweed_hash_allow_list = 2;</code>
     * @return A list containing the pigweedHashAllowList.
     */
    java.util.List<java.lang.Long> getPigweedHashAllowListList();
    /**
     * <pre>
     * If set, record only events with these hashes.
     * </pre>
     *
     * <code>repeated int64 pigweed_hash_allow_list = 2;</code>
     * @return The count of pigweedHashAllowList.
     */
    int getPigweedHashAllowListCount();
    /**
     * <pre>
     * If set, record only events with these hashes.
     * </pre>
     *
     * <code>repeated int64 pigweed_hash_allow_list = 2;</code>
     * @param index The index of the element to return.
     * @return The pigweedHashAllowList at the given index.
     */
    long getPigweedHashAllowList(int index);

    /**
     * <pre>
     * If set and allow_list is not set, deny events with these hashes.
     * </pre>
     *
     * <code>repeated int64 pigweed_hash_deny_list = 3;</code>
     * @return A list containing the pigweedHashDenyList.
     */
    java.util.List<java.lang.Long> getPigweedHashDenyListList();
    /**
     * <pre>
     * If set and allow_list is not set, deny events with these hashes.
     * </pre>
     *
     * <code>repeated int64 pigweed_hash_deny_list = 3;</code>
     * @return The count of pigweedHashDenyList.
     */
    int getPigweedHashDenyListCount();
    /**
     * <pre>
     * If set and allow_list is not set, deny events with these hashes.
     * </pre>
     *
     * <code>repeated int64 pigweed_hash_deny_list = 3;</code>
     * @param index The index of the element to return.
     * @return The pigweedHashDenyList at the given index.
     */
    long getPigweedHashDenyList(int index);
  }
  /**
   * <pre>
   * Data source that records events from the modem.
   * </pre>
   *
   * Protobuf type {@code perfetto.protos.PixelModemConfig}
   */
  public static final class PixelModemConfig extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:perfetto.protos.PixelModemConfig)
      PixelModemConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 3,
        /* suffix= */ "",
        PixelModemConfig.class.getName());
    }
    // Use PixelModemConfig.newBuilder() to construct.
    private PixelModemConfig(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private PixelModemConfig() {
      eventGroup_ = 0;
      pigweedHashAllowList_ = emptyLongList();
      pigweedHashDenyList_ = emptyLongList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return perfetto.protos.PixelModemConfigOuterClass.internal_static_perfetto_protos_PixelModemConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return perfetto.protos.PixelModemConfigOuterClass.internal_static_perfetto_protos_PixelModemConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              perfetto.protos.PixelModemConfigOuterClass.PixelModemConfig.class, perfetto.protos.PixelModemConfigOuterClass.PixelModemConfig.Builder.class);
    }

    /**
     * <pre>
     * Event group to record, as defined by the modem.
     * </pre>
     *
     * Protobuf enum {@code perfetto.protos.PixelModemConfig.EventGroup}
     */
    public enum EventGroup
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>EVENT_GROUP_UNKNOWN = 0;</code>
       */
      EVENT_GROUP_UNKNOWN(0),
      /**
       * <pre>
       * Events suitable for low bandwidth tracing only.
       * </pre>
       *
       * <code>EVENT_GROUP_LOW_BANDWIDTH = 1;</code>
       */
      EVENT_GROUP_LOW_BANDWIDTH(1),
      /**
       * <pre>
       * Events suitable for high and low bandwidth tracing.
       * </pre>
       *
       * <code>EVENT_GROUP_HIGH_AND_LOW_BANDWIDTH = 2;</code>
       */
      EVENT_GROUP_HIGH_AND_LOW_BANDWIDTH(2),
      ;

      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 29,
          /* patch= */ 3,
          /* suffix= */ "",
          EventGroup.class.getName());
      }
      /**
       * <code>EVENT_GROUP_UNKNOWN = 0;</code>
       */
      public static final int EVENT_GROUP_UNKNOWN_VALUE = 0;
      /**
       * <pre>
       * Events suitable for low bandwidth tracing only.
       * </pre>
       *
       * <code>EVENT_GROUP_LOW_BANDWIDTH = 1;</code>
       */
      public static final int EVENT_GROUP_LOW_BANDWIDTH_VALUE = 1;
      /**
       * <pre>
       * Events suitable for high and low bandwidth tracing.
       * </pre>
       *
       * <code>EVENT_GROUP_HIGH_AND_LOW_BANDWIDTH = 2;</code>
       */
      public static final int EVENT_GROUP_HIGH_AND_LOW_BANDWIDTH_VALUE = 2;


      public final int getNumber() {
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static EventGroup valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static EventGroup forNumber(int value) {
        switch (value) {
          case 0: return EVENT_GROUP_UNKNOWN;
          case 1: return EVENT_GROUP_LOW_BANDWIDTH;
          case 2: return EVENT_GROUP_HIGH_AND_LOW_BANDWIDTH;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EventGroup>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          EventGroup> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EventGroup>() {
              public EventGroup findValueByNumber(int number) {
                return EventGroup.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return perfetto.protos.PixelModemConfigOuterClass.PixelModemConfig.getDescriptor().getEnumTypes().get(0);
      }

      private static final EventGroup[] VALUES = values();

      public static EventGroup valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private EventGroup(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:perfetto.protos.PixelModemConfig.EventGroup)
    }

    private int bitField0_;
    public static final int EVENT_GROUP_FIELD_NUMBER = 1;
    private int eventGroup_ = 0;
    /**
     * <code>optional .perfetto.protos.PixelModemConfig.EventGroup event_group = 1;</code>
     * @return Whether the eventGroup field is set.
     */
    @java.lang.Override public boolean hasEventGroup() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional .perfetto.protos.PixelModemConfig.EventGroup event_group = 1;</code>
     * @return The eventGroup.
     */
    @java.lang.Override public perfetto.protos.PixelModemConfigOuterClass.PixelModemConfig.EventGroup getEventGroup() {
      perfetto.protos.PixelModemConfigOuterClass.PixelModemConfig.EventGroup result = perfetto.protos.PixelModemConfigOuterClass.PixelModemConfig.EventGroup.forNumber(eventGroup_);
      return result == null ? perfetto.protos.PixelModemConfigOuterClass.PixelModemConfig.EventGroup.EVENT_GROUP_UNKNOWN : result;
    }

    public static final int PIGWEED_HASH_ALLOW_LIST_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.LongList pigweedHashAllowList_ =
        emptyLongList();
    /**
     * <pre>
     * If set, record only events with these hashes.
     * </pre>
     *
     * <code>repeated int64 pigweed_hash_allow_list = 2;</code>
     * @return A list containing the pigweedHashAllowList.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getPigweedHashAllowListList() {
      return pigweedHashAllowList_;
    }
    /**
     * <pre>
     * If set, record only events with these hashes.
     * </pre>
     *
     * <code>repeated int64 pigweed_hash_allow_list = 2;</code>
     * @return The count of pigweedHashAllowList.
     */
    public int getPigweedHashAllowListCount() {
      return pigweedHashAllowList_.size();
    }
    /**
     * <pre>
     * If set, record only events with these hashes.
     * </pre>
     *
     * <code>repeated int64 pigweed_hash_allow_list = 2;</code>
     * @param index The index of the element to return.
     * @return The pigweedHashAllowList at the given index.
     */
    public long getPigweedHashAllowList(int index) {
      return pigweedHashAllowList_.getLong(index);
    }

    public static final int PIGWEED_HASH_DENY_LIST_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.LongList pigweedHashDenyList_ =
        emptyLongList();
    /**
     * <pre>
     * If set and allow_list is not set, deny events with these hashes.
     * </pre>
     *
     * <code>repeated int64 pigweed_hash_deny_list = 3;</code>
     * @return A list containing the pigweedHashDenyList.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getPigweedHashDenyListList() {
      return pigweedHashDenyList_;
    }
    /**
     * <pre>
     * If set and allow_list is not set, deny events with these hashes.
     * </pre>
     *
     * <code>repeated int64 pigweed_hash_deny_list = 3;</code>
     * @return The count of pigweedHashDenyList.
     */
    public int getPigweedHashDenyListCount() {
      return pigweedHashDenyList_.size();
    }
    /**
     * <pre>
     * If set and allow_list is not set, deny events with these hashes.
     * </pre>
     *
     * <code>repeated int64 pigweed_hash_deny_list = 3;</code>
     * @param index The index of the element to return.
     * @return The pigweedHashDenyList at the given index.
     */
    public long getPigweedHashDenyList(int index) {
      return pigweedHashDenyList_.getLong(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeEnum(1, eventGroup_);
      }
      for (int i = 0; i < pigweedHashAllowList_.size(); i++) {
        output.writeInt64(2, pigweedHashAllowList_.getLong(i));
      }
      for (int i = 0; i < pigweedHashDenyList_.size(); i++) {
        output.writeInt64(3, pigweedHashDenyList_.getLong(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, eventGroup_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < pigweedHashAllowList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(pigweedHashAllowList_.getLong(i));
        }
        size += dataSize;
        size += 1 * getPigweedHashAllowListList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < pigweedHashDenyList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(pigweedHashDenyList_.getLong(i));
        }
        size += dataSize;
        size += 1 * getPigweedHashDenyListList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof perfetto.protos.PixelModemConfigOuterClass.PixelModemConfig)) {
        return super.equals(obj);
      }
      perfetto.protos.PixelModemConfigOuterClass.PixelModemConfig other = (perfetto.protos.PixelModemConfigOuterClass.PixelModemConfig) obj;

      if (hasEventGroup() != other.hasEventGroup()) return false;
      if (hasEventGroup()) {
        if (eventGroup_ != other.eventGroup_) return false;
      }
      if (!getPigweedHashAllowListList()
          .equals(other.getPigweedHashAllowListList())) return false;
      if (!getPigweedHashDenyListList()
          .equals(other.getPigweedHashDenyListList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasEventGroup()) {
        hash = (37 * hash) + EVENT_GROUP_FIELD_NUMBER;
        hash = (53 * hash) + eventGroup_;
      }
      if (getPigweedHashAllowListCount() > 0) {
        hash = (37 * hash) + PIGWEED_HASH_ALLOW_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getPigweedHashAllowListList().hashCode();
      }
      if (getPigweedHashDenyListCount() > 0) {
        hash = (37 * hash) + PIGWEED_HASH_DENY_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getPigweedHashDenyListList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static perfetto.protos.PixelModemConfigOuterClass.PixelModemConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.PixelModemConfigOuterClass.PixelModemConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.PixelModemConfigOuterClass.PixelModemConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.PixelModemConfigOuterClass.PixelModemConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.PixelModemConfigOuterClass.PixelModemConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.PixelModemConfigOuterClass.PixelModemConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.PixelModemConfigOuterClass.PixelModemConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.PixelModemConfigOuterClass.PixelModemConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static perfetto.protos.PixelModemConfigOuterClass.PixelModemConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static perfetto.protos.PixelModemConfigOuterClass.PixelModemConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.PixelModemConfigOuterClass.PixelModemConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.PixelModemConfigOuterClass.PixelModemConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(perfetto.protos.PixelModemConfigOuterClass.PixelModemConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Data source that records events from the modem.
     * </pre>
     *
     * Protobuf type {@code perfetto.protos.PixelModemConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:perfetto.protos.PixelModemConfig)
        perfetto.protos.PixelModemConfigOuterClass.PixelModemConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.PixelModemConfigOuterClass.internal_static_perfetto_protos_PixelModemConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.PixelModemConfigOuterClass.internal_static_perfetto_protos_PixelModemConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.PixelModemConfigOuterClass.PixelModemConfig.class, perfetto.protos.PixelModemConfigOuterClass.PixelModemConfig.Builder.class);
      }

      // Construct using perfetto.protos.PixelModemConfigOuterClass.PixelModemConfig.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        eventGroup_ = 0;
        pigweedHashAllowList_ = emptyLongList();
        pigweedHashDenyList_ = emptyLongList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return perfetto.protos.PixelModemConfigOuterClass.internal_static_perfetto_protos_PixelModemConfig_descriptor;
      }

      @java.lang.Override
      public perfetto.protos.PixelModemConfigOuterClass.PixelModemConfig getDefaultInstanceForType() {
        return perfetto.protos.PixelModemConfigOuterClass.PixelModemConfig.getDefaultInstance();
      }

      @java.lang.Override
      public perfetto.protos.PixelModemConfigOuterClass.PixelModemConfig build() {
        perfetto.protos.PixelModemConfigOuterClass.PixelModemConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public perfetto.protos.PixelModemConfigOuterClass.PixelModemConfig buildPartial() {
        perfetto.protos.PixelModemConfigOuterClass.PixelModemConfig result = new perfetto.protos.PixelModemConfigOuterClass.PixelModemConfig(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(perfetto.protos.PixelModemConfigOuterClass.PixelModemConfig result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.eventGroup_ = eventGroup_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          pigweedHashAllowList_.makeImmutable();
          result.pigweedHashAllowList_ = pigweedHashAllowList_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          pigweedHashDenyList_.makeImmutable();
          result.pigweedHashDenyList_ = pigweedHashDenyList_;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof perfetto.protos.PixelModemConfigOuterClass.PixelModemConfig) {
          return mergeFrom((perfetto.protos.PixelModemConfigOuterClass.PixelModemConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(perfetto.protos.PixelModemConfigOuterClass.PixelModemConfig other) {
        if (other == perfetto.protos.PixelModemConfigOuterClass.PixelModemConfig.getDefaultInstance()) return this;
        if (other.hasEventGroup()) {
          setEventGroup(other.getEventGroup());
        }
        if (!other.pigweedHashAllowList_.isEmpty()) {
          if (pigweedHashAllowList_.isEmpty()) {
            pigweedHashAllowList_ = other.pigweedHashAllowList_;
            pigweedHashAllowList_.makeImmutable();
            bitField0_ |= 0x00000002;
          } else {
            ensurePigweedHashAllowListIsMutable();
            pigweedHashAllowList_.addAll(other.pigweedHashAllowList_);
          }
          onChanged();
        }
        if (!other.pigweedHashDenyList_.isEmpty()) {
          if (pigweedHashDenyList_.isEmpty()) {
            pigweedHashDenyList_ = other.pigweedHashDenyList_;
            pigweedHashDenyList_.makeImmutable();
            bitField0_ |= 0x00000004;
          } else {
            ensurePigweedHashDenyListIsMutable();
            pigweedHashDenyList_.addAll(other.pigweedHashDenyList_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                int tmpRaw = input.readEnum();
                perfetto.protos.PixelModemConfigOuterClass.PixelModemConfig.EventGroup tmpValue =
                    perfetto.protos.PixelModemConfigOuterClass.PixelModemConfig.EventGroup.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(1, tmpRaw);
                } else {
                  eventGroup_ = tmpRaw;
                  bitField0_ |= 0x00000001;
                }
                break;
              } // case 8
              case 16: {
                long v = input.readInt64();
                ensurePigweedHashAllowListIsMutable();
                pigweedHashAllowList_.addLong(v);
                break;
              } // case 16
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensurePigweedHashAllowListIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  pigweedHashAllowList_.addLong(input.readInt64());
                }
                input.popLimit(limit);
                break;
              } // case 18
              case 24: {
                long v = input.readInt64();
                ensurePigweedHashDenyListIsMutable();
                pigweedHashDenyList_.addLong(v);
                break;
              } // case 24
              case 26: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensurePigweedHashDenyListIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  pigweedHashDenyList_.addLong(input.readInt64());
                }
                input.popLimit(limit);
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int eventGroup_ = 0;
      /**
       * <code>optional .perfetto.protos.PixelModemConfig.EventGroup event_group = 1;</code>
       * @return Whether the eventGroup field is set.
       */
      @java.lang.Override public boolean hasEventGroup() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional .perfetto.protos.PixelModemConfig.EventGroup event_group = 1;</code>
       * @return The eventGroup.
       */
      @java.lang.Override
      public perfetto.protos.PixelModemConfigOuterClass.PixelModemConfig.EventGroup getEventGroup() {
        perfetto.protos.PixelModemConfigOuterClass.PixelModemConfig.EventGroup result = perfetto.protos.PixelModemConfigOuterClass.PixelModemConfig.EventGroup.forNumber(eventGroup_);
        return result == null ? perfetto.protos.PixelModemConfigOuterClass.PixelModemConfig.EventGroup.EVENT_GROUP_UNKNOWN : result;
      }
      /**
       * <code>optional .perfetto.protos.PixelModemConfig.EventGroup event_group = 1;</code>
       * @param value The eventGroup to set.
       * @return This builder for chaining.
       */
      public Builder setEventGroup(perfetto.protos.PixelModemConfigOuterClass.PixelModemConfig.EventGroup value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        eventGroup_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .perfetto.protos.PixelModemConfig.EventGroup event_group = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearEventGroup() {
        bitField0_ = (bitField0_ & ~0x00000001);
        eventGroup_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.LongList pigweedHashAllowList_ = emptyLongList();
      private void ensurePigweedHashAllowListIsMutable() {
        if (!pigweedHashAllowList_.isModifiable()) {
          pigweedHashAllowList_ = makeMutableCopy(pigweedHashAllowList_);
        }
        bitField0_ |= 0x00000002;
      }
      /**
       * <pre>
       * If set, record only events with these hashes.
       * </pre>
       *
       * <code>repeated int64 pigweed_hash_allow_list = 2;</code>
       * @return A list containing the pigweedHashAllowList.
       */
      public java.util.List<java.lang.Long>
          getPigweedHashAllowListList() {
        pigweedHashAllowList_.makeImmutable();
        return pigweedHashAllowList_;
      }
      /**
       * <pre>
       * If set, record only events with these hashes.
       * </pre>
       *
       * <code>repeated int64 pigweed_hash_allow_list = 2;</code>
       * @return The count of pigweedHashAllowList.
       */
      public int getPigweedHashAllowListCount() {
        return pigweedHashAllowList_.size();
      }
      /**
       * <pre>
       * If set, record only events with these hashes.
       * </pre>
       *
       * <code>repeated int64 pigweed_hash_allow_list = 2;</code>
       * @param index The index of the element to return.
       * @return The pigweedHashAllowList at the given index.
       */
      public long getPigweedHashAllowList(int index) {
        return pigweedHashAllowList_.getLong(index);
      }
      /**
       * <pre>
       * If set, record only events with these hashes.
       * </pre>
       *
       * <code>repeated int64 pigweed_hash_allow_list = 2;</code>
       * @param index The index to set the value at.
       * @param value The pigweedHashAllowList to set.
       * @return This builder for chaining.
       */
      public Builder setPigweedHashAllowList(
          int index, long value) {

        ensurePigweedHashAllowListIsMutable();
        pigweedHashAllowList_.setLong(index, value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If set, record only events with these hashes.
       * </pre>
       *
       * <code>repeated int64 pigweed_hash_allow_list = 2;</code>
       * @param value The pigweedHashAllowList to add.
       * @return This builder for chaining.
       */
      public Builder addPigweedHashAllowList(long value) {

        ensurePigweedHashAllowListIsMutable();
        pigweedHashAllowList_.addLong(value);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If set, record only events with these hashes.
       * </pre>
       *
       * <code>repeated int64 pigweed_hash_allow_list = 2;</code>
       * @param values The pigweedHashAllowList to add.
       * @return This builder for chaining.
       */
      public Builder addAllPigweedHashAllowList(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensurePigweedHashAllowListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, pigweedHashAllowList_);
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If set, record only events with these hashes.
       * </pre>
       *
       * <code>repeated int64 pigweed_hash_allow_list = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearPigweedHashAllowList() {
        pigweedHashAllowList_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.LongList pigweedHashDenyList_ = emptyLongList();
      private void ensurePigweedHashDenyListIsMutable() {
        if (!pigweedHashDenyList_.isModifiable()) {
          pigweedHashDenyList_ = makeMutableCopy(pigweedHashDenyList_);
        }
        bitField0_ |= 0x00000004;
      }
      /**
       * <pre>
       * If set and allow_list is not set, deny events with these hashes.
       * </pre>
       *
       * <code>repeated int64 pigweed_hash_deny_list = 3;</code>
       * @return A list containing the pigweedHashDenyList.
       */
      public java.util.List<java.lang.Long>
          getPigweedHashDenyListList() {
        pigweedHashDenyList_.makeImmutable();
        return pigweedHashDenyList_;
      }
      /**
       * <pre>
       * If set and allow_list is not set, deny events with these hashes.
       * </pre>
       *
       * <code>repeated int64 pigweed_hash_deny_list = 3;</code>
       * @return The count of pigweedHashDenyList.
       */
      public int getPigweedHashDenyListCount() {
        return pigweedHashDenyList_.size();
      }
      /**
       * <pre>
       * If set and allow_list is not set, deny events with these hashes.
       * </pre>
       *
       * <code>repeated int64 pigweed_hash_deny_list = 3;</code>
       * @param index The index of the element to return.
       * @return The pigweedHashDenyList at the given index.
       */
      public long getPigweedHashDenyList(int index) {
        return pigweedHashDenyList_.getLong(index);
      }
      /**
       * <pre>
       * If set and allow_list is not set, deny events with these hashes.
       * </pre>
       *
       * <code>repeated int64 pigweed_hash_deny_list = 3;</code>
       * @param index The index to set the value at.
       * @param value The pigweedHashDenyList to set.
       * @return This builder for chaining.
       */
      public Builder setPigweedHashDenyList(
          int index, long value) {

        ensurePigweedHashDenyListIsMutable();
        pigweedHashDenyList_.setLong(index, value);
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If set and allow_list is not set, deny events with these hashes.
       * </pre>
       *
       * <code>repeated int64 pigweed_hash_deny_list = 3;</code>
       * @param value The pigweedHashDenyList to add.
       * @return This builder for chaining.
       */
      public Builder addPigweedHashDenyList(long value) {

        ensurePigweedHashDenyListIsMutable();
        pigweedHashDenyList_.addLong(value);
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If set and allow_list is not set, deny events with these hashes.
       * </pre>
       *
       * <code>repeated int64 pigweed_hash_deny_list = 3;</code>
       * @param values The pigweedHashDenyList to add.
       * @return This builder for chaining.
       */
      public Builder addAllPigweedHashDenyList(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensurePigweedHashDenyListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, pigweedHashDenyList_);
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If set and allow_list is not set, deny events with these hashes.
       * </pre>
       *
       * <code>repeated int64 pigweed_hash_deny_list = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearPigweedHashDenyList() {
        pigweedHashDenyList_ = emptyLongList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:perfetto.protos.PixelModemConfig)
    }

    // @@protoc_insertion_point(class_scope:perfetto.protos.PixelModemConfig)
    private static final perfetto.protos.PixelModemConfigOuterClass.PixelModemConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new perfetto.protos.PixelModemConfigOuterClass.PixelModemConfig();
    }

    public static perfetto.protos.PixelModemConfigOuterClass.PixelModemConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PixelModemConfig>
        PARSER = new com.google.protobuf.AbstractParser<PixelModemConfig>() {
      @java.lang.Override
      public PixelModemConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<PixelModemConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PixelModemConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public perfetto.protos.PixelModemConfigOuterClass.PixelModemConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_PixelModemConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_perfetto_protos_PixelModemConfig_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n7protos/perfetto/config/android/pixel_m" +
      "odem_config.proto\022\017perfetto.protos\"\204\002\n\020P" +
      "ixelModemConfig\022A\n\013event_group\030\001 \001(\0162,.p" +
      "erfetto.protos.PixelModemConfig.EventGro" +
      "up\022\037\n\027pigweed_hash_allow_list\030\002 \003(\003\022\036\n\026p" +
      "igweed_hash_deny_list\030\003 \003(\003\"l\n\nEventGrou" +
      "p\022\027\n\023EVENT_GROUP_UNKNOWN\020\000\022\035\n\031EVENT_GROU" +
      "P_LOW_BANDWIDTH\020\001\022&\n\"EVENT_GROUP_HIGH_AN" +
      "D_LOW_BANDWIDTH\020\002"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_perfetto_protos_PixelModemConfig_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_perfetto_protos_PixelModemConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_perfetto_protos_PixelModemConfig_descriptor,
        new java.lang.String[] { "EventGroup", "PigweedHashAllowList", "PigweedHashDenyList", });
    descriptor.resolveAllFeaturesImmutable();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
