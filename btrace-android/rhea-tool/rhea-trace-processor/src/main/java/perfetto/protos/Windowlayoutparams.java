// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: protos/perfetto/trace/android/view/windowlayoutparams.proto
// Protobuf Java Version: 4.29.3

package perfetto.protos;

public final class Windowlayoutparams {
  private Windowlayoutparams() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 3,
      /* suffix= */ "",
      Windowlayoutparams.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface WindowLayoutParamsProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:perfetto.protos.WindowLayoutParamsProto)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 type = 1 [(.perfetto.protos.typedef) = "android.view.WindowManager.LayoutParams.WindowType"];</code>
     * @return Whether the type field is set.
     */
    boolean hasType();
    /**
     * <code>optional int32 type = 1 [(.perfetto.protos.typedef) = "android.view.WindowManager.LayoutParams.WindowType"];</code>
     * @return The type.
     */
    int getType();

    /**
     * <code>optional int32 x = 2;</code>
     * @return Whether the x field is set.
     */
    boolean hasX();
    /**
     * <code>optional int32 x = 2;</code>
     * @return The x.
     */
    int getX();

    /**
     * <code>optional int32 y = 3;</code>
     * @return Whether the y field is set.
     */
    boolean hasY();
    /**
     * <code>optional int32 y = 3;</code>
     * @return The y.
     */
    int getY();

    /**
     * <code>optional int32 width = 4;</code>
     * @return Whether the width field is set.
     */
    boolean hasWidth();
    /**
     * <code>optional int32 width = 4;</code>
     * @return The width.
     */
    int getWidth();

    /**
     * <code>optional int32 height = 5;</code>
     * @return Whether the height field is set.
     */
    boolean hasHeight();
    /**
     * <code>optional int32 height = 5;</code>
     * @return The height.
     */
    int getHeight();

    /**
     * <code>optional float horizontal_margin = 6;</code>
     * @return Whether the horizontalMargin field is set.
     */
    boolean hasHorizontalMargin();
    /**
     * <code>optional float horizontal_margin = 6;</code>
     * @return The horizontalMargin.
     */
    float getHorizontalMargin();

    /**
     * <code>optional float vertical_margin = 7;</code>
     * @return Whether the verticalMargin field is set.
     */
    boolean hasVerticalMargin();
    /**
     * <code>optional float vertical_margin = 7;</code>
     * @return The verticalMargin.
     */
    float getVerticalMargin();

    /**
     * <code>optional int32 gravity = 8 [(.perfetto.protos.typedef) = "android.view.Gravity.GravityFlags"];</code>
     * @return Whether the gravity field is set.
     */
    boolean hasGravity();
    /**
     * <code>optional int32 gravity = 8 [(.perfetto.protos.typedef) = "android.view.Gravity.GravityFlags"];</code>
     * @return The gravity.
     */
    int getGravity();

    /**
     * <code>optional int32 soft_input_mode = 9 [(.perfetto.protos.typedef) = "android.view.WindowManager.LayoutParams.SoftInputModeFlags"];</code>
     * @return Whether the softInputMode field is set.
     */
    boolean hasSoftInputMode();
    /**
     * <code>optional int32 soft_input_mode = 9 [(.perfetto.protos.typedef) = "android.view.WindowManager.LayoutParams.SoftInputModeFlags"];</code>
     * @return The softInputMode.
     */
    int getSoftInputMode();

    /**
     * <code>optional .perfetto.protos.PixelFormatProto.Format format = 10;</code>
     * @return Whether the format field is set.
     */
    boolean hasFormat();
    /**
     * <code>optional .perfetto.protos.PixelFormatProto.Format format = 10;</code>
     * @return The format.
     */
    perfetto.protos.Pixelformat.PixelFormatProto.Format getFormat();

    /**
     * <code>optional int32 window_animations = 11;</code>
     * @return Whether the windowAnimations field is set.
     */
    boolean hasWindowAnimations();
    /**
     * <code>optional int32 window_animations = 11;</code>
     * @return The windowAnimations.
     */
    int getWindowAnimations();

    /**
     * <code>optional float alpha = 12;</code>
     * @return Whether the alpha field is set.
     */
    boolean hasAlpha();
    /**
     * <code>optional float alpha = 12;</code>
     * @return The alpha.
     */
    float getAlpha();

    /**
     * <code>optional float screen_brightness = 13;</code>
     * @return Whether the screenBrightness field is set.
     */
    boolean hasScreenBrightness();
    /**
     * <code>optional float screen_brightness = 13;</code>
     * @return The screenBrightness.
     */
    float getScreenBrightness();

    /**
     * <code>optional float button_brightness = 14;</code>
     * @return Whether the buttonBrightness field is set.
     */
    boolean hasButtonBrightness();
    /**
     * <code>optional float button_brightness = 14;</code>
     * @return The buttonBrightness.
     */
    float getButtonBrightness();

    /**
     * <code>optional .perfetto.protos.WindowLayoutParamsProto.RotationAnimation rotation_animation = 15;</code>
     * @return Whether the rotationAnimation field is set.
     */
    boolean hasRotationAnimation();
    /**
     * <code>optional .perfetto.protos.WindowLayoutParamsProto.RotationAnimation rotation_animation = 15;</code>
     * @return The rotationAnimation.
     */
    perfetto.protos.Windowlayoutparams.WindowLayoutParamsProto.RotationAnimation getRotationAnimation();

    /**
     * <code>optional float preferred_refresh_rate = 16;</code>
     * @return Whether the preferredRefreshRate field is set.
     */
    boolean hasPreferredRefreshRate();
    /**
     * <code>optional float preferred_refresh_rate = 16;</code>
     * @return The preferredRefreshRate.
     */
    float getPreferredRefreshRate();

    /**
     * <code>optional int32 preferred_display_mode_id = 17;</code>
     * @return Whether the preferredDisplayModeId field is set.
     */
    boolean hasPreferredDisplayModeId();
    /**
     * <code>optional int32 preferred_display_mode_id = 17;</code>
     * @return The preferredDisplayModeId.
     */
    int getPreferredDisplayModeId();

    /**
     * <code>optional bool has_system_ui_listeners = 18;</code>
     * @return Whether the hasSystemUiListeners field is set.
     */
    boolean hasHasSystemUiListeners();
    /**
     * <code>optional bool has_system_ui_listeners = 18;</code>
     * @return The hasSystemUiListeners.
     */
    boolean getHasSystemUiListeners();

    /**
     * <code>optional uint32 input_feature_flags = 19 [(.perfetto.protos.typedef) = "android.view.WindowManager.LayoutParams.InputFeatureFlags"];</code>
     * @return Whether the inputFeatureFlags field is set.
     */
    boolean hasInputFeatureFlags();
    /**
     * <code>optional uint32 input_feature_flags = 19 [(.perfetto.protos.typedef) = "android.view.WindowManager.LayoutParams.InputFeatureFlags"];</code>
     * @return The inputFeatureFlags.
     */
    int getInputFeatureFlags();

    /**
     * <code>optional int64 user_activity_timeout = 20;</code>
     * @return Whether the userActivityTimeout field is set.
     */
    boolean hasUserActivityTimeout();
    /**
     * <code>optional int64 user_activity_timeout = 20;</code>
     * @return The userActivityTimeout.
     */
    long getUserActivityTimeout();

    /**
     * <code>optional .perfetto.protos.ViewDisplayProto.ColorMode color_mode = 23;</code>
     * @return Whether the colorMode field is set.
     */
    boolean hasColorMode();
    /**
     * <code>optional .perfetto.protos.ViewDisplayProto.ColorMode color_mode = 23;</code>
     * @return The colorMode.
     */
    perfetto.protos.Display.ViewDisplayProto.ColorMode getColorMode();

    /**
     * <code>optional uint32 flags = 24 [(.perfetto.protos.typedef) = "android.view.WindowManager.LayoutParams.Flags"];</code>
     * @return Whether the flags field is set.
     */
    boolean hasFlags();
    /**
     * <code>optional uint32 flags = 24 [(.perfetto.protos.typedef) = "android.view.WindowManager.LayoutParams.Flags"];</code>
     * @return The flags.
     */
    int getFlags();

    /**
     * <code>optional uint32 private_flags = 26 [(.perfetto.protos.typedef) = "android.view.WindowManager.LayoutParams.PrivateFlags"];</code>
     * @return Whether the privateFlags field is set.
     */
    boolean hasPrivateFlags();
    /**
     * <code>optional uint32 private_flags = 26 [(.perfetto.protos.typedef) = "android.view.WindowManager.LayoutParams.PrivateFlags"];</code>
     * @return The privateFlags.
     */
    int getPrivateFlags();

    /**
     * <code>optional uint32 system_ui_visibility_flags = 27 [(.perfetto.protos.typedef) = "android.view.WindowManager.LayoutParams.SystemUiVisibilityFlags"];</code>
     * @return Whether the systemUiVisibilityFlags field is set.
     */
    boolean hasSystemUiVisibilityFlags();
    /**
     * <code>optional uint32 system_ui_visibility_flags = 27 [(.perfetto.protos.typedef) = "android.view.WindowManager.LayoutParams.SystemUiVisibilityFlags"];</code>
     * @return The systemUiVisibilityFlags.
     */
    int getSystemUiVisibilityFlags();

    /**
     * <code>optional uint32 subtree_system_ui_visibility_flags = 28 [(.perfetto.protos.typedef) = "android.view.WindowManager.LayoutParams.SystemUiVisibilityFlags"];</code>
     * @return Whether the subtreeSystemUiVisibilityFlags field is set.
     */
    boolean hasSubtreeSystemUiVisibilityFlags();
    /**
     * <code>optional uint32 subtree_system_ui_visibility_flags = 28 [(.perfetto.protos.typedef) = "android.view.WindowManager.LayoutParams.SystemUiVisibilityFlags"];</code>
     * @return The subtreeSystemUiVisibilityFlags.
     */
    int getSubtreeSystemUiVisibilityFlags();

    /**
     * <code>optional uint32 appearance = 29 [(.perfetto.protos.typedef) = "android.view.WindowInsetsController.Appearance"];</code>
     * @return Whether the appearance field is set.
     */
    boolean hasAppearance();
    /**
     * <code>optional uint32 appearance = 29 [(.perfetto.protos.typedef) = "android.view.WindowInsetsController.Appearance"];</code>
     * @return The appearance.
     */
    int getAppearance();

    /**
     * <code>optional uint32 behavior = 30 [(.perfetto.protos.typedef) = "android.view.WindowInsetsController.Behavior"];</code>
     * @return Whether the behavior field is set.
     */
    boolean hasBehavior();
    /**
     * <code>optional uint32 behavior = 30 [(.perfetto.protos.typedef) = "android.view.WindowInsetsController.Behavior"];</code>
     * @return The behavior.
     */
    int getBehavior();

    /**
     * <code>optional uint32 fit_insets_types = 31 [(.perfetto.protos.typedef) = "android.view.WindowInsets.Type.InsetsType"];</code>
     * @return Whether the fitInsetsTypes field is set.
     */
    boolean hasFitInsetsTypes();
    /**
     * <code>optional uint32 fit_insets_types = 31 [(.perfetto.protos.typedef) = "android.view.WindowInsets.Type.InsetsType"];</code>
     * @return The fitInsetsTypes.
     */
    int getFitInsetsTypes();

    /**
     * <code>optional uint32 fit_insets_sides = 32 [(.perfetto.protos.typedef) = "android.view.WindowInsets.Side.InsetsSide"];</code>
     * @return Whether the fitInsetsSides field is set.
     */
    boolean hasFitInsetsSides();
    /**
     * <code>optional uint32 fit_insets_sides = 32 [(.perfetto.protos.typedef) = "android.view.WindowInsets.Side.InsetsSide"];</code>
     * @return The fitInsetsSides.
     */
    int getFitInsetsSides();

    /**
     * <code>optional bool fit_ignore_visibility = 33;</code>
     * @return Whether the fitIgnoreVisibility field is set.
     */
    boolean hasFitIgnoreVisibility();
    /**
     * <code>optional bool fit_ignore_visibility = 33;</code>
     * @return The fitIgnoreVisibility.
     */
    boolean getFitIgnoreVisibility();
  }
  /**
   * <pre>
   * represents WindowManager.LayoutParams
   * </pre>
   *
   * Protobuf type {@code perfetto.protos.WindowLayoutParamsProto}
   */
  public static final class WindowLayoutParamsProto extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:perfetto.protos.WindowLayoutParamsProto)
      WindowLayoutParamsProtoOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 3,
        /* suffix= */ "",
        WindowLayoutParamsProto.class.getName());
    }
    // Use WindowLayoutParamsProto.newBuilder() to construct.
    private WindowLayoutParamsProto(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private WindowLayoutParamsProto() {
      format_ = 0;
      rotationAnimation_ = -1;
      colorMode_ = -1;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return perfetto.protos.Windowlayoutparams.internal_static_perfetto_protos_WindowLayoutParamsProto_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return perfetto.protos.Windowlayoutparams.internal_static_perfetto_protos_WindowLayoutParamsProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              perfetto.protos.Windowlayoutparams.WindowLayoutParamsProto.class, perfetto.protos.Windowlayoutparams.WindowLayoutParamsProto.Builder.class);
    }

    /**
     * Protobuf enum {@code perfetto.protos.WindowLayoutParamsProto.RotationAnimation}
     */
    public enum RotationAnimation
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>ROTATION_ANIMATION_UNSPECIFIED = -1;</code>
       */
      ROTATION_ANIMATION_UNSPECIFIED(-1),
      /**
       * <code>ROTATION_ANIMATION_CROSSFADE = 1;</code>
       */
      ROTATION_ANIMATION_CROSSFADE(1),
      /**
       * <code>ROTATION_ANIMATION_JUMPCUT = 2;</code>
       */
      ROTATION_ANIMATION_JUMPCUT(2),
      /**
       * <code>ROTATION_ANIMATION_SEAMLESS = 3;</code>
       */
      ROTATION_ANIMATION_SEAMLESS(3),
      ;

      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 29,
          /* patch= */ 3,
          /* suffix= */ "",
          RotationAnimation.class.getName());
      }
      /**
       * <code>ROTATION_ANIMATION_UNSPECIFIED = -1;</code>
       */
      public static final int ROTATION_ANIMATION_UNSPECIFIED_VALUE = -1;
      /**
       * <code>ROTATION_ANIMATION_CROSSFADE = 1;</code>
       */
      public static final int ROTATION_ANIMATION_CROSSFADE_VALUE = 1;
      /**
       * <code>ROTATION_ANIMATION_JUMPCUT = 2;</code>
       */
      public static final int ROTATION_ANIMATION_JUMPCUT_VALUE = 2;
      /**
       * <code>ROTATION_ANIMATION_SEAMLESS = 3;</code>
       */
      public static final int ROTATION_ANIMATION_SEAMLESS_VALUE = 3;


      public final int getNumber() {
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static RotationAnimation valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static RotationAnimation forNumber(int value) {
        switch (value) {
          case -1: return ROTATION_ANIMATION_UNSPECIFIED;
          case 1: return ROTATION_ANIMATION_CROSSFADE;
          case 2: return ROTATION_ANIMATION_JUMPCUT;
          case 3: return ROTATION_ANIMATION_SEAMLESS;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<RotationAnimation>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          RotationAnimation> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<RotationAnimation>() {
              public RotationAnimation findValueByNumber(int number) {
                return RotationAnimation.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return perfetto.protos.Windowlayoutparams.WindowLayoutParamsProto.getDescriptor().getEnumTypes().get(0);
      }

      private static final RotationAnimation[] VALUES = values();

      public static RotationAnimation valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private RotationAnimation(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:perfetto.protos.WindowLayoutParamsProto.RotationAnimation)
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_ = 0;
    /**
     * <code>optional int32 type = 1 [(.perfetto.protos.typedef) = "android.view.WindowManager.LayoutParams.WindowType"];</code>
     * @return Whether the type field is set.
     */
    @java.lang.Override
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional int32 type = 1 [(.perfetto.protos.typedef) = "android.view.WindowManager.LayoutParams.WindowType"];</code>
     * @return The type.
     */
    @java.lang.Override
    public int getType() {
      return type_;
    }

    public static final int X_FIELD_NUMBER = 2;
    private int x_ = 0;
    /**
     * <code>optional int32 x = 2;</code>
     * @return Whether the x field is set.
     */
    @java.lang.Override
    public boolean hasX() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional int32 x = 2;</code>
     * @return The x.
     */
    @java.lang.Override
    public int getX() {
      return x_;
    }

    public static final int Y_FIELD_NUMBER = 3;
    private int y_ = 0;
    /**
     * <code>optional int32 y = 3;</code>
     * @return Whether the y field is set.
     */
    @java.lang.Override
    public boolean hasY() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional int32 y = 3;</code>
     * @return The y.
     */
    @java.lang.Override
    public int getY() {
      return y_;
    }

    public static final int WIDTH_FIELD_NUMBER = 4;
    private int width_ = 0;
    /**
     * <code>optional int32 width = 4;</code>
     * @return Whether the width field is set.
     */
    @java.lang.Override
    public boolean hasWidth() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional int32 width = 4;</code>
     * @return The width.
     */
    @java.lang.Override
    public int getWidth() {
      return width_;
    }

    public static final int HEIGHT_FIELD_NUMBER = 5;
    private int height_ = 0;
    /**
     * <code>optional int32 height = 5;</code>
     * @return Whether the height field is set.
     */
    @java.lang.Override
    public boolean hasHeight() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional int32 height = 5;</code>
     * @return The height.
     */
    @java.lang.Override
    public int getHeight() {
      return height_;
    }

    public static final int HORIZONTAL_MARGIN_FIELD_NUMBER = 6;
    private float horizontalMargin_ = 0F;
    /**
     * <code>optional float horizontal_margin = 6;</code>
     * @return Whether the horizontalMargin field is set.
     */
    @java.lang.Override
    public boolean hasHorizontalMargin() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>optional float horizontal_margin = 6;</code>
     * @return The horizontalMargin.
     */
    @java.lang.Override
    public float getHorizontalMargin() {
      return horizontalMargin_;
    }

    public static final int VERTICAL_MARGIN_FIELD_NUMBER = 7;
    private float verticalMargin_ = 0F;
    /**
     * <code>optional float vertical_margin = 7;</code>
     * @return Whether the verticalMargin field is set.
     */
    @java.lang.Override
    public boolean hasVerticalMargin() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <code>optional float vertical_margin = 7;</code>
     * @return The verticalMargin.
     */
    @java.lang.Override
    public float getVerticalMargin() {
      return verticalMargin_;
    }

    public static final int GRAVITY_FIELD_NUMBER = 8;
    private int gravity_ = 0;
    /**
     * <code>optional int32 gravity = 8 [(.perfetto.protos.typedef) = "android.view.Gravity.GravityFlags"];</code>
     * @return Whether the gravity field is set.
     */
    @java.lang.Override
    public boolean hasGravity() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <code>optional int32 gravity = 8 [(.perfetto.protos.typedef) = "android.view.Gravity.GravityFlags"];</code>
     * @return The gravity.
     */
    @java.lang.Override
    public int getGravity() {
      return gravity_;
    }

    public static final int SOFT_INPUT_MODE_FIELD_NUMBER = 9;
    private int softInputMode_ = 0;
    /**
     * <code>optional int32 soft_input_mode = 9 [(.perfetto.protos.typedef) = "android.view.WindowManager.LayoutParams.SoftInputModeFlags"];</code>
     * @return Whether the softInputMode field is set.
     */
    @java.lang.Override
    public boolean hasSoftInputMode() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <code>optional int32 soft_input_mode = 9 [(.perfetto.protos.typedef) = "android.view.WindowManager.LayoutParams.SoftInputModeFlags"];</code>
     * @return The softInputMode.
     */
    @java.lang.Override
    public int getSoftInputMode() {
      return softInputMode_;
    }

    public static final int FORMAT_FIELD_NUMBER = 10;
    private int format_ = 0;
    /**
     * <code>optional .perfetto.protos.PixelFormatProto.Format format = 10;</code>
     * @return Whether the format field is set.
     */
    @java.lang.Override public boolean hasFormat() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <code>optional .perfetto.protos.PixelFormatProto.Format format = 10;</code>
     * @return The format.
     */
    @java.lang.Override public perfetto.protos.Pixelformat.PixelFormatProto.Format getFormat() {
      perfetto.protos.Pixelformat.PixelFormatProto.Format result = perfetto.protos.Pixelformat.PixelFormatProto.Format.forNumber(format_);
      return result == null ? perfetto.protos.Pixelformat.PixelFormatProto.Format.UNKNOWN : result;
    }

    public static final int WINDOW_ANIMATIONS_FIELD_NUMBER = 11;
    private int windowAnimations_ = 0;
    /**
     * <code>optional int32 window_animations = 11;</code>
     * @return Whether the windowAnimations field is set.
     */
    @java.lang.Override
    public boolean hasWindowAnimations() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <code>optional int32 window_animations = 11;</code>
     * @return The windowAnimations.
     */
    @java.lang.Override
    public int getWindowAnimations() {
      return windowAnimations_;
    }

    public static final int ALPHA_FIELD_NUMBER = 12;
    private float alpha_ = 0F;
    /**
     * <code>optional float alpha = 12;</code>
     * @return Whether the alpha field is set.
     */
    @java.lang.Override
    public boolean hasAlpha() {
      return ((bitField0_ & 0x00000800) != 0);
    }
    /**
     * <code>optional float alpha = 12;</code>
     * @return The alpha.
     */
    @java.lang.Override
    public float getAlpha() {
      return alpha_;
    }

    public static final int SCREEN_BRIGHTNESS_FIELD_NUMBER = 13;
    private float screenBrightness_ = 0F;
    /**
     * <code>optional float screen_brightness = 13;</code>
     * @return Whether the screenBrightness field is set.
     */
    @java.lang.Override
    public boolean hasScreenBrightness() {
      return ((bitField0_ & 0x00001000) != 0);
    }
    /**
     * <code>optional float screen_brightness = 13;</code>
     * @return The screenBrightness.
     */
    @java.lang.Override
    public float getScreenBrightness() {
      return screenBrightness_;
    }

    public static final int BUTTON_BRIGHTNESS_FIELD_NUMBER = 14;
    private float buttonBrightness_ = 0F;
    /**
     * <code>optional float button_brightness = 14;</code>
     * @return Whether the buttonBrightness field is set.
     */
    @java.lang.Override
    public boolean hasButtonBrightness() {
      return ((bitField0_ & 0x00002000) != 0);
    }
    /**
     * <code>optional float button_brightness = 14;</code>
     * @return The buttonBrightness.
     */
    @java.lang.Override
    public float getButtonBrightness() {
      return buttonBrightness_;
    }

    public static final int ROTATION_ANIMATION_FIELD_NUMBER = 15;
    private int rotationAnimation_ = -1;
    /**
     * <code>optional .perfetto.protos.WindowLayoutParamsProto.RotationAnimation rotation_animation = 15;</code>
     * @return Whether the rotationAnimation field is set.
     */
    @java.lang.Override public boolean hasRotationAnimation() {
      return ((bitField0_ & 0x00004000) != 0);
    }
    /**
     * <code>optional .perfetto.protos.WindowLayoutParamsProto.RotationAnimation rotation_animation = 15;</code>
     * @return The rotationAnimation.
     */
    @java.lang.Override public perfetto.protos.Windowlayoutparams.WindowLayoutParamsProto.RotationAnimation getRotationAnimation() {
      perfetto.protos.Windowlayoutparams.WindowLayoutParamsProto.RotationAnimation result = perfetto.protos.Windowlayoutparams.WindowLayoutParamsProto.RotationAnimation.forNumber(rotationAnimation_);
      return result == null ? perfetto.protos.Windowlayoutparams.WindowLayoutParamsProto.RotationAnimation.ROTATION_ANIMATION_UNSPECIFIED : result;
    }

    public static final int PREFERRED_REFRESH_RATE_FIELD_NUMBER = 16;
    private float preferredRefreshRate_ = 0F;
    /**
     * <code>optional float preferred_refresh_rate = 16;</code>
     * @return Whether the preferredRefreshRate field is set.
     */
    @java.lang.Override
    public boolean hasPreferredRefreshRate() {
      return ((bitField0_ & 0x00008000) != 0);
    }
    /**
     * <code>optional float preferred_refresh_rate = 16;</code>
     * @return The preferredRefreshRate.
     */
    @java.lang.Override
    public float getPreferredRefreshRate() {
      return preferredRefreshRate_;
    }

    public static final int PREFERRED_DISPLAY_MODE_ID_FIELD_NUMBER = 17;
    private int preferredDisplayModeId_ = 0;
    /**
     * <code>optional int32 preferred_display_mode_id = 17;</code>
     * @return Whether the preferredDisplayModeId field is set.
     */
    @java.lang.Override
    public boolean hasPreferredDisplayModeId() {
      return ((bitField0_ & 0x00010000) != 0);
    }
    /**
     * <code>optional int32 preferred_display_mode_id = 17;</code>
     * @return The preferredDisplayModeId.
     */
    @java.lang.Override
    public int getPreferredDisplayModeId() {
      return preferredDisplayModeId_;
    }

    public static final int HAS_SYSTEM_UI_LISTENERS_FIELD_NUMBER = 18;
    private boolean hasSystemUiListeners_ = false;
    /**
     * <code>optional bool has_system_ui_listeners = 18;</code>
     * @return Whether the hasSystemUiListeners field is set.
     */
    @java.lang.Override
    public boolean hasHasSystemUiListeners() {
      return ((bitField0_ & 0x00020000) != 0);
    }
    /**
     * <code>optional bool has_system_ui_listeners = 18;</code>
     * @return The hasSystemUiListeners.
     */
    @java.lang.Override
    public boolean getHasSystemUiListeners() {
      return hasSystemUiListeners_;
    }

    public static final int INPUT_FEATURE_FLAGS_FIELD_NUMBER = 19;
    private int inputFeatureFlags_ = 0;
    /**
     * <code>optional uint32 input_feature_flags = 19 [(.perfetto.protos.typedef) = "android.view.WindowManager.LayoutParams.InputFeatureFlags"];</code>
     * @return Whether the inputFeatureFlags field is set.
     */
    @java.lang.Override
    public boolean hasInputFeatureFlags() {
      return ((bitField0_ & 0x00040000) != 0);
    }
    /**
     * <code>optional uint32 input_feature_flags = 19 [(.perfetto.protos.typedef) = "android.view.WindowManager.LayoutParams.InputFeatureFlags"];</code>
     * @return The inputFeatureFlags.
     */
    @java.lang.Override
    public int getInputFeatureFlags() {
      return inputFeatureFlags_;
    }

    public static final int USER_ACTIVITY_TIMEOUT_FIELD_NUMBER = 20;
    private long userActivityTimeout_ = 0L;
    /**
     * <code>optional int64 user_activity_timeout = 20;</code>
     * @return Whether the userActivityTimeout field is set.
     */
    @java.lang.Override
    public boolean hasUserActivityTimeout() {
      return ((bitField0_ & 0x00080000) != 0);
    }
    /**
     * <code>optional int64 user_activity_timeout = 20;</code>
     * @return The userActivityTimeout.
     */
    @java.lang.Override
    public long getUserActivityTimeout() {
      return userActivityTimeout_;
    }

    public static final int COLOR_MODE_FIELD_NUMBER = 23;
    private int colorMode_ = -1;
    /**
     * <code>optional .perfetto.protos.ViewDisplayProto.ColorMode color_mode = 23;</code>
     * @return Whether the colorMode field is set.
     */
    @java.lang.Override public boolean hasColorMode() {
      return ((bitField0_ & 0x00100000) != 0);
    }
    /**
     * <code>optional .perfetto.protos.ViewDisplayProto.ColorMode color_mode = 23;</code>
     * @return The colorMode.
     */
    @java.lang.Override public perfetto.protos.Display.ViewDisplayProto.ColorMode getColorMode() {
      perfetto.protos.Display.ViewDisplayProto.ColorMode result = perfetto.protos.Display.ViewDisplayProto.ColorMode.forNumber(colorMode_);
      return result == null ? perfetto.protos.Display.ViewDisplayProto.ColorMode.COLOR_MODE_INVALID : result;
    }

    public static final int FLAGS_FIELD_NUMBER = 24;
    private int flags_ = 0;
    /**
     * <code>optional uint32 flags = 24 [(.perfetto.protos.typedef) = "android.view.WindowManager.LayoutParams.Flags"];</code>
     * @return Whether the flags field is set.
     */
    @java.lang.Override
    public boolean hasFlags() {
      return ((bitField0_ & 0x00200000) != 0);
    }
    /**
     * <code>optional uint32 flags = 24 [(.perfetto.protos.typedef) = "android.view.WindowManager.LayoutParams.Flags"];</code>
     * @return The flags.
     */
    @java.lang.Override
    public int getFlags() {
      return flags_;
    }

    public static final int PRIVATE_FLAGS_FIELD_NUMBER = 26;
    private int privateFlags_ = 0;
    /**
     * <code>optional uint32 private_flags = 26 [(.perfetto.protos.typedef) = "android.view.WindowManager.LayoutParams.PrivateFlags"];</code>
     * @return Whether the privateFlags field is set.
     */
    @java.lang.Override
    public boolean hasPrivateFlags() {
      return ((bitField0_ & 0x00400000) != 0);
    }
    /**
     * <code>optional uint32 private_flags = 26 [(.perfetto.protos.typedef) = "android.view.WindowManager.LayoutParams.PrivateFlags"];</code>
     * @return The privateFlags.
     */
    @java.lang.Override
    public int getPrivateFlags() {
      return privateFlags_;
    }

    public static final int SYSTEM_UI_VISIBILITY_FLAGS_FIELD_NUMBER = 27;
    private int systemUiVisibilityFlags_ = 0;
    /**
     * <code>optional uint32 system_ui_visibility_flags = 27 [(.perfetto.protos.typedef) = "android.view.WindowManager.LayoutParams.SystemUiVisibilityFlags"];</code>
     * @return Whether the systemUiVisibilityFlags field is set.
     */
    @java.lang.Override
    public boolean hasSystemUiVisibilityFlags() {
      return ((bitField0_ & 0x00800000) != 0);
    }
    /**
     * <code>optional uint32 system_ui_visibility_flags = 27 [(.perfetto.protos.typedef) = "android.view.WindowManager.LayoutParams.SystemUiVisibilityFlags"];</code>
     * @return The systemUiVisibilityFlags.
     */
    @java.lang.Override
    public int getSystemUiVisibilityFlags() {
      return systemUiVisibilityFlags_;
    }

    public static final int SUBTREE_SYSTEM_UI_VISIBILITY_FLAGS_FIELD_NUMBER = 28;
    private int subtreeSystemUiVisibilityFlags_ = 0;
    /**
     * <code>optional uint32 subtree_system_ui_visibility_flags = 28 [(.perfetto.protos.typedef) = "android.view.WindowManager.LayoutParams.SystemUiVisibilityFlags"];</code>
     * @return Whether the subtreeSystemUiVisibilityFlags field is set.
     */
    @java.lang.Override
    public boolean hasSubtreeSystemUiVisibilityFlags() {
      return ((bitField0_ & 0x01000000) != 0);
    }
    /**
     * <code>optional uint32 subtree_system_ui_visibility_flags = 28 [(.perfetto.protos.typedef) = "android.view.WindowManager.LayoutParams.SystemUiVisibilityFlags"];</code>
     * @return The subtreeSystemUiVisibilityFlags.
     */
    @java.lang.Override
    public int getSubtreeSystemUiVisibilityFlags() {
      return subtreeSystemUiVisibilityFlags_;
    }

    public static final int APPEARANCE_FIELD_NUMBER = 29;
    private int appearance_ = 0;
    /**
     * <code>optional uint32 appearance = 29 [(.perfetto.protos.typedef) = "android.view.WindowInsetsController.Appearance"];</code>
     * @return Whether the appearance field is set.
     */
    @java.lang.Override
    public boolean hasAppearance() {
      return ((bitField0_ & 0x02000000) != 0);
    }
    /**
     * <code>optional uint32 appearance = 29 [(.perfetto.protos.typedef) = "android.view.WindowInsetsController.Appearance"];</code>
     * @return The appearance.
     */
    @java.lang.Override
    public int getAppearance() {
      return appearance_;
    }

    public static final int BEHAVIOR_FIELD_NUMBER = 30;
    private int behavior_ = 0;
    /**
     * <code>optional uint32 behavior = 30 [(.perfetto.protos.typedef) = "android.view.WindowInsetsController.Behavior"];</code>
     * @return Whether the behavior field is set.
     */
    @java.lang.Override
    public boolean hasBehavior() {
      return ((bitField0_ & 0x04000000) != 0);
    }
    /**
     * <code>optional uint32 behavior = 30 [(.perfetto.protos.typedef) = "android.view.WindowInsetsController.Behavior"];</code>
     * @return The behavior.
     */
    @java.lang.Override
    public int getBehavior() {
      return behavior_;
    }

    public static final int FIT_INSETS_TYPES_FIELD_NUMBER = 31;
    private int fitInsetsTypes_ = 0;
    /**
     * <code>optional uint32 fit_insets_types = 31 [(.perfetto.protos.typedef) = "android.view.WindowInsets.Type.InsetsType"];</code>
     * @return Whether the fitInsetsTypes field is set.
     */
    @java.lang.Override
    public boolean hasFitInsetsTypes() {
      return ((bitField0_ & 0x08000000) != 0);
    }
    /**
     * <code>optional uint32 fit_insets_types = 31 [(.perfetto.protos.typedef) = "android.view.WindowInsets.Type.InsetsType"];</code>
     * @return The fitInsetsTypes.
     */
    @java.lang.Override
    public int getFitInsetsTypes() {
      return fitInsetsTypes_;
    }

    public static final int FIT_INSETS_SIDES_FIELD_NUMBER = 32;
    private int fitInsetsSides_ = 0;
    /**
     * <code>optional uint32 fit_insets_sides = 32 [(.perfetto.protos.typedef) = "android.view.WindowInsets.Side.InsetsSide"];</code>
     * @return Whether the fitInsetsSides field is set.
     */
    @java.lang.Override
    public boolean hasFitInsetsSides() {
      return ((bitField0_ & 0x10000000) != 0);
    }
    /**
     * <code>optional uint32 fit_insets_sides = 32 [(.perfetto.protos.typedef) = "android.view.WindowInsets.Side.InsetsSide"];</code>
     * @return The fitInsetsSides.
     */
    @java.lang.Override
    public int getFitInsetsSides() {
      return fitInsetsSides_;
    }

    public static final int FIT_IGNORE_VISIBILITY_FIELD_NUMBER = 33;
    private boolean fitIgnoreVisibility_ = false;
    /**
     * <code>optional bool fit_ignore_visibility = 33;</code>
     * @return Whether the fitIgnoreVisibility field is set.
     */
    @java.lang.Override
    public boolean hasFitIgnoreVisibility() {
      return ((bitField0_ & 0x20000000) != 0);
    }
    /**
     * <code>optional bool fit_ignore_visibility = 33;</code>
     * @return The fitIgnoreVisibility.
     */
    @java.lang.Override
    public boolean getFitIgnoreVisibility() {
      return fitIgnoreVisibility_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt32(1, type_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(2, x_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeInt32(3, y_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeInt32(4, width_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeInt32(5, height_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeFloat(6, horizontalMargin_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeFloat(7, verticalMargin_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        output.writeInt32(8, gravity_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        output.writeInt32(9, softInputMode_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        output.writeEnum(10, format_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        output.writeInt32(11, windowAnimations_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        output.writeFloat(12, alpha_);
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        output.writeFloat(13, screenBrightness_);
      }
      if (((bitField0_ & 0x00002000) != 0)) {
        output.writeFloat(14, buttonBrightness_);
      }
      if (((bitField0_ & 0x00004000) != 0)) {
        output.writeEnum(15, rotationAnimation_);
      }
      if (((bitField0_ & 0x00008000) != 0)) {
        output.writeFloat(16, preferredRefreshRate_);
      }
      if (((bitField0_ & 0x00010000) != 0)) {
        output.writeInt32(17, preferredDisplayModeId_);
      }
      if (((bitField0_ & 0x00020000) != 0)) {
        output.writeBool(18, hasSystemUiListeners_);
      }
      if (((bitField0_ & 0x00040000) != 0)) {
        output.writeUInt32(19, inputFeatureFlags_);
      }
      if (((bitField0_ & 0x00080000) != 0)) {
        output.writeInt64(20, userActivityTimeout_);
      }
      if (((bitField0_ & 0x00100000) != 0)) {
        output.writeEnum(23, colorMode_);
      }
      if (((bitField0_ & 0x00200000) != 0)) {
        output.writeUInt32(24, flags_);
      }
      if (((bitField0_ & 0x00400000) != 0)) {
        output.writeUInt32(26, privateFlags_);
      }
      if (((bitField0_ & 0x00800000) != 0)) {
        output.writeUInt32(27, systemUiVisibilityFlags_);
      }
      if (((bitField0_ & 0x01000000) != 0)) {
        output.writeUInt32(28, subtreeSystemUiVisibilityFlags_);
      }
      if (((bitField0_ & 0x02000000) != 0)) {
        output.writeUInt32(29, appearance_);
      }
      if (((bitField0_ & 0x04000000) != 0)) {
        output.writeUInt32(30, behavior_);
      }
      if (((bitField0_ & 0x08000000) != 0)) {
        output.writeUInt32(31, fitInsetsTypes_);
      }
      if (((bitField0_ & 0x10000000) != 0)) {
        output.writeUInt32(32, fitInsetsSides_);
      }
      if (((bitField0_ & 0x20000000) != 0)) {
        output.writeBool(33, fitIgnoreVisibility_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, type_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, x_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, y_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, width_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, height_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, horizontalMargin_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, verticalMargin_);
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, gravity_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, softInputMode_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(10, format_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, windowAnimations_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(12, alpha_);
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(13, screenBrightness_);
      }
      if (((bitField0_ & 0x00002000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(14, buttonBrightness_);
      }
      if (((bitField0_ & 0x00004000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(15, rotationAnimation_);
      }
      if (((bitField0_ & 0x00008000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(16, preferredRefreshRate_);
      }
      if (((bitField0_ & 0x00010000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, preferredDisplayModeId_);
      }
      if (((bitField0_ & 0x00020000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(18, hasSystemUiListeners_);
      }
      if (((bitField0_ & 0x00040000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(19, inputFeatureFlags_);
      }
      if (((bitField0_ & 0x00080000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(20, userActivityTimeout_);
      }
      if (((bitField0_ & 0x00100000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(23, colorMode_);
      }
      if (((bitField0_ & 0x00200000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(24, flags_);
      }
      if (((bitField0_ & 0x00400000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(26, privateFlags_);
      }
      if (((bitField0_ & 0x00800000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(27, systemUiVisibilityFlags_);
      }
      if (((bitField0_ & 0x01000000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(28, subtreeSystemUiVisibilityFlags_);
      }
      if (((bitField0_ & 0x02000000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(29, appearance_);
      }
      if (((bitField0_ & 0x04000000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(30, behavior_);
      }
      if (((bitField0_ & 0x08000000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(31, fitInsetsTypes_);
      }
      if (((bitField0_ & 0x10000000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(32, fitInsetsSides_);
      }
      if (((bitField0_ & 0x20000000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(33, fitIgnoreVisibility_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof perfetto.protos.Windowlayoutparams.WindowLayoutParamsProto)) {
        return super.equals(obj);
      }
      perfetto.protos.Windowlayoutparams.WindowLayoutParamsProto other = (perfetto.protos.Windowlayoutparams.WindowLayoutParamsProto) obj;

      if (hasType() != other.hasType()) return false;
      if (hasType()) {
        if (getType()
            != other.getType()) return false;
      }
      if (hasX() != other.hasX()) return false;
      if (hasX()) {
        if (getX()
            != other.getX()) return false;
      }
      if (hasY() != other.hasY()) return false;
      if (hasY()) {
        if (getY()
            != other.getY()) return false;
      }
      if (hasWidth() != other.hasWidth()) return false;
      if (hasWidth()) {
        if (getWidth()
            != other.getWidth()) return false;
      }
      if (hasHeight() != other.hasHeight()) return false;
      if (hasHeight()) {
        if (getHeight()
            != other.getHeight()) return false;
      }
      if (hasHorizontalMargin() != other.hasHorizontalMargin()) return false;
      if (hasHorizontalMargin()) {
        if (java.lang.Float.floatToIntBits(getHorizontalMargin())
            != java.lang.Float.floatToIntBits(
                other.getHorizontalMargin())) return false;
      }
      if (hasVerticalMargin() != other.hasVerticalMargin()) return false;
      if (hasVerticalMargin()) {
        if (java.lang.Float.floatToIntBits(getVerticalMargin())
            != java.lang.Float.floatToIntBits(
                other.getVerticalMargin())) return false;
      }
      if (hasGravity() != other.hasGravity()) return false;
      if (hasGravity()) {
        if (getGravity()
            != other.getGravity()) return false;
      }
      if (hasSoftInputMode() != other.hasSoftInputMode()) return false;
      if (hasSoftInputMode()) {
        if (getSoftInputMode()
            != other.getSoftInputMode()) return false;
      }
      if (hasFormat() != other.hasFormat()) return false;
      if (hasFormat()) {
        if (format_ != other.format_) return false;
      }
      if (hasWindowAnimations() != other.hasWindowAnimations()) return false;
      if (hasWindowAnimations()) {
        if (getWindowAnimations()
            != other.getWindowAnimations()) return false;
      }
      if (hasAlpha() != other.hasAlpha()) return false;
      if (hasAlpha()) {
        if (java.lang.Float.floatToIntBits(getAlpha())
            != java.lang.Float.floatToIntBits(
                other.getAlpha())) return false;
      }
      if (hasScreenBrightness() != other.hasScreenBrightness()) return false;
      if (hasScreenBrightness()) {
        if (java.lang.Float.floatToIntBits(getScreenBrightness())
            != java.lang.Float.floatToIntBits(
                other.getScreenBrightness())) return false;
      }
      if (hasButtonBrightness() != other.hasButtonBrightness()) return false;
      if (hasButtonBrightness()) {
        if (java.lang.Float.floatToIntBits(getButtonBrightness())
            != java.lang.Float.floatToIntBits(
                other.getButtonBrightness())) return false;
      }
      if (hasRotationAnimation() != other.hasRotationAnimation()) return false;
      if (hasRotationAnimation()) {
        if (rotationAnimation_ != other.rotationAnimation_) return false;
      }
      if (hasPreferredRefreshRate() != other.hasPreferredRefreshRate()) return false;
      if (hasPreferredRefreshRate()) {
        if (java.lang.Float.floatToIntBits(getPreferredRefreshRate())
            != java.lang.Float.floatToIntBits(
                other.getPreferredRefreshRate())) return false;
      }
      if (hasPreferredDisplayModeId() != other.hasPreferredDisplayModeId()) return false;
      if (hasPreferredDisplayModeId()) {
        if (getPreferredDisplayModeId()
            != other.getPreferredDisplayModeId()) return false;
      }
      if (hasHasSystemUiListeners() != other.hasHasSystemUiListeners()) return false;
      if (hasHasSystemUiListeners()) {
        if (getHasSystemUiListeners()
            != other.getHasSystemUiListeners()) return false;
      }
      if (hasInputFeatureFlags() != other.hasInputFeatureFlags()) return false;
      if (hasInputFeatureFlags()) {
        if (getInputFeatureFlags()
            != other.getInputFeatureFlags()) return false;
      }
      if (hasUserActivityTimeout() != other.hasUserActivityTimeout()) return false;
      if (hasUserActivityTimeout()) {
        if (getUserActivityTimeout()
            != other.getUserActivityTimeout()) return false;
      }
      if (hasColorMode() != other.hasColorMode()) return false;
      if (hasColorMode()) {
        if (colorMode_ != other.colorMode_) return false;
      }
      if (hasFlags() != other.hasFlags()) return false;
      if (hasFlags()) {
        if (getFlags()
            != other.getFlags()) return false;
      }
      if (hasPrivateFlags() != other.hasPrivateFlags()) return false;
      if (hasPrivateFlags()) {
        if (getPrivateFlags()
            != other.getPrivateFlags()) return false;
      }
      if (hasSystemUiVisibilityFlags() != other.hasSystemUiVisibilityFlags()) return false;
      if (hasSystemUiVisibilityFlags()) {
        if (getSystemUiVisibilityFlags()
            != other.getSystemUiVisibilityFlags()) return false;
      }
      if (hasSubtreeSystemUiVisibilityFlags() != other.hasSubtreeSystemUiVisibilityFlags()) return false;
      if (hasSubtreeSystemUiVisibilityFlags()) {
        if (getSubtreeSystemUiVisibilityFlags()
            != other.getSubtreeSystemUiVisibilityFlags()) return false;
      }
      if (hasAppearance() != other.hasAppearance()) return false;
      if (hasAppearance()) {
        if (getAppearance()
            != other.getAppearance()) return false;
      }
      if (hasBehavior() != other.hasBehavior()) return false;
      if (hasBehavior()) {
        if (getBehavior()
            != other.getBehavior()) return false;
      }
      if (hasFitInsetsTypes() != other.hasFitInsetsTypes()) return false;
      if (hasFitInsetsTypes()) {
        if (getFitInsetsTypes()
            != other.getFitInsetsTypes()) return false;
      }
      if (hasFitInsetsSides() != other.hasFitInsetsSides()) return false;
      if (hasFitInsetsSides()) {
        if (getFitInsetsSides()
            != other.getFitInsetsSides()) return false;
      }
      if (hasFitIgnoreVisibility() != other.hasFitIgnoreVisibility()) return false;
      if (hasFitIgnoreVisibility()) {
        if (getFitIgnoreVisibility()
            != other.getFitIgnoreVisibility()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasType()) {
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getType();
      }
      if (hasX()) {
        hash = (37 * hash) + X_FIELD_NUMBER;
        hash = (53 * hash) + getX();
      }
      if (hasY()) {
        hash = (37 * hash) + Y_FIELD_NUMBER;
        hash = (53 * hash) + getY();
      }
      if (hasWidth()) {
        hash = (37 * hash) + WIDTH_FIELD_NUMBER;
        hash = (53 * hash) + getWidth();
      }
      if (hasHeight()) {
        hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
        hash = (53 * hash) + getHeight();
      }
      if (hasHorizontalMargin()) {
        hash = (37 * hash) + HORIZONTAL_MARGIN_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getHorizontalMargin());
      }
      if (hasVerticalMargin()) {
        hash = (37 * hash) + VERTICAL_MARGIN_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getVerticalMargin());
      }
      if (hasGravity()) {
        hash = (37 * hash) + GRAVITY_FIELD_NUMBER;
        hash = (53 * hash) + getGravity();
      }
      if (hasSoftInputMode()) {
        hash = (37 * hash) + SOFT_INPUT_MODE_FIELD_NUMBER;
        hash = (53 * hash) + getSoftInputMode();
      }
      if (hasFormat()) {
        hash = (37 * hash) + FORMAT_FIELD_NUMBER;
        hash = (53 * hash) + format_;
      }
      if (hasWindowAnimations()) {
        hash = (37 * hash) + WINDOW_ANIMATIONS_FIELD_NUMBER;
        hash = (53 * hash) + getWindowAnimations();
      }
      if (hasAlpha()) {
        hash = (37 * hash) + ALPHA_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getAlpha());
      }
      if (hasScreenBrightness()) {
        hash = (37 * hash) + SCREEN_BRIGHTNESS_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getScreenBrightness());
      }
      if (hasButtonBrightness()) {
        hash = (37 * hash) + BUTTON_BRIGHTNESS_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getButtonBrightness());
      }
      if (hasRotationAnimation()) {
        hash = (37 * hash) + ROTATION_ANIMATION_FIELD_NUMBER;
        hash = (53 * hash) + rotationAnimation_;
      }
      if (hasPreferredRefreshRate()) {
        hash = (37 * hash) + PREFERRED_REFRESH_RATE_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getPreferredRefreshRate());
      }
      if (hasPreferredDisplayModeId()) {
        hash = (37 * hash) + PREFERRED_DISPLAY_MODE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getPreferredDisplayModeId();
      }
      if (hasHasSystemUiListeners()) {
        hash = (37 * hash) + HAS_SYSTEM_UI_LISTENERS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getHasSystemUiListeners());
      }
      if (hasInputFeatureFlags()) {
        hash = (37 * hash) + INPUT_FEATURE_FLAGS_FIELD_NUMBER;
        hash = (53 * hash) + getInputFeatureFlags();
      }
      if (hasUserActivityTimeout()) {
        hash = (37 * hash) + USER_ACTIVITY_TIMEOUT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getUserActivityTimeout());
      }
      if (hasColorMode()) {
        hash = (37 * hash) + COLOR_MODE_FIELD_NUMBER;
        hash = (53 * hash) + colorMode_;
      }
      if (hasFlags()) {
        hash = (37 * hash) + FLAGS_FIELD_NUMBER;
        hash = (53 * hash) + getFlags();
      }
      if (hasPrivateFlags()) {
        hash = (37 * hash) + PRIVATE_FLAGS_FIELD_NUMBER;
        hash = (53 * hash) + getPrivateFlags();
      }
      if (hasSystemUiVisibilityFlags()) {
        hash = (37 * hash) + SYSTEM_UI_VISIBILITY_FLAGS_FIELD_NUMBER;
        hash = (53 * hash) + getSystemUiVisibilityFlags();
      }
      if (hasSubtreeSystemUiVisibilityFlags()) {
        hash = (37 * hash) + SUBTREE_SYSTEM_UI_VISIBILITY_FLAGS_FIELD_NUMBER;
        hash = (53 * hash) + getSubtreeSystemUiVisibilityFlags();
      }
      if (hasAppearance()) {
        hash = (37 * hash) + APPEARANCE_FIELD_NUMBER;
        hash = (53 * hash) + getAppearance();
      }
      if (hasBehavior()) {
        hash = (37 * hash) + BEHAVIOR_FIELD_NUMBER;
        hash = (53 * hash) + getBehavior();
      }
      if (hasFitInsetsTypes()) {
        hash = (37 * hash) + FIT_INSETS_TYPES_FIELD_NUMBER;
        hash = (53 * hash) + getFitInsetsTypes();
      }
      if (hasFitInsetsSides()) {
        hash = (37 * hash) + FIT_INSETS_SIDES_FIELD_NUMBER;
        hash = (53 * hash) + getFitInsetsSides();
      }
      if (hasFitIgnoreVisibility()) {
        hash = (37 * hash) + FIT_IGNORE_VISIBILITY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getFitIgnoreVisibility());
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static perfetto.protos.Windowlayoutparams.WindowLayoutParamsProto parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.Windowlayoutparams.WindowLayoutParamsProto parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.Windowlayoutparams.WindowLayoutParamsProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.Windowlayoutparams.WindowLayoutParamsProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.Windowlayoutparams.WindowLayoutParamsProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.Windowlayoutparams.WindowLayoutParamsProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.Windowlayoutparams.WindowLayoutParamsProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.Windowlayoutparams.WindowLayoutParamsProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static perfetto.protos.Windowlayoutparams.WindowLayoutParamsProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static perfetto.protos.Windowlayoutparams.WindowLayoutParamsProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.Windowlayoutparams.WindowLayoutParamsProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.Windowlayoutparams.WindowLayoutParamsProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(perfetto.protos.Windowlayoutparams.WindowLayoutParamsProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * represents WindowManager.LayoutParams
     * </pre>
     *
     * Protobuf type {@code perfetto.protos.WindowLayoutParamsProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:perfetto.protos.WindowLayoutParamsProto)
        perfetto.protos.Windowlayoutparams.WindowLayoutParamsProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.Windowlayoutparams.internal_static_perfetto_protos_WindowLayoutParamsProto_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.Windowlayoutparams.internal_static_perfetto_protos_WindowLayoutParamsProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.Windowlayoutparams.WindowLayoutParamsProto.class, perfetto.protos.Windowlayoutparams.WindowLayoutParamsProto.Builder.class);
      }

      // Construct using perfetto.protos.Windowlayoutparams.WindowLayoutParamsProto.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        type_ = 0;
        x_ = 0;
        y_ = 0;
        width_ = 0;
        height_ = 0;
        horizontalMargin_ = 0F;
        verticalMargin_ = 0F;
        gravity_ = 0;
        softInputMode_ = 0;
        format_ = 0;
        windowAnimations_ = 0;
        alpha_ = 0F;
        screenBrightness_ = 0F;
        buttonBrightness_ = 0F;
        rotationAnimation_ = -1;
        preferredRefreshRate_ = 0F;
        preferredDisplayModeId_ = 0;
        hasSystemUiListeners_ = false;
        inputFeatureFlags_ = 0;
        userActivityTimeout_ = 0L;
        colorMode_ = -1;
        flags_ = 0;
        privateFlags_ = 0;
        systemUiVisibilityFlags_ = 0;
        subtreeSystemUiVisibilityFlags_ = 0;
        appearance_ = 0;
        behavior_ = 0;
        fitInsetsTypes_ = 0;
        fitInsetsSides_ = 0;
        fitIgnoreVisibility_ = false;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return perfetto.protos.Windowlayoutparams.internal_static_perfetto_protos_WindowLayoutParamsProto_descriptor;
      }

      @java.lang.Override
      public perfetto.protos.Windowlayoutparams.WindowLayoutParamsProto getDefaultInstanceForType() {
        return perfetto.protos.Windowlayoutparams.WindowLayoutParamsProto.getDefaultInstance();
      }

      @java.lang.Override
      public perfetto.protos.Windowlayoutparams.WindowLayoutParamsProto build() {
        perfetto.protos.Windowlayoutparams.WindowLayoutParamsProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public perfetto.protos.Windowlayoutparams.WindowLayoutParamsProto buildPartial() {
        perfetto.protos.Windowlayoutparams.WindowLayoutParamsProto result = new perfetto.protos.Windowlayoutparams.WindowLayoutParamsProto(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(perfetto.protos.Windowlayoutparams.WindowLayoutParamsProto result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.type_ = type_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.x_ = x_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.y_ = y_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.width_ = width_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.height_ = height_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.horizontalMargin_ = horizontalMargin_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.verticalMargin_ = verticalMargin_;
          to_bitField0_ |= 0x00000040;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.gravity_ = gravity_;
          to_bitField0_ |= 0x00000080;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.softInputMode_ = softInputMode_;
          to_bitField0_ |= 0x00000100;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.format_ = format_;
          to_bitField0_ |= 0x00000200;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.windowAnimations_ = windowAnimations_;
          to_bitField0_ |= 0x00000400;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.alpha_ = alpha_;
          to_bitField0_ |= 0x00000800;
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          result.screenBrightness_ = screenBrightness_;
          to_bitField0_ |= 0x00001000;
        }
        if (((from_bitField0_ & 0x00002000) != 0)) {
          result.buttonBrightness_ = buttonBrightness_;
          to_bitField0_ |= 0x00002000;
        }
        if (((from_bitField0_ & 0x00004000) != 0)) {
          result.rotationAnimation_ = rotationAnimation_;
          to_bitField0_ |= 0x00004000;
        }
        if (((from_bitField0_ & 0x00008000) != 0)) {
          result.preferredRefreshRate_ = preferredRefreshRate_;
          to_bitField0_ |= 0x00008000;
        }
        if (((from_bitField0_ & 0x00010000) != 0)) {
          result.preferredDisplayModeId_ = preferredDisplayModeId_;
          to_bitField0_ |= 0x00010000;
        }
        if (((from_bitField0_ & 0x00020000) != 0)) {
          result.hasSystemUiListeners_ = hasSystemUiListeners_;
          to_bitField0_ |= 0x00020000;
        }
        if (((from_bitField0_ & 0x00040000) != 0)) {
          result.inputFeatureFlags_ = inputFeatureFlags_;
          to_bitField0_ |= 0x00040000;
        }
        if (((from_bitField0_ & 0x00080000) != 0)) {
          result.userActivityTimeout_ = userActivityTimeout_;
          to_bitField0_ |= 0x00080000;
        }
        if (((from_bitField0_ & 0x00100000) != 0)) {
          result.colorMode_ = colorMode_;
          to_bitField0_ |= 0x00100000;
        }
        if (((from_bitField0_ & 0x00200000) != 0)) {
          result.flags_ = flags_;
          to_bitField0_ |= 0x00200000;
        }
        if (((from_bitField0_ & 0x00400000) != 0)) {
          result.privateFlags_ = privateFlags_;
          to_bitField0_ |= 0x00400000;
        }
        if (((from_bitField0_ & 0x00800000) != 0)) {
          result.systemUiVisibilityFlags_ = systemUiVisibilityFlags_;
          to_bitField0_ |= 0x00800000;
        }
        if (((from_bitField0_ & 0x01000000) != 0)) {
          result.subtreeSystemUiVisibilityFlags_ = subtreeSystemUiVisibilityFlags_;
          to_bitField0_ |= 0x01000000;
        }
        if (((from_bitField0_ & 0x02000000) != 0)) {
          result.appearance_ = appearance_;
          to_bitField0_ |= 0x02000000;
        }
        if (((from_bitField0_ & 0x04000000) != 0)) {
          result.behavior_ = behavior_;
          to_bitField0_ |= 0x04000000;
        }
        if (((from_bitField0_ & 0x08000000) != 0)) {
          result.fitInsetsTypes_ = fitInsetsTypes_;
          to_bitField0_ |= 0x08000000;
        }
        if (((from_bitField0_ & 0x10000000) != 0)) {
          result.fitInsetsSides_ = fitInsetsSides_;
          to_bitField0_ |= 0x10000000;
        }
        if (((from_bitField0_ & 0x20000000) != 0)) {
          result.fitIgnoreVisibility_ = fitIgnoreVisibility_;
          to_bitField0_ |= 0x20000000;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof perfetto.protos.Windowlayoutparams.WindowLayoutParamsProto) {
          return mergeFrom((perfetto.protos.Windowlayoutparams.WindowLayoutParamsProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(perfetto.protos.Windowlayoutparams.WindowLayoutParamsProto other) {
        if (other == perfetto.protos.Windowlayoutparams.WindowLayoutParamsProto.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        if (other.hasWidth()) {
          setWidth(other.getWidth());
        }
        if (other.hasHeight()) {
          setHeight(other.getHeight());
        }
        if (other.hasHorizontalMargin()) {
          setHorizontalMargin(other.getHorizontalMargin());
        }
        if (other.hasVerticalMargin()) {
          setVerticalMargin(other.getVerticalMargin());
        }
        if (other.hasGravity()) {
          setGravity(other.getGravity());
        }
        if (other.hasSoftInputMode()) {
          setSoftInputMode(other.getSoftInputMode());
        }
        if (other.hasFormat()) {
          setFormat(other.getFormat());
        }
        if (other.hasWindowAnimations()) {
          setWindowAnimations(other.getWindowAnimations());
        }
        if (other.hasAlpha()) {
          setAlpha(other.getAlpha());
        }
        if (other.hasScreenBrightness()) {
          setScreenBrightness(other.getScreenBrightness());
        }
        if (other.hasButtonBrightness()) {
          setButtonBrightness(other.getButtonBrightness());
        }
        if (other.hasRotationAnimation()) {
          setRotationAnimation(other.getRotationAnimation());
        }
        if (other.hasPreferredRefreshRate()) {
          setPreferredRefreshRate(other.getPreferredRefreshRate());
        }
        if (other.hasPreferredDisplayModeId()) {
          setPreferredDisplayModeId(other.getPreferredDisplayModeId());
        }
        if (other.hasHasSystemUiListeners()) {
          setHasSystemUiListeners(other.getHasSystemUiListeners());
        }
        if (other.hasInputFeatureFlags()) {
          setInputFeatureFlags(other.getInputFeatureFlags());
        }
        if (other.hasUserActivityTimeout()) {
          setUserActivityTimeout(other.getUserActivityTimeout());
        }
        if (other.hasColorMode()) {
          setColorMode(other.getColorMode());
        }
        if (other.hasFlags()) {
          setFlags(other.getFlags());
        }
        if (other.hasPrivateFlags()) {
          setPrivateFlags(other.getPrivateFlags());
        }
        if (other.hasSystemUiVisibilityFlags()) {
          setSystemUiVisibilityFlags(other.getSystemUiVisibilityFlags());
        }
        if (other.hasSubtreeSystemUiVisibilityFlags()) {
          setSubtreeSystemUiVisibilityFlags(other.getSubtreeSystemUiVisibilityFlags());
        }
        if (other.hasAppearance()) {
          setAppearance(other.getAppearance());
        }
        if (other.hasBehavior()) {
          setBehavior(other.getBehavior());
        }
        if (other.hasFitInsetsTypes()) {
          setFitInsetsTypes(other.getFitInsetsTypes());
        }
        if (other.hasFitInsetsSides()) {
          setFitInsetsSides(other.getFitInsetsSides());
        }
        if (other.hasFitIgnoreVisibility()) {
          setFitIgnoreVisibility(other.getFitIgnoreVisibility());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                type_ = input.readInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                x_ = input.readInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                y_ = input.readInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                width_ = input.readInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                height_ = input.readInt32();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 53: {
                horizontalMargin_ = input.readFloat();
                bitField0_ |= 0x00000020;
                break;
              } // case 53
              case 61: {
                verticalMargin_ = input.readFloat();
                bitField0_ |= 0x00000040;
                break;
              } // case 61
              case 64: {
                gravity_ = input.readInt32();
                bitField0_ |= 0x00000080;
                break;
              } // case 64
              case 72: {
                softInputMode_ = input.readInt32();
                bitField0_ |= 0x00000100;
                break;
              } // case 72
              case 80: {
                int tmpRaw = input.readEnum();
                perfetto.protos.Pixelformat.PixelFormatProto.Format tmpValue =
                    perfetto.protos.Pixelformat.PixelFormatProto.Format.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(10, tmpRaw);
                } else {
                  format_ = tmpRaw;
                  bitField0_ |= 0x00000200;
                }
                break;
              } // case 80
              case 88: {
                windowAnimations_ = input.readInt32();
                bitField0_ |= 0x00000400;
                break;
              } // case 88
              case 101: {
                alpha_ = input.readFloat();
                bitField0_ |= 0x00000800;
                break;
              } // case 101
              case 109: {
                screenBrightness_ = input.readFloat();
                bitField0_ |= 0x00001000;
                break;
              } // case 109
              case 117: {
                buttonBrightness_ = input.readFloat();
                bitField0_ |= 0x00002000;
                break;
              } // case 117
              case 120: {
                int tmpRaw = input.readEnum();
                perfetto.protos.Windowlayoutparams.WindowLayoutParamsProto.RotationAnimation tmpValue =
                    perfetto.protos.Windowlayoutparams.WindowLayoutParamsProto.RotationAnimation.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(15, tmpRaw);
                } else {
                  rotationAnimation_ = tmpRaw;
                  bitField0_ |= 0x00004000;
                }
                break;
              } // case 120
              case 133: {
                preferredRefreshRate_ = input.readFloat();
                bitField0_ |= 0x00008000;
                break;
              } // case 133
              case 136: {
                preferredDisplayModeId_ = input.readInt32();
                bitField0_ |= 0x00010000;
                break;
              } // case 136
              case 144: {
                hasSystemUiListeners_ = input.readBool();
                bitField0_ |= 0x00020000;
                break;
              } // case 144
              case 152: {
                inputFeatureFlags_ = input.readUInt32();
                bitField0_ |= 0x00040000;
                break;
              } // case 152
              case 160: {
                userActivityTimeout_ = input.readInt64();
                bitField0_ |= 0x00080000;
                break;
              } // case 160
              case 184: {
                int tmpRaw = input.readEnum();
                perfetto.protos.Display.ViewDisplayProto.ColorMode tmpValue =
                    perfetto.protos.Display.ViewDisplayProto.ColorMode.forNumber(tmpRaw);
                if (tmpValue == null) {
                  mergeUnknownVarintField(23, tmpRaw);
                } else {
                  colorMode_ = tmpRaw;
                  bitField0_ |= 0x00100000;
                }
                break;
              } // case 184
              case 192: {
                flags_ = input.readUInt32();
                bitField0_ |= 0x00200000;
                break;
              } // case 192
              case 208: {
                privateFlags_ = input.readUInt32();
                bitField0_ |= 0x00400000;
                break;
              } // case 208
              case 216: {
                systemUiVisibilityFlags_ = input.readUInt32();
                bitField0_ |= 0x00800000;
                break;
              } // case 216
              case 224: {
                subtreeSystemUiVisibilityFlags_ = input.readUInt32();
                bitField0_ |= 0x01000000;
                break;
              } // case 224
              case 232: {
                appearance_ = input.readUInt32();
                bitField0_ |= 0x02000000;
                break;
              } // case 232
              case 240: {
                behavior_ = input.readUInt32();
                bitField0_ |= 0x04000000;
                break;
              } // case 240
              case 248: {
                fitInsetsTypes_ = input.readUInt32();
                bitField0_ |= 0x08000000;
                break;
              } // case 248
              case 256: {
                fitInsetsSides_ = input.readUInt32();
                bitField0_ |= 0x10000000;
                break;
              } // case 256
              case 264: {
                fitIgnoreVisibility_ = input.readBool();
                bitField0_ |= 0x20000000;
                break;
              } // case 264
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int type_ ;
      /**
       * <code>optional int32 type = 1 [(.perfetto.protos.typedef) = "android.view.WindowManager.LayoutParams.WindowType"];</code>
       * @return Whether the type field is set.
       */
      @java.lang.Override
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional int32 type = 1 [(.perfetto.protos.typedef) = "android.view.WindowManager.LayoutParams.WindowType"];</code>
       * @return The type.
       */
      @java.lang.Override
      public int getType() {
        return type_;
      }
      /**
       * <code>optional int32 type = 1 [(.perfetto.protos.typedef) = "android.view.WindowManager.LayoutParams.WindowType"];</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(int value) {

        type_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 type = 1 [(.perfetto.protos.typedef) = "android.view.WindowManager.LayoutParams.WindowType"];</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        onChanged();
        return this;
      }

      private int x_ ;
      /**
       * <code>optional int32 x = 2;</code>
       * @return Whether the x field is set.
       */
      @java.lang.Override
      public boolean hasX() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional int32 x = 2;</code>
       * @return The x.
       */
      @java.lang.Override
      public int getX() {
        return x_;
      }
      /**
       * <code>optional int32 x = 2;</code>
       * @param value The x to set.
       * @return This builder for chaining.
       */
      public Builder setX(int value) {

        x_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 x = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000002);
        x_ = 0;
        onChanged();
        return this;
      }

      private int y_ ;
      /**
       * <code>optional int32 y = 3;</code>
       * @return Whether the y field is set.
       */
      @java.lang.Override
      public boolean hasY() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional int32 y = 3;</code>
       * @return The y.
       */
      @java.lang.Override
      public int getY() {
        return y_;
      }
      /**
       * <code>optional int32 y = 3;</code>
       * @param value The y to set.
       * @return This builder for chaining.
       */
      public Builder setY(int value) {

        y_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 y = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000004);
        y_ = 0;
        onChanged();
        return this;
      }

      private int width_ ;
      /**
       * <code>optional int32 width = 4;</code>
       * @return Whether the width field is set.
       */
      @java.lang.Override
      public boolean hasWidth() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional int32 width = 4;</code>
       * @return The width.
       */
      @java.lang.Override
      public int getWidth() {
        return width_;
      }
      /**
       * <code>optional int32 width = 4;</code>
       * @param value The width to set.
       * @return This builder for chaining.
       */
      public Builder setWidth(int value) {

        width_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 width = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearWidth() {
        bitField0_ = (bitField0_ & ~0x00000008);
        width_ = 0;
        onChanged();
        return this;
      }

      private int height_ ;
      /**
       * <code>optional int32 height = 5;</code>
       * @return Whether the height field is set.
       */
      @java.lang.Override
      public boolean hasHeight() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional int32 height = 5;</code>
       * @return The height.
       */
      @java.lang.Override
      public int getHeight() {
        return height_;
      }
      /**
       * <code>optional int32 height = 5;</code>
       * @param value The height to set.
       * @return This builder for chaining.
       */
      public Builder setHeight(int value) {

        height_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 height = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeight() {
        bitField0_ = (bitField0_ & ~0x00000010);
        height_ = 0;
        onChanged();
        return this;
      }

      private float horizontalMargin_ ;
      /**
       * <code>optional float horizontal_margin = 6;</code>
       * @return Whether the horizontalMargin field is set.
       */
      @java.lang.Override
      public boolean hasHorizontalMargin() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional float horizontal_margin = 6;</code>
       * @return The horizontalMargin.
       */
      @java.lang.Override
      public float getHorizontalMargin() {
        return horizontalMargin_;
      }
      /**
       * <code>optional float horizontal_margin = 6;</code>
       * @param value The horizontalMargin to set.
       * @return This builder for chaining.
       */
      public Builder setHorizontalMargin(float value) {

        horizontalMargin_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>optional float horizontal_margin = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearHorizontalMargin() {
        bitField0_ = (bitField0_ & ~0x00000020);
        horizontalMargin_ = 0F;
        onChanged();
        return this;
      }

      private float verticalMargin_ ;
      /**
       * <code>optional float vertical_margin = 7;</code>
       * @return Whether the verticalMargin field is set.
       */
      @java.lang.Override
      public boolean hasVerticalMargin() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional float vertical_margin = 7;</code>
       * @return The verticalMargin.
       */
      @java.lang.Override
      public float getVerticalMargin() {
        return verticalMargin_;
      }
      /**
       * <code>optional float vertical_margin = 7;</code>
       * @param value The verticalMargin to set.
       * @return This builder for chaining.
       */
      public Builder setVerticalMargin(float value) {

        verticalMargin_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>optional float vertical_margin = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearVerticalMargin() {
        bitField0_ = (bitField0_ & ~0x00000040);
        verticalMargin_ = 0F;
        onChanged();
        return this;
      }

      private int gravity_ ;
      /**
       * <code>optional int32 gravity = 8 [(.perfetto.protos.typedef) = "android.view.Gravity.GravityFlags"];</code>
       * @return Whether the gravity field is set.
       */
      @java.lang.Override
      public boolean hasGravity() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <code>optional int32 gravity = 8 [(.perfetto.protos.typedef) = "android.view.Gravity.GravityFlags"];</code>
       * @return The gravity.
       */
      @java.lang.Override
      public int getGravity() {
        return gravity_;
      }
      /**
       * <code>optional int32 gravity = 8 [(.perfetto.protos.typedef) = "android.view.Gravity.GravityFlags"];</code>
       * @param value The gravity to set.
       * @return This builder for chaining.
       */
      public Builder setGravity(int value) {

        gravity_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 gravity = 8 [(.perfetto.protos.typedef) = "android.view.Gravity.GravityFlags"];</code>
       * @return This builder for chaining.
       */
      public Builder clearGravity() {
        bitField0_ = (bitField0_ & ~0x00000080);
        gravity_ = 0;
        onChanged();
        return this;
      }

      private int softInputMode_ ;
      /**
       * <code>optional int32 soft_input_mode = 9 [(.perfetto.protos.typedef) = "android.view.WindowManager.LayoutParams.SoftInputModeFlags"];</code>
       * @return Whether the softInputMode field is set.
       */
      @java.lang.Override
      public boolean hasSoftInputMode() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <code>optional int32 soft_input_mode = 9 [(.perfetto.protos.typedef) = "android.view.WindowManager.LayoutParams.SoftInputModeFlags"];</code>
       * @return The softInputMode.
       */
      @java.lang.Override
      public int getSoftInputMode() {
        return softInputMode_;
      }
      /**
       * <code>optional int32 soft_input_mode = 9 [(.perfetto.protos.typedef) = "android.view.WindowManager.LayoutParams.SoftInputModeFlags"];</code>
       * @param value The softInputMode to set.
       * @return This builder for chaining.
       */
      public Builder setSoftInputMode(int value) {

        softInputMode_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 soft_input_mode = 9 [(.perfetto.protos.typedef) = "android.view.WindowManager.LayoutParams.SoftInputModeFlags"];</code>
       * @return This builder for chaining.
       */
      public Builder clearSoftInputMode() {
        bitField0_ = (bitField0_ & ~0x00000100);
        softInputMode_ = 0;
        onChanged();
        return this;
      }

      private int format_ = 0;
      /**
       * <code>optional .perfetto.protos.PixelFormatProto.Format format = 10;</code>
       * @return Whether the format field is set.
       */
      @java.lang.Override public boolean hasFormat() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <code>optional .perfetto.protos.PixelFormatProto.Format format = 10;</code>
       * @return The format.
       */
      @java.lang.Override
      public perfetto.protos.Pixelformat.PixelFormatProto.Format getFormat() {
        perfetto.protos.Pixelformat.PixelFormatProto.Format result = perfetto.protos.Pixelformat.PixelFormatProto.Format.forNumber(format_);
        return result == null ? perfetto.protos.Pixelformat.PixelFormatProto.Format.UNKNOWN : result;
      }
      /**
       * <code>optional .perfetto.protos.PixelFormatProto.Format format = 10;</code>
       * @param value The format to set.
       * @return This builder for chaining.
       */
      public Builder setFormat(perfetto.protos.Pixelformat.PixelFormatProto.Format value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000200;
        format_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .perfetto.protos.PixelFormatProto.Format format = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearFormat() {
        bitField0_ = (bitField0_ & ~0x00000200);
        format_ = 0;
        onChanged();
        return this;
      }

      private int windowAnimations_ ;
      /**
       * <code>optional int32 window_animations = 11;</code>
       * @return Whether the windowAnimations field is set.
       */
      @java.lang.Override
      public boolean hasWindowAnimations() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <code>optional int32 window_animations = 11;</code>
       * @return The windowAnimations.
       */
      @java.lang.Override
      public int getWindowAnimations() {
        return windowAnimations_;
      }
      /**
       * <code>optional int32 window_animations = 11;</code>
       * @param value The windowAnimations to set.
       * @return This builder for chaining.
       */
      public Builder setWindowAnimations(int value) {

        windowAnimations_ = value;
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 window_animations = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearWindowAnimations() {
        bitField0_ = (bitField0_ & ~0x00000400);
        windowAnimations_ = 0;
        onChanged();
        return this;
      }

      private float alpha_ ;
      /**
       * <code>optional float alpha = 12;</code>
       * @return Whether the alpha field is set.
       */
      @java.lang.Override
      public boolean hasAlpha() {
        return ((bitField0_ & 0x00000800) != 0);
      }
      /**
       * <code>optional float alpha = 12;</code>
       * @return The alpha.
       */
      @java.lang.Override
      public float getAlpha() {
        return alpha_;
      }
      /**
       * <code>optional float alpha = 12;</code>
       * @param value The alpha to set.
       * @return This builder for chaining.
       */
      public Builder setAlpha(float value) {

        alpha_ = value;
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <code>optional float alpha = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearAlpha() {
        bitField0_ = (bitField0_ & ~0x00000800);
        alpha_ = 0F;
        onChanged();
        return this;
      }

      private float screenBrightness_ ;
      /**
       * <code>optional float screen_brightness = 13;</code>
       * @return Whether the screenBrightness field is set.
       */
      @java.lang.Override
      public boolean hasScreenBrightness() {
        return ((bitField0_ & 0x00001000) != 0);
      }
      /**
       * <code>optional float screen_brightness = 13;</code>
       * @return The screenBrightness.
       */
      @java.lang.Override
      public float getScreenBrightness() {
        return screenBrightness_;
      }
      /**
       * <code>optional float screen_brightness = 13;</code>
       * @param value The screenBrightness to set.
       * @return This builder for chaining.
       */
      public Builder setScreenBrightness(float value) {

        screenBrightness_ = value;
        bitField0_ |= 0x00001000;
        onChanged();
        return this;
      }
      /**
       * <code>optional float screen_brightness = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearScreenBrightness() {
        bitField0_ = (bitField0_ & ~0x00001000);
        screenBrightness_ = 0F;
        onChanged();
        return this;
      }

      private float buttonBrightness_ ;
      /**
       * <code>optional float button_brightness = 14;</code>
       * @return Whether the buttonBrightness field is set.
       */
      @java.lang.Override
      public boolean hasButtonBrightness() {
        return ((bitField0_ & 0x00002000) != 0);
      }
      /**
       * <code>optional float button_brightness = 14;</code>
       * @return The buttonBrightness.
       */
      @java.lang.Override
      public float getButtonBrightness() {
        return buttonBrightness_;
      }
      /**
       * <code>optional float button_brightness = 14;</code>
       * @param value The buttonBrightness to set.
       * @return This builder for chaining.
       */
      public Builder setButtonBrightness(float value) {

        buttonBrightness_ = value;
        bitField0_ |= 0x00002000;
        onChanged();
        return this;
      }
      /**
       * <code>optional float button_brightness = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearButtonBrightness() {
        bitField0_ = (bitField0_ & ~0x00002000);
        buttonBrightness_ = 0F;
        onChanged();
        return this;
      }

      private int rotationAnimation_ = -1;
      /**
       * <code>optional .perfetto.protos.WindowLayoutParamsProto.RotationAnimation rotation_animation = 15;</code>
       * @return Whether the rotationAnimation field is set.
       */
      @java.lang.Override public boolean hasRotationAnimation() {
        return ((bitField0_ & 0x00004000) != 0);
      }
      /**
       * <code>optional .perfetto.protos.WindowLayoutParamsProto.RotationAnimation rotation_animation = 15;</code>
       * @return The rotationAnimation.
       */
      @java.lang.Override
      public perfetto.protos.Windowlayoutparams.WindowLayoutParamsProto.RotationAnimation getRotationAnimation() {
        perfetto.protos.Windowlayoutparams.WindowLayoutParamsProto.RotationAnimation result = perfetto.protos.Windowlayoutparams.WindowLayoutParamsProto.RotationAnimation.forNumber(rotationAnimation_);
        return result == null ? perfetto.protos.Windowlayoutparams.WindowLayoutParamsProto.RotationAnimation.ROTATION_ANIMATION_UNSPECIFIED : result;
      }
      /**
       * <code>optional .perfetto.protos.WindowLayoutParamsProto.RotationAnimation rotation_animation = 15;</code>
       * @param value The rotationAnimation to set.
       * @return This builder for chaining.
       */
      public Builder setRotationAnimation(perfetto.protos.Windowlayoutparams.WindowLayoutParamsProto.RotationAnimation value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00004000;
        rotationAnimation_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .perfetto.protos.WindowLayoutParamsProto.RotationAnimation rotation_animation = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearRotationAnimation() {
        bitField0_ = (bitField0_ & ~0x00004000);
        rotationAnimation_ = -1;
        onChanged();
        return this;
      }

      private float preferredRefreshRate_ ;
      /**
       * <code>optional float preferred_refresh_rate = 16;</code>
       * @return Whether the preferredRefreshRate field is set.
       */
      @java.lang.Override
      public boolean hasPreferredRefreshRate() {
        return ((bitField0_ & 0x00008000) != 0);
      }
      /**
       * <code>optional float preferred_refresh_rate = 16;</code>
       * @return The preferredRefreshRate.
       */
      @java.lang.Override
      public float getPreferredRefreshRate() {
        return preferredRefreshRate_;
      }
      /**
       * <code>optional float preferred_refresh_rate = 16;</code>
       * @param value The preferredRefreshRate to set.
       * @return This builder for chaining.
       */
      public Builder setPreferredRefreshRate(float value) {

        preferredRefreshRate_ = value;
        bitField0_ |= 0x00008000;
        onChanged();
        return this;
      }
      /**
       * <code>optional float preferred_refresh_rate = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearPreferredRefreshRate() {
        bitField0_ = (bitField0_ & ~0x00008000);
        preferredRefreshRate_ = 0F;
        onChanged();
        return this;
      }

      private int preferredDisplayModeId_ ;
      /**
       * <code>optional int32 preferred_display_mode_id = 17;</code>
       * @return Whether the preferredDisplayModeId field is set.
       */
      @java.lang.Override
      public boolean hasPreferredDisplayModeId() {
        return ((bitField0_ & 0x00010000) != 0);
      }
      /**
       * <code>optional int32 preferred_display_mode_id = 17;</code>
       * @return The preferredDisplayModeId.
       */
      @java.lang.Override
      public int getPreferredDisplayModeId() {
        return preferredDisplayModeId_;
      }
      /**
       * <code>optional int32 preferred_display_mode_id = 17;</code>
       * @param value The preferredDisplayModeId to set.
       * @return This builder for chaining.
       */
      public Builder setPreferredDisplayModeId(int value) {

        preferredDisplayModeId_ = value;
        bitField0_ |= 0x00010000;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 preferred_display_mode_id = 17;</code>
       * @return This builder for chaining.
       */
      public Builder clearPreferredDisplayModeId() {
        bitField0_ = (bitField0_ & ~0x00010000);
        preferredDisplayModeId_ = 0;
        onChanged();
        return this;
      }

      private boolean hasSystemUiListeners_ ;
      /**
       * <code>optional bool has_system_ui_listeners = 18;</code>
       * @return Whether the hasSystemUiListeners field is set.
       */
      @java.lang.Override
      public boolean hasHasSystemUiListeners() {
        return ((bitField0_ & 0x00020000) != 0);
      }
      /**
       * <code>optional bool has_system_ui_listeners = 18;</code>
       * @return The hasSystemUiListeners.
       */
      @java.lang.Override
      public boolean getHasSystemUiListeners() {
        return hasSystemUiListeners_;
      }
      /**
       * <code>optional bool has_system_ui_listeners = 18;</code>
       * @param value The hasSystemUiListeners to set.
       * @return This builder for chaining.
       */
      public Builder setHasSystemUiListeners(boolean value) {

        hasSystemUiListeners_ = value;
        bitField0_ |= 0x00020000;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool has_system_ui_listeners = 18;</code>
       * @return This builder for chaining.
       */
      public Builder clearHasSystemUiListeners() {
        bitField0_ = (bitField0_ & ~0x00020000);
        hasSystemUiListeners_ = false;
        onChanged();
        return this;
      }

      private int inputFeatureFlags_ ;
      /**
       * <code>optional uint32 input_feature_flags = 19 [(.perfetto.protos.typedef) = "android.view.WindowManager.LayoutParams.InputFeatureFlags"];</code>
       * @return Whether the inputFeatureFlags field is set.
       */
      @java.lang.Override
      public boolean hasInputFeatureFlags() {
        return ((bitField0_ & 0x00040000) != 0);
      }
      /**
       * <code>optional uint32 input_feature_flags = 19 [(.perfetto.protos.typedef) = "android.view.WindowManager.LayoutParams.InputFeatureFlags"];</code>
       * @return The inputFeatureFlags.
       */
      @java.lang.Override
      public int getInputFeatureFlags() {
        return inputFeatureFlags_;
      }
      /**
       * <code>optional uint32 input_feature_flags = 19 [(.perfetto.protos.typedef) = "android.view.WindowManager.LayoutParams.InputFeatureFlags"];</code>
       * @param value The inputFeatureFlags to set.
       * @return This builder for chaining.
       */
      public Builder setInputFeatureFlags(int value) {

        inputFeatureFlags_ = value;
        bitField0_ |= 0x00040000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 input_feature_flags = 19 [(.perfetto.protos.typedef) = "android.view.WindowManager.LayoutParams.InputFeatureFlags"];</code>
       * @return This builder for chaining.
       */
      public Builder clearInputFeatureFlags() {
        bitField0_ = (bitField0_ & ~0x00040000);
        inputFeatureFlags_ = 0;
        onChanged();
        return this;
      }

      private long userActivityTimeout_ ;
      /**
       * <code>optional int64 user_activity_timeout = 20;</code>
       * @return Whether the userActivityTimeout field is set.
       */
      @java.lang.Override
      public boolean hasUserActivityTimeout() {
        return ((bitField0_ & 0x00080000) != 0);
      }
      /**
       * <code>optional int64 user_activity_timeout = 20;</code>
       * @return The userActivityTimeout.
       */
      @java.lang.Override
      public long getUserActivityTimeout() {
        return userActivityTimeout_;
      }
      /**
       * <code>optional int64 user_activity_timeout = 20;</code>
       * @param value The userActivityTimeout to set.
       * @return This builder for chaining.
       */
      public Builder setUserActivityTimeout(long value) {

        userActivityTimeout_ = value;
        bitField0_ |= 0x00080000;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 user_activity_timeout = 20;</code>
       * @return This builder for chaining.
       */
      public Builder clearUserActivityTimeout() {
        bitField0_ = (bitField0_ & ~0x00080000);
        userActivityTimeout_ = 0L;
        onChanged();
        return this;
      }

      private int colorMode_ = -1;
      /**
       * <code>optional .perfetto.protos.ViewDisplayProto.ColorMode color_mode = 23;</code>
       * @return Whether the colorMode field is set.
       */
      @java.lang.Override public boolean hasColorMode() {
        return ((bitField0_ & 0x00100000) != 0);
      }
      /**
       * <code>optional .perfetto.protos.ViewDisplayProto.ColorMode color_mode = 23;</code>
       * @return The colorMode.
       */
      @java.lang.Override
      public perfetto.protos.Display.ViewDisplayProto.ColorMode getColorMode() {
        perfetto.protos.Display.ViewDisplayProto.ColorMode result = perfetto.protos.Display.ViewDisplayProto.ColorMode.forNumber(colorMode_);
        return result == null ? perfetto.protos.Display.ViewDisplayProto.ColorMode.COLOR_MODE_INVALID : result;
      }
      /**
       * <code>optional .perfetto.protos.ViewDisplayProto.ColorMode color_mode = 23;</code>
       * @param value The colorMode to set.
       * @return This builder for chaining.
       */
      public Builder setColorMode(perfetto.protos.Display.ViewDisplayProto.ColorMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00100000;
        colorMode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .perfetto.protos.ViewDisplayProto.ColorMode color_mode = 23;</code>
       * @return This builder for chaining.
       */
      public Builder clearColorMode() {
        bitField0_ = (bitField0_ & ~0x00100000);
        colorMode_ = -1;
        onChanged();
        return this;
      }

      private int flags_ ;
      /**
       * <code>optional uint32 flags = 24 [(.perfetto.protos.typedef) = "android.view.WindowManager.LayoutParams.Flags"];</code>
       * @return Whether the flags field is set.
       */
      @java.lang.Override
      public boolean hasFlags() {
        return ((bitField0_ & 0x00200000) != 0);
      }
      /**
       * <code>optional uint32 flags = 24 [(.perfetto.protos.typedef) = "android.view.WindowManager.LayoutParams.Flags"];</code>
       * @return The flags.
       */
      @java.lang.Override
      public int getFlags() {
        return flags_;
      }
      /**
       * <code>optional uint32 flags = 24 [(.perfetto.protos.typedef) = "android.view.WindowManager.LayoutParams.Flags"];</code>
       * @param value The flags to set.
       * @return This builder for chaining.
       */
      public Builder setFlags(int value) {

        flags_ = value;
        bitField0_ |= 0x00200000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 flags = 24 [(.perfetto.protos.typedef) = "android.view.WindowManager.LayoutParams.Flags"];</code>
       * @return This builder for chaining.
       */
      public Builder clearFlags() {
        bitField0_ = (bitField0_ & ~0x00200000);
        flags_ = 0;
        onChanged();
        return this;
      }

      private int privateFlags_ ;
      /**
       * <code>optional uint32 private_flags = 26 [(.perfetto.protos.typedef) = "android.view.WindowManager.LayoutParams.PrivateFlags"];</code>
       * @return Whether the privateFlags field is set.
       */
      @java.lang.Override
      public boolean hasPrivateFlags() {
        return ((bitField0_ & 0x00400000) != 0);
      }
      /**
       * <code>optional uint32 private_flags = 26 [(.perfetto.protos.typedef) = "android.view.WindowManager.LayoutParams.PrivateFlags"];</code>
       * @return The privateFlags.
       */
      @java.lang.Override
      public int getPrivateFlags() {
        return privateFlags_;
      }
      /**
       * <code>optional uint32 private_flags = 26 [(.perfetto.protos.typedef) = "android.view.WindowManager.LayoutParams.PrivateFlags"];</code>
       * @param value The privateFlags to set.
       * @return This builder for chaining.
       */
      public Builder setPrivateFlags(int value) {

        privateFlags_ = value;
        bitField0_ |= 0x00400000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 private_flags = 26 [(.perfetto.protos.typedef) = "android.view.WindowManager.LayoutParams.PrivateFlags"];</code>
       * @return This builder for chaining.
       */
      public Builder clearPrivateFlags() {
        bitField0_ = (bitField0_ & ~0x00400000);
        privateFlags_ = 0;
        onChanged();
        return this;
      }

      private int systemUiVisibilityFlags_ ;
      /**
       * <code>optional uint32 system_ui_visibility_flags = 27 [(.perfetto.protos.typedef) = "android.view.WindowManager.LayoutParams.SystemUiVisibilityFlags"];</code>
       * @return Whether the systemUiVisibilityFlags field is set.
       */
      @java.lang.Override
      public boolean hasSystemUiVisibilityFlags() {
        return ((bitField0_ & 0x00800000) != 0);
      }
      /**
       * <code>optional uint32 system_ui_visibility_flags = 27 [(.perfetto.protos.typedef) = "android.view.WindowManager.LayoutParams.SystemUiVisibilityFlags"];</code>
       * @return The systemUiVisibilityFlags.
       */
      @java.lang.Override
      public int getSystemUiVisibilityFlags() {
        return systemUiVisibilityFlags_;
      }
      /**
       * <code>optional uint32 system_ui_visibility_flags = 27 [(.perfetto.protos.typedef) = "android.view.WindowManager.LayoutParams.SystemUiVisibilityFlags"];</code>
       * @param value The systemUiVisibilityFlags to set.
       * @return This builder for chaining.
       */
      public Builder setSystemUiVisibilityFlags(int value) {

        systemUiVisibilityFlags_ = value;
        bitField0_ |= 0x00800000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 system_ui_visibility_flags = 27 [(.perfetto.protos.typedef) = "android.view.WindowManager.LayoutParams.SystemUiVisibilityFlags"];</code>
       * @return This builder for chaining.
       */
      public Builder clearSystemUiVisibilityFlags() {
        bitField0_ = (bitField0_ & ~0x00800000);
        systemUiVisibilityFlags_ = 0;
        onChanged();
        return this;
      }

      private int subtreeSystemUiVisibilityFlags_ ;
      /**
       * <code>optional uint32 subtree_system_ui_visibility_flags = 28 [(.perfetto.protos.typedef) = "android.view.WindowManager.LayoutParams.SystemUiVisibilityFlags"];</code>
       * @return Whether the subtreeSystemUiVisibilityFlags field is set.
       */
      @java.lang.Override
      public boolean hasSubtreeSystemUiVisibilityFlags() {
        return ((bitField0_ & 0x01000000) != 0);
      }
      /**
       * <code>optional uint32 subtree_system_ui_visibility_flags = 28 [(.perfetto.protos.typedef) = "android.view.WindowManager.LayoutParams.SystemUiVisibilityFlags"];</code>
       * @return The subtreeSystemUiVisibilityFlags.
       */
      @java.lang.Override
      public int getSubtreeSystemUiVisibilityFlags() {
        return subtreeSystemUiVisibilityFlags_;
      }
      /**
       * <code>optional uint32 subtree_system_ui_visibility_flags = 28 [(.perfetto.protos.typedef) = "android.view.WindowManager.LayoutParams.SystemUiVisibilityFlags"];</code>
       * @param value The subtreeSystemUiVisibilityFlags to set.
       * @return This builder for chaining.
       */
      public Builder setSubtreeSystemUiVisibilityFlags(int value) {

        subtreeSystemUiVisibilityFlags_ = value;
        bitField0_ |= 0x01000000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 subtree_system_ui_visibility_flags = 28 [(.perfetto.protos.typedef) = "android.view.WindowManager.LayoutParams.SystemUiVisibilityFlags"];</code>
       * @return This builder for chaining.
       */
      public Builder clearSubtreeSystemUiVisibilityFlags() {
        bitField0_ = (bitField0_ & ~0x01000000);
        subtreeSystemUiVisibilityFlags_ = 0;
        onChanged();
        return this;
      }

      private int appearance_ ;
      /**
       * <code>optional uint32 appearance = 29 [(.perfetto.protos.typedef) = "android.view.WindowInsetsController.Appearance"];</code>
       * @return Whether the appearance field is set.
       */
      @java.lang.Override
      public boolean hasAppearance() {
        return ((bitField0_ & 0x02000000) != 0);
      }
      /**
       * <code>optional uint32 appearance = 29 [(.perfetto.protos.typedef) = "android.view.WindowInsetsController.Appearance"];</code>
       * @return The appearance.
       */
      @java.lang.Override
      public int getAppearance() {
        return appearance_;
      }
      /**
       * <code>optional uint32 appearance = 29 [(.perfetto.protos.typedef) = "android.view.WindowInsetsController.Appearance"];</code>
       * @param value The appearance to set.
       * @return This builder for chaining.
       */
      public Builder setAppearance(int value) {

        appearance_ = value;
        bitField0_ |= 0x02000000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 appearance = 29 [(.perfetto.protos.typedef) = "android.view.WindowInsetsController.Appearance"];</code>
       * @return This builder for chaining.
       */
      public Builder clearAppearance() {
        bitField0_ = (bitField0_ & ~0x02000000);
        appearance_ = 0;
        onChanged();
        return this;
      }

      private int behavior_ ;
      /**
       * <code>optional uint32 behavior = 30 [(.perfetto.protos.typedef) = "android.view.WindowInsetsController.Behavior"];</code>
       * @return Whether the behavior field is set.
       */
      @java.lang.Override
      public boolean hasBehavior() {
        return ((bitField0_ & 0x04000000) != 0);
      }
      /**
       * <code>optional uint32 behavior = 30 [(.perfetto.protos.typedef) = "android.view.WindowInsetsController.Behavior"];</code>
       * @return The behavior.
       */
      @java.lang.Override
      public int getBehavior() {
        return behavior_;
      }
      /**
       * <code>optional uint32 behavior = 30 [(.perfetto.protos.typedef) = "android.view.WindowInsetsController.Behavior"];</code>
       * @param value The behavior to set.
       * @return This builder for chaining.
       */
      public Builder setBehavior(int value) {

        behavior_ = value;
        bitField0_ |= 0x04000000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 behavior = 30 [(.perfetto.protos.typedef) = "android.view.WindowInsetsController.Behavior"];</code>
       * @return This builder for chaining.
       */
      public Builder clearBehavior() {
        bitField0_ = (bitField0_ & ~0x04000000);
        behavior_ = 0;
        onChanged();
        return this;
      }

      private int fitInsetsTypes_ ;
      /**
       * <code>optional uint32 fit_insets_types = 31 [(.perfetto.protos.typedef) = "android.view.WindowInsets.Type.InsetsType"];</code>
       * @return Whether the fitInsetsTypes field is set.
       */
      @java.lang.Override
      public boolean hasFitInsetsTypes() {
        return ((bitField0_ & 0x08000000) != 0);
      }
      /**
       * <code>optional uint32 fit_insets_types = 31 [(.perfetto.protos.typedef) = "android.view.WindowInsets.Type.InsetsType"];</code>
       * @return The fitInsetsTypes.
       */
      @java.lang.Override
      public int getFitInsetsTypes() {
        return fitInsetsTypes_;
      }
      /**
       * <code>optional uint32 fit_insets_types = 31 [(.perfetto.protos.typedef) = "android.view.WindowInsets.Type.InsetsType"];</code>
       * @param value The fitInsetsTypes to set.
       * @return This builder for chaining.
       */
      public Builder setFitInsetsTypes(int value) {

        fitInsetsTypes_ = value;
        bitField0_ |= 0x08000000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fit_insets_types = 31 [(.perfetto.protos.typedef) = "android.view.WindowInsets.Type.InsetsType"];</code>
       * @return This builder for chaining.
       */
      public Builder clearFitInsetsTypes() {
        bitField0_ = (bitField0_ & ~0x08000000);
        fitInsetsTypes_ = 0;
        onChanged();
        return this;
      }

      private int fitInsetsSides_ ;
      /**
       * <code>optional uint32 fit_insets_sides = 32 [(.perfetto.protos.typedef) = "android.view.WindowInsets.Side.InsetsSide"];</code>
       * @return Whether the fitInsetsSides field is set.
       */
      @java.lang.Override
      public boolean hasFitInsetsSides() {
        return ((bitField0_ & 0x10000000) != 0);
      }
      /**
       * <code>optional uint32 fit_insets_sides = 32 [(.perfetto.protos.typedef) = "android.view.WindowInsets.Side.InsetsSide"];</code>
       * @return The fitInsetsSides.
       */
      @java.lang.Override
      public int getFitInsetsSides() {
        return fitInsetsSides_;
      }
      /**
       * <code>optional uint32 fit_insets_sides = 32 [(.perfetto.protos.typedef) = "android.view.WindowInsets.Side.InsetsSide"];</code>
       * @param value The fitInsetsSides to set.
       * @return This builder for chaining.
       */
      public Builder setFitInsetsSides(int value) {

        fitInsetsSides_ = value;
        bitField0_ |= 0x10000000;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 fit_insets_sides = 32 [(.perfetto.protos.typedef) = "android.view.WindowInsets.Side.InsetsSide"];</code>
       * @return This builder for chaining.
       */
      public Builder clearFitInsetsSides() {
        bitField0_ = (bitField0_ & ~0x10000000);
        fitInsetsSides_ = 0;
        onChanged();
        return this;
      }

      private boolean fitIgnoreVisibility_ ;
      /**
       * <code>optional bool fit_ignore_visibility = 33;</code>
       * @return Whether the fitIgnoreVisibility field is set.
       */
      @java.lang.Override
      public boolean hasFitIgnoreVisibility() {
        return ((bitField0_ & 0x20000000) != 0);
      }
      /**
       * <code>optional bool fit_ignore_visibility = 33;</code>
       * @return The fitIgnoreVisibility.
       */
      @java.lang.Override
      public boolean getFitIgnoreVisibility() {
        return fitIgnoreVisibility_;
      }
      /**
       * <code>optional bool fit_ignore_visibility = 33;</code>
       * @param value The fitIgnoreVisibility to set.
       * @return This builder for chaining.
       */
      public Builder setFitIgnoreVisibility(boolean value) {

        fitIgnoreVisibility_ = value;
        bitField0_ |= 0x20000000;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool fit_ignore_visibility = 33;</code>
       * @return This builder for chaining.
       */
      public Builder clearFitIgnoreVisibility() {
        bitField0_ = (bitField0_ & ~0x20000000);
        fitIgnoreVisibility_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:perfetto.protos.WindowLayoutParamsProto)
    }

    // @@protoc_insertion_point(class_scope:perfetto.protos.WindowLayoutParamsProto)
    private static final perfetto.protos.Windowlayoutparams.WindowLayoutParamsProto DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new perfetto.protos.Windowlayoutparams.WindowLayoutParamsProto();
    }

    public static perfetto.protos.Windowlayoutparams.WindowLayoutParamsProto getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<WindowLayoutParamsProto>
        PARSER = new com.google.protobuf.AbstractParser<WindowLayoutParamsProto>() {
      @java.lang.Override
      public WindowLayoutParamsProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<WindowLayoutParamsProto> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<WindowLayoutParamsProto> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public perfetto.protos.Windowlayoutparams.WindowLayoutParamsProto getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_WindowLayoutParamsProto_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_perfetto_protos_WindowLayoutParamsProto_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n;protos/perfetto/trace/android/view/win" +
      "dowlayoutparams.proto\022\017perfetto.protos\0328" +
      "protos/perfetto/trace/android/graphics/p" +
      "ixelformat.proto\0320protos/perfetto/trace/" +
      "android/view/display.proto\032+protos/perfe" +
      "tto/trace/android/typedef.proto\"\273\r\n\027Wind" +
      "owLayoutParamsProto\022D\n\004type\030\001 \001(\005B6\212\246\0352a" +
      "ndroid.view.WindowManager.LayoutParams.W" +
      "indowType\022\t\n\001x\030\002 \001(\005\022\t\n\001y\030\003 \001(\005\022\r\n\005width" +
      "\030\004 \001(\005\022\016\n\006height\030\005 \001(\005\022\031\n\021horizontal_mar" +
      "gin\030\006 \001(\002\022\027\n\017vertical_margin\030\007 \001(\002\0226\n\007gr" +
      "avity\030\010 \001(\005B%\212\246\035!android.view.Gravity.Gr" +
      "avityFlags\022W\n\017soft_input_mode\030\t \001(\005B>\212\246\035" +
      ":android.view.WindowManager.LayoutParams" +
      ".SoftInputModeFlags\0228\n\006format\030\n \001(\0162(.pe" +
      "rfetto.protos.PixelFormatProto.Format\022\031\n" +
      "\021window_animations\030\013 \001(\005\022\r\n\005alpha\030\014 \001(\002\022" +
      "\031\n\021screen_brightness\030\r \001(\002\022\031\n\021button_bri" +
      "ghtness\030\016 \001(\002\022V\n\022rotation_animation\030\017 \001(" +
      "\0162:.perfetto.protos.WindowLayoutParamsPr" +
      "oto.RotationAnimation\022\036\n\026preferred_refre" +
      "sh_rate\030\020 \001(\002\022!\n\031preferred_display_mode_" +
      "id\030\021 \001(\005\022\037\n\027has_system_ui_listeners\030\022 \001(" +
      "\010\022Z\n\023input_feature_flags\030\023 \001(\rB=\212\246\0359andr" +
      "oid.view.WindowManager.LayoutParams.Inpu" +
      "tFeatureFlags\022\035\n\025user_activity_timeout\030\024" +
      " \001(\003\022?\n\ncolor_mode\030\027 \001(\0162+.perfetto.prot" +
      "os.ViewDisplayProto.ColorMode\022@\n\005flags\030\030" +
      " \001(\rB1\212\246\035-android.view.WindowManager.Lay" +
      "outParams.Flags\022O\n\rprivate_flags\030\032 \001(\rB8" +
      "\212\246\0354android.view.WindowManager.LayoutPar" +
      "ams.PrivateFlags\022g\n\032system_ui_visibility" +
      "_flags\030\033 \001(\rBC\212\246\035?android.view.WindowMan" +
      "ager.LayoutParams.SystemUiVisibilityFlag" +
      "s\022o\n\"subtree_system_ui_visibility_flags\030" +
      "\034 \001(\rBC\212\246\035?android.view.WindowManager.La" +
      "youtParams.SystemUiVisibilityFlags\022F\n\nap" +
      "pearance\030\035 \001(\rB2\212\246\035.android.view.WindowI" +
      "nsetsController.Appearance\022B\n\010behavior\030\036" +
      " \001(\rB0\212\246\035,android.view.WindowInsetsContr" +
      "oller.Behavior\022G\n\020fit_insets_types\030\037 \001(\r" +
      "B-\212\246\035)android.view.WindowInsets.Type.Ins" +
      "etsType\022G\n\020fit_insets_sides\030  \001(\rB-\212\246\035)a" +
      "ndroid.view.WindowInsets.Side.InsetsSide" +
      "\022\035\n\025fit_ignore_visibility\030! \001(\010\"\243\001\n\021Rota" +
      "tionAnimation\022+\n\036ROTATION_ANIMATION_UNSP" +
      "ECIFIED\020\377\377\377\377\377\377\377\377\377\001\022 \n\034ROTATION_ANIMATION" +
      "_CROSSFADE\020\001\022\036\n\032ROTATION_ANIMATION_JUMPC" +
      "UT\020\002\022\037\n\033ROTATION_ANIMATION_SEAMLESS\020\003"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          perfetto.protos.Pixelformat.getDescriptor(),
          perfetto.protos.Display.getDescriptor(),
          perfetto.protos.Typedef.getDescriptor(),
        });
    internal_static_perfetto_protos_WindowLayoutParamsProto_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_perfetto_protos_WindowLayoutParamsProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_perfetto_protos_WindowLayoutParamsProto_descriptor,
        new java.lang.String[] { "Type", "X", "Y", "Width", "Height", "HorizontalMargin", "VerticalMargin", "Gravity", "SoftInputMode", "Format", "WindowAnimations", "Alpha", "ScreenBrightness", "ButtonBrightness", "RotationAnimation", "PreferredRefreshRate", "PreferredDisplayModeId", "HasSystemUiListeners", "InputFeatureFlags", "UserActivityTimeout", "ColorMode", "Flags", "PrivateFlags", "SystemUiVisibilityFlags", "SubtreeSystemUiVisibilityFlags", "Appearance", "Behavior", "FitInsetsTypes", "FitInsetsSides", "FitIgnoreVisibility", });
    descriptor.resolveAllFeaturesImmutable();
    perfetto.protos.Pixelformat.getDescriptor();
    perfetto.protos.Display.getDescriptor();
    perfetto.protos.Typedef.getDescriptor();
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(perfetto.protos.Typedef.typedef);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
