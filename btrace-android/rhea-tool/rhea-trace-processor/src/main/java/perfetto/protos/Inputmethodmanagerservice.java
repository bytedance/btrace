// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: protos/perfetto/trace/android/server/inputmethod/inputmethodmanagerservice.proto
// Protobuf Java Version: 4.29.3

package perfetto.protos;

public final class Inputmethodmanagerservice {
  private Inputmethodmanagerservice() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 3,
      /* suffix= */ "",
      Inputmethodmanagerservice.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface InputMethodManagerServiceProtoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:perfetto.protos.InputMethodManagerServiceProto)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string cur_method_id = 1;</code>
     * @return Whether the curMethodId field is set.
     */
    boolean hasCurMethodId();
    /**
     * <code>optional string cur_method_id = 1;</code>
     * @return The curMethodId.
     */
    java.lang.String getCurMethodId();
    /**
     * <code>optional string cur_method_id = 1;</code>
     * @return The bytes for curMethodId.
     */
    com.google.protobuf.ByteString
        getCurMethodIdBytes();

    /**
     * <code>optional int32 cur_seq = 2;</code>
     * @return Whether the curSeq field is set.
     */
    boolean hasCurSeq();
    /**
     * <code>optional int32 cur_seq = 2;</code>
     * @return The curSeq.
     */
    int getCurSeq();

    /**
     * <code>optional string cur_client = 3;</code>
     * @return Whether the curClient field is set.
     */
    boolean hasCurClient();
    /**
     * <code>optional string cur_client = 3;</code>
     * @return The curClient.
     */
    java.lang.String getCurClient();
    /**
     * <code>optional string cur_client = 3;</code>
     * @return The bytes for curClient.
     */
    com.google.protobuf.ByteString
        getCurClientBytes();

    /**
     * <code>optional string cur_focused_window_name = 4;</code>
     * @return Whether the curFocusedWindowName field is set.
     */
    boolean hasCurFocusedWindowName();
    /**
     * <code>optional string cur_focused_window_name = 4;</code>
     * @return The curFocusedWindowName.
     */
    java.lang.String getCurFocusedWindowName();
    /**
     * <code>optional string cur_focused_window_name = 4;</code>
     * @return The bytes for curFocusedWindowName.
     */
    com.google.protobuf.ByteString
        getCurFocusedWindowNameBytes();

    /**
     * <code>optional string last_ime_target_window_name = 5;</code>
     * @return Whether the lastImeTargetWindowName field is set.
     */
    boolean hasLastImeTargetWindowName();
    /**
     * <code>optional string last_ime_target_window_name = 5;</code>
     * @return The lastImeTargetWindowName.
     */
    java.lang.String getLastImeTargetWindowName();
    /**
     * <code>optional string last_ime_target_window_name = 5;</code>
     * @return The bytes for lastImeTargetWindowName.
     */
    com.google.protobuf.ByteString
        getLastImeTargetWindowNameBytes();

    /**
     * <code>optional string cur_focused_window_soft_input_mode = 6;</code>
     * @return Whether the curFocusedWindowSoftInputMode field is set.
     */
    boolean hasCurFocusedWindowSoftInputMode();
    /**
     * <code>optional string cur_focused_window_soft_input_mode = 6;</code>
     * @return The curFocusedWindowSoftInputMode.
     */
    java.lang.String getCurFocusedWindowSoftInputMode();
    /**
     * <code>optional string cur_focused_window_soft_input_mode = 6;</code>
     * @return The bytes for curFocusedWindowSoftInputMode.
     */
    com.google.protobuf.ByteString
        getCurFocusedWindowSoftInputModeBytes();

    /**
     * <code>optional .perfetto.protos.EditorInfoProto cur_attribute = 7;</code>
     * @return Whether the curAttribute field is set.
     */
    boolean hasCurAttribute();
    /**
     * <code>optional .perfetto.protos.EditorInfoProto cur_attribute = 7;</code>
     * @return The curAttribute.
     */
    perfetto.protos.Editorinfo.EditorInfoProto getCurAttribute();
    /**
     * <code>optional .perfetto.protos.EditorInfoProto cur_attribute = 7;</code>
     */
    perfetto.protos.Editorinfo.EditorInfoProtoOrBuilder getCurAttributeOrBuilder();

    /**
     * <code>optional string cur_id = 8;</code>
     * @return Whether the curId field is set.
     */
    boolean hasCurId();
    /**
     * <code>optional string cur_id = 8;</code>
     * @return The curId.
     */
    java.lang.String getCurId();
    /**
     * <code>optional string cur_id = 8;</code>
     * @return The bytes for curId.
     */
    com.google.protobuf.ByteString
        getCurIdBytes();

    /**
     * <code>optional bool show_explicitly_requested = 10;</code>
     * @return Whether the showExplicitlyRequested field is set.
     */
    boolean hasShowExplicitlyRequested();
    /**
     * <code>optional bool show_explicitly_requested = 10;</code>
     * @return The showExplicitlyRequested.
     */
    boolean getShowExplicitlyRequested();

    /**
     * <code>optional bool show_forced = 11;</code>
     * @return Whether the showForced field is set.
     */
    boolean hasShowForced();
    /**
     * <code>optional bool show_forced = 11;</code>
     * @return The showForced.
     */
    boolean getShowForced();

    /**
     * <code>optional bool input_shown = 12;</code>
     * @return Whether the inputShown field is set.
     */
    boolean hasInputShown();
    /**
     * <code>optional bool input_shown = 12;</code>
     * @return The inputShown.
     */
    boolean getInputShown();

    /**
     * <code>optional bool in_fullscreen_mode = 13;</code>
     * @return Whether the inFullscreenMode field is set.
     */
    boolean hasInFullscreenMode();
    /**
     * <code>optional bool in_fullscreen_mode = 13;</code>
     * @return The inFullscreenMode.
     */
    boolean getInFullscreenMode();

    /**
     * <code>optional string cur_token = 14;</code>
     * @return Whether the curToken field is set.
     */
    boolean hasCurToken();
    /**
     * <code>optional string cur_token = 14;</code>
     * @return The curToken.
     */
    java.lang.String getCurToken();
    /**
     * <code>optional string cur_token = 14;</code>
     * @return The bytes for curToken.
     */
    com.google.protobuf.ByteString
        getCurTokenBytes();

    /**
     * <code>optional int32 cur_token_display_id = 15;</code>
     * @return Whether the curTokenDisplayId field is set.
     */
    boolean hasCurTokenDisplayId();
    /**
     * <code>optional int32 cur_token_display_id = 15;</code>
     * @return The curTokenDisplayId.
     */
    int getCurTokenDisplayId();

    /**
     * <code>optional bool system_ready = 16;</code>
     * @return Whether the systemReady field is set.
     */
    boolean hasSystemReady();
    /**
     * <code>optional bool system_ready = 16;</code>
     * @return The systemReady.
     */
    boolean getSystemReady();

    /**
     * <code>optional int32 last_switch_user_id = 17;</code>
     * @return Whether the lastSwitchUserId field is set.
     */
    boolean hasLastSwitchUserId();
    /**
     * <code>optional int32 last_switch_user_id = 17;</code>
     * @return The lastSwitchUserId.
     */
    int getLastSwitchUserId();

    /**
     * <code>optional bool have_connection = 18;</code>
     * @return Whether the haveConnection field is set.
     */
    boolean hasHaveConnection();
    /**
     * <code>optional bool have_connection = 18;</code>
     * @return The haveConnection.
     */
    boolean getHaveConnection();

    /**
     * <code>optional bool bound_to_method = 19;</code>
     * @return Whether the boundToMethod field is set.
     */
    boolean hasBoundToMethod();
    /**
     * <code>optional bool bound_to_method = 19;</code>
     * @return The boundToMethod.
     */
    boolean getBoundToMethod();

    /**
     * <code>optional bool is_interactive = 20;</code>
     * @return Whether the isInteractive field is set.
     */
    boolean hasIsInteractive();
    /**
     * <code>optional bool is_interactive = 20;</code>
     * @return The isInteractive.
     */
    boolean getIsInteractive();

    /**
     * <code>optional int32 back_disposition = 21;</code>
     * @return Whether the backDisposition field is set.
     */
    boolean hasBackDisposition();
    /**
     * <code>optional int32 back_disposition = 21;</code>
     * @return The backDisposition.
     */
    int getBackDisposition();

    /**
     * <code>optional int32 ime_window_visibility = 22;</code>
     * @return Whether the imeWindowVisibility field is set.
     */
    boolean hasImeWindowVisibility();
    /**
     * <code>optional int32 ime_window_visibility = 22;</code>
     * @return The imeWindowVisibility.
     */
    int getImeWindowVisibility();

    /**
     * <code>optional bool show_ime_with_hard_keyboard = 23;</code>
     * @return Whether the showImeWithHardKeyboard field is set.
     */
    boolean hasShowImeWithHardKeyboard();
    /**
     * <code>optional bool show_ime_with_hard_keyboard = 23;</code>
     * @return The showImeWithHardKeyboard.
     */
    boolean getShowImeWithHardKeyboard();

    /**
     * <code>optional bool accessibility_requesting_no_soft_keyboard = 24;</code>
     * @return Whether the accessibilityRequestingNoSoftKeyboard field is set.
     */
    boolean hasAccessibilityRequestingNoSoftKeyboard();
    /**
     * <code>optional bool accessibility_requesting_no_soft_keyboard = 24;</code>
     * @return The accessibilityRequestingNoSoftKeyboard.
     */
    boolean getAccessibilityRequestingNoSoftKeyboard();
  }
  /**
   * Protobuf type {@code perfetto.protos.InputMethodManagerServiceProto}
   */
  public static final class InputMethodManagerServiceProto extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:perfetto.protos.InputMethodManagerServiceProto)
      InputMethodManagerServiceProtoOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 29,
        /* patch= */ 3,
        /* suffix= */ "",
        InputMethodManagerServiceProto.class.getName());
    }
    // Use InputMethodManagerServiceProto.newBuilder() to construct.
    private InputMethodManagerServiceProto(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private InputMethodManagerServiceProto() {
      curMethodId_ = "";
      curClient_ = "";
      curFocusedWindowName_ = "";
      lastImeTargetWindowName_ = "";
      curFocusedWindowSoftInputMode_ = "";
      curId_ = "";
      curToken_ = "";
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return perfetto.protos.Inputmethodmanagerservice.internal_static_perfetto_protos_InputMethodManagerServiceProto_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return perfetto.protos.Inputmethodmanagerservice.internal_static_perfetto_protos_InputMethodManagerServiceProto_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              perfetto.protos.Inputmethodmanagerservice.InputMethodManagerServiceProto.class, perfetto.protos.Inputmethodmanagerservice.InputMethodManagerServiceProto.Builder.class);
    }

    private int bitField0_;
    public static final int CUR_METHOD_ID_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object curMethodId_ = "";
    /**
     * <code>optional string cur_method_id = 1;</code>
     * @return Whether the curMethodId field is set.
     */
    @java.lang.Override
    public boolean hasCurMethodId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional string cur_method_id = 1;</code>
     * @return The curMethodId.
     */
    @java.lang.Override
    public java.lang.String getCurMethodId() {
      java.lang.Object ref = curMethodId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          curMethodId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string cur_method_id = 1;</code>
     * @return The bytes for curMethodId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCurMethodIdBytes() {
      java.lang.Object ref = curMethodId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        curMethodId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CUR_SEQ_FIELD_NUMBER = 2;
    private int curSeq_ = 0;
    /**
     * <code>optional int32 cur_seq = 2;</code>
     * @return Whether the curSeq field is set.
     */
    @java.lang.Override
    public boolean hasCurSeq() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional int32 cur_seq = 2;</code>
     * @return The curSeq.
     */
    @java.lang.Override
    public int getCurSeq() {
      return curSeq_;
    }

    public static final int CUR_CLIENT_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile java.lang.Object curClient_ = "";
    /**
     * <code>optional string cur_client = 3;</code>
     * @return Whether the curClient field is set.
     */
    @java.lang.Override
    public boolean hasCurClient() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional string cur_client = 3;</code>
     * @return The curClient.
     */
    @java.lang.Override
    public java.lang.String getCurClient() {
      java.lang.Object ref = curClient_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          curClient_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string cur_client = 3;</code>
     * @return The bytes for curClient.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCurClientBytes() {
      java.lang.Object ref = curClient_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        curClient_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CUR_FOCUSED_WINDOW_NAME_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private volatile java.lang.Object curFocusedWindowName_ = "";
    /**
     * <code>optional string cur_focused_window_name = 4;</code>
     * @return Whether the curFocusedWindowName field is set.
     */
    @java.lang.Override
    public boolean hasCurFocusedWindowName() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional string cur_focused_window_name = 4;</code>
     * @return The curFocusedWindowName.
     */
    @java.lang.Override
    public java.lang.String getCurFocusedWindowName() {
      java.lang.Object ref = curFocusedWindowName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          curFocusedWindowName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string cur_focused_window_name = 4;</code>
     * @return The bytes for curFocusedWindowName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCurFocusedWindowNameBytes() {
      java.lang.Object ref = curFocusedWindowName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        curFocusedWindowName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LAST_IME_TARGET_WINDOW_NAME_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private volatile java.lang.Object lastImeTargetWindowName_ = "";
    /**
     * <code>optional string last_ime_target_window_name = 5;</code>
     * @return Whether the lastImeTargetWindowName field is set.
     */
    @java.lang.Override
    public boolean hasLastImeTargetWindowName() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional string last_ime_target_window_name = 5;</code>
     * @return The lastImeTargetWindowName.
     */
    @java.lang.Override
    public java.lang.String getLastImeTargetWindowName() {
      java.lang.Object ref = lastImeTargetWindowName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          lastImeTargetWindowName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string last_ime_target_window_name = 5;</code>
     * @return The bytes for lastImeTargetWindowName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getLastImeTargetWindowNameBytes() {
      java.lang.Object ref = lastImeTargetWindowName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        lastImeTargetWindowName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CUR_FOCUSED_WINDOW_SOFT_INPUT_MODE_FIELD_NUMBER = 6;
    @SuppressWarnings("serial")
    private volatile java.lang.Object curFocusedWindowSoftInputMode_ = "";
    /**
     * <code>optional string cur_focused_window_soft_input_mode = 6;</code>
     * @return Whether the curFocusedWindowSoftInputMode field is set.
     */
    @java.lang.Override
    public boolean hasCurFocusedWindowSoftInputMode() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>optional string cur_focused_window_soft_input_mode = 6;</code>
     * @return The curFocusedWindowSoftInputMode.
     */
    @java.lang.Override
    public java.lang.String getCurFocusedWindowSoftInputMode() {
      java.lang.Object ref = curFocusedWindowSoftInputMode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          curFocusedWindowSoftInputMode_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string cur_focused_window_soft_input_mode = 6;</code>
     * @return The bytes for curFocusedWindowSoftInputMode.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCurFocusedWindowSoftInputModeBytes() {
      java.lang.Object ref = curFocusedWindowSoftInputMode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        curFocusedWindowSoftInputMode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CUR_ATTRIBUTE_FIELD_NUMBER = 7;
    private perfetto.protos.Editorinfo.EditorInfoProto curAttribute_;
    /**
     * <code>optional .perfetto.protos.EditorInfoProto cur_attribute = 7;</code>
     * @return Whether the curAttribute field is set.
     */
    @java.lang.Override
    public boolean hasCurAttribute() {
      return ((bitField0_ & 0x00000040) != 0);
    }
    /**
     * <code>optional .perfetto.protos.EditorInfoProto cur_attribute = 7;</code>
     * @return The curAttribute.
     */
    @java.lang.Override
    public perfetto.protos.Editorinfo.EditorInfoProto getCurAttribute() {
      return curAttribute_ == null ? perfetto.protos.Editorinfo.EditorInfoProto.getDefaultInstance() : curAttribute_;
    }
    /**
     * <code>optional .perfetto.protos.EditorInfoProto cur_attribute = 7;</code>
     */
    @java.lang.Override
    public perfetto.protos.Editorinfo.EditorInfoProtoOrBuilder getCurAttributeOrBuilder() {
      return curAttribute_ == null ? perfetto.protos.Editorinfo.EditorInfoProto.getDefaultInstance() : curAttribute_;
    }

    public static final int CUR_ID_FIELD_NUMBER = 8;
    @SuppressWarnings("serial")
    private volatile java.lang.Object curId_ = "";
    /**
     * <code>optional string cur_id = 8;</code>
     * @return Whether the curId field is set.
     */
    @java.lang.Override
    public boolean hasCurId() {
      return ((bitField0_ & 0x00000080) != 0);
    }
    /**
     * <code>optional string cur_id = 8;</code>
     * @return The curId.
     */
    @java.lang.Override
    public java.lang.String getCurId() {
      java.lang.Object ref = curId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          curId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string cur_id = 8;</code>
     * @return The bytes for curId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCurIdBytes() {
      java.lang.Object ref = curId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        curId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SHOW_EXPLICITLY_REQUESTED_FIELD_NUMBER = 10;
    private boolean showExplicitlyRequested_ = false;
    /**
     * <code>optional bool show_explicitly_requested = 10;</code>
     * @return Whether the showExplicitlyRequested field is set.
     */
    @java.lang.Override
    public boolean hasShowExplicitlyRequested() {
      return ((bitField0_ & 0x00000100) != 0);
    }
    /**
     * <code>optional bool show_explicitly_requested = 10;</code>
     * @return The showExplicitlyRequested.
     */
    @java.lang.Override
    public boolean getShowExplicitlyRequested() {
      return showExplicitlyRequested_;
    }

    public static final int SHOW_FORCED_FIELD_NUMBER = 11;
    private boolean showForced_ = false;
    /**
     * <code>optional bool show_forced = 11;</code>
     * @return Whether the showForced field is set.
     */
    @java.lang.Override
    public boolean hasShowForced() {
      return ((bitField0_ & 0x00000200) != 0);
    }
    /**
     * <code>optional bool show_forced = 11;</code>
     * @return The showForced.
     */
    @java.lang.Override
    public boolean getShowForced() {
      return showForced_;
    }

    public static final int INPUT_SHOWN_FIELD_NUMBER = 12;
    private boolean inputShown_ = false;
    /**
     * <code>optional bool input_shown = 12;</code>
     * @return Whether the inputShown field is set.
     */
    @java.lang.Override
    public boolean hasInputShown() {
      return ((bitField0_ & 0x00000400) != 0);
    }
    /**
     * <code>optional bool input_shown = 12;</code>
     * @return The inputShown.
     */
    @java.lang.Override
    public boolean getInputShown() {
      return inputShown_;
    }

    public static final int IN_FULLSCREEN_MODE_FIELD_NUMBER = 13;
    private boolean inFullscreenMode_ = false;
    /**
     * <code>optional bool in_fullscreen_mode = 13;</code>
     * @return Whether the inFullscreenMode field is set.
     */
    @java.lang.Override
    public boolean hasInFullscreenMode() {
      return ((bitField0_ & 0x00000800) != 0);
    }
    /**
     * <code>optional bool in_fullscreen_mode = 13;</code>
     * @return The inFullscreenMode.
     */
    @java.lang.Override
    public boolean getInFullscreenMode() {
      return inFullscreenMode_;
    }

    public static final int CUR_TOKEN_FIELD_NUMBER = 14;
    @SuppressWarnings("serial")
    private volatile java.lang.Object curToken_ = "";
    /**
     * <code>optional string cur_token = 14;</code>
     * @return Whether the curToken field is set.
     */
    @java.lang.Override
    public boolean hasCurToken() {
      return ((bitField0_ & 0x00001000) != 0);
    }
    /**
     * <code>optional string cur_token = 14;</code>
     * @return The curToken.
     */
    @java.lang.Override
    public java.lang.String getCurToken() {
      java.lang.Object ref = curToken_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          curToken_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string cur_token = 14;</code>
     * @return The bytes for curToken.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCurTokenBytes() {
      java.lang.Object ref = curToken_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        curToken_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CUR_TOKEN_DISPLAY_ID_FIELD_NUMBER = 15;
    private int curTokenDisplayId_ = 0;
    /**
     * <code>optional int32 cur_token_display_id = 15;</code>
     * @return Whether the curTokenDisplayId field is set.
     */
    @java.lang.Override
    public boolean hasCurTokenDisplayId() {
      return ((bitField0_ & 0x00002000) != 0);
    }
    /**
     * <code>optional int32 cur_token_display_id = 15;</code>
     * @return The curTokenDisplayId.
     */
    @java.lang.Override
    public int getCurTokenDisplayId() {
      return curTokenDisplayId_;
    }

    public static final int SYSTEM_READY_FIELD_NUMBER = 16;
    private boolean systemReady_ = false;
    /**
     * <code>optional bool system_ready = 16;</code>
     * @return Whether the systemReady field is set.
     */
    @java.lang.Override
    public boolean hasSystemReady() {
      return ((bitField0_ & 0x00004000) != 0);
    }
    /**
     * <code>optional bool system_ready = 16;</code>
     * @return The systemReady.
     */
    @java.lang.Override
    public boolean getSystemReady() {
      return systemReady_;
    }

    public static final int LAST_SWITCH_USER_ID_FIELD_NUMBER = 17;
    private int lastSwitchUserId_ = 0;
    /**
     * <code>optional int32 last_switch_user_id = 17;</code>
     * @return Whether the lastSwitchUserId field is set.
     */
    @java.lang.Override
    public boolean hasLastSwitchUserId() {
      return ((bitField0_ & 0x00008000) != 0);
    }
    /**
     * <code>optional int32 last_switch_user_id = 17;</code>
     * @return The lastSwitchUserId.
     */
    @java.lang.Override
    public int getLastSwitchUserId() {
      return lastSwitchUserId_;
    }

    public static final int HAVE_CONNECTION_FIELD_NUMBER = 18;
    private boolean haveConnection_ = false;
    /**
     * <code>optional bool have_connection = 18;</code>
     * @return Whether the haveConnection field is set.
     */
    @java.lang.Override
    public boolean hasHaveConnection() {
      return ((bitField0_ & 0x00010000) != 0);
    }
    /**
     * <code>optional bool have_connection = 18;</code>
     * @return The haveConnection.
     */
    @java.lang.Override
    public boolean getHaveConnection() {
      return haveConnection_;
    }

    public static final int BOUND_TO_METHOD_FIELD_NUMBER = 19;
    private boolean boundToMethod_ = false;
    /**
     * <code>optional bool bound_to_method = 19;</code>
     * @return Whether the boundToMethod field is set.
     */
    @java.lang.Override
    public boolean hasBoundToMethod() {
      return ((bitField0_ & 0x00020000) != 0);
    }
    /**
     * <code>optional bool bound_to_method = 19;</code>
     * @return The boundToMethod.
     */
    @java.lang.Override
    public boolean getBoundToMethod() {
      return boundToMethod_;
    }

    public static final int IS_INTERACTIVE_FIELD_NUMBER = 20;
    private boolean isInteractive_ = false;
    /**
     * <code>optional bool is_interactive = 20;</code>
     * @return Whether the isInteractive field is set.
     */
    @java.lang.Override
    public boolean hasIsInteractive() {
      return ((bitField0_ & 0x00040000) != 0);
    }
    /**
     * <code>optional bool is_interactive = 20;</code>
     * @return The isInteractive.
     */
    @java.lang.Override
    public boolean getIsInteractive() {
      return isInteractive_;
    }

    public static final int BACK_DISPOSITION_FIELD_NUMBER = 21;
    private int backDisposition_ = 0;
    /**
     * <code>optional int32 back_disposition = 21;</code>
     * @return Whether the backDisposition field is set.
     */
    @java.lang.Override
    public boolean hasBackDisposition() {
      return ((bitField0_ & 0x00080000) != 0);
    }
    /**
     * <code>optional int32 back_disposition = 21;</code>
     * @return The backDisposition.
     */
    @java.lang.Override
    public int getBackDisposition() {
      return backDisposition_;
    }

    public static final int IME_WINDOW_VISIBILITY_FIELD_NUMBER = 22;
    private int imeWindowVisibility_ = 0;
    /**
     * <code>optional int32 ime_window_visibility = 22;</code>
     * @return Whether the imeWindowVisibility field is set.
     */
    @java.lang.Override
    public boolean hasImeWindowVisibility() {
      return ((bitField0_ & 0x00100000) != 0);
    }
    /**
     * <code>optional int32 ime_window_visibility = 22;</code>
     * @return The imeWindowVisibility.
     */
    @java.lang.Override
    public int getImeWindowVisibility() {
      return imeWindowVisibility_;
    }

    public static final int SHOW_IME_WITH_HARD_KEYBOARD_FIELD_NUMBER = 23;
    private boolean showImeWithHardKeyboard_ = false;
    /**
     * <code>optional bool show_ime_with_hard_keyboard = 23;</code>
     * @return Whether the showImeWithHardKeyboard field is set.
     */
    @java.lang.Override
    public boolean hasShowImeWithHardKeyboard() {
      return ((bitField0_ & 0x00200000) != 0);
    }
    /**
     * <code>optional bool show_ime_with_hard_keyboard = 23;</code>
     * @return The showImeWithHardKeyboard.
     */
    @java.lang.Override
    public boolean getShowImeWithHardKeyboard() {
      return showImeWithHardKeyboard_;
    }

    public static final int ACCESSIBILITY_REQUESTING_NO_SOFT_KEYBOARD_FIELD_NUMBER = 24;
    private boolean accessibilityRequestingNoSoftKeyboard_ = false;
    /**
     * <code>optional bool accessibility_requesting_no_soft_keyboard = 24;</code>
     * @return Whether the accessibilityRequestingNoSoftKeyboard field is set.
     */
    @java.lang.Override
    public boolean hasAccessibilityRequestingNoSoftKeyboard() {
      return ((bitField0_ & 0x00400000) != 0);
    }
    /**
     * <code>optional bool accessibility_requesting_no_soft_keyboard = 24;</code>
     * @return The accessibilityRequestingNoSoftKeyboard.
     */
    @java.lang.Override
    public boolean getAccessibilityRequestingNoSoftKeyboard() {
      return accessibilityRequestingNoSoftKeyboard_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, curMethodId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeInt32(2, curSeq_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 3, curClient_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 4, curFocusedWindowName_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 5, lastImeTargetWindowName_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 6, curFocusedWindowSoftInputMode_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        output.writeMessage(7, getCurAttribute());
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 8, curId_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        output.writeBool(10, showExplicitlyRequested_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        output.writeBool(11, showForced_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        output.writeBool(12, inputShown_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        output.writeBool(13, inFullscreenMode_);
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 14, curToken_);
      }
      if (((bitField0_ & 0x00002000) != 0)) {
        output.writeInt32(15, curTokenDisplayId_);
      }
      if (((bitField0_ & 0x00004000) != 0)) {
        output.writeBool(16, systemReady_);
      }
      if (((bitField0_ & 0x00008000) != 0)) {
        output.writeInt32(17, lastSwitchUserId_);
      }
      if (((bitField0_ & 0x00010000) != 0)) {
        output.writeBool(18, haveConnection_);
      }
      if (((bitField0_ & 0x00020000) != 0)) {
        output.writeBool(19, boundToMethod_);
      }
      if (((bitField0_ & 0x00040000) != 0)) {
        output.writeBool(20, isInteractive_);
      }
      if (((bitField0_ & 0x00080000) != 0)) {
        output.writeInt32(21, backDisposition_);
      }
      if (((bitField0_ & 0x00100000) != 0)) {
        output.writeInt32(22, imeWindowVisibility_);
      }
      if (((bitField0_ & 0x00200000) != 0)) {
        output.writeBool(23, showImeWithHardKeyboard_);
      }
      if (((bitField0_ & 0x00400000) != 0)) {
        output.writeBool(24, accessibilityRequestingNoSoftKeyboard_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, curMethodId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, curSeq_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(3, curClient_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(4, curFocusedWindowName_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(5, lastImeTargetWindowName_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(6, curFocusedWindowSoftInputMode_);
      }
      if (((bitField0_ & 0x00000040) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getCurAttribute());
      }
      if (((bitField0_ & 0x00000080) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(8, curId_);
      }
      if (((bitField0_ & 0x00000100) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(10, showExplicitlyRequested_);
      }
      if (((bitField0_ & 0x00000200) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, showForced_);
      }
      if (((bitField0_ & 0x00000400) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(12, inputShown_);
      }
      if (((bitField0_ & 0x00000800) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(13, inFullscreenMode_);
      }
      if (((bitField0_ & 0x00001000) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(14, curToken_);
      }
      if (((bitField0_ & 0x00002000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, curTokenDisplayId_);
      }
      if (((bitField0_ & 0x00004000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(16, systemReady_);
      }
      if (((bitField0_ & 0x00008000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, lastSwitchUserId_);
      }
      if (((bitField0_ & 0x00010000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(18, haveConnection_);
      }
      if (((bitField0_ & 0x00020000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(19, boundToMethod_);
      }
      if (((bitField0_ & 0x00040000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(20, isInteractive_);
      }
      if (((bitField0_ & 0x00080000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(21, backDisposition_);
      }
      if (((bitField0_ & 0x00100000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(22, imeWindowVisibility_);
      }
      if (((bitField0_ & 0x00200000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(23, showImeWithHardKeyboard_);
      }
      if (((bitField0_ & 0x00400000) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(24, accessibilityRequestingNoSoftKeyboard_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof perfetto.protos.Inputmethodmanagerservice.InputMethodManagerServiceProto)) {
        return super.equals(obj);
      }
      perfetto.protos.Inputmethodmanagerservice.InputMethodManagerServiceProto other = (perfetto.protos.Inputmethodmanagerservice.InputMethodManagerServiceProto) obj;

      if (hasCurMethodId() != other.hasCurMethodId()) return false;
      if (hasCurMethodId()) {
        if (!getCurMethodId()
            .equals(other.getCurMethodId())) return false;
      }
      if (hasCurSeq() != other.hasCurSeq()) return false;
      if (hasCurSeq()) {
        if (getCurSeq()
            != other.getCurSeq()) return false;
      }
      if (hasCurClient() != other.hasCurClient()) return false;
      if (hasCurClient()) {
        if (!getCurClient()
            .equals(other.getCurClient())) return false;
      }
      if (hasCurFocusedWindowName() != other.hasCurFocusedWindowName()) return false;
      if (hasCurFocusedWindowName()) {
        if (!getCurFocusedWindowName()
            .equals(other.getCurFocusedWindowName())) return false;
      }
      if (hasLastImeTargetWindowName() != other.hasLastImeTargetWindowName()) return false;
      if (hasLastImeTargetWindowName()) {
        if (!getLastImeTargetWindowName()
            .equals(other.getLastImeTargetWindowName())) return false;
      }
      if (hasCurFocusedWindowSoftInputMode() != other.hasCurFocusedWindowSoftInputMode()) return false;
      if (hasCurFocusedWindowSoftInputMode()) {
        if (!getCurFocusedWindowSoftInputMode()
            .equals(other.getCurFocusedWindowSoftInputMode())) return false;
      }
      if (hasCurAttribute() != other.hasCurAttribute()) return false;
      if (hasCurAttribute()) {
        if (!getCurAttribute()
            .equals(other.getCurAttribute())) return false;
      }
      if (hasCurId() != other.hasCurId()) return false;
      if (hasCurId()) {
        if (!getCurId()
            .equals(other.getCurId())) return false;
      }
      if (hasShowExplicitlyRequested() != other.hasShowExplicitlyRequested()) return false;
      if (hasShowExplicitlyRequested()) {
        if (getShowExplicitlyRequested()
            != other.getShowExplicitlyRequested()) return false;
      }
      if (hasShowForced() != other.hasShowForced()) return false;
      if (hasShowForced()) {
        if (getShowForced()
            != other.getShowForced()) return false;
      }
      if (hasInputShown() != other.hasInputShown()) return false;
      if (hasInputShown()) {
        if (getInputShown()
            != other.getInputShown()) return false;
      }
      if (hasInFullscreenMode() != other.hasInFullscreenMode()) return false;
      if (hasInFullscreenMode()) {
        if (getInFullscreenMode()
            != other.getInFullscreenMode()) return false;
      }
      if (hasCurToken() != other.hasCurToken()) return false;
      if (hasCurToken()) {
        if (!getCurToken()
            .equals(other.getCurToken())) return false;
      }
      if (hasCurTokenDisplayId() != other.hasCurTokenDisplayId()) return false;
      if (hasCurTokenDisplayId()) {
        if (getCurTokenDisplayId()
            != other.getCurTokenDisplayId()) return false;
      }
      if (hasSystemReady() != other.hasSystemReady()) return false;
      if (hasSystemReady()) {
        if (getSystemReady()
            != other.getSystemReady()) return false;
      }
      if (hasLastSwitchUserId() != other.hasLastSwitchUserId()) return false;
      if (hasLastSwitchUserId()) {
        if (getLastSwitchUserId()
            != other.getLastSwitchUserId()) return false;
      }
      if (hasHaveConnection() != other.hasHaveConnection()) return false;
      if (hasHaveConnection()) {
        if (getHaveConnection()
            != other.getHaveConnection()) return false;
      }
      if (hasBoundToMethod() != other.hasBoundToMethod()) return false;
      if (hasBoundToMethod()) {
        if (getBoundToMethod()
            != other.getBoundToMethod()) return false;
      }
      if (hasIsInteractive() != other.hasIsInteractive()) return false;
      if (hasIsInteractive()) {
        if (getIsInteractive()
            != other.getIsInteractive()) return false;
      }
      if (hasBackDisposition() != other.hasBackDisposition()) return false;
      if (hasBackDisposition()) {
        if (getBackDisposition()
            != other.getBackDisposition()) return false;
      }
      if (hasImeWindowVisibility() != other.hasImeWindowVisibility()) return false;
      if (hasImeWindowVisibility()) {
        if (getImeWindowVisibility()
            != other.getImeWindowVisibility()) return false;
      }
      if (hasShowImeWithHardKeyboard() != other.hasShowImeWithHardKeyboard()) return false;
      if (hasShowImeWithHardKeyboard()) {
        if (getShowImeWithHardKeyboard()
            != other.getShowImeWithHardKeyboard()) return false;
      }
      if (hasAccessibilityRequestingNoSoftKeyboard() != other.hasAccessibilityRequestingNoSoftKeyboard()) return false;
      if (hasAccessibilityRequestingNoSoftKeyboard()) {
        if (getAccessibilityRequestingNoSoftKeyboard()
            != other.getAccessibilityRequestingNoSoftKeyboard()) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasCurMethodId()) {
        hash = (37 * hash) + CUR_METHOD_ID_FIELD_NUMBER;
        hash = (53 * hash) + getCurMethodId().hashCode();
      }
      if (hasCurSeq()) {
        hash = (37 * hash) + CUR_SEQ_FIELD_NUMBER;
        hash = (53 * hash) + getCurSeq();
      }
      if (hasCurClient()) {
        hash = (37 * hash) + CUR_CLIENT_FIELD_NUMBER;
        hash = (53 * hash) + getCurClient().hashCode();
      }
      if (hasCurFocusedWindowName()) {
        hash = (37 * hash) + CUR_FOCUSED_WINDOW_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getCurFocusedWindowName().hashCode();
      }
      if (hasLastImeTargetWindowName()) {
        hash = (37 * hash) + LAST_IME_TARGET_WINDOW_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getLastImeTargetWindowName().hashCode();
      }
      if (hasCurFocusedWindowSoftInputMode()) {
        hash = (37 * hash) + CUR_FOCUSED_WINDOW_SOFT_INPUT_MODE_FIELD_NUMBER;
        hash = (53 * hash) + getCurFocusedWindowSoftInputMode().hashCode();
      }
      if (hasCurAttribute()) {
        hash = (37 * hash) + CUR_ATTRIBUTE_FIELD_NUMBER;
        hash = (53 * hash) + getCurAttribute().hashCode();
      }
      if (hasCurId()) {
        hash = (37 * hash) + CUR_ID_FIELD_NUMBER;
        hash = (53 * hash) + getCurId().hashCode();
      }
      if (hasShowExplicitlyRequested()) {
        hash = (37 * hash) + SHOW_EXPLICITLY_REQUESTED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getShowExplicitlyRequested());
      }
      if (hasShowForced()) {
        hash = (37 * hash) + SHOW_FORCED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getShowForced());
      }
      if (hasInputShown()) {
        hash = (37 * hash) + INPUT_SHOWN_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getInputShown());
      }
      if (hasInFullscreenMode()) {
        hash = (37 * hash) + IN_FULLSCREEN_MODE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getInFullscreenMode());
      }
      if (hasCurToken()) {
        hash = (37 * hash) + CUR_TOKEN_FIELD_NUMBER;
        hash = (53 * hash) + getCurToken().hashCode();
      }
      if (hasCurTokenDisplayId()) {
        hash = (37 * hash) + CUR_TOKEN_DISPLAY_ID_FIELD_NUMBER;
        hash = (53 * hash) + getCurTokenDisplayId();
      }
      if (hasSystemReady()) {
        hash = (37 * hash) + SYSTEM_READY_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getSystemReady());
      }
      if (hasLastSwitchUserId()) {
        hash = (37 * hash) + LAST_SWITCH_USER_ID_FIELD_NUMBER;
        hash = (53 * hash) + getLastSwitchUserId();
      }
      if (hasHaveConnection()) {
        hash = (37 * hash) + HAVE_CONNECTION_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getHaveConnection());
      }
      if (hasBoundToMethod()) {
        hash = (37 * hash) + BOUND_TO_METHOD_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getBoundToMethod());
      }
      if (hasIsInteractive()) {
        hash = (37 * hash) + IS_INTERACTIVE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsInteractive());
      }
      if (hasBackDisposition()) {
        hash = (37 * hash) + BACK_DISPOSITION_FIELD_NUMBER;
        hash = (53 * hash) + getBackDisposition();
      }
      if (hasImeWindowVisibility()) {
        hash = (37 * hash) + IME_WINDOW_VISIBILITY_FIELD_NUMBER;
        hash = (53 * hash) + getImeWindowVisibility();
      }
      if (hasShowImeWithHardKeyboard()) {
        hash = (37 * hash) + SHOW_IME_WITH_HARD_KEYBOARD_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getShowImeWithHardKeyboard());
      }
      if (hasAccessibilityRequestingNoSoftKeyboard()) {
        hash = (37 * hash) + ACCESSIBILITY_REQUESTING_NO_SOFT_KEYBOARD_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getAccessibilityRequestingNoSoftKeyboard());
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static perfetto.protos.Inputmethodmanagerservice.InputMethodManagerServiceProto parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.Inputmethodmanagerservice.InputMethodManagerServiceProto parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.Inputmethodmanagerservice.InputMethodManagerServiceProto parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.Inputmethodmanagerservice.InputMethodManagerServiceProto parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.Inputmethodmanagerservice.InputMethodManagerServiceProto parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static perfetto.protos.Inputmethodmanagerservice.InputMethodManagerServiceProto parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static perfetto.protos.Inputmethodmanagerservice.InputMethodManagerServiceProto parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.Inputmethodmanagerservice.InputMethodManagerServiceProto parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static perfetto.protos.Inputmethodmanagerservice.InputMethodManagerServiceProto parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static perfetto.protos.Inputmethodmanagerservice.InputMethodManagerServiceProto parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static perfetto.protos.Inputmethodmanagerservice.InputMethodManagerServiceProto parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static perfetto.protos.Inputmethodmanagerservice.InputMethodManagerServiceProto parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(perfetto.protos.Inputmethodmanagerservice.InputMethodManagerServiceProto prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code perfetto.protos.InputMethodManagerServiceProto}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:perfetto.protos.InputMethodManagerServiceProto)
        perfetto.protos.Inputmethodmanagerservice.InputMethodManagerServiceProtoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return perfetto.protos.Inputmethodmanagerservice.internal_static_perfetto_protos_InputMethodManagerServiceProto_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return perfetto.protos.Inputmethodmanagerservice.internal_static_perfetto_protos_InputMethodManagerServiceProto_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                perfetto.protos.Inputmethodmanagerservice.InputMethodManagerServiceProto.class, perfetto.protos.Inputmethodmanagerservice.InputMethodManagerServiceProto.Builder.class);
      }

      // Construct using perfetto.protos.Inputmethodmanagerservice.InputMethodManagerServiceProto.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getCurAttributeFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        curMethodId_ = "";
        curSeq_ = 0;
        curClient_ = "";
        curFocusedWindowName_ = "";
        lastImeTargetWindowName_ = "";
        curFocusedWindowSoftInputMode_ = "";
        curAttribute_ = null;
        if (curAttributeBuilder_ != null) {
          curAttributeBuilder_.dispose();
          curAttributeBuilder_ = null;
        }
        curId_ = "";
        showExplicitlyRequested_ = false;
        showForced_ = false;
        inputShown_ = false;
        inFullscreenMode_ = false;
        curToken_ = "";
        curTokenDisplayId_ = 0;
        systemReady_ = false;
        lastSwitchUserId_ = 0;
        haveConnection_ = false;
        boundToMethod_ = false;
        isInteractive_ = false;
        backDisposition_ = 0;
        imeWindowVisibility_ = 0;
        showImeWithHardKeyboard_ = false;
        accessibilityRequestingNoSoftKeyboard_ = false;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return perfetto.protos.Inputmethodmanagerservice.internal_static_perfetto_protos_InputMethodManagerServiceProto_descriptor;
      }

      @java.lang.Override
      public perfetto.protos.Inputmethodmanagerservice.InputMethodManagerServiceProto getDefaultInstanceForType() {
        return perfetto.protos.Inputmethodmanagerservice.InputMethodManagerServiceProto.getDefaultInstance();
      }

      @java.lang.Override
      public perfetto.protos.Inputmethodmanagerservice.InputMethodManagerServiceProto build() {
        perfetto.protos.Inputmethodmanagerservice.InputMethodManagerServiceProto result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public perfetto.protos.Inputmethodmanagerservice.InputMethodManagerServiceProto buildPartial() {
        perfetto.protos.Inputmethodmanagerservice.InputMethodManagerServiceProto result = new perfetto.protos.Inputmethodmanagerservice.InputMethodManagerServiceProto(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(perfetto.protos.Inputmethodmanagerservice.InputMethodManagerServiceProto result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.curMethodId_ = curMethodId_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.curSeq_ = curSeq_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.curClient_ = curClient_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.curFocusedWindowName_ = curFocusedWindowName_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.lastImeTargetWindowName_ = lastImeTargetWindowName_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.curFocusedWindowSoftInputMode_ = curFocusedWindowSoftInputMode_;
          to_bitField0_ |= 0x00000020;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.curAttribute_ = curAttributeBuilder_ == null
              ? curAttribute_
              : curAttributeBuilder_.build();
          to_bitField0_ |= 0x00000040;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.curId_ = curId_;
          to_bitField0_ |= 0x00000080;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.showExplicitlyRequested_ = showExplicitlyRequested_;
          to_bitField0_ |= 0x00000100;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.showForced_ = showForced_;
          to_bitField0_ |= 0x00000200;
        }
        if (((from_bitField0_ & 0x00000400) != 0)) {
          result.inputShown_ = inputShown_;
          to_bitField0_ |= 0x00000400;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.inFullscreenMode_ = inFullscreenMode_;
          to_bitField0_ |= 0x00000800;
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          result.curToken_ = curToken_;
          to_bitField0_ |= 0x00001000;
        }
        if (((from_bitField0_ & 0x00002000) != 0)) {
          result.curTokenDisplayId_ = curTokenDisplayId_;
          to_bitField0_ |= 0x00002000;
        }
        if (((from_bitField0_ & 0x00004000) != 0)) {
          result.systemReady_ = systemReady_;
          to_bitField0_ |= 0x00004000;
        }
        if (((from_bitField0_ & 0x00008000) != 0)) {
          result.lastSwitchUserId_ = lastSwitchUserId_;
          to_bitField0_ |= 0x00008000;
        }
        if (((from_bitField0_ & 0x00010000) != 0)) {
          result.haveConnection_ = haveConnection_;
          to_bitField0_ |= 0x00010000;
        }
        if (((from_bitField0_ & 0x00020000) != 0)) {
          result.boundToMethod_ = boundToMethod_;
          to_bitField0_ |= 0x00020000;
        }
        if (((from_bitField0_ & 0x00040000) != 0)) {
          result.isInteractive_ = isInteractive_;
          to_bitField0_ |= 0x00040000;
        }
        if (((from_bitField0_ & 0x00080000) != 0)) {
          result.backDisposition_ = backDisposition_;
          to_bitField0_ |= 0x00080000;
        }
        if (((from_bitField0_ & 0x00100000) != 0)) {
          result.imeWindowVisibility_ = imeWindowVisibility_;
          to_bitField0_ |= 0x00100000;
        }
        if (((from_bitField0_ & 0x00200000) != 0)) {
          result.showImeWithHardKeyboard_ = showImeWithHardKeyboard_;
          to_bitField0_ |= 0x00200000;
        }
        if (((from_bitField0_ & 0x00400000) != 0)) {
          result.accessibilityRequestingNoSoftKeyboard_ = accessibilityRequestingNoSoftKeyboard_;
          to_bitField0_ |= 0x00400000;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof perfetto.protos.Inputmethodmanagerservice.InputMethodManagerServiceProto) {
          return mergeFrom((perfetto.protos.Inputmethodmanagerservice.InputMethodManagerServiceProto)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(perfetto.protos.Inputmethodmanagerservice.InputMethodManagerServiceProto other) {
        if (other == perfetto.protos.Inputmethodmanagerservice.InputMethodManagerServiceProto.getDefaultInstance()) return this;
        if (other.hasCurMethodId()) {
          curMethodId_ = other.curMethodId_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.hasCurSeq()) {
          setCurSeq(other.getCurSeq());
        }
        if (other.hasCurClient()) {
          curClient_ = other.curClient_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        if (other.hasCurFocusedWindowName()) {
          curFocusedWindowName_ = other.curFocusedWindowName_;
          bitField0_ |= 0x00000008;
          onChanged();
        }
        if (other.hasLastImeTargetWindowName()) {
          lastImeTargetWindowName_ = other.lastImeTargetWindowName_;
          bitField0_ |= 0x00000010;
          onChanged();
        }
        if (other.hasCurFocusedWindowSoftInputMode()) {
          curFocusedWindowSoftInputMode_ = other.curFocusedWindowSoftInputMode_;
          bitField0_ |= 0x00000020;
          onChanged();
        }
        if (other.hasCurAttribute()) {
          mergeCurAttribute(other.getCurAttribute());
        }
        if (other.hasCurId()) {
          curId_ = other.curId_;
          bitField0_ |= 0x00000080;
          onChanged();
        }
        if (other.hasShowExplicitlyRequested()) {
          setShowExplicitlyRequested(other.getShowExplicitlyRequested());
        }
        if (other.hasShowForced()) {
          setShowForced(other.getShowForced());
        }
        if (other.hasInputShown()) {
          setInputShown(other.getInputShown());
        }
        if (other.hasInFullscreenMode()) {
          setInFullscreenMode(other.getInFullscreenMode());
        }
        if (other.hasCurToken()) {
          curToken_ = other.curToken_;
          bitField0_ |= 0x00001000;
          onChanged();
        }
        if (other.hasCurTokenDisplayId()) {
          setCurTokenDisplayId(other.getCurTokenDisplayId());
        }
        if (other.hasSystemReady()) {
          setSystemReady(other.getSystemReady());
        }
        if (other.hasLastSwitchUserId()) {
          setLastSwitchUserId(other.getLastSwitchUserId());
        }
        if (other.hasHaveConnection()) {
          setHaveConnection(other.getHaveConnection());
        }
        if (other.hasBoundToMethod()) {
          setBoundToMethod(other.getBoundToMethod());
        }
        if (other.hasIsInteractive()) {
          setIsInteractive(other.getIsInteractive());
        }
        if (other.hasBackDisposition()) {
          setBackDisposition(other.getBackDisposition());
        }
        if (other.hasImeWindowVisibility()) {
          setImeWindowVisibility(other.getImeWindowVisibility());
        }
        if (other.hasShowImeWithHardKeyboard()) {
          setShowImeWithHardKeyboard(other.getShowImeWithHardKeyboard());
        }
        if (other.hasAccessibilityRequestingNoSoftKeyboard()) {
          setAccessibilityRequestingNoSoftKeyboard(other.getAccessibilityRequestingNoSoftKeyboard());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                curMethodId_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                curSeq_ = input.readInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 26: {
                curClient_ = input.readBytes();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 34: {
                curFocusedWindowName_ = input.readBytes();
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              case 42: {
                lastImeTargetWindowName_ = input.readBytes();
                bitField0_ |= 0x00000010;
                break;
              } // case 42
              case 50: {
                curFocusedWindowSoftInputMode_ = input.readBytes();
                bitField0_ |= 0x00000020;
                break;
              } // case 50
              case 58: {
                input.readMessage(
                    getCurAttributeFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000040;
                break;
              } // case 58
              case 66: {
                curId_ = input.readBytes();
                bitField0_ |= 0x00000080;
                break;
              } // case 66
              case 80: {
                showExplicitlyRequested_ = input.readBool();
                bitField0_ |= 0x00000100;
                break;
              } // case 80
              case 88: {
                showForced_ = input.readBool();
                bitField0_ |= 0x00000200;
                break;
              } // case 88
              case 96: {
                inputShown_ = input.readBool();
                bitField0_ |= 0x00000400;
                break;
              } // case 96
              case 104: {
                inFullscreenMode_ = input.readBool();
                bitField0_ |= 0x00000800;
                break;
              } // case 104
              case 114: {
                curToken_ = input.readBytes();
                bitField0_ |= 0x00001000;
                break;
              } // case 114
              case 120: {
                curTokenDisplayId_ = input.readInt32();
                bitField0_ |= 0x00002000;
                break;
              } // case 120
              case 128: {
                systemReady_ = input.readBool();
                bitField0_ |= 0x00004000;
                break;
              } // case 128
              case 136: {
                lastSwitchUserId_ = input.readInt32();
                bitField0_ |= 0x00008000;
                break;
              } // case 136
              case 144: {
                haveConnection_ = input.readBool();
                bitField0_ |= 0x00010000;
                break;
              } // case 144
              case 152: {
                boundToMethod_ = input.readBool();
                bitField0_ |= 0x00020000;
                break;
              } // case 152
              case 160: {
                isInteractive_ = input.readBool();
                bitField0_ |= 0x00040000;
                break;
              } // case 160
              case 168: {
                backDisposition_ = input.readInt32();
                bitField0_ |= 0x00080000;
                break;
              } // case 168
              case 176: {
                imeWindowVisibility_ = input.readInt32();
                bitField0_ |= 0x00100000;
                break;
              } // case 176
              case 184: {
                showImeWithHardKeyboard_ = input.readBool();
                bitField0_ |= 0x00200000;
                break;
              } // case 184
              case 192: {
                accessibilityRequestingNoSoftKeyboard_ = input.readBool();
                bitField0_ |= 0x00400000;
                break;
              } // case 192
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object curMethodId_ = "";
      /**
       * <code>optional string cur_method_id = 1;</code>
       * @return Whether the curMethodId field is set.
       */
      public boolean hasCurMethodId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional string cur_method_id = 1;</code>
       * @return The curMethodId.
       */
      public java.lang.String getCurMethodId() {
        java.lang.Object ref = curMethodId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            curMethodId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string cur_method_id = 1;</code>
       * @return The bytes for curMethodId.
       */
      public com.google.protobuf.ByteString
          getCurMethodIdBytes() {
        java.lang.Object ref = curMethodId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          curMethodId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string cur_method_id = 1;</code>
       * @param value The curMethodId to set.
       * @return This builder for chaining.
       */
      public Builder setCurMethodId(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        curMethodId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional string cur_method_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearCurMethodId() {
        curMethodId_ = getDefaultInstance().getCurMethodId();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>optional string cur_method_id = 1;</code>
       * @param value The bytes for curMethodId to set.
       * @return This builder for chaining.
       */
      public Builder setCurMethodIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        curMethodId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private int curSeq_ ;
      /**
       * <code>optional int32 cur_seq = 2;</code>
       * @return Whether the curSeq field is set.
       */
      @java.lang.Override
      public boolean hasCurSeq() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional int32 cur_seq = 2;</code>
       * @return The curSeq.
       */
      @java.lang.Override
      public int getCurSeq() {
        return curSeq_;
      }
      /**
       * <code>optional int32 cur_seq = 2;</code>
       * @param value The curSeq to set.
       * @return This builder for chaining.
       */
      public Builder setCurSeq(int value) {

        curSeq_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cur_seq = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearCurSeq() {
        bitField0_ = (bitField0_ & ~0x00000002);
        curSeq_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object curClient_ = "";
      /**
       * <code>optional string cur_client = 3;</code>
       * @return Whether the curClient field is set.
       */
      public boolean hasCurClient() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional string cur_client = 3;</code>
       * @return The curClient.
       */
      public java.lang.String getCurClient() {
        java.lang.Object ref = curClient_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            curClient_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string cur_client = 3;</code>
       * @return The bytes for curClient.
       */
      public com.google.protobuf.ByteString
          getCurClientBytes() {
        java.lang.Object ref = curClient_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          curClient_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string cur_client = 3;</code>
       * @param value The curClient to set.
       * @return This builder for chaining.
       */
      public Builder setCurClient(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        curClient_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>optional string cur_client = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearCurClient() {
        curClient_ = getDefaultInstance().getCurClient();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <code>optional string cur_client = 3;</code>
       * @param value The bytes for curClient to set.
       * @return This builder for chaining.
       */
      public Builder setCurClientBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        curClient_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      private java.lang.Object curFocusedWindowName_ = "";
      /**
       * <code>optional string cur_focused_window_name = 4;</code>
       * @return Whether the curFocusedWindowName field is set.
       */
      public boolean hasCurFocusedWindowName() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional string cur_focused_window_name = 4;</code>
       * @return The curFocusedWindowName.
       */
      public java.lang.String getCurFocusedWindowName() {
        java.lang.Object ref = curFocusedWindowName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            curFocusedWindowName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string cur_focused_window_name = 4;</code>
       * @return The bytes for curFocusedWindowName.
       */
      public com.google.protobuf.ByteString
          getCurFocusedWindowNameBytes() {
        java.lang.Object ref = curFocusedWindowName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          curFocusedWindowName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string cur_focused_window_name = 4;</code>
       * @param value The curFocusedWindowName to set.
       * @return This builder for chaining.
       */
      public Builder setCurFocusedWindowName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        curFocusedWindowName_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional string cur_focused_window_name = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearCurFocusedWindowName() {
        curFocusedWindowName_ = getDefaultInstance().getCurFocusedWindowName();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <code>optional string cur_focused_window_name = 4;</code>
       * @param value The bytes for curFocusedWindowName to set.
       * @return This builder for chaining.
       */
      public Builder setCurFocusedWindowNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        curFocusedWindowName_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }

      private java.lang.Object lastImeTargetWindowName_ = "";
      /**
       * <code>optional string last_ime_target_window_name = 5;</code>
       * @return Whether the lastImeTargetWindowName field is set.
       */
      public boolean hasLastImeTargetWindowName() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional string last_ime_target_window_name = 5;</code>
       * @return The lastImeTargetWindowName.
       */
      public java.lang.String getLastImeTargetWindowName() {
        java.lang.Object ref = lastImeTargetWindowName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            lastImeTargetWindowName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string last_ime_target_window_name = 5;</code>
       * @return The bytes for lastImeTargetWindowName.
       */
      public com.google.protobuf.ByteString
          getLastImeTargetWindowNameBytes() {
        java.lang.Object ref = lastImeTargetWindowName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          lastImeTargetWindowName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string last_ime_target_window_name = 5;</code>
       * @param value The lastImeTargetWindowName to set.
       * @return This builder for chaining.
       */
      public Builder setLastImeTargetWindowName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        lastImeTargetWindowName_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>optional string last_ime_target_window_name = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearLastImeTargetWindowName() {
        lastImeTargetWindowName_ = getDefaultInstance().getLastImeTargetWindowName();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      /**
       * <code>optional string last_ime_target_window_name = 5;</code>
       * @param value The bytes for lastImeTargetWindowName to set.
       * @return This builder for chaining.
       */
      public Builder setLastImeTargetWindowNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        lastImeTargetWindowName_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }

      private java.lang.Object curFocusedWindowSoftInputMode_ = "";
      /**
       * <code>optional string cur_focused_window_soft_input_mode = 6;</code>
       * @return Whether the curFocusedWindowSoftInputMode field is set.
       */
      public boolean hasCurFocusedWindowSoftInputMode() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional string cur_focused_window_soft_input_mode = 6;</code>
       * @return The curFocusedWindowSoftInputMode.
       */
      public java.lang.String getCurFocusedWindowSoftInputMode() {
        java.lang.Object ref = curFocusedWindowSoftInputMode_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            curFocusedWindowSoftInputMode_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string cur_focused_window_soft_input_mode = 6;</code>
       * @return The bytes for curFocusedWindowSoftInputMode.
       */
      public com.google.protobuf.ByteString
          getCurFocusedWindowSoftInputModeBytes() {
        java.lang.Object ref = curFocusedWindowSoftInputMode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          curFocusedWindowSoftInputMode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string cur_focused_window_soft_input_mode = 6;</code>
       * @param value The curFocusedWindowSoftInputMode to set.
       * @return This builder for chaining.
       */
      public Builder setCurFocusedWindowSoftInputMode(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        curFocusedWindowSoftInputMode_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>optional string cur_focused_window_soft_input_mode = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearCurFocusedWindowSoftInputMode() {
        curFocusedWindowSoftInputMode_ = getDefaultInstance().getCurFocusedWindowSoftInputMode();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }
      /**
       * <code>optional string cur_focused_window_soft_input_mode = 6;</code>
       * @param value The bytes for curFocusedWindowSoftInputMode to set.
       * @return This builder for chaining.
       */
      public Builder setCurFocusedWindowSoftInputModeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        curFocusedWindowSoftInputMode_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }

      private perfetto.protos.Editorinfo.EditorInfoProto curAttribute_;
      private com.google.protobuf.SingleFieldBuilder<
          perfetto.protos.Editorinfo.EditorInfoProto, perfetto.protos.Editorinfo.EditorInfoProto.Builder, perfetto.protos.Editorinfo.EditorInfoProtoOrBuilder> curAttributeBuilder_;
      /**
       * <code>optional .perfetto.protos.EditorInfoProto cur_attribute = 7;</code>
       * @return Whether the curAttribute field is set.
       */
      public boolean hasCurAttribute() {
        return ((bitField0_ & 0x00000040) != 0);
      }
      /**
       * <code>optional .perfetto.protos.EditorInfoProto cur_attribute = 7;</code>
       * @return The curAttribute.
       */
      public perfetto.protos.Editorinfo.EditorInfoProto getCurAttribute() {
        if (curAttributeBuilder_ == null) {
          return curAttribute_ == null ? perfetto.protos.Editorinfo.EditorInfoProto.getDefaultInstance() : curAttribute_;
        } else {
          return curAttributeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .perfetto.protos.EditorInfoProto cur_attribute = 7;</code>
       */
      public Builder setCurAttribute(perfetto.protos.Editorinfo.EditorInfoProto value) {
        if (curAttributeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          curAttribute_ = value;
        } else {
          curAttributeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>optional .perfetto.protos.EditorInfoProto cur_attribute = 7;</code>
       */
      public Builder setCurAttribute(
          perfetto.protos.Editorinfo.EditorInfoProto.Builder builderForValue) {
        if (curAttributeBuilder_ == null) {
          curAttribute_ = builderForValue.build();
        } else {
          curAttributeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>optional .perfetto.protos.EditorInfoProto cur_attribute = 7;</code>
       */
      public Builder mergeCurAttribute(perfetto.protos.Editorinfo.EditorInfoProto value) {
        if (curAttributeBuilder_ == null) {
          if (((bitField0_ & 0x00000040) != 0) &&
            curAttribute_ != null &&
            curAttribute_ != perfetto.protos.Editorinfo.EditorInfoProto.getDefaultInstance()) {
            getCurAttributeBuilder().mergeFrom(value);
          } else {
            curAttribute_ = value;
          }
        } else {
          curAttributeBuilder_.mergeFrom(value);
        }
        if (curAttribute_ != null) {
          bitField0_ |= 0x00000040;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional .perfetto.protos.EditorInfoProto cur_attribute = 7;</code>
       */
      public Builder clearCurAttribute() {
        bitField0_ = (bitField0_ & ~0x00000040);
        curAttribute_ = null;
        if (curAttributeBuilder_ != null) {
          curAttributeBuilder_.dispose();
          curAttributeBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional .perfetto.protos.EditorInfoProto cur_attribute = 7;</code>
       */
      public perfetto.protos.Editorinfo.EditorInfoProto.Builder getCurAttributeBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getCurAttributeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .perfetto.protos.EditorInfoProto cur_attribute = 7;</code>
       */
      public perfetto.protos.Editorinfo.EditorInfoProtoOrBuilder getCurAttributeOrBuilder() {
        if (curAttributeBuilder_ != null) {
          return curAttributeBuilder_.getMessageOrBuilder();
        } else {
          return curAttribute_ == null ?
              perfetto.protos.Editorinfo.EditorInfoProto.getDefaultInstance() : curAttribute_;
        }
      }
      /**
       * <code>optional .perfetto.protos.EditorInfoProto cur_attribute = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          perfetto.protos.Editorinfo.EditorInfoProto, perfetto.protos.Editorinfo.EditorInfoProto.Builder, perfetto.protos.Editorinfo.EditorInfoProtoOrBuilder> 
          getCurAttributeFieldBuilder() {
        if (curAttributeBuilder_ == null) {
          curAttributeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              perfetto.protos.Editorinfo.EditorInfoProto, perfetto.protos.Editorinfo.EditorInfoProto.Builder, perfetto.protos.Editorinfo.EditorInfoProtoOrBuilder>(
                  getCurAttribute(),
                  getParentForChildren(),
                  isClean());
          curAttribute_ = null;
        }
        return curAttributeBuilder_;
      }

      private java.lang.Object curId_ = "";
      /**
       * <code>optional string cur_id = 8;</code>
       * @return Whether the curId field is set.
       */
      public boolean hasCurId() {
        return ((bitField0_ & 0x00000080) != 0);
      }
      /**
       * <code>optional string cur_id = 8;</code>
       * @return The curId.
       */
      public java.lang.String getCurId() {
        java.lang.Object ref = curId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            curId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string cur_id = 8;</code>
       * @return The bytes for curId.
       */
      public com.google.protobuf.ByteString
          getCurIdBytes() {
        java.lang.Object ref = curId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          curId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string cur_id = 8;</code>
       * @param value The curId to set.
       * @return This builder for chaining.
       */
      public Builder setCurId(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        curId_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>optional string cur_id = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearCurId() {
        curId_ = getDefaultInstance().getCurId();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }
      /**
       * <code>optional string cur_id = 8;</code>
       * @param value The bytes for curId to set.
       * @return This builder for chaining.
       */
      public Builder setCurIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        curId_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }

      private boolean showExplicitlyRequested_ ;
      /**
       * <code>optional bool show_explicitly_requested = 10;</code>
       * @return Whether the showExplicitlyRequested field is set.
       */
      @java.lang.Override
      public boolean hasShowExplicitlyRequested() {
        return ((bitField0_ & 0x00000100) != 0);
      }
      /**
       * <code>optional bool show_explicitly_requested = 10;</code>
       * @return The showExplicitlyRequested.
       */
      @java.lang.Override
      public boolean getShowExplicitlyRequested() {
        return showExplicitlyRequested_;
      }
      /**
       * <code>optional bool show_explicitly_requested = 10;</code>
       * @param value The showExplicitlyRequested to set.
       * @return This builder for chaining.
       */
      public Builder setShowExplicitlyRequested(boolean value) {

        showExplicitlyRequested_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool show_explicitly_requested = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearShowExplicitlyRequested() {
        bitField0_ = (bitField0_ & ~0x00000100);
        showExplicitlyRequested_ = false;
        onChanged();
        return this;
      }

      private boolean showForced_ ;
      /**
       * <code>optional bool show_forced = 11;</code>
       * @return Whether the showForced field is set.
       */
      @java.lang.Override
      public boolean hasShowForced() {
        return ((bitField0_ & 0x00000200) != 0);
      }
      /**
       * <code>optional bool show_forced = 11;</code>
       * @return The showForced.
       */
      @java.lang.Override
      public boolean getShowForced() {
        return showForced_;
      }
      /**
       * <code>optional bool show_forced = 11;</code>
       * @param value The showForced to set.
       * @return This builder for chaining.
       */
      public Builder setShowForced(boolean value) {

        showForced_ = value;
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool show_forced = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearShowForced() {
        bitField0_ = (bitField0_ & ~0x00000200);
        showForced_ = false;
        onChanged();
        return this;
      }

      private boolean inputShown_ ;
      /**
       * <code>optional bool input_shown = 12;</code>
       * @return Whether the inputShown field is set.
       */
      @java.lang.Override
      public boolean hasInputShown() {
        return ((bitField0_ & 0x00000400) != 0);
      }
      /**
       * <code>optional bool input_shown = 12;</code>
       * @return The inputShown.
       */
      @java.lang.Override
      public boolean getInputShown() {
        return inputShown_;
      }
      /**
       * <code>optional bool input_shown = 12;</code>
       * @param value The inputShown to set.
       * @return This builder for chaining.
       */
      public Builder setInputShown(boolean value) {

        inputShown_ = value;
        bitField0_ |= 0x00000400;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool input_shown = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearInputShown() {
        bitField0_ = (bitField0_ & ~0x00000400);
        inputShown_ = false;
        onChanged();
        return this;
      }

      private boolean inFullscreenMode_ ;
      /**
       * <code>optional bool in_fullscreen_mode = 13;</code>
       * @return Whether the inFullscreenMode field is set.
       */
      @java.lang.Override
      public boolean hasInFullscreenMode() {
        return ((bitField0_ & 0x00000800) != 0);
      }
      /**
       * <code>optional bool in_fullscreen_mode = 13;</code>
       * @return The inFullscreenMode.
       */
      @java.lang.Override
      public boolean getInFullscreenMode() {
        return inFullscreenMode_;
      }
      /**
       * <code>optional bool in_fullscreen_mode = 13;</code>
       * @param value The inFullscreenMode to set.
       * @return This builder for chaining.
       */
      public Builder setInFullscreenMode(boolean value) {

        inFullscreenMode_ = value;
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool in_fullscreen_mode = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearInFullscreenMode() {
        bitField0_ = (bitField0_ & ~0x00000800);
        inFullscreenMode_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object curToken_ = "";
      /**
       * <code>optional string cur_token = 14;</code>
       * @return Whether the curToken field is set.
       */
      public boolean hasCurToken() {
        return ((bitField0_ & 0x00001000) != 0);
      }
      /**
       * <code>optional string cur_token = 14;</code>
       * @return The curToken.
       */
      public java.lang.String getCurToken() {
        java.lang.Object ref = curToken_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            curToken_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string cur_token = 14;</code>
       * @return The bytes for curToken.
       */
      public com.google.protobuf.ByteString
          getCurTokenBytes() {
        java.lang.Object ref = curToken_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          curToken_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string cur_token = 14;</code>
       * @param value The curToken to set.
       * @return This builder for chaining.
       */
      public Builder setCurToken(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        curToken_ = value;
        bitField0_ |= 0x00001000;
        onChanged();
        return this;
      }
      /**
       * <code>optional string cur_token = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearCurToken() {
        curToken_ = getDefaultInstance().getCurToken();
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
        return this;
      }
      /**
       * <code>optional string cur_token = 14;</code>
       * @param value The bytes for curToken to set.
       * @return This builder for chaining.
       */
      public Builder setCurTokenBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        curToken_ = value;
        bitField0_ |= 0x00001000;
        onChanged();
        return this;
      }

      private int curTokenDisplayId_ ;
      /**
       * <code>optional int32 cur_token_display_id = 15;</code>
       * @return Whether the curTokenDisplayId field is set.
       */
      @java.lang.Override
      public boolean hasCurTokenDisplayId() {
        return ((bitField0_ & 0x00002000) != 0);
      }
      /**
       * <code>optional int32 cur_token_display_id = 15;</code>
       * @return The curTokenDisplayId.
       */
      @java.lang.Override
      public int getCurTokenDisplayId() {
        return curTokenDisplayId_;
      }
      /**
       * <code>optional int32 cur_token_display_id = 15;</code>
       * @param value The curTokenDisplayId to set.
       * @return This builder for chaining.
       */
      public Builder setCurTokenDisplayId(int value) {

        curTokenDisplayId_ = value;
        bitField0_ |= 0x00002000;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cur_token_display_id = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearCurTokenDisplayId() {
        bitField0_ = (bitField0_ & ~0x00002000);
        curTokenDisplayId_ = 0;
        onChanged();
        return this;
      }

      private boolean systemReady_ ;
      /**
       * <code>optional bool system_ready = 16;</code>
       * @return Whether the systemReady field is set.
       */
      @java.lang.Override
      public boolean hasSystemReady() {
        return ((bitField0_ & 0x00004000) != 0);
      }
      /**
       * <code>optional bool system_ready = 16;</code>
       * @return The systemReady.
       */
      @java.lang.Override
      public boolean getSystemReady() {
        return systemReady_;
      }
      /**
       * <code>optional bool system_ready = 16;</code>
       * @param value The systemReady to set.
       * @return This builder for chaining.
       */
      public Builder setSystemReady(boolean value) {

        systemReady_ = value;
        bitField0_ |= 0x00004000;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool system_ready = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearSystemReady() {
        bitField0_ = (bitField0_ & ~0x00004000);
        systemReady_ = false;
        onChanged();
        return this;
      }

      private int lastSwitchUserId_ ;
      /**
       * <code>optional int32 last_switch_user_id = 17;</code>
       * @return Whether the lastSwitchUserId field is set.
       */
      @java.lang.Override
      public boolean hasLastSwitchUserId() {
        return ((bitField0_ & 0x00008000) != 0);
      }
      /**
       * <code>optional int32 last_switch_user_id = 17;</code>
       * @return The lastSwitchUserId.
       */
      @java.lang.Override
      public int getLastSwitchUserId() {
        return lastSwitchUserId_;
      }
      /**
       * <code>optional int32 last_switch_user_id = 17;</code>
       * @param value The lastSwitchUserId to set.
       * @return This builder for chaining.
       */
      public Builder setLastSwitchUserId(int value) {

        lastSwitchUserId_ = value;
        bitField0_ |= 0x00008000;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 last_switch_user_id = 17;</code>
       * @return This builder for chaining.
       */
      public Builder clearLastSwitchUserId() {
        bitField0_ = (bitField0_ & ~0x00008000);
        lastSwitchUserId_ = 0;
        onChanged();
        return this;
      }

      private boolean haveConnection_ ;
      /**
       * <code>optional bool have_connection = 18;</code>
       * @return Whether the haveConnection field is set.
       */
      @java.lang.Override
      public boolean hasHaveConnection() {
        return ((bitField0_ & 0x00010000) != 0);
      }
      /**
       * <code>optional bool have_connection = 18;</code>
       * @return The haveConnection.
       */
      @java.lang.Override
      public boolean getHaveConnection() {
        return haveConnection_;
      }
      /**
       * <code>optional bool have_connection = 18;</code>
       * @param value The haveConnection to set.
       * @return This builder for chaining.
       */
      public Builder setHaveConnection(boolean value) {

        haveConnection_ = value;
        bitField0_ |= 0x00010000;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool have_connection = 18;</code>
       * @return This builder for chaining.
       */
      public Builder clearHaveConnection() {
        bitField0_ = (bitField0_ & ~0x00010000);
        haveConnection_ = false;
        onChanged();
        return this;
      }

      private boolean boundToMethod_ ;
      /**
       * <code>optional bool bound_to_method = 19;</code>
       * @return Whether the boundToMethod field is set.
       */
      @java.lang.Override
      public boolean hasBoundToMethod() {
        return ((bitField0_ & 0x00020000) != 0);
      }
      /**
       * <code>optional bool bound_to_method = 19;</code>
       * @return The boundToMethod.
       */
      @java.lang.Override
      public boolean getBoundToMethod() {
        return boundToMethod_;
      }
      /**
       * <code>optional bool bound_to_method = 19;</code>
       * @param value The boundToMethod to set.
       * @return This builder for chaining.
       */
      public Builder setBoundToMethod(boolean value) {

        boundToMethod_ = value;
        bitField0_ |= 0x00020000;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool bound_to_method = 19;</code>
       * @return This builder for chaining.
       */
      public Builder clearBoundToMethod() {
        bitField0_ = (bitField0_ & ~0x00020000);
        boundToMethod_ = false;
        onChanged();
        return this;
      }

      private boolean isInteractive_ ;
      /**
       * <code>optional bool is_interactive = 20;</code>
       * @return Whether the isInteractive field is set.
       */
      @java.lang.Override
      public boolean hasIsInteractive() {
        return ((bitField0_ & 0x00040000) != 0);
      }
      /**
       * <code>optional bool is_interactive = 20;</code>
       * @return The isInteractive.
       */
      @java.lang.Override
      public boolean getIsInteractive() {
        return isInteractive_;
      }
      /**
       * <code>optional bool is_interactive = 20;</code>
       * @param value The isInteractive to set.
       * @return This builder for chaining.
       */
      public Builder setIsInteractive(boolean value) {

        isInteractive_ = value;
        bitField0_ |= 0x00040000;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool is_interactive = 20;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsInteractive() {
        bitField0_ = (bitField0_ & ~0x00040000);
        isInteractive_ = false;
        onChanged();
        return this;
      }

      private int backDisposition_ ;
      /**
       * <code>optional int32 back_disposition = 21;</code>
       * @return Whether the backDisposition field is set.
       */
      @java.lang.Override
      public boolean hasBackDisposition() {
        return ((bitField0_ & 0x00080000) != 0);
      }
      /**
       * <code>optional int32 back_disposition = 21;</code>
       * @return The backDisposition.
       */
      @java.lang.Override
      public int getBackDisposition() {
        return backDisposition_;
      }
      /**
       * <code>optional int32 back_disposition = 21;</code>
       * @param value The backDisposition to set.
       * @return This builder for chaining.
       */
      public Builder setBackDisposition(int value) {

        backDisposition_ = value;
        bitField0_ |= 0x00080000;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 back_disposition = 21;</code>
       * @return This builder for chaining.
       */
      public Builder clearBackDisposition() {
        bitField0_ = (bitField0_ & ~0x00080000);
        backDisposition_ = 0;
        onChanged();
        return this;
      }

      private int imeWindowVisibility_ ;
      /**
       * <code>optional int32 ime_window_visibility = 22;</code>
       * @return Whether the imeWindowVisibility field is set.
       */
      @java.lang.Override
      public boolean hasImeWindowVisibility() {
        return ((bitField0_ & 0x00100000) != 0);
      }
      /**
       * <code>optional int32 ime_window_visibility = 22;</code>
       * @return The imeWindowVisibility.
       */
      @java.lang.Override
      public int getImeWindowVisibility() {
        return imeWindowVisibility_;
      }
      /**
       * <code>optional int32 ime_window_visibility = 22;</code>
       * @param value The imeWindowVisibility to set.
       * @return This builder for chaining.
       */
      public Builder setImeWindowVisibility(int value) {

        imeWindowVisibility_ = value;
        bitField0_ |= 0x00100000;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 ime_window_visibility = 22;</code>
       * @return This builder for chaining.
       */
      public Builder clearImeWindowVisibility() {
        bitField0_ = (bitField0_ & ~0x00100000);
        imeWindowVisibility_ = 0;
        onChanged();
        return this;
      }

      private boolean showImeWithHardKeyboard_ ;
      /**
       * <code>optional bool show_ime_with_hard_keyboard = 23;</code>
       * @return Whether the showImeWithHardKeyboard field is set.
       */
      @java.lang.Override
      public boolean hasShowImeWithHardKeyboard() {
        return ((bitField0_ & 0x00200000) != 0);
      }
      /**
       * <code>optional bool show_ime_with_hard_keyboard = 23;</code>
       * @return The showImeWithHardKeyboard.
       */
      @java.lang.Override
      public boolean getShowImeWithHardKeyboard() {
        return showImeWithHardKeyboard_;
      }
      /**
       * <code>optional bool show_ime_with_hard_keyboard = 23;</code>
       * @param value The showImeWithHardKeyboard to set.
       * @return This builder for chaining.
       */
      public Builder setShowImeWithHardKeyboard(boolean value) {

        showImeWithHardKeyboard_ = value;
        bitField0_ |= 0x00200000;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool show_ime_with_hard_keyboard = 23;</code>
       * @return This builder for chaining.
       */
      public Builder clearShowImeWithHardKeyboard() {
        bitField0_ = (bitField0_ & ~0x00200000);
        showImeWithHardKeyboard_ = false;
        onChanged();
        return this;
      }

      private boolean accessibilityRequestingNoSoftKeyboard_ ;
      /**
       * <code>optional bool accessibility_requesting_no_soft_keyboard = 24;</code>
       * @return Whether the accessibilityRequestingNoSoftKeyboard field is set.
       */
      @java.lang.Override
      public boolean hasAccessibilityRequestingNoSoftKeyboard() {
        return ((bitField0_ & 0x00400000) != 0);
      }
      /**
       * <code>optional bool accessibility_requesting_no_soft_keyboard = 24;</code>
       * @return The accessibilityRequestingNoSoftKeyboard.
       */
      @java.lang.Override
      public boolean getAccessibilityRequestingNoSoftKeyboard() {
        return accessibilityRequestingNoSoftKeyboard_;
      }
      /**
       * <code>optional bool accessibility_requesting_no_soft_keyboard = 24;</code>
       * @param value The accessibilityRequestingNoSoftKeyboard to set.
       * @return This builder for chaining.
       */
      public Builder setAccessibilityRequestingNoSoftKeyboard(boolean value) {

        accessibilityRequestingNoSoftKeyboard_ = value;
        bitField0_ |= 0x00400000;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool accessibility_requesting_no_soft_keyboard = 24;</code>
       * @return This builder for chaining.
       */
      public Builder clearAccessibilityRequestingNoSoftKeyboard() {
        bitField0_ = (bitField0_ & ~0x00400000);
        accessibilityRequestingNoSoftKeyboard_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:perfetto.protos.InputMethodManagerServiceProto)
    }

    // @@protoc_insertion_point(class_scope:perfetto.protos.InputMethodManagerServiceProto)
    private static final perfetto.protos.Inputmethodmanagerservice.InputMethodManagerServiceProto DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new perfetto.protos.Inputmethodmanagerservice.InputMethodManagerServiceProto();
    }

    public static perfetto.protos.Inputmethodmanagerservice.InputMethodManagerServiceProto getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<InputMethodManagerServiceProto>
        PARSER = new com.google.protobuf.AbstractParser<InputMethodManagerServiceProto>() {
      @java.lang.Override
      public InputMethodManagerServiceProto parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<InputMethodManagerServiceProto> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<InputMethodManagerServiceProto> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public perfetto.protos.Inputmethodmanagerservice.InputMethodManagerServiceProto getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_perfetto_protos_InputMethodManagerServiceProto_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_perfetto_protos_InputMethodManagerServiceProto_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\nPprotos/perfetto/trace/android/server/i" +
      "nputmethod/inputmethodmanagerservice.pro" +
      "to\022\017perfetto.protos\032?protos/perfetto/tra" +
      "ce/android/view/inputmethod/editorinfo.p" +
      "roto\"\305\005\n\036InputMethodManagerServiceProto\022" +
      "\025\n\rcur_method_id\030\001 \001(\t\022\017\n\007cur_seq\030\002 \001(\005\022" +
      "\022\n\ncur_client\030\003 \001(\t\022\037\n\027cur_focused_windo" +
      "w_name\030\004 \001(\t\022#\n\033last_ime_target_window_n" +
      "ame\030\005 \001(\t\022*\n\"cur_focused_window_soft_inp" +
      "ut_mode\030\006 \001(\t\0227\n\rcur_attribute\030\007 \001(\0132 .p" +
      "erfetto.protos.EditorInfoProto\022\016\n\006cur_id" +
      "\030\010 \001(\t\022!\n\031show_explicitly_requested\030\n \001(" +
      "\010\022\023\n\013show_forced\030\013 \001(\010\022\023\n\013input_shown\030\014 " +
      "\001(\010\022\032\n\022in_fullscreen_mode\030\r \001(\010\022\021\n\tcur_t" +
      "oken\030\016 \001(\t\022\034\n\024cur_token_display_id\030\017 \001(\005" +
      "\022\024\n\014system_ready\030\020 \001(\010\022\033\n\023last_switch_us" +
      "er_id\030\021 \001(\005\022\027\n\017have_connection\030\022 \001(\010\022\027\n\017" +
      "bound_to_method\030\023 \001(\010\022\026\n\016is_interactive\030" +
      "\024 \001(\010\022\030\n\020back_disposition\030\025 \001(\005\022\035\n\025ime_w" +
      "indow_visibility\030\026 \001(\005\022#\n\033show_ime_with_" +
      "hard_keyboard\030\027 \001(\010\0221\n)accessibility_req" +
      "uesting_no_soft_keyboard\030\030 \001(\010J\004\010\t\020\n"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          perfetto.protos.Editorinfo.getDescriptor(),
        });
    internal_static_perfetto_protos_InputMethodManagerServiceProto_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_perfetto_protos_InputMethodManagerServiceProto_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_perfetto_protos_InputMethodManagerServiceProto_descriptor,
        new java.lang.String[] { "CurMethodId", "CurSeq", "CurClient", "CurFocusedWindowName", "LastImeTargetWindowName", "CurFocusedWindowSoftInputMode", "CurAttribute", "CurId", "ShowExplicitlyRequested", "ShowForced", "InputShown", "InFullscreenMode", "CurToken", "CurTokenDisplayId", "SystemReady", "LastSwitchUserId", "HaveConnection", "BoundToMethod", "IsInteractive", "BackDisposition", "ImeWindowVisibility", "ShowImeWithHardKeyboard", "AccessibilityRequestingNoSoftKeyboard", });
    descriptor.resolveAllFeaturesImmutable();
    perfetto.protos.Editorinfo.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
